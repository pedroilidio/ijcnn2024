active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ2T8AMzMzMzPjvwAzMzMzM+O/ADMzMzMz47+AZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 06:55:08.061505
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 6
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__6
  params: {}
hash: 6ef478ae020d43b747a007945abcdc3b918489bc0d7fcd02b05a7230b43356bb
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/6ef478a_20231221T065436369841_embedding_proba__6_VirusGO.yml
results:
  fit_time:
  - 20.009303331375122
  - 19.810262203216553
  - 19.98352026939392
  - 20.193011045455933
  - 20.256929397583008
  score_time:
  - 4.088165044784546
  - 3.9141478538513184
  - 4.033499240875244
  - 4.068194150924683
  - 4.00544810295105
  test_average_precision_macro:
  - 0.883764305831666
  - 0.9785753057203742
  - 0.9905058927595807
  - 0.8811588155043394
  - 0.8966818264004243
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8979143185801381
  - 0.9796950052229245
  - 0.9686675846542521
  - 0.9038172726546733
  - 0.9056451561071235
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9288617886178863
  - 0.9484126984126985
  - 0.9662698412698412
  - 0.936111111111111
  - 0.9383333333333332
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.903419250085867
  - 0.9834335374614644
  - 0.9858701164676396
  - 0.9221956265091207
  - 0.9172749132114458
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9065040650406503
  - 0.9642857142857143
  - 0.9444444444444445
  - 0.9444444444444445
  - 0.9166666666666666
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9065040650406504
  - 0.9642857142857143
  - 0.9444444444444444
  - 0.9444444444444444
  - 0.9166666666666666
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9065040650406505
  - 0.9642857142857143
  - 0.9444444444444444
  - 0.9444444444444445
  - 0.9166666666666667
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8696060037523453
  - 0.9611273080660836
  - 0.937142857142857
  - 0.9333333333333332
  - 0.888235294117647
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8348731865819833
  - 0.9316420014094433
  - 0.8955857870923594
  - 0.8969033101490128
  - 0.8491767180535118
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.828996282527881
  - 0.9310344827586207
  - 0.8947368421052632
  - 0.8947368421052632
  - 0.8461538461538461
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8495934959349594
  - 0.9433106575963719
  - 0.9098639455782314
  - 0.9115646258503403
  - 0.8708333333333332
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7760897612667077
  - 0.9254433274366828
  - 0.8828033213837055
  - 0.8763211079449704
  - 0.8022771761456746
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.928861788617886
  - 0.9484126984126983
  - 0.9662698412698413
  - 0.936111111111111
  - 0.9383333333333332
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5292341093541301
  - 0.8421465451055054
  - 0.6307854665854502
  - 0.6814237043777535
  - 0.5918067350569596
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.702093828521301
  - 0.8833248782909198
  - 0.818789253461572
  - 0.818789253461572
  - 0.7375295992486531
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6595596777488296
  - 0.8408625658575437
  - 0.7785087284785959
  - 0.8280246600865395
  - 0.7045284707521048
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6367394815091174
  - 0.8736414667238245
  - 0.7843570795364958
  - 0.7629628295210782
  - 0.6900285914066555
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9488032763322898
  - 0.9617330776360565
  - 0.9751258550180996
  - 0.9577919211885136
  - 0.956101923658423
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4634146341463414
  - -1.2857142857142858
  - -1.2619047619047619
  - -1.5238095238095237
  - -1.5
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.09349593495934959
  - -0.03571428571428571
  - -0.05555555555555555
  - -0.05555555555555555
  - -0.08333333333333333
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.09349593495934959
  - -0.03571428571428571
  - -0.05555555555555555
  - -0.05555555555555555
  - -0.08333333333333333
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.09349593495934959
  - -0.03571428571428571
  - -0.055555555555555546
  - -0.055555555555555546
  - -0.08333333333333333
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.1303939962476548
  - -0.038872691933916424
  - -0.06285714285714286
  - -0.06666666666666667
  - -0.11176470588235295
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.03536585365853659
  - -0.023809523809523808
  - -0.015476190476190477
  - -0.051719576719576714
  - -0.04375
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9065040650406503
  - 0.9642857142857143
  - 0.9444444444444445
  - 0.9444444444444445
  - 0.9166666666666666
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9065040650406504
  - 0.9642857142857143
  - 0.9444444444444444
  - 0.9444444444444444
  - 0.9166666666666666
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9065040650406505
  - 0.9642857142857143
  - 0.9444444444444444
  - 0.9444444444444445
  - 0.9166666666666667
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8696060037523453
  - 0.9611273080660836
  - 0.937142857142857
  - 0.9333333333333332
  - 0.888235294117647
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9065040650406503
  - 0.9642857142857143
  - 0.9444444444444445
  - 0.9444444444444445
  - 0.9166666666666666
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9065040650406504
  - 0.9642857142857143
  - 0.9444444444444444
  - 0.9444444444444444
  - 0.9166666666666666
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9065040650406505
  - 0.9642857142857143
  - 0.9444444444444444
  - 0.9444444444444445
  - 0.9166666666666667
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8696060037523453
  - 0.9611273080660836
  - 0.937142857142857
  - 0.9333333333333332
  - 0.888235294117647
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.953535536815588
  - 0.994717834502222
  - 0.9953068264342774
  - 0.9629172399954133
  - 0.9437674608710416
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9666931007137193
  - 0.9938674977380114
  - 0.9931683168316833
  - 0.9559405940594059
  - 0.961199294532628
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9646341463414634
  - 0.9761904761904762
  - 0.9845238095238096
  - 0.9482804232804234
  - 0.95625
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9505304844978759
  - 0.9949148381156975
  - 0.9914444444444445
  - 0.966142105263158
  - 0.9448836187966623
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9857974124257317
  - 0.9811365027403967
  - 0.9753309420707197
  - 0.9860100420884003
  - 0.9790800573287463
  train_average_precision_macro_oob:
  - 0.9255035343604804
  - 0.9299388132977205
  - 0.9249620194038971
  - 0.9406355212119273
  - 0.9541270164671177
  train_average_precision_micro:
  - 0.9760953901175621
  - 0.970850436007801
  - 0.9701338275417783
  - 0.9733193274109905
  - 0.9777585428488396
  train_average_precision_micro_oob:
  - 0.9423082300859518
  - 0.9316428506388962
  - 0.9360327970468423
  - 0.9400362378360001
  - 0.941140698491318
  train_average_precision_samples:
  - 0.9784136546184738
  - 0.9772727272727273
  - 0.9838383838383837
  - 0.9792929292929293
  - 0.9850299401197605
  train_average_precision_samples_oob:
  - 0.953714859437751
  - 0.9481818181818181
  - 0.9534343434343434
  - 0.9592929292929291
  - 0.9517964071856286
  train_average_precision_weighted:
  - 0.9871360874529428
  - 0.9823159147641349
  - 0.9797233619890324
  - 0.985511864604646
  - 0.9849269340351187
  train_average_precision_weighted_oob:
  - 0.94139900583283
  - 0.9443111074681988
  - 0.9401264332568501
  - 0.9501950650877441
  - 0.9590740736989661
  train_f1_macro:
  - 0.9598393574297189
  - 0.9525252525252527
  - 0.9525252525252524
  - 0.9606060606060606
  - 0.9590818363273453
  train_f1_macro_oob:
  - 0.9467871485943776
  - 0.9252525252525253
  - 0.9323232323232323
  - 0.9333333333333332
  - 0.9411177644710578
  train_f1_micro:
  - 0.9598393574297188
  - 0.9525252525252526
  - 0.9525252525252526
  - 0.9606060606060606
  - 0.9590818363273453
  train_f1_micro_oob:
  - 0.9467871485943775
  - 0.9252525252525252
  - 0.9323232323232323
  - 0.9333333333333333
  - 0.9411177644710579
  train_f1_samples:
  - 0.9598393574297189
  - 0.9525252525252524
  - 0.9525252525252527
  - 0.9606060606060606
  - 0.9590818363273454
  train_f1_samples_oob:
  - 0.9467871485943776
  - 0.9252525252525253
  - 0.9323232323232322
  - 0.9333333333333333
  - 0.941117764471058
  train_f1_weighted:
  - 0.953433734939759
  - 0.9409464099119271
  - 0.9482748274827483
  - 0.9476147614761476
  - 0.954806804301844
  train_f1_weighted_oob:
  - 0.9438253012048193
  - 0.9118375876996566
  - 0.9205820582058206
  - 0.9191419141914191
  - 0.9325230136741444
  train_jaccard_macro:
  - 0.9230538360822621
  - 0.9103898353784268
  - 0.9097737158989426
  - 0.9253558290645306
  - 0.9216253467097362
  train_jaccard_macro_oob:
  - 0.8990647337158965
  - 0.8623286342956952
  - 0.8742239898763179
  - 0.8760757683252596
  - 0.8891772592333226
  train_jaccard_micro:
  - 0.9227799227799228
  - 0.9093539054966249
  - 0.9093539054966249
  - 0.924198250728863
  - 0.9213806327900288
  train_jaccard_micro_oob:
  - 0.8989513822688274
  - 0.8609022556390977
  - 0.8732261116367077
  - 0.875
  - 0.8887841658812441
  train_jaccard_samples:
  - 0.9341652323580035
  - 0.9248196248196247
  - 0.9225108225108226
  - 0.9357864357864357
  - 0.9322783005417735
  train_jaccard_samples_oob:
  - 0.9139414802065405
  - 0.8809523809523809
  - 0.891053391053391
  - 0.8939393939393939
  - 0.9049044767607642
  train_jaccard_weighted:
  - 0.9112933511978007
  - 0.8888949251742072
  - 0.9019796204406544
  - 0.9012044039077228
  - 0.9137496605876083
  train_jaccard_weighted_oob:
  - 0.8936621715493809
  - 0.8389800461065824
  - 0.8536644287753431
  - 0.8517122467190597
  - 0.873846620265636
  train_label_ranking_average_precision_score:
  - 0.9784136546184738
  - 0.9772727272727273
  - 0.9838383838383837
  - 0.9792929292929292
  - 0.9850299401197605
  train_label_ranking_average_precision_score_oob:
  - 0.953714859437751
  - 0.9481818181818181
  - 0.9534343434343434
  - 0.9592929292929291
  - 0.9517964071856286
  train_matthews_corrcoef_macro:
  - 0.7025153142618885
  - 0.8020734407025727
  - 0.65533509870761
  - 0.8465395199798417
  - 0.6904432459492559
  train_matthews_corrcoef_macro_oob:
  - 0.6303187517163993
  - 0.5603065382680119
  - 0.5606485990065909
  - 0.6047112495436062
  - 0.6096478346897338
  train_matthews_corrcoef_micro:
  - 0.8717486373081847
  - 0.8502089392198546
  - 0.8496165962203146
  - 0.8761070131170682
  - 0.8690812135503428
  train_matthews_corrcoef_micro_oob:
  - 0.8283220144932617
  - 0.7590565153987251
  - 0.7821107140990136
  - 0.7856872040356607
  - 0.8090195282181885
  train_matthews_corrcoef_samples:
  - 0.8586388347952114
  - 0.8532966046163131
  - 0.8359901027435853
  - 0.8758112171258124
  - 0.8507401729893733
  train_matthews_corrcoef_samples_oob:
  - 0.7940013520956049
  - 0.7204110230908379
  - 0.7402573942978251
  - 0.7446310159609514
  - 0.7671337199344727
  train_matthews_corrcoef_weighted:
  - 0.8455159002665031
  - 0.8279081921019334
  - 0.8206349990165964
  - 0.8561612252014916
  - 0.8436206925222955
  train_matthews_corrcoef_weighted_oob:
  - 0.8002143637097846
  - 0.697398789247113
  - 0.7358483630900453
  - 0.7455345365093698
  - 0.774402392507254
  train_ndgc:
  - 0.984797034851492
  - 0.9834411876401379
  - 0.9884513593549
  - 0.9851914363406029
  - 0.989111259259228
  train_ndgc_oob:
  - 0.9668053890047471
  - 0.9626932598752447
  - 0.9660888616222669
  - 0.9709855464225212
  - 0.9656734370820963
  train_neg_coverage_error:
  - -1.2650602409638554
  - -1.284848484848485
  - -1.2787878787878788
  - -1.2787878787878788
  - -1.2455089820359282
  train_neg_coverage_error_oob:
  - -1.3674698795180722
  - -1.393939393939394
  - -1.3636363636363635
  - -1.3515151515151516
  - -1.3532934131736527
  train_neg_hamming_loss_macro:
  - -0.040160642570281124
  - -0.04747474747474747
  - -0.047474747474747475
  - -0.03939393939393939
  - -0.04091816367265469
  train_neg_hamming_loss_macro_oob:
  - -0.053212851405622486
  - -0.07474747474747474
  - -0.06767676767676768
  - -0.06666666666666667
  - -0.05888223552894212
  train_neg_hamming_loss_micro:
  - -0.040160642570281124
  - -0.047474747474747475
  - -0.047474747474747475
  - -0.03939393939393939
  - -0.04091816367265469
  train_neg_hamming_loss_micro_oob:
  - -0.05321285140562249
  - -0.07474747474747474
  - -0.06767676767676768
  - -0.06666666666666667
  - -0.05888223552894212
  train_neg_hamming_loss_samples:
  - -0.040160642570281124
  - -0.047474747474747475
  - -0.047474747474747475
  - -0.03939393939393939
  - -0.04091816367265469
  train_neg_hamming_loss_samples_oob:
  - -0.053212851405622486
  - -0.07474747474747474
  - -0.06767676767676767
  - -0.06666666666666665
  - -0.05888223552894211
  train_neg_hamming_loss_weighted:
  - -0.046566265060240954
  - -0.05905359008807285
  - -0.05172517251725172
  - -0.052385238523852386
  - -0.045193195698155934
  train_neg_hamming_loss_weighted_oob:
  - -0.05617469879518072
  - -0.08816241230034334
  - -0.07941794179417942
  - -0.08085808580858085
  - -0.06747698632585576
  train_neg_label_ranking_loss:
  - -0.010993975903614459
  - -0.01075757575757576
  - -0.010303030303030303
  - -0.010303030303030303
  - -0.007934131736526948
  train_neg_label_ranking_loss_oob:
  - -0.030940428380187415
  - -0.030757575757575754
  - -0.026818181818181817
  - -0.02333333333333333
  - -0.026630073186959417
  train_precision_macro:
  - 0.9598393574297189
  - 0.9525252525252527
  - 0.9525252525252524
  - 0.9606060606060606
  - 0.9590818363273453
  train_precision_macro_oob:
  - 0.9467871485943776
  - 0.9252525252525253
  - 0.9323232323232323
  - 0.9333333333333332
  - 0.9411177644710578
  train_precision_micro:
  - 0.9598393574297188
  - 0.9525252525252526
  - 0.9525252525252526
  - 0.9606060606060606
  - 0.9590818363273453
  train_precision_micro_oob:
  - 0.9467871485943775
  - 0.9252525252525252
  - 0.9323232323232323
  - 0.9333333333333333
  - 0.9411177644710579
  train_precision_samples:
  - 0.9598393574297189
  - 0.9525252525252524
  - 0.9525252525252527
  - 0.9606060606060606
  - 0.9590818363273454
  train_precision_samples_oob:
  - 0.9467871485943776
  - 0.9252525252525253
  - 0.9323232323232322
  - 0.9333333333333333
  - 0.941117764471058
  train_precision_weighted:
  - 0.953433734939759
  - 0.9409464099119271
  - 0.9482748274827483
  - 0.9476147614761476
  - 0.954806804301844
  train_precision_weighted_oob:
  - 0.9438253012048193
  - 0.9118375876996566
  - 0.9205820582058206
  - 0.9191419141914191
  - 0.9325230136741444
  train_recall_macro:
  - 0.9598393574297189
  - 0.9525252525252527
  - 0.9525252525252524
  - 0.9606060606060606
  - 0.9590818363273453
  train_recall_macro_oob:
  - 0.9467871485943776
  - 0.9252525252525253
  - 0.9323232323232323
  - 0.9333333333333332
  - 0.9411177644710578
  train_recall_micro:
  - 0.9598393574297188
  - 0.9525252525252526
  - 0.9525252525252526
  - 0.9606060606060606
  - 0.9590818363273453
  train_recall_micro_oob:
  - 0.9467871485943775
  - 0.9252525252525252
  - 0.9323232323232323
  - 0.9333333333333333
  - 0.9411177644710579
  train_recall_samples:
  - 0.9598393574297189
  - 0.9525252525252524
  - 0.9525252525252527
  - 0.9606060606060606
  - 0.9590818363273454
  train_recall_samples_oob:
  - 0.9467871485943776
  - 0.9252525252525253
  - 0.9323232323232322
  - 0.9333333333333333
  - 0.941117764471058
  train_recall_weighted:
  - 0.953433734939759
  - 0.9409464099119271
  - 0.9482748274827483
  - 0.9476147614761476
  - 0.954806804301844
  train_recall_weighted_oob:
  - 0.9438253012048193
  - 0.9118375876996566
  - 0.9205820582058206
  - 0.9191419141914191
  - 0.9325230136741444
  train_roc_auc_macro:
  - 0.9957122512405725
  - 0.9937062456287342
  - 0.99264711119819
  - 0.9954709303712416
  - 0.9938580295380772
  train_roc_auc_macro_oob:
  - 0.9775853735005143
  - 0.976507678557673
  - 0.9739337519320661
  - 0.9820429577750417
  - 0.9775997348729537
  train_roc_auc_micro:
  - 0.9929993718592964
  - 0.991959865048416
  - 0.990843468864653
  - 0.9918643514097603
  - 0.993375817541506
  train_roc_auc_micro_oob:
  - 0.9803454773869347
  - 0.9777480110915681
  - 0.9777290546313514
  - 0.9806629140071368
  - 0.9806460829435841
  train_roc_auc_samples:
  - 0.9890060240963856
  - 0.9892424242424244
  - 0.9896969696969697
  - 0.9896969696969697
  - 0.992065868263473
  train_roc_auc_samples_oob:
  - 0.9690595716198125
  - 0.9692424242424243
  - 0.9731818181818181
  - 0.9766666666666667
  - 0.9733699268130406
  train_roc_auc_weighted:
  - 0.9937862345844305
  - 0.9910944195750724
  - 0.9904000386100517
  - 0.9926598209872202
  - 0.9937714644799975
  train_roc_auc_weighted_oob:
  - 0.9742711607979649
  - 0.9734002246249139
  - 0.9731889506219471
  - 0.9775265533556565
  - 0.976509426124617
start: 2023-12-21 06:54:36.369841
wrapper: null
