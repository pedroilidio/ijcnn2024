active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9gZmZmZmb2v0AzMzMzM+M/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          4MzMzMzMBECAMzMzMzPjPyAzMzMzMwPAQGZmZmZm9r+AMzMzMzPjPw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 03:48:56.083945
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 9
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__9
  params: {}
hash: f38e56be0df7aba81c095dafe75050c68df28901dbc1eb53f6f70f4858ccd0cf
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f38e56b_20231222T034637481057_embedding_proba__9_emotions.yml
results:
  fit_time:
  - 107.3737370967865
  - 108.07255363464355
  - 107.65565919876099
  - 110.61031365394592
  - 108.36726379394531
  score_time:
  - 8.771019697189331
  - 8.798264980316162
  - 9.183701992034912
  - 8.943896293640137
  - 9.10737943649292
  test_average_precision_macro:
  - 0.7343799477282441
  - 0.700122136000159
  - 0.6400983410982233
  - 0.7012044802109441
  - 0.7397895147272333
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.735257605923914
  - 0.6747086321531065
  - 0.6485877948133034
  - 0.6867343371814907
  - 0.746425390606243
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8028496168582377
  - 0.752542372881356
  - 0.767056932966024
  - 0.7687037037037037
  - 0.8242702448210921
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7351594885113162
  - 0.7033079408812125
  - 0.6503682746222936
  - 0.7036808794759305
  - 0.7468469027203545
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7385057471264368
  - 0.7387005649717514
  - 0.7341597796143251
  - 0.7263888888888888
  - 0.7612994350282486
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7385057471264368
  - 0.7387005649717514
  - 0.7341597796143251
  - 0.7263888888888889
  - 0.7612994350282486
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7385057471264368
  - 0.7387005649717516
  - 0.7341597796143251
  - 0.7263888888888889
  - 0.7612994350282487
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7275706038383524
  - 0.7262409200968524
  - 0.7264500205676674
  - 0.7150452488687783
  - 0.7528184676739014
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5886316176115631
  - 0.5909728104172549
  - 0.5820694616824035
  - 0.5733479664435687
  - 0.6173155987399159
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5854214123006833
  - 0.5856662933930571
  - 0.5799782372143635
  - 0.5703380588876772
  - 0.6145952109464082
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6018062397372741
  - 0.6054075867635189
  - 0.5977961432506886
  - 0.5857142857142856
  - 0.6372074253430184
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5752969176686227
  - 0.5756028750820417
  - 0.5726204564861832
  - 0.5599196091809415
  - 0.6065253302352832
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8028496168582373
  - 0.7525423728813561
  - 0.7670569329660241
  - 0.7687037037037037
  - 0.8242702448210921
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.33665081168327865
  - 0.33407551435249255
  - 0.2682836251917483
  - 0.2622208482099709
  - 0.3841788036812288
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3453286141118994
  - 0.33449443332811
  - 0.28174770969367513
  - 0.25835845008348585
  - 0.40111502435209834
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.2187084659897929
  - 0.2176597278340737
  - 0.18100209407924858
  - 0.14827292999178346
  - 0.29788136399386017
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.3314911550941085
  - 0.3198963065293344
  - 0.26888780255511957
  - 0.2574562424607352
  - 0.3832026576865106
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8688593770302968
  - 0.8275977030049549
  - 0.83390605031179
  - 0.8400368147081847
  - 0.8818839043655307
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.9224137931034484
  - -3.042372881355932
  - -2.8016528925619837
  - -2.8333333333333335
  - -2.694915254237288
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2614942528735632
  - -0.2612994350282486
  - -0.26584022038567495
  - -0.2736111111111111
  - -0.2387005649717514
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2614942528735632
  - -0.2612994350282486
  - -0.26584022038567495
  - -0.27361111111111114
  - -0.2387005649717514
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.26149425287356326
  - -0.26129943502824854
  - -0.2658402203856749
  - -0.2736111111111111
  - -0.2387005649717514
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2724293961616477
  - -0.2737590799031477
  - -0.2735499794323324
  - -0.2849547511312217
  - -0.24718153232609863
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.175933908045977
  - -0.2145244821092279
  - -0.19008264462809918
  - -0.17837962962962967
  - -0.14423258003766476
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7385057471264368
  - 0.7387005649717514
  - 0.7341597796143251
  - 0.7263888888888888
  - 0.7612994350282486
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7385057471264368
  - 0.7387005649717514
  - 0.7341597796143251
  - 0.7263888888888889
  - 0.7612994350282486
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7385057471264368
  - 0.7387005649717516
  - 0.7341597796143251
  - 0.7263888888888889
  - 0.7612994350282487
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7275706038383524
  - 0.7262409200968524
  - 0.7264500205676674
  - 0.7150452488687783
  - 0.7528184676739014
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7385057471264368
  - 0.7387005649717514
  - 0.7341597796143251
  - 0.7263888888888888
  - 0.7612994350282486
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7385057471264368
  - 0.7387005649717514
  - 0.7341597796143251
  - 0.7263888888888889
  - 0.7612994350282486
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7385057471264368
  - 0.7387005649717516
  - 0.7341597796143251
  - 0.7263888888888889
  - 0.7612994350282487
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7275706038383524
  - 0.7262409200968524
  - 0.7264500205676674
  - 0.7150452488687783
  - 0.7528184676739014
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8226878496032285
  - 0.7950108229501058
  - 0.7963804986652004
  - 0.8333795876446325
  - 0.8377763550356868
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8361419385567992
  - 0.810267857142857
  - 0.8143631557725909
  - 0.8436873747494991
  - 0.8496566846609122
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8240660919540229
  - 0.7854755178907722
  - 0.8099173553719008
  - 0.8216203703703703
  - 0.8557674199623352
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8182282741452559
  - 0.797887992201367
  - 0.7987443067021959
  - 0.8330313739021176
  - 0.8374942642310224
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8769680687560556
  - 0.8630673469717483
  - 0.8762239602777754
  - 0.8734277889129262
  - 0.8781641315576221
  train_average_precision_macro_oob:
  - 0.8667353684958251
  - 0.8561244588345507
  - 0.8632967630200284
  - 0.8653024979060991
  - 0.8708570799103957
  train_average_precision_micro:
  - 0.8821436923755096
  - 0.8669167507262375
  - 0.8782400771349306
  - 0.8769630187429868
  - 0.8818935829036414
  train_average_precision_micro_oob:
  - 0.8737551413640119
  - 0.8614560243833538
  - 0.865163571221154
  - 0.8697104661579864
  - 0.8763708644598582
  train_average_precision_samples:
  - 0.9069997670626602
  - 0.8756432748538011
  - 0.8922492937853107
  - 0.8845548508339206
  - 0.89306432748538
  train_average_precision_samples_oob:
  - 0.8884754251106453
  - 0.8758011695906432
  - 0.8781014595103579
  - 0.8798155978388538
  - 0.8995438596491228
  train_average_precision_weighted:
  - 0.8790936880514048
  - 0.8655495284626149
  - 0.8765845378499327
  - 0.8750876191037958
  - 0.8803924789921346
  train_average_precision_weighted_oob:
  - 0.869631573675812
  - 0.8590625269398473
  - 0.8638743752878547
  - 0.8676372625514265
  - 0.8740571548873688
  train_f1_macro:
  - 0.831236897274633
  - 0.8298245614035088
  - 0.8255649717514125
  - 0.8220577871740663
  - 0.8284210526315788
  train_f1_macro_oob:
  - 0.8127183787561146
  - 0.815438596491228
  - 0.8040254237288137
  - 0.8083157152924595
  - 0.8080701754385965
  train_f1_micro:
  - 0.8312368972746331
  - 0.8298245614035088
  - 0.8255649717514124
  - 0.8220577871740662
  - 0.828421052631579
  train_f1_micro_oob:
  - 0.8127183787561146
  - 0.8154385964912281
  - 0.8040254237288136
  - 0.8083157152924595
  - 0.8080701754385965
  train_f1_samples:
  - 0.8312368972746331
  - 0.8298245614035088
  - 0.8255649717514125
  - 0.8220577871740663
  - 0.828421052631579
  train_f1_samples_oob:
  - 0.8127183787561145
  - 0.8154385964912281
  - 0.8040254237288137
  - 0.8083157152924596
  - 0.8080701754385965
  train_f1_weighted:
  - 0.8251071262281405
  - 0.824065253631817
  - 0.819461429690635
  - 0.8168780434321452
  - 0.8229988726042843
  train_f1_weighted_oob:
  - 0.807678581135857
  - 0.8100666825434627
  - 0.7996412397531194
  - 0.803430333856909
  - 0.8032207915504658
  train_jaccard_macro:
  - 0.7123457881793716
  - 0.7101612656669157
  - 0.7040259539100244
  - 0.6987049903019523
  - 0.7079924415787892
  train_jaccard_macro_oob:
  - 0.6853029339854833
  - 0.689370904019675
  - 0.6729696716720083
  - 0.6790947885201843
  - 0.6786451272903035
  train_jaccard_micro:
  - 0.7112107623318386
  - 0.7091454272863568
  - 0.7029464822609741
  - 0.6978761591384983
  - 0.7070979335130279
  train_jaccard_micro_oob:
  - 0.6845203060623897
  - 0.6883886255924171
  - 0.6722763507528786
  - 0.6782968657599053
  - 0.6779511333529585
  train_jaccard_samples:
  - 0.7326544873714685
  - 0.7300751879699247
  - 0.723315173527038
  - 0.7194704520285914
  - 0.7286716791979949
  train_jaccard_samples_oob:
  - 0.7058999700509133
  - 0.7093734335839599
  - 0.6926957223567394
  - 0.7009966777408637
  - 0.7006015037593984
  train_jaccard_weighted:
  - 0.7036660395762834
  - 0.702000768345278
  - 0.6954982313509835
  - 0.6914247206758681
  - 0.7003453742567096
  train_jaccard_weighted_oob:
  - 0.6783308179984996
  - 0.6818837938797522
  - 0.6669669342268443
  - 0.6723857620590987
  - 0.6720406692234049
  train_label_ranking_average_precision_score:
  - 0.9069997670626598
  - 0.8756432748538007
  - 0.8922492937853104
  - 0.8845548508339199
  - 0.8930643274853798
  train_label_ranking_average_precision_score_oob:
  - 0.8884754251106444
  - 0.8758011695906424
  - 0.8781014595103571
  - 0.879815597838853
  - 0.8995438596491226
  train_matthews_corrcoef_macro:
  - 0.6026248781049166
  - 0.5979791838895019
  - 0.5906321621871026
  - 0.5796296194992226
  - 0.5948353278929851
  train_matthews_corrcoef_macro_oob:
  - 0.5506746671554362
  - 0.5590027565072483
  - 0.5284938489450594
  - 0.5417772750637887
  - 0.5381873945994228
  train_matthews_corrcoef_micro:
  - 0.6049527890830674
  - 0.6017005610683274
  - 0.5944130943463243
  - 0.5849036412242189
  - 0.5993488039542982
  train_matthews_corrcoef_micro_oob:
  - 0.557406788572837
  - 0.5652403004528389
  - 0.5391102699779964
  - 0.5498935299780633
  - 0.5470160059029362
  train_matthews_corrcoef_samples:
  - 0.5080860089063857
  - 0.509072473167644
  - 0.49642804470490765
  - 0.49424448681387356
  - 0.5108026929889633
  train_matthews_corrcoef_samples_oob:
  - 0.4484797057562463
  - 0.4618435017279487
  - 0.42403403626755604
  - 0.451928904287917
  - 0.4456164032349132
  train_matthews_corrcoef_weighted:
  - 0.600278107969904
  - 0.5967790560303882
  - 0.5893903310550436
  - 0.5799149452321234
  - 0.5944864903611524
  train_matthews_corrcoef_weighted_oob:
  - 0.5519773615205781
  - 0.5596829455118842
  - 0.5323887151096462
  - 0.5441657831762358
  - 0.541091192698225
  train_ndgc:
  - 0.9394827679340353
  - 0.9168173854122766
  - 0.9282964244934746
  - 0.9233764941170846
  - 0.9299865944727753
  train_ndgc_oob:
  - 0.9270071671042646
  - 0.9173335965682722
  - 0.9189339800292239
  - 0.9214016954822585
  - 0.93495331590662
  train_neg_coverage_error:
  - -2.348008385744235
  - -2.463157894736842
  - -2.417372881355932
  - -2.4545454545454546
  - -2.4147368421052633
  train_neg_coverage_error_oob:
  - -2.4318658280922434
  - -2.4905263157894737
  - -2.4915254237288136
  - -2.509513742071882
  - -2.4168421052631577
  train_neg_hamming_loss_macro:
  - -0.16876310272536688
  - -0.1701754385964912
  - -0.1744350282485876
  - -0.17794221282593378
  - -0.17157894736842105
  train_neg_hamming_loss_macro_oob:
  - -0.1872816212438854
  - -0.18456140350877193
  - -0.19597457627118645
  - -0.1916842847075405
  - -0.1919298245614035
  train_neg_hamming_loss_micro:
  - -0.16876310272536688
  - -0.17017543859649123
  - -0.17443502824858756
  - -0.17794221282593375
  - -0.17157894736842105
  train_neg_hamming_loss_micro_oob:
  - -0.1872816212438854
  - -0.18456140350877193
  - -0.19597457627118645
  - -0.1916842847075405
  - -0.1919298245614035
  train_neg_hamming_loss_samples:
  - -0.16876310272536688
  - -0.17017543859649123
  - -0.17443502824858756
  - -0.17794221282593373
  - -0.17157894736842105
  train_neg_hamming_loss_samples_oob:
  - -0.18728162124388542
  - -0.1845614035087719
  - -0.19597457627118645
  - -0.1916842847075405
  - -0.1919298245614035
  train_neg_hamming_loss_weighted:
  - -0.17489287377185955
  - -0.17593474636818288
  - -0.18053857030936504
  - -0.18312195656785465
  - -0.17700112739571588
  train_neg_hamming_loss_weighted_oob:
  - -0.1923214188641429
  - -0.1899333174565373
  - -0.20035876024688057
  - -0.1965696661430911
  - -0.19677920844953423
  train_neg_label_ranking_loss:
  - -0.07862799906825063
  - -0.10198830409356725
  - -0.0908427495291902
  - -0.09923655156213296
  - -0.09057309941520468
  train_neg_label_ranking_loss_oob:
  - -0.09290123456790124
  - -0.1063859649122807
  - -0.10361346516007533
  - -0.10447498238195914
  - -0.09015204678362573
  train_precision_macro:
  - 0.831236897274633
  - 0.8298245614035088
  - 0.8255649717514125
  - 0.8220577871740663
  - 0.8284210526315788
  train_precision_macro_oob:
  - 0.8127183787561146
  - 0.815438596491228
  - 0.8040254237288137
  - 0.8083157152924595
  - 0.8080701754385965
  train_precision_micro:
  - 0.8312368972746331
  - 0.8298245614035088
  - 0.8255649717514124
  - 0.8220577871740662
  - 0.828421052631579
  train_precision_micro_oob:
  - 0.8127183787561146
  - 0.8154385964912281
  - 0.8040254237288136
  - 0.8083157152924595
  - 0.8080701754385965
  train_precision_samples:
  - 0.8312368972746331
  - 0.8298245614035088
  - 0.8255649717514125
  - 0.8220577871740663
  - 0.828421052631579
  train_precision_samples_oob:
  - 0.8127183787561145
  - 0.8154385964912281
  - 0.8040254237288137
  - 0.8083157152924596
  - 0.8080701754385965
  train_precision_weighted:
  - 0.8251071262281405
  - 0.824065253631817
  - 0.819461429690635
  - 0.8168780434321452
  - 0.8229988726042843
  train_precision_weighted_oob:
  - 0.807678581135857
  - 0.8100666825434627
  - 0.7996412397531194
  - 0.803430333856909
  - 0.8032207915504658
  train_recall_macro:
  - 0.831236897274633
  - 0.8298245614035088
  - 0.8255649717514125
  - 0.8220577871740663
  - 0.8284210526315788
  train_recall_macro_oob:
  - 0.8127183787561146
  - 0.815438596491228
  - 0.8040254237288137
  - 0.8083157152924595
  - 0.8080701754385965
  train_recall_micro:
  - 0.8312368972746331
  - 0.8298245614035088
  - 0.8255649717514124
  - 0.8220577871740662
  - 0.828421052631579
  train_recall_micro_oob:
  - 0.8127183787561146
  - 0.8154385964912281
  - 0.8040254237288136
  - 0.8083157152924595
  - 0.8080701754385965
  train_recall_samples:
  - 0.8312368972746331
  - 0.8298245614035088
  - 0.8255649717514125
  - 0.8220577871740663
  - 0.828421052631579
  train_recall_samples_oob:
  - 0.8127183787561145
  - 0.8154385964912281
  - 0.8040254237288137
  - 0.8083157152924596
  - 0.8080701754385965
  train_recall_weighted:
  - 0.8251071262281405
  - 0.824065253631817
  - 0.819461429690635
  - 0.8168780434321452
  - 0.8229988726042843
  train_recall_weighted_oob:
  - 0.807678581135857
  - 0.8100666825434627
  - 0.7996412397531194
  - 0.803430333856909
  - 0.8032207915504658
  train_roc_auc_macro:
  - 0.9179245351753181
  - 0.9088052708338289
  - 0.9138090547291036
  - 0.9120739660212679
  - 0.9224525851336169
  train_roc_auc_macro_oob:
  - 0.9111812254676271
  - 0.9043016001559754
  - 0.9017498472683031
  - 0.9057912425491709
  - 0.9168646498962513
  train_roc_auc_micro:
  - 0.9231321621737332
  - 0.9124925774363271
  - 0.9189805328611217
  - 0.917538313251898
  - 0.925481038444596
  train_roc_auc_micro_oob:
  - 0.9166206670186805
  - 0.9093400017491934
  - 0.9076920847546537
  - 0.9116343655177556
  - 0.9213189208933478
  train_roc_auc_samples:
  - 0.9213720009317493
  - 0.8980116959064327
  - 0.9091572504708099
  - 0.900763448437867
  - 0.9094269005847953
  train_roc_auc_samples_oob:
  - 0.9070987654320988
  - 0.8936140350877194
  - 0.8963865348399247
  - 0.8955250176180408
  - 0.9098479532163743
  train_roc_auc_weighted:
  - 0.9174006582221197
  - 0.9078549989589044
  - 0.9110272881565838
  - 0.9108994533889243
  - 0.9216169717899496
  train_roc_auc_weighted_oob:
  - 0.9110056092615886
  - 0.903661817060812
  - 0.8988177178695379
  - 0.9049727605844279
  - 0.916863667994554
start: 2023-12-22 03:46:37.481057
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
