active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJv4CZmZmZmek/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJyZmZmZ2T+AzMzMzMwEwEBmZmZmZh7AgDMzMzMzC0DAmZmZmZkZQA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 16:54:52.274200
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 5
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__5
  params: {}
hash: a0f972df6a43cb80bfd3314f70b5c24463298bffb4bc346c17f9ae01e1922054
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/a0f972d_20231222T164048706615_embedding_weak__5_scene.yml
results:
  fit_time:
  - 755.9824049472809
  - 759.2158644199371
  - 734.1361336708069
  - 666.1778280735016
  - 709.238025188446
  score_time:
  - 12.906188488006592
  - 13.248355150222778
  - 11.83876633644104
  - 11.429474830627441
  - 11.836452007293701
  test_average_precision_macro:
  - 0.8349454554394633
  - 0.8411151037584252
  - 0.8558905741987934
  - 0.8232776536056191
  - 0.8357437131840566
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.842403728003751
  - 0.8527532997257047
  - 0.8575838045872038
  - 0.827875012130084
  - 0.8438653043791062
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8713790713790713
  - 0.8775482093663912
  - 0.8751192910702112
  - 0.8578451882845187
  - 0.8802631578947369
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8234657022156744
  - 0.8293481521658997
  - 0.8465094205745171
  - 0.811816111484751
  - 0.8254946923224253
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.901940401940402
  - 0.9039256198347108
  - 0.9086571233810498
  - 0.8981868898186889
  - 0.8992982456140352
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9019404019404019
  - 0.9039256198347108
  - 0.9086571233810498
  - 0.898186889818689
  - 0.899298245614035
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.901940401940402
  - 0.9039256198347109
  - 0.9086571233810499
  - 0.8981868898186891
  - 0.8992982456140352
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8968340457702161
  - 0.8985688758416032
  - 0.90332271206861
  - 0.8929136847546889
  - 0.8939942880456959
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8249590343340684
  - 0.8285324821794408
  - 0.8358534289471099
  - 0.8186010829733393
  - 0.8206663327512528
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8213947617544967
  - 0.824693685202639
  - 0.8326046221111805
  - 0.8151898734177215
  - 0.8170226330889385
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8382338382338381
  - 0.8405647382920108
  - 0.8473561203622553
  - 0.8318888224745965
  - 0.8351378446115287
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8167173718722325
  - 0.8199069609109251
  - 0.8272883326844919
  - 0.8103079714506508
  - 0.8121654039366074
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.871379071379071
  - 0.8775482093663912
  - 0.8751192910702112
  - 0.8578451882845186
  - 0.8802631578947366
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6328073751032637
  - 0.6371971087107907
  - 0.6578849604146048
  - 0.6178900110415618
  - 0.6271296532111815
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6313613194633042
  - 0.6383633083092669
  - 0.6539278076048471
  - 0.618200978757023
  - 0.6238840860872877
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5116065070146686
  - 0.5153517551048713
  - 0.5257291741773154
  - 0.49640495015210706
  - 0.5114773558833104
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6160948026444903
  - 0.6188309186897516
  - 0.640621554299346
  - 0.6003343039301047
  - 0.6106222781008225
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9054385076362785
  - 0.9097915543872034
  - 0.9078564960951173
  - 0.895094052092664
  - 0.91197619793855
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.4428274428274428
  - -1.4008264462809918
  - -1.4192229038854807
  - -1.50836820083682
  - -1.4378947368421053
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.09805959805959807
  - -0.09607438016528924
  - -0.09134287661895024
  - -0.10181311018131102
  - -0.10070175438596492
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.09805959805959806
  - -0.09607438016528926
  - -0.09134287661895024
  - -0.10181311018131102
  - -0.10070175438596492
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.09805959805959806
  - -0.09607438016528926
  - -0.09134287661895023
  - -0.10181311018131099
  - -0.10070175438596492
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10316595422978402
  - -0.10143112415839689
  - -0.09667728793138979
  - -0.10708631524531106
  - -0.10600571195430436
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.070997920997921
  - -0.0649793388429752
  - -0.07070552147239265
  - -0.0823744769874477
  - -0.06847368421052631
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.901940401940402
  - 0.9039256198347108
  - 0.9086571233810498
  - 0.8981868898186889
  - 0.8992982456140352
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9019404019404019
  - 0.9039256198347108
  - 0.9086571233810498
  - 0.898186889818689
  - 0.899298245614035
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.901940401940402
  - 0.9039256198347109
  - 0.9086571233810499
  - 0.8981868898186891
  - 0.8992982456140352
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8968340457702161
  - 0.8985688758416032
  - 0.90332271206861
  - 0.8929136847546889
  - 0.8939942880456959
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.901940401940402
  - 0.9039256198347108
  - 0.9086571233810498
  - 0.8981868898186889
  - 0.8992982456140352
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9019404019404019
  - 0.9039256198347108
  - 0.9086571233810498
  - 0.898186889818689
  - 0.899298245614035
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.901940401940402
  - 0.9039256198347109
  - 0.9086571233810499
  - 0.8981868898186891
  - 0.8992982456140352
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8968340457702161
  - 0.8985688758416032
  - 0.90332271206861
  - 0.8929136847546889
  - 0.8939942880456959
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9413978207653417
  - 0.9460484895073233
  - 0.9480712207939849
  - 0.9381856612023171
  - 0.9435127708224161
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9506994357321725
  - 0.953335415405826
  - 0.9538698777258416
  - 0.9452649305840795
  - 0.9522254438931069
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9290020790020791
  - 0.9350206611570249
  - 0.9292944785276074
  - 0.9176255230125523
  - 0.9315263157894738
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9353911561971897
  - 0.9414010561170522
  - 0.9434241429302099
  - 0.9324200363246323
  - 0.938077129385019
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9946594430101375
  - 0.9941369823072344
  - 0.9937913068976557
  - 0.9943824608428423
  - 0.9938817472455321
  train_average_precision_macro_oob:
  - 0.8639394922695137
  - 0.8592745841171885
  - 0.8610626559904192
  - 0.8581191184948088
  - 0.8571413035493793
  train_average_precision_micro:
  - 0.9941641292926409
  - 0.9934879802732322
  - 0.9930471031164091
  - 0.9941526663360561
  - 0.9936993260298873
  train_average_precision_micro_oob:
  - 0.8683590218685782
  - 0.8645324594161472
  - 0.865385323007283
  - 0.8656136417830435
  - 0.8622325393335105
  train_average_precision_samples:
  - 0.9886206299757703
  - 0.9880828566475993
  - 0.988095238095238
  - 0.9876015206497322
  - 0.9901224982746722
  train_average_precision_samples_oob:
  - 0.8842289719626168
  - 0.8868304732189287
  - 0.8860531803962461
  - 0.883618455158113
  - 0.8809868875086267
  train_average_precision_weighted:
  - 0.9945745957811064
  - 0.9940684197144989
  - 0.9937658637441759
  - 0.994310236336107
  - 0.9937929101443388
  train_average_precision_weighted_oob:
  - 0.8560186205518966
  - 0.850360021507784
  - 0.8532983084678661
  - 0.8487075951209779
  - 0.8475117211742719
  train_f1_macro:
  - 0.9555209415022499
  - 0.9564049228635811
  - 0.9559436913451512
  - 0.955590115776741
  - 0.9553140096618358
  train_f1_macro_oob:
  - 0.8998788508134302
  - 0.8970358814352575
  - 0.8990267639902676
  - 0.902194574045274
  - 0.8969116632160111
  train_f1_micro:
  - 0.9555209415022499
  - 0.9564049228635813
  - 0.9559436913451512
  - 0.955590115776741
  - 0.9553140096618358
  train_f1_micro_oob:
  - 0.8998788508134302
  - 0.8970358814352574
  - 0.8990267639902676
  - 0.9021945740452739
  - 0.896911663216011
  train_f1_samples:
  - 0.95552094150225
  - 0.9564049228635813
  - 0.9559436913451512
  - 0.955590115776741
  - 0.9553140096618358
  train_f1_samples_oob:
  - 0.8998788508134303
  - 0.8970358814352575
  - 0.8990267639902677
  - 0.9021945740452739
  - 0.8969116632160111
  train_f1_weighted:
  - 0.9537621191031411
  - 0.9545272376932813
  - 0.9542549508081712
  - 0.953605034857419
  - 0.9534947019344018
  train_f1_weighted_oob:
  - 0.8946044758582041
  - 0.8916127714290961
  - 0.8937417692325914
  - 0.897102584417353
  - 0.8911452407470227
  train_jaccard_macro:
  - 0.9152956997585021
  - 0.9169584126462372
  - 0.9160239947632515
  - 0.9155223218286789
  - 0.9148971555888817
  train_jaccard_macro_oob:
  - 0.8213666512006325
  - 0.8169257664634147
  - 0.8201002730594422
  - 0.825024031683896
  - 0.8171365508046536
  train_jaccard_micro:
  - 0.9148301574150787
  - 0.9164521219167843
  - 0.915605493133583
  - 0.914956982131039
  - 0.9144508670520232
  train_jaccard_micro_oob:
  - 0.8179815936443011
  - 0.8132956152758133
  - 0.8165745856353591
  - 0.8218164646623642
  - 0.8130914209744271
  train_jaccard_samples:
  - 0.9249987637838105
  - 0.9266275412921279
  - 0.925877650330205
  - 0.9250413488360612
  - 0.924393670511683
  train_jaccard_samples_oob:
  - 0.8326039657815357
  - 0.8279597850580689
  - 0.8315581707135408
  - 0.8365918684736725
  - 0.8272700384501626
  train_jaccard_weighted:
  - 0.9121049117221821
  - 0.9135543985750342
  - 0.9129539897586441
  - 0.9119206345303258
  - 0.9116054638160732
  train_jaccard_weighted_oob:
  - 0.812965398473036
  - 0.8083274900066153
  - 0.8116527601844875
  - 0.8168484699670175
  - 0.808004667309417
  train_label_ranking_average_precision_score:
  - 0.9886206299757699
  - 0.9880828566475991
  - 0.9880952380952378
  - 0.9876015206497322
  - 0.990122498274672
  train_label_ranking_average_precision_score_oob:
  - 0.884228971962617
  - 0.8868304732189287
  - 0.8860531803962458
  - 0.8836184551581128
  - 0.8809868875086265
  train_matthews_corrcoef_macro:
  - 0.8470033121140483
  - 0.8506076955522581
  - 0.8490236070510853
  - 0.8475775284534693
  - 0.8461193486655899
  train_matthews_corrcoef_macro_oob:
  - 0.6233354987649302
  - 0.6102935408918827
  - 0.6214174848912783
  - 0.633879588294537
  - 0.6050785386850599
  train_matthews_corrcoef_micro:
  - 0.8442278684217097
  - 0.8475106536266146
  - 0.8462834018897032
  - 0.8442037879344889
  - 0.8430871564351545
  train_matthews_corrcoef_micro_oob:
  - 0.6235124116639323
  - 0.6116850625292074
  - 0.6216226247184549
  - 0.6326872395308988
  - 0.609569126422321
  train_matthews_corrcoef_samples:
  - 0.7793210356100625
  - 0.7859527158858276
  - 0.7833965678396313
  - 0.7807227897214526
  - 0.7776373707053656
  train_matthews_corrcoef_samples_oob:
  - 0.47624061874887
  - 0.46000756397166953
  - 0.4757419452261239
  - 0.4895479326115983
  - 0.4556181106489596
  train_matthews_corrcoef_weighted:
  - 0.8428092963185493
  - 0.8460152862215103
  - 0.8449899410720353
  - 0.8425359666780403
  - 0.841702132174269
  train_matthews_corrcoef_weighted_oob:
  - 0.6060060831353128
  - 0.5922741496486066
  - 0.6040524152149005
  - 0.617478837336831
  - 0.5846040215544527
  train_ndgc:
  - 0.9917461447171961
  - 0.9913758181671866
  - 0.9913630715509418
  - 0.99099727013572
  - 0.9927996859228418
  train_ndgc_oob:
  - 0.9146191566999565
  - 0.9166125276991498
  - 0.9159924500742769
  - 0.9140694581267073
  - 0.9122931878695845
  train_neg_coverage_error:
  - -1.101246105919003
  - -1.1045241809672386
  - -1.107924921793535
  - -1.1016070502851218
  - -1.0942028985507246
  train_neg_coverage_error_oob:
  - -1.4080996884735202
  - -1.4139365574622984
  - -1.416058394160584
  - -1.4043545878693624
  - -1.4166666666666667
  train_neg_hamming_loss_macro:
  - -0.044479058497750086
  - -0.04359507713641878
  - -0.0440563086548488
  - -0.04440988422325903
  - -0.044685990338164255
  train_neg_hamming_loss_macro_oob:
  - -0.10012114918656977
  - -0.1029641185647426
  - -0.10097323600973236
  - -0.09780542595472612
  - -0.10308833678398895
  train_neg_hamming_loss_micro:
  - -0.044479058497750086
  - -0.04359507713641879
  - -0.0440563086548488
  - -0.044409884223259026
  - -0.04468599033816425
  train_neg_hamming_loss_micro_oob:
  - -0.10012114918656975
  - -0.1029641185647426
  - -0.10097323600973236
  - -0.0978054259547261
  - -0.10308833678398896
  train_neg_hamming_loss_samples:
  - -0.04447905849775008
  - -0.04359507713641879
  - -0.0440563086548488
  - -0.044409884223259026
  - -0.04468599033816425
  train_neg_hamming_loss_samples_oob:
  - -0.10012114918656974
  - -0.1029641185647426
  - -0.10097323600973233
  - -0.0978054259547261
  - -0.10308833678398897
  train_neg_hamming_loss_weighted:
  - -0.046237880896858825
  - -0.045472762306718685
  - -0.045745049191828736
  - -0.046394965142580985
  - -0.04650529806559815
  train_neg_hamming_loss_weighted_oob:
  - -0.10539552414179576
  - -0.10838722857090384
  - -0.10625823076740866
  - -0.10289741558264696
  - -0.10885475925297725
  train_neg_label_ranking_loss:
  - -0.005244029075804777
  - -0.00562922516900676
  - -0.005578727841501564
  - -0.005728356661482634
  - -0.0044901656314699796
  train_neg_label_ranking_loss_oob:
  - -0.06538161993769472
  - -0.06570462818512741
  - -0.06575860271115745
  - -0.06515033696215655
  - -0.0670031055900621
  train_precision_macro:
  - 0.9555209415022499
  - 0.9564049228635811
  - 0.9559436913451512
  - 0.955590115776741
  - 0.9553140096618358
  train_precision_macro_oob:
  - 0.8998788508134302
  - 0.8970358814352575
  - 0.8990267639902676
  - 0.902194574045274
  - 0.8969116632160111
  train_precision_micro:
  - 0.9555209415022499
  - 0.9564049228635813
  - 0.9559436913451512
  - 0.955590115776741
  - 0.9553140096618358
  train_precision_micro_oob:
  - 0.8998788508134302
  - 0.8970358814352574
  - 0.8990267639902676
  - 0.9021945740452739
  - 0.896911663216011
  train_precision_samples:
  - 0.95552094150225
  - 0.9564049228635813
  - 0.9559436913451512
  - 0.955590115776741
  - 0.9553140096618358
  train_precision_samples_oob:
  - 0.8998788508134303
  - 0.8970358814352575
  - 0.8990267639902677
  - 0.9021945740452739
  - 0.8969116632160111
  train_precision_weighted:
  - 0.9537621191031411
  - 0.9545272376932813
  - 0.9542549508081712
  - 0.953605034857419
  - 0.9534947019344018
  train_precision_weighted_oob:
  - 0.8946044758582041
  - 0.8916127714290961
  - 0.8937417692325914
  - 0.897102584417353
  - 0.8911452407470227
  train_recall_macro:
  - 0.9555209415022499
  - 0.9564049228635811
  - 0.9559436913451512
  - 0.955590115776741
  - 0.9553140096618358
  train_recall_macro_oob:
  - 0.8998788508134302
  - 0.8970358814352575
  - 0.8990267639902676
  - 0.902194574045274
  - 0.8969116632160111
  train_recall_micro:
  - 0.9555209415022499
  - 0.9564049228635813
  - 0.9559436913451512
  - 0.955590115776741
  - 0.9553140096618358
  train_recall_micro_oob:
  - 0.8998788508134302
  - 0.8970358814352574
  - 0.8990267639902676
  - 0.9021945740452739
  - 0.896911663216011
  train_recall_samples:
  - 0.95552094150225
  - 0.9564049228635813
  - 0.9559436913451512
  - 0.955590115776741
  - 0.9553140096618358
  train_recall_samples_oob:
  - 0.8998788508134303
  - 0.8970358814352575
  - 0.8990267639902677
  - 0.9021945740452739
  - 0.8969116632160111
  train_recall_weighted:
  - 0.9537621191031411
  - 0.9545272376932813
  - 0.9542549508081712
  - 0.953605034857419
  - 0.9534947019344018
  train_recall_weighted_oob:
  - 0.8946044758582041
  - 0.8916127714290961
  - 0.8937417692325914
  - 0.897102584417353
  - 0.8911452407470227
  train_roc_auc_macro:
  - 0.9987166067757446
  - 0.9985253375604936
  - 0.9985542461648164
  - 0.9986420710787328
  - 0.9985913520603754
  train_roc_auc_macro_oob:
  - 0.9540650015605272
  - 0.9510127804494412
  - 0.9515517008537432
  - 0.9512229632468516
  - 0.949514184667155
  train_roc_auc_micro:
  - 0.998656120853869
  - 0.9984644133286562
  - 0.9985052452749054
  - 0.9986219763513952
  - 0.9986290473162912
  train_roc_auc_micro_oob:
  - 0.9580691460821122
  - 0.9561321227220905
  - 0.9563160280626676
  - 0.9572048075593625
  - 0.9553899853358004
  train_roc_auc_samples:
  - 0.9947559709241951
  - 0.9943707748309933
  - 0.9944212721584984
  - 0.9942716433385174
  - 0.99550983436853
  train_roc_auc_samples_oob:
  - 0.9346183800623054
  - 0.9342953718148727
  - 0.9342413972888426
  - 0.9348496630378433
  - 0.9329968944099378
  train_roc_auc_weighted:
  - 0.998673980308759
  - 0.9984837606496209
  - 0.998525406747917
  - 0.9986086962126863
  - 0.9985390767764573
  train_roc_auc_weighted_oob:
  - 0.9506591336858917
  - 0.9470247264674533
  - 0.9478630531565665
  - 0.9470898198671801
  - 0.9451514210657583
start: 2023-12-22 16:40:48.706615
wrapper: null
