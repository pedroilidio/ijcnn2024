active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvyAzMzMzM/O/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz8z80MzMzMzPzP5iZmZmZmem/mJmZmZmZ6b+YmZmZmZnpvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAA8D8AAAAAAAAAAAAAAAAAAAhAAAAAAAAAAAAAAAAAAAAQwA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:10:43.216201
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 6
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__6
  params: {}
hash: cb1c742969505084a0878396ba831fecb47b5a07889c7fe9095e312234e74164
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/cb1c742_20231221T230827196617_embedding_proba_weak__6_CHD_49.yml
results:
  fit_time:
  - 114.6416175365448
  - 115.42600226402283
  - 114.42665958404541
  - 114.1718020439148
  - 115.89326405525208
  score_time:
  - 5.877123117446899
  - 5.787045955657959
  - 5.53039813041687
  - 6.050390005111694
  - 6.226815223693848
  test_average_precision_macro:
  - 0.5883972466975722
  - 0.5243710670795929
  - 0.516218932853942
  - 0.5311977305521401
  - 0.5024910204953718
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7276142305313359
  - 0.6697720074285813
  - 0.6782981243803647
  - 0.6855561336879372
  - 0.6325089675694696
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8251515151515152
  - 0.7647897897897896
  - 0.811766975308642
  - 0.8002377377377379
  - 0.7592512077294686
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6981218756840571
  - 0.6421966955229141
  - 0.6365914611827312
  - 0.6535710581645353
  - 0.6171262703145286
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7378787878787879
  - 0.7177177177177178
  - 0.70679012345679
  - 0.7147147147147147
  - 0.6782608695652174
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7378787878787879
  - 0.7177177177177178
  - 0.7067901234567902
  - 0.7147147147147147
  - 0.6782608695652174
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7378787878787879
  - 0.7177177177177176
  - 0.70679012345679
  - 0.7147147147147148
  - 0.6782608695652174
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6968950064020487
  - 0.6709657025446499
  - 0.6782327310008971
  - 0.672966672966673
  - 0.635024154589372
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6029651228309824
  - 0.578981805445475
  - 0.5649577390397965
  - 0.5756900342725428
  - 0.5355750573647989
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5846338535414166
  - 0.5597189695550351
  - 0.5465393794749404
  - 0.5560747663551402
  - 0.5131578947368421
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6305745769382132
  - 0.6078663078663078
  - 0.592905242905243
  - 0.5968409968409967
  - 0.5512742330133635
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5403184446695094
  - 0.5096918286249807
  - 0.5198432339773251
  - 0.5149030965666151
  - 0.473043361174105
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8251515151515152
  - 0.7828078078078077
  - 0.8210262345679012
  - 0.8002377377377375
  - 0.7592512077294685
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.224675346816842
  - 0.15943516397584742
  - 0.14613787768184078
  - 0.1671091454192648
  - 0.10414670162215044
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5069700657589461
  - 0.46334040131759296
  - 0.4420249680790898
  - 0.44899363002606496
  - 0.4002186988809634
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5147606151225604
  - 0.4831222531346953
  - 0.4525500030301159
  - 0.47935398979129207
  - 0.42541840950468
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.2280593475331468
  - 0.1484648622414631
  - 0.15303624978803979
  - 0.1600303508194576
  - 0.0963897881224378
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8856025261927241
  - 0.8322758005995178
  - 0.8761754947743485
  - 0.8633892870222852
  - 0.8389307436089974
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.463636363636364
  - -3.5855855855855854
  - -3.740740740740741
  - -3.5315315315315314
  - -3.747826086956522
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.26212121212121214
  - -0.2822822822822823
  - -0.2932098765432099
  - -0.2852852852852853
  - -0.32173913043478264
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.26212121212121214
  - -0.2822822822822823
  - -0.2932098765432099
  - -0.2852852852852853
  - -0.3217391304347826
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2621212121212121
  - -0.2822822822822823
  - -0.29320987654320985
  - -0.28528528528528524
  - -0.3217391304347826
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.30310499359795134
  - -0.3290342974553501
  - -0.3217672689991029
  - -0.327033327033327
  - -0.36497584541062805
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.16727272727272727
  - -0.19674674674674675
  - -0.19722222222222222
  - -0.19677177177177177
  - -0.2326086956521739
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7378787878787879
  - 0.7177177177177178
  - 0.70679012345679
  - 0.7147147147147147
  - 0.6782608695652174
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7378787878787879
  - 0.7177177177177178
  - 0.7067901234567902
  - 0.7147147147147147
  - 0.6782608695652174
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7378787878787879
  - 0.7177177177177176
  - 0.70679012345679
  - 0.7147147147147148
  - 0.6782608695652174
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6968950064020487
  - 0.6709657025446499
  - 0.6782327310008971
  - 0.672966672966673
  - 0.635024154589372
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7378787878787879
  - 0.7177177177177178
  - 0.70679012345679
  - 0.7147147147147147
  - 0.6782608695652174
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7378787878787879
  - 0.7177177177177178
  - 0.7067901234567902
  - 0.7147147147147147
  - 0.6782608695652174
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7378787878787879
  - 0.7177177177177176
  - 0.70679012345679
  - 0.7147147147147148
  - 0.6782608695652174
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6968950064020487
  - 0.6709657025446499
  - 0.6782327310008971
  - 0.672966672966673
  - 0.635024154589372
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6454514706070781
  - 0.5631630592955895
  - 0.5527887872010847
  - 0.5564264167603831
  - 0.536126133255566
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8128652232544201
  - 0.7762858590044664
  - 0.7759732436313868
  - 0.786612072138388
  - 0.7616604477611941
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8327272727272728
  - .nan
  - .nan
  - 0.803228228228228
  - 0.7673913043478261
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6609280329206919
  - 0.5750939105071233
  - 0.5703862787998488
  - 0.6124572121676056
  - 0.5770972547022256
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8478222749338964
  - 0.8283108045440107
  - 0.827063189686791
  - 0.8474221014422615
  - 0.8485006556012274
  train_average_precision_macro_oob:
  - 0.6885578489077466
  - 0.6762262637038748
  - 0.696157044360858
  - 0.7046962164806652
  - 0.70299983126301
  train_average_precision_micro:
  - 0.8214445601538879
  - 0.7737042396858685
  - 0.7985869044830434
  - 0.8144461334868777
  - 0.8400373652022123
  train_average_precision_micro_oob:
  - 0.8056030468858948
  - 0.7633613999211296
  - 0.7852439546449961
  - 0.8050189332013706
  - 0.8251481320625205
  train_average_precision_samples:
  - 0.8728214731585519
  - 0.8370620620620621
  - 0.8677479492915734
  - 0.869822947947948
  - 0.8863257575757576
  train_average_precision_samples_oob:
  - 0.8647003745318351
  - 0.8284878628628627
  - 0.8587559035545612
  - 0.8620526776776777
  - 0.8807638888888889
  train_average_precision_weighted:
  - 0.8237864999587957
  - 0.8008270911734989
  - 0.8002961294987609
  - 0.8207684816346713
  - 0.8296828948585739
  train_average_precision_weighted_oob:
  - 0.7981321408803224
  - 0.7813658099382287
  - 0.7810187846828076
  - 0.8068524014847521
  - 0.8077444656274483
  train_f1_macro:
  - 0.849812734082397
  - 0.84496996996997
  - 0.8437733035048471
  - 0.8506006006006005
  - 0.8526515151515152
  train_f1_macro_oob:
  - 0.8310861423220973
  - 0.8231981981981983
  - 0.8258762117822521
  - 0.8355855855855857
  - 0.8378787878787879
  train_f1_micro:
  - 0.849812734082397
  - 0.84496996996997
  - 0.8437733035048471
  - 0.8506006006006006
  - 0.8526515151515152
  train_f1_micro_oob:
  - 0.8310861423220974
  - 0.8231981981981982
  - 0.825876211782252
  - 0.8355855855855856
  - 0.8378787878787879
  train_f1_samples:
  - 0.8498127340823969
  - 0.84496996996997
  - 0.8437733035048471
  - 0.8506006006006006
  - 0.8526515151515152
  train_f1_samples_oob:
  - 0.8310861423220974
  - 0.8231981981981982
  - 0.8258762117822521
  - 0.8355855855855856
  - 0.8378787878787878
  train_f1_weighted:
  - 0.8191206984300983
  - 0.8159102869216208
  - 0.8147893705680525
  - 0.8190160055343302
  - 0.8215551493960584
  train_f1_weighted_oob:
  - 0.7953979563872685
  - 0.7882981063015937
  - 0.7888812556148603
  - 0.7988597235979435
  - 0.8016787190082645
  train_jaccard_macro:
  - 0.7454565272268306
  - 0.738853876832423
  - 0.7359983646073336
  - 0.7487698255025416
  - 0.7490507919759074
  train_jaccard_macro_oob:
  - 0.7189216891858775
  - 0.7089232076212472
  - 0.7112167792769407
  - 0.7279396106567161
  - 0.7281034678785242
  train_jaccard_micro:
  - 0.7388472810159558
  - 0.731556711082223
  - 0.7297645920670751
  - 0.7400391900718485
  - 0.7431495543083526
  train_jaccard_micro_oob:
  - 0.7109900672861262
  - 0.6995215311004784
  - 0.7033979040965386
  - 0.7176015473887815
  - 0.7209908735332464
  train_jaccard_samples:
  - 0.7710345833941339
  - 0.7659402909402909
  - 0.7625565336974732
  - 0.7739499239499239
  - 0.7742443919716646
  train_jaccard_samples_oob:
  - 0.745759034972518
  - 0.7375628875628876
  - 0.7367984737112254
  - 0.7537771537771538
  - 0.754590712317985
  train_jaccard_weighted:
  - 0.69650675894504
  - 0.692371331011359
  - 0.6891919168396287
  - 0.6981823554426589
  - 0.6992678261628824
  train_jaccard_weighted_oob:
  - 0.663354565995095
  - 0.6547211307391103
  - 0.6535515721047701
  - 0.6704768475555399
  - 0.6714462168845363
  train_label_ranking_average_precision_score:
  - 0.8795630461922588
  - 0.8393143143143139
  - 0.8722222222222219
  - 0.876579704704704
  - 0.8931439393939389
  train_label_ranking_average_precision_score_oob:
  - 0.8714419475655418
  - 0.8307401151151146
  - 0.8632301764852095
  - 0.8688094344344336
  - 0.8875820707070702
  train_matthews_corrcoef_macro:
  - 0.5124278115590847
  - 0.5090034113674567
  - 0.5127527247379674
  - 0.5201536924046622
  - 0.5087787861257943
  train_matthews_corrcoef_macro_oob:
  - 0.4495143440587434
  - 0.4352965140178417
  - 0.4423612606469121
  - 0.4684266756772803
  - 0.43593575943217755
  train_matthews_corrcoef_micro:
  - 0.7222318533114142
  - 0.7131569046307493
  - 0.7151633141234747
  - 0.7263337216624889
  - 0.7305312672127491
  train_matthews_corrcoef_micro_oob:
  - 0.6851764909233059
  - 0.6708629565351063
  - 0.6814830766398667
  - 0.6981337397380626
  - 0.7016788113371126
  train_matthews_corrcoef_samples:
  - 0.7325873419596409
  - 0.723112287975799
  - 0.7219112111706674
  - 0.7358891593902376
  - 0.7333145976306708
  train_matthews_corrcoef_samples_oob:
  - 0.6925593780765609
  - 0.681958938336908
  - 0.6875759125426172
  - 0.7097341925168515
  - 0.7050270675031011
  train_matthews_corrcoef_weighted:
  - 0.567217445137189
  - 0.5720060370806688
  - 0.5805338689752786
  - 0.5793218644482326
  - 0.5583406621286119
  train_matthews_corrcoef_weighted_oob:
  - 0.47714929254459965
  - 0.46603265275324063
  - 0.469335403385046
  - 0.5016065169951783
  - 0.443750547936935
  train_ndgc:
  - 0.913967730338096
  - 0.8865893604154511
  - 0.9109633473715053
  - 0.9114977009423967
  - 0.924307112833578
  train_ndgc_oob:
  - 0.9090189447415249
  - 0.8814279715488134
  - 0.9044636650469321
  - 0.9064489427490633
  - 0.9206797523538998
  train_neg_coverage_error:
  - -3.1280898876404493
  - -3.22972972972973
  - -3.1431767337807606
  - -3.1576576576576576
  - -3.131818181818182
  train_neg_coverage_error_oob:
  - -3.202247191011236
  - -3.310810810810811
  - -3.1879194630872485
  - -3.231981981981982
  - -3.184090909090909
  train_neg_hamming_loss_macro:
  - -0.150187265917603
  - -0.15503003003003002
  - -0.15622669649515286
  - -0.1493993993993994
  - -0.14734848484848487
  train_neg_hamming_loss_macro_oob:
  - -0.1689138576779026
  - -0.1768018018018018
  - -0.17412378821774796
  - -0.16441441441441443
  - -0.16212121212121214
  train_neg_hamming_loss_micro:
  - -0.150187265917603
  - -0.15503003003003002
  - -0.15622669649515286
  - -0.1493993993993994
  - -0.14734848484848484
  train_neg_hamming_loss_micro_oob:
  - -0.16891385767790262
  - -0.1768018018018018
  - -0.17412378821774796
  - -0.16441441441441443
  - -0.1621212121212121
  train_neg_hamming_loss_samples:
  - -0.15018726591760298
  - -0.15503003003003
  - -0.15622669649515283
  - -0.1493993993993994
  - -0.14734848484848484
  train_neg_hamming_loss_samples_oob:
  - -0.16891385767790262
  - -0.1768018018018018
  - -0.1741237882177479
  - -0.16441441441441443
  - -0.1621212121212121
  train_neg_hamming_loss_weighted:
  - -0.18087930156990176
  - -0.18408971307837915
  - -0.1852106294319474
  - -0.18098399446566985
  - -0.1784448506039415
  train_neg_hamming_loss_weighted_oob:
  - -0.2046020436127315
  - -0.21170189369840636
  - -0.21111874438513978
  - -0.20114027640205648
  - -0.19832128099173554
  train_neg_label_ranking_loss:
  - -0.10495630461922596
  - -0.12742742742742744
  - -0.11135346756152124
  - -0.10503628628628628
  - -0.10008838383838384
  train_neg_label_ranking_loss_oob:
  - -0.11672908863920099
  - -0.14078453453453454
  - -0.12087994034302758
  - -0.11598473473473472
  - -0.10928661616161615
  train_precision_macro:
  - 0.849812734082397
  - 0.84496996996997
  - 0.8437733035048471
  - 0.8506006006006005
  - 0.8526515151515152
  train_precision_macro_oob:
  - 0.8310861423220973
  - 0.8231981981981983
  - 0.8258762117822521
  - 0.8355855855855857
  - 0.8378787878787879
  train_precision_micro:
  - 0.849812734082397
  - 0.84496996996997
  - 0.8437733035048471
  - 0.8506006006006006
  - 0.8526515151515152
  train_precision_micro_oob:
  - 0.8310861423220974
  - 0.8231981981981982
  - 0.825876211782252
  - 0.8355855855855856
  - 0.8378787878787879
  train_precision_samples:
  - 0.8498127340823969
  - 0.84496996996997
  - 0.8437733035048471
  - 0.8506006006006006
  - 0.8526515151515152
  train_precision_samples_oob:
  - 0.8310861423220974
  - 0.8231981981981982
  - 0.8258762117822521
  - 0.8355855855855856
  - 0.8378787878787878
  train_precision_weighted:
  - 0.8191206984300983
  - 0.8159102869216208
  - 0.8147893705680525
  - 0.8190160055343302
  - 0.8215551493960584
  train_precision_weighted_oob:
  - 0.7953979563872685
  - 0.7882981063015937
  - 0.7888812556148603
  - 0.7988597235979435
  - 0.8016787190082645
  train_recall_macro:
  - 0.849812734082397
  - 0.84496996996997
  - 0.8437733035048471
  - 0.8506006006006005
  - 0.8526515151515152
  train_recall_macro_oob:
  - 0.8310861423220973
  - 0.8231981981981983
  - 0.8258762117822521
  - 0.8355855855855857
  - 0.8378787878787879
  train_recall_micro:
  - 0.849812734082397
  - 0.84496996996997
  - 0.8437733035048471
  - 0.8506006006006006
  - 0.8526515151515152
  train_recall_micro_oob:
  - 0.8310861423220974
  - 0.8231981981981982
  - 0.825876211782252
  - 0.8355855855855856
  - 0.8378787878787879
  train_recall_samples:
  - 0.8498127340823969
  - 0.84496996996997
  - 0.8437733035048471
  - 0.8506006006006006
  - 0.8526515151515152
  train_recall_samples_oob:
  - 0.8310861423220974
  - 0.8231981981981982
  - 0.8258762117822521
  - 0.8355855855855856
  - 0.8378787878787878
  train_recall_weighted:
  - 0.8191206984300983
  - 0.8159102869216208
  - 0.8147893705680525
  - 0.8190160055343302
  - 0.8215551493960584
  train_recall_weighted_oob:
  - 0.7953979563872685
  - 0.7882981063015937
  - 0.7888812556148603
  - 0.7988597235979435
  - 0.8016787190082645
  train_roc_auc_macro:
  - 0.8716100878501063
  - 0.854400407914422
  - 0.8569684610383731
  - 0.8660652402499673
  - 0.8786258428833947
  train_roc_auc_macro_oob:
  - 0.8284249126400526
  - 0.7972470584734381
  - 0.8254017316510597
  - 0.8368455027522551
  - 0.8484321182416106
  train_roc_auc_micro:
  - 0.9027683979909069
  - 0.8861734978008609
  - 0.8949775933628829
  - 0.9012271589098358
  - 0.9099927896301561
  train_roc_auc_micro_oob:
  - 0.8896549790070831
  - 0.8725286623727945
  - 0.8848077713482695
  - 0.891607286155431
  - 0.8984150041135335
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8268944962709185
  - 0.8076564332978337
  - 0.8084905313608224
  - 0.8172623276075526
  - 0.838227005996024
  train_roc_auc_weighted_oob:
  - 0.8106935345651356
  - 0.7886281534531965
  - 0.796879043966887
  - 0.808249259270871
  - 0.8242791981150895
start: 2023-12-21 23:08:27.196617
wrapper: null
