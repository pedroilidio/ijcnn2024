active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T9AMzMzMzPjv4CZmZmZmdk/gJmZmZmZ2T9AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AGZmZmZm9r8AmpmZmZn5PwDNzMzMzARAADQzMzMz4z8AMzMzMzMLwA==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 09:47:27.704061
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - xt
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.ExtraTreesRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.8
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    - - rf_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - rf
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.RandomForestRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.95
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 1
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_weak__1
  params: {}
hash: e353ed289318db9ae75262761b265ea8dd8861820d03bee543e86407f2ad9ea4
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/e353ed2_20231222T094703114993_embedding_weak__1_PlantGO.yml
results:
  fit_time:
  - 7.148810148239136
  - 6.04993200302124
  - 5.957624435424805
  - 6.828856945037842
  - 6.513328313827515
  score_time:
  - 2.7967312335968018
  - 2.767942428588867
  - 2.766005754470825
  - 2.903456449508667
  - 2.953922748565674
  test_average_precision_macro:
  - 0.7300385997328598
  - 0.8002357463486942
  - 0.8435108148373159
  - 0.7931226453328777
  - 0.7347778891486517
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7884532331373316
  - 0.8430202508524437
  - 0.8285038406721145
  - 0.8358136819320399
  - 0.7684306862898709
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8356155829506082
  - 0.8915153002781868
  - 0.8914075993091537
  - 0.8686752136752136
  - 0.8601938262742282
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8269536929055064
  - 0.8793313976811469
  - 0.8789622227159094
  - 0.8660395711995511
  - 0.8085730678888795
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9149746192893402
  - 0.9162371134020618
  - 0.9114853195164075
  - 0.9106837606837607
  - 0.9145728643216079
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9149746192893401
  - 0.9162371134020618
  - 0.9114853195164075
  - 0.9106837606837607
  - 0.914572864321608
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9149746192893401
  - 0.9162371134020618
  - 0.9114853195164074
  - 0.9106837606837606
  - 0.914572864321608
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8462341825953902
  - 0.8533602411982103
  - 0.8356595681384338
  - 0.8352380952380951
  - 0.8488021502863152
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8514394491016688
  - 0.8526666515020639
  - 0.8468963336346418
  - 0.8456041327271794
  - 0.8503585915680669
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8432748538011696
  - 0.845422116527943
  - 0.8373661245537485
  - 0.836014123185563
  - 0.8425925925925926
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8444803927037428
  - 0.8474000226577545
  - 0.8385924955873142
  - 0.8367990983375598
  - 0.8443646805455847
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7416753610226602
  - 0.7507006969237897
  - 0.7282019483141591
  - 0.727810067995037
  - 0.7451286404392122
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8356155829506084
  - 0.8915153002781868
  - 0.8914075993091535
  - 0.8686752136752135
  - 0.8601938262742281
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.025951480111115977
  - 0.057284925782020296
  - 0.033048893088904026
  - 0.00930936384182975
  - 0.0425927852176568
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.18633070646449942
  - 0.27096574346901586
  - 0.1320672715293302
  - 0.06585140469384605
  - 0.2157237309140666
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.045223811721273655
  - 0.08762886597938144
  - 0.02072538860103627
  - 0.005128205128205128
  - 0.06441297396071266
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.08493211672728866
  - 0.154433347907677
  - 0.07734595067870205
  - 0.030321927941959755
  - 0.11591481356701969
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8779004687761215
  - 0.9211572800583371
  - 0.9198804491972677
  - 0.9018284191518299
  - 0.8964998100522168
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.6903553299492386
  - -1.5206185567010309
  - -1.461139896373057
  - -1.5897435897435896
  - -1.6633165829145728
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.0850253807106599
  - -0.08376288659793814
  - -0.08851468048359239
  - -0.08931623931623933
  - -0.08542713567839194
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.0850253807106599
  - -0.08376288659793814
  - -0.0885146804835924
  - -0.08931623931623932
  - -0.08542713567839195
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08502538071065992
  - -0.08376288659793814
  - -0.08851468048359241
  - -0.08931623931623932
  - -0.08542713567839195
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.15376581740460982
  - -0.14663975880178953
  - -0.1643404318615663
  - -0.16476190476190478
  - -0.15119784971368472
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.05452238117212736
  - -0.03385660731021556
  - -0.032525601437518536
  - -0.045710955710955715
  - -0.04948479772600376
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9149746192893402
  - 0.9162371134020618
  - 0.9114853195164075
  - 0.9106837606837607
  - 0.9145728643216079
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9149746192893401
  - 0.9162371134020618
  - 0.9114853195164075
  - 0.9106837606837607
  - 0.914572864321608
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9149746192893401
  - 0.9162371134020618
  - 0.9114853195164074
  - 0.9106837606837606
  - 0.914572864321608
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8462341825953902
  - 0.8533602411982103
  - 0.8356595681384338
  - 0.8352380952380951
  - 0.8488021502863152
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9149746192893402
  - 0.9162371134020618
  - 0.9114853195164075
  - 0.9106837606837607
  - 0.9145728643216079
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9149746192893401
  - 0.9162371134020618
  - 0.9114853195164075
  - 0.9106837606837607
  - 0.914572864321608
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9149746192893401
  - 0.9162371134020618
  - 0.9114853195164074
  - 0.9106837606837606
  - 0.914572864321608
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8462341825953902
  - 0.8533602411982103
  - 0.8356595681384338
  - 0.8352380952380951
  - 0.8488021502863152
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9574123363027393
  - 0.9695347950744876
  - 0.9765573859858582
  - 0.9713298625068134
  - 0.9717281058276214
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9600828161946737
  - 0.9698166708278346
  - 0.9715848061712724
  - 0.9708674267829197
  - 0.9619195410909792
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9454776188278726
  - 0.9661433926897844
  - 0.9674743985624815
  - 0.9542890442890444
  - 0.9505152022739962
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.964189152263023
  - 0.9741849538036091
  - 0.9765643831031633
  - 0.9776199792872072
  - 0.9663071464311166
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.890408995554747
  - 0.8887823032763658
  - 0.8600639236037438
  - 0.8702006360293746
  - 0.8722783211201026
  train_average_precision_macro_oob:
  - 0.745156441812444
  - 0.7325790152509195
  - 0.7360391258814124
  - 0.716521431817661
  - 0.7327117787726835
  train_average_precision_micro:
  - 0.899936650660442
  - 0.8847657667239746
  - 0.875733283862567
  - 0.890016603990635
  - 0.8854763743899067
  train_average_precision_micro_oob:
  - 0.8031354848682755
  - 0.7893185412473668
  - 0.7865023145561796
  - 0.7888768283915972
  - 0.7979770773199368
  train_average_precision_samples:
  - 0.9220687762941283
  - 0.9190790006478782
  - 0.916809220503488
  - 0.9186644772851669
  - 0.9253754304460338
  train_average_precision_samples_oob:
  - 0.8612575360334642
  - 0.8521921566245546
  - 0.8630077848549186
  - 0.8594913742423321
  - 0.868489312712676
  train_average_precision_weighted:
  - 0.9326449502456101
  - 0.9158178727324393
  - 0.9004301975346449
  - 0.9133201585754891
  - 0.9131713490222476
  train_average_precision_weighted_oob:
  - 0.8358536060852166
  - 0.8145758450489136
  - 0.8054009152142647
  - 0.8067516263140615
  - 0.8216679149056375
  train_f1_macro:
  - 0.9145326504481434
  - 0.9154974489795916
  - 0.9115711252653927
  - 0.9115581098339719
  - 0.915489944373128
  train_f1_macro_oob:
  - 0.913679043960734
  - 0.9130527210884353
  - 0.9108280254777069
  - 0.910387398893146
  - 0.9140992725716731
  train_f1_micro:
  - 0.9145326504481434
  - 0.9154974489795918
  - 0.9115711252653927
  - 0.9115581098339719
  - 0.9154899443731279
  train_f1_micro_oob:
  - 0.9136790439607341
  - 0.9130527210884354
  - 0.910828025477707
  - 0.910387398893146
  - 0.9140992725716731
  train_f1_samples:
  - 0.9145326504481434
  - 0.9154974489795918
  - 0.9115711252653929
  - 0.9115581098339719
  - 0.9154899443731279
  train_f1_samples_oob:
  - 0.913679043960734
  - 0.9130527210884353
  - 0.9108280254777069
  - 0.9103873988931459
  - 0.914099272571673
  train_f1_weighted:
  - 0.8483713369838631
  - 0.8482687559009369
  - 0.837540467693605
  - 0.8379484156672485
  - 0.8491839354483772
  train_f1_weighted_oob:
  - 0.8455986293864628
  - 0.8409576464037573
  - 0.8354549698092184
  - 0.8341411805602786
  - 0.8458096460663855
  train_jaccard_macro:
  - 0.8503338906868461
  - 0.8520600946250947
  - 0.8467962666613928
  - 0.8466744821432654
  - 0.8519002109321057
  train_jaccard_macro_oob:
  - 0.8492248445410832
  - 0.848863207558443
  - 0.8458301845518187
  - 0.8452489353112465
  - 0.8499337884778121
  train_jaccard_micro:
  - 0.8425243291064582
  - 0.8441634813290209
  - 0.8375109723983224
  - 0.8374889997066588
  - 0.8441507200631289
  train_jaccard_micro_oob:
  - 0.8410765150771045
  - 0.8400156463915509
  - 0.8362573099415205
  - 0.835514748974409
  - 0.8417889863067678
  train_jaccard_samples:
  - 0.8441108187587061
  - 0.8458006279434851
  - 0.8385329320361168
  - 0.8385303074958246
  - 0.8458604296858468
  train_jaccard_samples_oob:
  - 0.8425349298588735
  - 0.8412592509531285
  - 0.8371610555050045
  - 0.8363689949896846
  - 0.8432930355908532
  train_jaccard_weighted:
  - 0.7441018377319393
  - 0.7446759583302911
  - 0.730743383969922
  - 0.7309047356847604
  - 0.7454275431287927
  train_jaccard_weighted_oob:
  - 0.7404994041520853
  - 0.7352621963546196
  - 0.7281025782505313
  - 0.7262687561647749
  - 0.7407712039152297
  train_label_ranking_average_precision_score:
  - 0.9220687762941285
  - 0.9190790006478784
  - 0.9168092205034881
  - 0.9186644772851673
  - 0.9253754304460342
  train_label_ranking_average_precision_score_oob:
  - 0.8612575360334642
  - 0.8521921566245547
  - 0.8630077848549186
  - 0.8594913742423329
  - 0.8684893127126767
  train_matthews_corrcoef_macro:
  - 0.031991742930333196
  - 0.05873584173154994
  - 0.02704502589928223
  - 0.017488668393837253
  - 0.04908190039333393
  train_matthews_corrcoef_macro_oob:
  - 0.028852599401324328
  - 0.0391493786280834
  - 0.018416937087138558
  - 0.00803839274029323
  - 0.028045325801113352
  train_matthews_corrcoef_micro:
  - 0.22050718808121259
  - 0.22740645895262396
  - 0.11829127373246934
  - 0.12288430067196428
  - 0.23241179913544982
  train_matthews_corrcoef_micro_oob:
  - 0.19986243925465344
  - 0.1638168250611007
  - 0.08246802698521866
  - 0.056851059780391115
  - 0.19972695217643202
  train_matthews_corrcoef_samples:
  - 0.05761843790012804
  - 0.06470315398886828
  - 0.019619710305396137
  - 0.017879948914431672
  - 0.06885284163846424
  train_matthews_corrcoef_samples_oob:
  - 0.04737516005121639
  - 0.03420686456400742
  - 0.010702512853166842
  - 0.0038314176245210726
  - 0.052164780021005955
  train_matthews_corrcoef_weighted:
  - 0.10391644157512486
  - 0.14282862836061927
  - 0.06614233129037694
  - 0.05687439141569795
  - 0.13117634011885995
  train_matthews_corrcoef_weighted_oob:
  - 0.09371979096316696
  - 0.09484210239902832
  - 0.04449351043945966
  - 0.026141423964882598
  - 0.09134763260934063
  train_ndgc:
  - 0.9425179324982599
  - 0.9399655289792258
  - 0.9389369302035393
  - 0.9402888796343101
  - 0.9449630357318517
  train_ndgc_oob:
  - 0.8974147812493409
  - 0.8903261161016539
  - 0.8983207988806168
  - 0.8962090099991403
  - 0.9025760106218728
  train_neg_coverage_error:
  - -1.3777208706786173
  - -1.364795918367347
  - -1.394904458598726
  - -1.3780332056194124
  - -1.3414634146341464
  train_neg_coverage_error_oob:
  - -1.6517285531370038
  - -1.663265306122449
  - -1.6254777070063695
  - -1.6168582375478928
  - -1.5750962772785622
  train_neg_hamming_loss_macro:
  - -0.0854673495518566
  - -0.08450255102040816
  - -0.08842887473460721
  - -0.08844189016602809
  - -0.08451005562687204
  train_neg_hamming_loss_macro_oob:
  - -0.08632095603926591
  - -0.08694727891156462
  - -0.08917197452229299
  - -0.08961260110685397
  - -0.0859007274283269
  train_neg_hamming_loss_micro:
  - -0.0854673495518566
  - -0.08450255102040816
  - -0.08842887473460721
  - -0.0884418901660281
  - -0.08451005562687205
  train_neg_hamming_loss_micro_oob:
  - -0.0863209560392659
  - -0.08694727891156463
  - -0.08917197452229299
  - -0.08961260110685398
  - -0.08590072742832691
  train_neg_hamming_loss_samples:
  - -0.0854673495518566
  - -0.08450255102040816
  - -0.08842887473460723
  - -0.0884418901660281
  - -0.08451005562687205
  train_neg_hamming_loss_samples_oob:
  - -0.08632095603926589
  - -0.08694727891156462
  - -0.08917197452229299
  - -0.08961260110685397
  - -0.0859007274283269
  train_neg_hamming_loss_weighted:
  - -0.15162866301613678
  - -0.1517312440990631
  - -0.16245953230639504
  - -0.16205158433275144
  - -0.15081606455162294
  train_neg_hamming_loss_weighted_oob:
  - -0.1544013706135372
  - -0.15904235359624272
  - -0.16454503019078165
  - -0.1658588194397213
  - -0.1541903539336145
  train_neg_label_ranking_loss:
  - -0.024726350142483304
  - -0.025278293135435996
  - -0.02599734071071651
  - -0.02473285429862697
  - -0.02222546388143307
  train_neg_label_ranking_loss_oob:
  - -0.0477739408597283
  - -0.05084926647426648
  - -0.04695854511141136
  - -0.045350482259805376
  - -0.04256147266416844
  train_precision_macro:
  - 0.9145326504481434
  - 0.9154974489795916
  - 0.9115711252653927
  - 0.9115581098339719
  - 0.915489944373128
  train_precision_macro_oob:
  - 0.913679043960734
  - 0.9130527210884353
  - 0.9108280254777069
  - 0.910387398893146
  - 0.9140992725716731
  train_precision_micro:
  - 0.9145326504481434
  - 0.9154974489795918
  - 0.9115711252653927
  - 0.9115581098339719
  - 0.9154899443731279
  train_precision_micro_oob:
  - 0.9136790439607341
  - 0.9130527210884354
  - 0.910828025477707
  - 0.910387398893146
  - 0.9140992725716731
  train_precision_samples:
  - 0.9145326504481434
  - 0.9154974489795918
  - 0.9115711252653929
  - 0.9115581098339719
  - 0.9154899443731279
  train_precision_samples_oob:
  - 0.913679043960734
  - 0.9130527210884353
  - 0.9108280254777069
  - 0.9103873988931459
  - 0.914099272571673
  train_precision_weighted:
  - 0.8483713369838631
  - 0.8482687559009369
  - 0.837540467693605
  - 0.8379484156672485
  - 0.8491839354483772
  train_precision_weighted_oob:
  - 0.8455986293864628
  - 0.8409576464037573
  - 0.8354549698092184
  - 0.8341411805602786
  - 0.8458096460663855
  train_recall_macro:
  - 0.9145326504481434
  - 0.9154974489795916
  - 0.9115711252653927
  - 0.9115581098339719
  - 0.915489944373128
  train_recall_macro_oob:
  - 0.913679043960734
  - 0.9130527210884353
  - 0.9108280254777069
  - 0.910387398893146
  - 0.9140992725716731
  train_recall_micro:
  - 0.9145326504481434
  - 0.9154974489795918
  - 0.9115711252653927
  - 0.9115581098339719
  - 0.9154899443731279
  train_recall_micro_oob:
  - 0.9136790439607341
  - 0.9130527210884354
  - 0.910828025477707
  - 0.910387398893146
  - 0.9140992725716731
  train_recall_samples:
  - 0.9145326504481434
  - 0.9154974489795918
  - 0.9115711252653929
  - 0.9115581098339719
  - 0.9154899443731279
  train_recall_samples_oob:
  - 0.913679043960734
  - 0.9130527210884353
  - 0.9108280254777069
  - 0.9103873988931459
  - 0.914099272571673
  train_recall_weighted:
  - 0.8483713369838631
  - 0.8482687559009369
  - 0.837540467693605
  - 0.8379484156672485
  - 0.8491839354483772
  train_recall_weighted_oob:
  - 0.8455986293864628
  - 0.8409576464037573
  - 0.8354549698092184
  - 0.8341411805602786
  - 0.8458096460663855
  train_roc_auc_macro:
  - 0.9870262509100303
  - 0.9852672457322805
  - 0.9794992164797637
  - 0.9818014559963166
  - 0.9827514105800662
  train_roc_auc_macro_oob:
  - 0.9692419182995192
  - 0.9648055471339636
  - 0.9605010057266691
  - 0.9654759887360614
  - 0.9650812224113735
  train_roc_auc_micro:
  - 0.9822537680597633
  - 0.9827483503097866
  - 0.979982640353678
  - 0.9807640754844411
  - 0.9827567751360065
  train_roc_auc_micro_oob:
  - 0.9642212473152627
  - 0.9639902524758338
  - 0.9629919140884999
  - 0.9639906471370178
  - 0.9652856135401974
  train_roc_auc_samples:
  - 0.9752736498575166
  - 0.974721706864564
  - 0.9740026592892834
  - 0.975267145701373
  - 0.977774536118567
  train_roc_auc_samples_oob:
  - 0.9522260591402717
  - 0.9491507335257335
  - 0.9530414548885885
  - 0.9546495177401947
  - 0.9574385273358316
  train_roc_auc_weighted:
  - 0.9875514589420268
  - 0.9835386641379126
  - 0.981160349041844
  - 0.9818091426342442
  - 0.9835796293261195
  train_roc_auc_weighted_oob:
  - 0.9714832297102386
  - 0.9669077305551003
  - 0.9645325862537496
  - 0.9664292013496187
  - 0.968319317420867
start: 2023-12-22 09:47:03.114993
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
