active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz878AmpmZmZnpPwCYmZmZmcm/AJqZmZmZ6T8AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 16:42:52.124100
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 5
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__5
  params: {}
hash: febe8f94cc0ce455aa9837893e99c44892c17c348d425dfc8b98f107e4badb64
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/febe8f9_20231221T164158948826_embedding_weak__5_Gram_positive.yml
results:
  fit_time:
  - 41.792303800582886
  - 5.33320164680481
  - 5.563473463058472
  - 41.59282898902893
  - 5.172989368438721
  score_time:
  - 2.829573392868042
  - 0.0
  - 0.0
  - 2.860517740249634
  - 0.0
  test_average_precision_macro:
  - 0.9677482427911279
  - .nan
  - .nan
  - 0.9201353416813723
  - .nan
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9799164868529733
  - .nan
  - .nan
  - 0.9782010476964196
  - .nan
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9769841269841271
  - .nan
  - .nan
  - 0.9555016181229774
  - .nan
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9826611971134355
  - .nan
  - .nan
  - 0.9728418279978582
  - .nan
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9833333333333334
  - .nan
  - .nan
  - 0.9563106796116505
  - .nan
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9833333333333333
  - .nan
  - .nan
  - 0.9563106796116505
  - .nan
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9833333333333333
  - .nan
  - .nan
  - 0.9563106796116505
  - .nan
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9875736961451247
  - .nan
  - .nan
  - 0.9545076282940361
  - .nan
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9673313544544367
  - .nan
  - .nan
  - 0.9166476972154983
  - .nan
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9672131147540983
  - .nan
  - .nan
  - 0.9162790697674419
  - .nan
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9771428571428572
  - .nan
  - .nan
  - 0.93915857605178
  - .nan
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.975502393594441
  - .nan
  - .nan
  - 0.9132510585869782
  - .nan
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.976984126984127
  - .nan
  - .nan
  - 0.9555016181229773
  - .nan
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.8501607488275167
  - .nan
  - .nan
  - 0.6624484493796796
  - .nan
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.9554333937093653
  - .nan
  - .nan
  - 0.8834406227259
  - .nan
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.9523809523809523
  - .nan
  - .nan
  - 0.8793917501863071
  - .nan
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.9540336285252109
  - .nan
  - .nan
  - 0.8672786690704565
  - .nan
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9827860577639648
  - .nan
  - .nan
  - 0.9668478186983561
  - .nan
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.0666666666666667
  - .nan
  - .nan
  - -1.1359223300970873
  - .nan
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.01666666666666667
  - .nan
  - .nan
  - -0.04368932038834951
  - .nan
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.016666666666666666
  - .nan
  - .nan
  - -0.043689320388349516
  - .nan
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.016666666666666666
  - .nan
  - .nan
  - -0.043689320388349516
  - .nan
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.012426303854875287
  - .nan
  - .nan
  - -0.04549237170596394
  - .nan
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.02222222222222222
  - .nan
  - .nan
  - -0.038834951456310676
  - .nan
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9833333333333334
  - .nan
  - .nan
  - 0.9563106796116505
  - .nan
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9833333333333333
  - .nan
  - .nan
  - 0.9563106796116505
  - .nan
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9833333333333333
  - .nan
  - .nan
  - 0.9563106796116505
  - .nan
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9875736961451247
  - .nan
  - .nan
  - 0.9545076282940361
  - .nan
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9833333333333334
  - .nan
  - .nan
  - 0.9563106796116505
  - .nan
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9833333333333333
  - .nan
  - .nan
  - 0.9563106796116505
  - .nan
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9833333333333333
  - .nan
  - .nan
  - 0.9563106796116505
  - .nan
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9875736961451247
  - .nan
  - .nan
  - 0.9545076282940361
  - .nan
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9926199810079269
  - .nan
  - .nan
  - 0.9870197208770015
  - .nan
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9911715797430083
  - .nan
  - .nan
  - 0.988056460369164
  - .nan
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9777777777777776
  - .nan
  - .nan
  - 0.9611650485436892
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9916817380906646
  - .nan
  - .nan
  - 0.987199376429849
  - .nan
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.925080214640203
  - .nan
  - .nan
  - 0.947578592447784
  - .nan
  train_average_precision_macro_oob:
  - 0.8761768627299825
  - .nan
  - .nan
  - 0.9017903372918169
  - .nan
  train_average_precision_micro:
  - 0.9891387448789374
  - .nan
  - .nan
  - 0.9905360904246365
  - .nan
  train_average_precision_micro_oob:
  - 0.9812326265705583
  - .nan
  - .nan
  - 0.9807863026005176
  - .nan
  train_average_precision_samples:
  - 0.9677938808373592
  - .nan
  - .nan
  - 0.9741586538461539
  - .nan
  train_average_precision_samples_oob:
  - 0.9659822866344606
  - .nan
  - .nan
  - 0.9677483974358976
  - .nan
  train_average_precision_weighted:
  - 0.9832401034429895
  - .nan
  - .nan
  - 0.9855892701254843
  - .nan
  train_average_precision_weighted_oob:
  - 0.9722928472830885
  - .nan
  - .nan
  - 0.9751591567864946
  - .nan
  train_f1_macro:
  - 0.9685990338164252
  - .nan
  - .nan
  - 0.9771634615384616
  - .nan
  train_f1_macro_oob:
  - 0.9661835748792271
  - .nan
  - .nan
  - 0.9663461538461537
  - .nan
  train_f1_micro:
  - 0.9685990338164251
  - .nan
  - .nan
  - 0.9771634615384616
  - .nan
  train_f1_micro_oob:
  - 0.966183574879227
  - .nan
  - .nan
  - 0.9663461538461539
  - .nan
  train_f1_samples:
  - 0.9685990338164251
  - .nan
  - .nan
  - 0.9771634615384616
  - .nan
  train_f1_samples_oob:
  - 0.966183574879227
  - .nan
  - .nan
  - 0.9663461538461539
  - .nan
  train_f1_weighted:
  - 0.9717194831611307
  - .nan
  - .nan
  - 0.9826094957673907
  - .nan
  train_f1_weighted_oob:
  - 0.9692000092457758
  - .nan
  - .nan
  - 0.9700381854987118
  - .nan
  train_jaccard_macro:
  - 0.9393322593427356
  - .nan
  - .nan
  - 0.9555706081765459
  - .nan
  train_jaccard_macro_oob:
  - 0.9349092208830297
  - .nan
  - .nan
  - 0.9353145597355388
  - .nan
  train_jaccard_micro:
  - 0.9391100702576113
  - .nan
  - .nan
  - 0.9553466509988249
  - .nan
  train_jaccard_micro_oob:
  - 0.9345794392523364
  - .nan
  - .nan
  - 0.9348837209302325
  - .nan
  train_jaccard_samples:
  - 0.9568438003220612
  - .nan
  - .nan
  - 0.9679487179487178
  - .nan
  train_jaccard_samples_oob:
  - 0.9526570048309179
  - .nan
  - .nan
  - 0.9525641025641025
  - .nan
  train_jaccard_weighted:
  - 0.9452374295460644
  - .nan
  - .nan
  - 0.9659614041913306
  - .nan
  train_jaccard_weighted_oob:
  - 0.9406074797553766
  - .nan
  - .nan
  - 0.9422753764093853
  - .nan
  train_label_ranking_average_precision_score:
  - 0.9677938808373592
  - .nan
  - .nan
  - 0.9741586538461539
  - .nan
  train_label_ranking_average_precision_score_oob:
  - 0.9659822866344605
  - .nan
  - .nan
  - 0.9677483974358974
  - .nan
  train_matthews_corrcoef_macro:
  - 0.794445012635576
  - .nan
  - .nan
  - 0.7160760396810357
  - .nan
  train_matthews_corrcoef_macro_oob:
  - 0.7877585685431111
  - .nan
  - .nan
  - 0.6886529741187876
  - .nan
  train_matthews_corrcoef_micro:
  - 0.9164426501137933
  - .nan
  - .nan
  - 0.9389320053697757
  - .nan
  train_matthews_corrcoef_micro_oob:
  - 0.9096255954380614
  - .nan
  - .nan
  - 0.9096949453283172
  - .nan
  train_matthews_corrcoef_samples:
  - 0.9167956956826444
  - .nan
  - .nan
  - 0.9338654660377705
  - .nan
  train_matthews_corrcoef_samples_oob:
  - 0.9041289881081123
  - .nan
  - .nan
  - 0.9002116198839244
  - .nan
  train_matthews_corrcoef_weighted:
  - 0.9144716073021953
  - .nan
  - .nan
  - 0.9255865482692691
  - .nan
  train_matthews_corrcoef_weighted_oob:
  - 0.9076156173804216
  - .nan
  - .nan
  - 0.894749877746398
  - .nan
  train_ndgc:
  - 0.9763003537487525
  - .nan
  - .nan
  - 0.9809524114373469
  - .nan
  train_ndgc_oob:
  - 0.9748492436364478
  - .nan
  - .nan
  - 0.9761150669500084
  - .nan
  train_neg_coverage_error:
  - -1.0845410628019323
  - .nan
  - .nan
  - -1.0649038461538463
  - .nan
  train_neg_coverage_error_oob:
  - -1.0990338164251208
  - .nan
  - .nan
  - -1.09375
  - .nan
  train_neg_hamming_loss_macro:
  - -0.03140096618357488
  - .nan
  - .nan
  - -0.02283653846153846
  - .nan
  train_neg_hamming_loss_macro_oob:
  - -0.033816425120772944
  - .nan
  - .nan
  - -0.03365384615384615
  - .nan
  train_neg_hamming_loss_micro:
  - -0.03140096618357488
  - .nan
  - .nan
  - -0.02283653846153846
  - .nan
  train_neg_hamming_loss_micro_oob:
  - -0.033816425120772944
  - .nan
  - .nan
  - -0.03365384615384615
  - .nan
  train_neg_hamming_loss_samples:
  - -0.03140096618357488
  - .nan
  - .nan
  - -0.02283653846153846
  - .nan
  train_neg_hamming_loss_samples_oob:
  - -0.033816425120772944
  - .nan
  - .nan
  - -0.03365384615384615
  - .nan
  train_neg_hamming_loss_weighted:
  - -0.028280516838869244
  - .nan
  - .nan
  - -0.017390504232609495
  - .nan
  train_neg_hamming_loss_weighted_oob:
  - -0.030799990754224165
  - .nan
  - .nan
  - -0.029961814501288184
  - .nan
  train_neg_label_ranking_loss:
  - -0.024557165861513686
  - .nan
  - .nan
  - -0.019831730769230768
  - .nan
  train_neg_label_ranking_loss_oob:
  - -0.02938808373590982
  - .nan
  - .nan
  - -0.029246794871794872
  - .nan
  train_precision_macro:
  - 0.9685990338164252
  - .nan
  - .nan
  - 0.9771634615384616
  - .nan
  train_precision_macro_oob:
  - 0.9661835748792271
  - .nan
  - .nan
  - 0.9663461538461537
  - .nan
  train_precision_micro:
  - 0.9685990338164251
  - .nan
  - .nan
  - 0.9771634615384616
  - .nan
  train_precision_micro_oob:
  - 0.966183574879227
  - .nan
  - .nan
  - 0.9663461538461539
  - .nan
  train_precision_samples:
  - 0.9685990338164251
  - .nan
  - .nan
  - 0.9771634615384616
  - .nan
  train_precision_samples_oob:
  - 0.966183574879227
  - .nan
  - .nan
  - 0.9663461538461539
  - .nan
  train_precision_weighted:
  - 0.9717194831611307
  - .nan
  - .nan
  - 0.9826094957673907
  - .nan
  train_precision_weighted_oob:
  - 0.9692000092457758
  - .nan
  - .nan
  - 0.9700381854987118
  - .nan
  train_recall_macro:
  - 0.9685990338164252
  - .nan
  - .nan
  - 0.9771634615384616
  - .nan
  train_recall_macro_oob:
  - 0.9661835748792271
  - .nan
  - .nan
  - 0.9663461538461537
  - .nan
  train_recall_micro:
  - 0.9685990338164251
  - .nan
  - .nan
  - 0.9771634615384616
  - .nan
  train_recall_micro_oob:
  - 0.966183574879227
  - .nan
  - .nan
  - 0.9663461538461539
  - .nan
  train_recall_samples:
  - 0.9685990338164251
  - .nan
  - .nan
  - 0.9771634615384616
  - .nan
  train_recall_samples_oob:
  - 0.966183574879227
  - .nan
  - .nan
  - 0.9663461538461539
  - .nan
  train_recall_weighted:
  - 0.9717194831611307
  - .nan
  - .nan
  - 0.9826094957673907
  - .nan
  train_recall_weighted_oob:
  - 0.9692000092457758
  - .nan
  - .nan
  - 0.9700381854987118
  - .nan
  train_roc_auc_macro:
  - 0.9948600043115865
  - .nan
  - .nan
  - 0.9957159700072085
  - .nan
  train_roc_auc_macro_oob:
  - 0.9879433841020262
  - .nan
  - .nan
  - 0.9900929489374745
  - .nan
  train_roc_auc_micro:
  - 0.9961583353301744
  - .nan
  - .nan
  - 0.9967609268318909
  - .nan
  train_roc_auc_micro_oob:
  - 0.9911514172418857
  - .nan
  - .nan
  - 0.9908952667675317
  - .nan
  train_roc_auc_samples:
  - 0.9754428341384864
  - .nan
  - .nan
  - 0.9801682692307693
  - .nan
  train_roc_auc_samples_oob:
  - 0.9706119162640903
  - .nan
  - .nan
  - 0.9707532051282052
  - .nan
  train_roc_auc_weighted:
  - 0.9966120678874384
  - .nan
  - .nan
  - 0.9968633295304749
  - .nan
  train_roc_auc_weighted_oob:
  - 0.99261353224214
  - .nan
  - .nan
  - 0.9934802999066168
  - .nan
start: 2023-12-21 16:41:58.948826
wrapper: null
