active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z9gZmZmZmb2vw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ODMzMzMzI0DgzMzMzMwEQCAzMzMzMwPAkJmZmZmZEcCQmZmZmZkVwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 02:11:21.242301
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 1
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__1
  params: {}
hash: 6693dfd04f9b2e42f1a586ad3c2dfa0caf39f7a464c0e6c5bfc9cdd42bd0cd03
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/6693dfd_20231222T021106774619_embedding_weak__1_emotions.yml
results:
  fit_time:
  - 4.299910545349121
  - 4.939001083374023
  - 5.048046350479126
  - 4.709690570831299
  - 5.064399003982544
  score_time:
  - 1.5111126899719238
  - 1.7957401275634766
  - 1.8077552318572998
  - 1.8764569759368896
  - 1.8287010192871094
  test_average_precision_macro:
  - 0.7305643568959365
  - 0.7613365029171822
  - 0.7161661969350438
  - 0.7226832986417886
  - 0.7324641734229386
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7319091575314775
  - 0.7223966859743788
  - 0.6912971326170839
  - 0.6737518527005271
  - 0.6745886400338257
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8114678899082568
  - 0.8093630268199233
  - 0.7794077134986225
  - 0.7773938572719061
  - 0.7902329749103942
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7341020753189416
  - 0.7558537495317642
  - 0.714607883454481
  - 0.718868928516052
  - 0.7217168578575874
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7951070336391437
  - 0.8017241379310344
  - 0.8140495867768595
  - 0.8089430894308943
  - 0.8225806451612904
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7951070336391437
  - 0.8017241379310345
  - 0.8140495867768595
  - 0.8089430894308943
  - 0.8225806451612904
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7951070336391439
  - 0.8017241379310345
  - 0.8140495867768596
  - 0.8089430894308944
  - 0.8225806451612904
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7947300071216122
  - 0.7991223982603294
  - 0.8104013104013104
  - 0.8053195011588125
  - 0.8139400921658986
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6631166000152984
  - 0.6718422964691201
  - 0.6882737551833058
  - 0.6829076587525855
  - 0.7030888535991243
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6598984771573604
  - 0.6690647482014388
  - 0.686411149825784
  - 0.6791808873720137
  - 0.6986301369863014
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6890345128877239
  - 0.7015599343185549
  - 0.7123179850452578
  - 0.7108013937282229
  - 0.7301075268817203
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6623230776838394
  - 0.6678794458478169
  - 0.6829885545595473
  - 0.6775168586996723
  - 0.6906569403266977
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8114678899082568
  - 0.8093630268199232
  - 0.7794077134986221
  - 0.7773938572719062
  - 0.790232974910394
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.4907596832622727
  - 0.500204204344241
  - 0.5264764009809104
  - 0.5174895590678356
  - 0.5726497569140389
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5186312580924858
  - 0.5211898871150019
  - 0.5416045071700208
  - 0.5258670613949836
  - 0.5630374718227017
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5057960983724076
  - 0.5043660663816876
  - 0.5106195795575288
  - 0.5196557980356562
  - 0.5473211821654267
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5009151045773772
  - 0.5066563427268174
  - 0.5321047169997654
  - 0.5246542580874421
  - 0.569275016262212
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8722547265393883
  - 0.8679515568791747
  - 0.849477923403272
  - 0.8432108535842208
  - 0.8527981630285114
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.8623853211009176
  - -2.6982758620689653
  - -2.8264462809917354
  - -2.7804878048780486
  - -2.564516129032258
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2048929663608563
  - -0.19827586206896552
  - -0.18595041322314051
  - -0.19105691056910568
  - -0.17741935483870966
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20489296636085627
  - -0.19827586206896552
  - -0.1859504132231405
  - -0.1910569105691057
  - -0.1774193548387097
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20489296636085622
  - -0.19827586206896555
  - -0.18595041322314046
  - -0.19105691056910568
  - -0.1774193548387097
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.20526999287838804
  - -0.2008776017396707
  - -0.1895986895986896
  - -0.19468049884118754
  - -0.1860599078341014
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.15624362895005092
  - -0.14319923371647508
  - -0.1713269054178145
  - -0.1813459801264679
  - -0.1468637992831541
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7951070336391437
  - 0.8017241379310344
  - 0.8140495867768595
  - 0.8089430894308943
  - 0.8225806451612904
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7951070336391437
  - 0.8017241379310345
  - 0.8140495867768595
  - 0.8089430894308943
  - 0.8225806451612904
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7951070336391439
  - 0.8017241379310345
  - 0.8140495867768596
  - 0.8089430894308944
  - 0.8225806451612904
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7947300071216122
  - 0.7991223982603294
  - 0.8104013104013104
  - 0.8053195011588125
  - 0.8139400921658986
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7951070336391437
  - 0.8017241379310344
  - 0.8140495867768595
  - 0.8089430894308943
  - 0.8225806451612904
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7951070336391437
  - 0.8017241379310345
  - 0.8140495867768595
  - 0.8089430894308943
  - 0.8225806451612904
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7951070336391439
  - 0.8017241379310345
  - 0.8140495867768596
  - 0.8089430894308944
  - 0.8225806451612904
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7947300071216122
  - 0.7991223982603294
  - 0.8104013104013104
  - 0.8053195011588125
  - 0.8139400921658986
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8457923452431723
  - 0.8705487257367622
  - 0.8483689021443429
  - 0.837210548940663
  - 0.8521919007743705
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.863402088909883
  - 0.8793762116546927
  - 0.8590465465465466
  - 0.8484031612942753
  - 0.8708104395604396
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.843756371049949
  - 0.8568007662835249
  - 0.8286730945821855
  - 0.8186540198735321
  - 0.8531362007168458
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8458036591736593
  - 0.8658538320018556
  - 0.848662261651771
  - 0.8348041855863665
  - 0.8472173180694552
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9319177493031132
  - 0.923598109349791
  - 0.9148463061915207
  - 0.9364584407719728
  - 0.9180622442955365
  train_average_precision_macro_oob:
  - 0.7558523268858596
  - 0.7457128469789014
  - 0.7319830676305704
  - 0.7421808768601027
  - 0.7155201284420301
  train_average_precision_micro:
  - 0.8619966786961551
  - 0.8402325622368336
  - 0.826136190250822
  - 0.8598997089764885
  - 0.8282020195753189
  train_average_precision_micro_oob:
  - 0.7192703213739026
  - 0.7130182114524065
  - 0.6962053080810431
  - 0.7137033808036095
  - 0.6898370396977893
  train_average_precision_samples:
  - 0.9166322314049586
  - 0.901211274167249
  - 0.9034486817325801
  - 0.9181560283687943
  - 0.9022624970386164
  train_average_precision_samples_oob:
  - 0.8010158402203856
  - 0.798579082226881
  - 0.7914253766478343
  - 0.8080496453900708
  - 0.7976190476190476
  train_average_precision_weighted:
  - 0.9214038378643954
  - 0.9116084208524782
  - 0.8967709786052034
  - 0.9247150680781643
  - 0.90113111597964
  train_average_precision_weighted_oob:
  - 0.7545418570060544
  - 0.745505565378558
  - 0.7255361323503864
  - 0.7406142759856915
  - 0.7110122537971433
  train_f1_macro:
  - 0.8911845730027549
  - 0.8850454227812717
  - 0.890183615819209
  - 0.8929078014184397
  - 0.886638237384506
  train_f1_macro_oob:
  - 0.809228650137741
  - 0.815164220824598
  - 0.8082627118644067
  - 0.8088652482269504
  - 0.8045486851457001
  train_f1_micro:
  - 0.8911845730027548
  - 0.8850454227812719
  - 0.890183615819209
  - 0.8929078014184397
  - 0.8866382373845061
  train_f1_micro_oob:
  - 0.809228650137741
  - 0.8151642208245982
  - 0.8082627118644068
  - 0.8088652482269504
  - 0.8045486851457001
  train_f1_samples:
  - 0.8911845730027549
  - 0.8850454227812717
  - 0.8901836158192091
  - 0.8929078014184397
  - 0.8866382373845061
  train_f1_samples_oob:
  - 0.809228650137741
  - 0.8151642208245983
  - 0.8082627118644068
  - 0.8088652482269503
  - 0.8045486851457001
  train_f1_weighted:
  - 0.886944658777157
  - 0.8804203283312274
  - 0.8846749818265294
  - 0.888740435126772
  - 0.8818391880288281
  train_f1_weighted_oob:
  - 0.8060477460978535
  - 0.8115218800724998
  - 0.8048049699659485
  - 0.8062078725802969
  - 0.8024317648988413
  train_jaccard_macro:
  - 0.8061836996408447
  - 0.7970971188253383
  - 0.8051018692150936
  - 0.8093535900570578
  - 0.7984467092898854
  train_jaccard_macro_oob:
  - 0.6815771496236466
  - 0.6904634132264703
  - 0.6809530939231712
  - 0.6817646934189256
  - 0.6750388163903623
  train_jaccard_micro:
  - 0.8037267080745342
  - 0.7937950485741146
  - 0.8020999045497932
  - 0.8065342729019859
  - 0.7963613150335141
  train_jaccard_micro_oob:
  - 0.6795835743204164
  - 0.6879976408139192
  - 0.6782222222222222
  - 0.6790711521286097
  - 0.6730083234244947
  train_jaccard_samples:
  - 0.8249704840613931
  - 0.8161824897673955
  - 0.8249798224374496
  - 0.8280851063829786
  - 0.8193928317595695
  train_jaccard_samples_oob:
  - 0.7085497835497835
  - 0.7164220824598183
  - 0.7077683615819208
  - 0.7082978723404255
  - 0.7031881409280131
  train_jaccard_weighted:
  - 0.7992663436696984
  - 0.7897754110411592
  - 0.7961227319154474
  - 0.8025075181368012
  - 0.7907589998858808
  train_jaccard_weighted_oob:
  - 0.6768267306137371
  - 0.6849844919096444
  - 0.675718955161506
  - 0.6776366013862113
  - 0.6717855987417661
  train_label_ranking_average_precision_score:
  - 0.9166322314049575
  - 0.9012112741672483
  - 0.9034486817325791
  - 0.9181560283687934
  - 0.9022624970386158
  train_label_ranking_average_precision_score_oob:
  - 0.8010158402203844
  - 0.7985790822268796
  - 0.7914253766478333
  - 0.8080496453900694
  - 0.7976190476190462
  train_matthews_corrcoef_macro:
  - 0.7436369028692543
  - 0.7304256023549818
  - 0.7465069436136088
  - 0.7507492300565187
  - 0.7377339331283791
  train_matthews_corrcoef_macro_oob:
  - 0.5159098220650505
  - 0.5351381240867786
  - 0.5158097560938388
  - 0.5153041243061176
  - 0.5052648952439548
  train_matthews_corrcoef_micro:
  - 0.7372651731047747
  - 0.7240189653512534
  - 0.7388158215040346
  - 0.7461633637738565
  - 0.7307282466686186
  train_matthews_corrcoef_micro_oob:
  - 0.5262055468033793
  - 0.5463737923933356
  - 0.5312663854728608
  - 0.5353067518453956
  - 0.5236313206656862
  train_matthews_corrcoef_samples:
  - 0.719261603012707
  - 0.7105413535383267
  - 0.7270519354016939
  - 0.734116962931184
  - 0.7156900220126076
  train_matthews_corrcoef_samples_oob:
  - 0.4973787629168614
  - 0.5243916032042537
  - 0.5090357325974172
  - 0.5183080235553934
  - 0.5021754267907331
  train_matthews_corrcoef_weighted:
  - 0.7415887681457992
  - 0.7285742727345033
  - 0.7415697227265406
  - 0.7482122685175425
  - 0.7346535215667084
  train_matthews_corrcoef_weighted_oob:
  - 0.5228033137788618
  - 0.5401680517921822
  - 0.5215966277935021
  - 0.5228469273915861
  - 0.5142938849230466
  train_ndgc:
  - 0.9413861593442858
  - 0.9297918609291607
  - 0.931655614812615
  - 0.9428608160788865
  - 0.931017909982223
  train_ndgc_oob:
  - 0.8619064110679203
  - 0.8615333979271803
  - 0.8549482452105582
  - 0.8691687044932817
  - 0.8609124778776692
  train_neg_coverage_error:
  - -2.0867768595041323
  - -2.146750524109015
  - -2.167372881355932
  - -2.1340425531914895
  - -2.185501066098081
  train_neg_coverage_error_oob:
  - -2.68801652892562
  - -2.740041928721174
  - -2.75
  - -2.7212765957446807
  - -2.76545842217484
  train_neg_hamming_loss_macro:
  - -0.10881542699724518
  - -0.11495457721872816
  - -0.10981638418079097
  - -0.10709219858156029
  - -0.11336176261549397
  train_neg_hamming_loss_macro_oob:
  - -0.19077134986225894
  - -0.18483577917540184
  - -0.19173728813559324
  - -0.19113475177304964
  - -0.19545131485429992
  train_neg_hamming_loss_micro:
  - -0.10881542699724518
  - -0.11495457721872816
  - -0.10981638418079095
  - -0.10709219858156029
  - -0.11336176261549395
  train_neg_hamming_loss_micro_oob:
  - -0.19077134986225897
  - -0.1848357791754018
  - -0.1917372881355932
  - -0.19113475177304964
  - -0.19545131485429992
  train_neg_hamming_loss_samples:
  - -0.10881542699724517
  - -0.11495457721872815
  - -0.10981638418079097
  - -0.10709219858156027
  - -0.11336176261549395
  train_neg_hamming_loss_samples_oob:
  - -0.19077134986225894
  - -0.1848357791754018
  - -0.1917372881355932
  - -0.19113475177304967
  - -0.1954513148542999
  train_neg_hamming_loss_weighted:
  - -0.11305534122284301
  - -0.11957967166877256
  - -0.11532501817347054
  - -0.11125956487322795
  - -0.11816081197117194
  train_neg_hamming_loss_weighted_oob:
  - -0.19395225390214654
  - -0.18847811992750022
  - -0.19519503003405134
  - -0.19379212741970303
  - -0.1975682351011587
  train_neg_label_ranking_loss:
  - -0.04795110192837465
  - -0.05707547169811321
  - -0.057756591337099816
  - -0.047068557919621744
  - -0.05841625207296848
  train_neg_label_ranking_loss_oob:
  - -0.1547520661157025
  - -0.15822851153039832
  - -0.16311205273069682
  - -0.14868794326241133
  - -0.15899076048329783
  train_precision_macro:
  - 0.8911845730027549
  - 0.8850454227812717
  - 0.890183615819209
  - 0.8929078014184397
  - 0.886638237384506
  train_precision_macro_oob:
  - 0.809228650137741
  - 0.815164220824598
  - 0.8082627118644067
  - 0.8088652482269504
  - 0.8045486851457001
  train_precision_micro:
  - 0.8911845730027548
  - 0.8850454227812719
  - 0.890183615819209
  - 0.8929078014184397
  - 0.8866382373845061
  train_precision_micro_oob:
  - 0.809228650137741
  - 0.8151642208245982
  - 0.8082627118644068
  - 0.8088652482269504
  - 0.8045486851457001
  train_precision_samples:
  - 0.8911845730027549
  - 0.8850454227812717
  - 0.8901836158192091
  - 0.8929078014184397
  - 0.8866382373845061
  train_precision_samples_oob:
  - 0.809228650137741
  - 0.8151642208245983
  - 0.8082627118644068
  - 0.8088652482269503
  - 0.8045486851457001
  train_precision_weighted:
  - 0.886944658777157
  - 0.8804203283312274
  - 0.8846749818265294
  - 0.888740435126772
  - 0.8818391880288281
  train_precision_weighted_oob:
  - 0.8060477460978535
  - 0.8115218800724998
  - 0.8048049699659485
  - 0.8062078725802969
  - 0.8024317648988413
  train_recall_macro:
  - 0.8911845730027549
  - 0.8850454227812717
  - 0.890183615819209
  - 0.8929078014184397
  - 0.886638237384506
  train_recall_macro_oob:
  - 0.809228650137741
  - 0.815164220824598
  - 0.8082627118644067
  - 0.8088652482269504
  - 0.8045486851457001
  train_recall_micro:
  - 0.8911845730027548
  - 0.8850454227812719
  - 0.890183615819209
  - 0.8929078014184397
  - 0.8866382373845061
  train_recall_micro_oob:
  - 0.809228650137741
  - 0.8151642208245982
  - 0.8082627118644068
  - 0.8088652482269504
  - 0.8045486851457001
  train_recall_samples:
  - 0.8911845730027549
  - 0.8850454227812717
  - 0.8901836158192091
  - 0.8929078014184397
  - 0.8866382373845061
  train_recall_samples_oob:
  - 0.809228650137741
  - 0.8151642208245983
  - 0.8082627118644068
  - 0.8088652482269503
  - 0.8045486851457001
  train_recall_weighted:
  - 0.886944658777157
  - 0.8804203283312274
  - 0.8846749818265294
  - 0.888740435126772
  - 0.8818391880288281
  train_recall_weighted_oob:
  - 0.8060477460978535
  - 0.8115218800724998
  - 0.8048049699659485
  - 0.8062078725802969
  - 0.8024317648988413
  train_roc_auc_macro:
  - 0.9711881022349949
  - 0.9666146906912934
  - 0.9632525072666743
  - 0.97000066471547
  - 0.9640323648199876
  train_roc_auc_macro_oob:
  - 0.8671516629660702
  - 0.8582567151236605
  - 0.8545782786014214
  - 0.8581803020318145
  - 0.8511058257561035
  train_roc_auc_micro:
  - 0.9617815763104054
  - 0.9566028230412809
  - 0.9566181946413203
  - 0.9611774607175789
  - 0.956464961432959
  train_roc_auc_micro_oob:
  - 0.8712976634744477
  - 0.8684376170936108
  - 0.867456309057881
  - 0.8690471260741026
  - 0.8627013340210536
  train_roc_auc_samples:
  - 0.9520488980716254
  - 0.9429245283018868
  - 0.9422434086629001
  - 0.9529314420803782
  - 0.9415837479270315
  train_roc_auc_samples_oob:
  - 0.8452479338842975
  - 0.8417714884696017
  - 0.8368879472693033
  - 0.8513120567375887
  - 0.8410092395167021
  train_roc_auc_weighted:
  - 0.9651185618206041
  - 0.9592267777090885
  - 0.9541635174904631
  - 0.9634635656828883
  - 0.9552723872561187
  train_roc_auc_weighted_oob:
  - 0.8653463244081752
  - 0.8568076308154944
  - 0.8510962680573172
  - 0.8564922700070696
  - 0.8486479832638346
start: 2023-12-22 02:11:06.774619
wrapper: null
