active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz878AzczMzMz8PwAzMzMzM/O/AJqZmZmZ6T8AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 18:31:28.308580
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 7
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__7
  params: {}
hash: 651e006657b5b3416dc4199fce87997aa2c22fdd320f136c91ce8876e6117722
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/651e006_20231221T183032522276_embedding__7_GrampositivePseAAC.yml
results:
  fit_time:
  - 34.94963240623474
  - 36.05583047866821
  - 37.10425806045532
  - 37.4237117767334
  - 37.32259559631348
  score_time:
  - 4.938625812530518
  - 4.962611675262451
  - 5.6627256870269775
  - 5.005751609802246
  - 5.523825407028198
  test_average_precision_macro:
  - 0.41518748373324765
  - 0.4227987450948339
  - 0.40920537523420863
  - 0.4108872266042747
  - 0.4298417149221821
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5101158555596383
  - 0.5722005633542071
  - 0.4974743623330821
  - 0.5386262796963401
  - 0.49925865007992076
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7412698412698412
  - 0.7197712418300652
  - 0.7142857142857143
  - 0.7297734627831713
  - 0.7123397435897435
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5119275083067016
  - 0.5574093687481219
  - 0.48903281720831326
  - 0.5300586312758813
  - 0.508799151196163
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7738095238095238
  - 0.7794117647058824
  - 0.75
  - 0.7742718446601943
  - 0.7692307692307692
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7738095238095238
  - 0.7794117647058824
  - 0.75
  - 0.7742718446601942
  - 0.7692307692307693
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7738095238095238
  - 0.7794117647058824
  - 0.75
  - 0.7742718446601942
  - 0.7692307692307693
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7100226757369615
  - 0.7137826004188083
  - 0.6739229024943312
  - 0.7130836800739714
  - 0.7002747252747252
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6489327249349871
  - 0.6550466565065105
  - 0.6214118962301218
  - 0.6476631502259423
  - 0.6430615950313334
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6310679611650486
  - 0.6385542168674698
  - 0.6
  - 0.6316831683168317
  - 0.625
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6596825396825395
  - 0.6666666666666663
  - 0.6253968253968252
  - 0.6621359223300965
  - 0.6576923076923075
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5581152541062055
  - 0.5590262759705039
  - 0.5164922847419972
  - 0.5592897092338014
  - 0.5430973900452476
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.741269841269841
  - 0.7197712418300652
  - 0.7142857142857144
  - 0.7297734627831713
  - 0.7123397435897437
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.137737166548353
  - 0.14741645489666255
  - 0.06754262807876796
  - 0.14724725558555715
  - 0.12516169972644953
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2872758285626165
  - 0.3150202898662836
  - 0.1873171623163388
  - 0.30844372068112724
  - 0.28552057819230925
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.20317460317460317
  - 0.22134657126656496
  - 0.12698412698412698
  - 0.2248029178483423
  - 0.21474358974358976
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.19063253844564054
  - 0.2152765895823789
  - 0.0948610573968566
  - 0.20825088826661764
  - 0.1825361041092507
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8074431294572264
  - 0.7918683610204269
  - 0.7869226650014425
  - 0.7991413502453709
  - 0.7862555079238803
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.6571428571428573
  - -1.7254901960784315
  - -1.7619047619047619
  - -1.7475728155339805
  - -1.75
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.22619047619047622
  - -0.22058823529411764
  - -0.24999999999999997
  - -0.2257281553398058
  - -0.23076923076923078
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2261904761904762
  - -0.22058823529411764
  - -0.25
  - -0.22572815533980584
  - -0.23076923076923078
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2261904761904762
  - -0.22058823529411764
  - -0.25
  - -0.22572815533980584
  - -0.23076923076923078
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2899773242630385
  - -0.28621739958119174
  - -0.32607709750566893
  - -0.2869163199260286
  - -0.2997252747252747
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.21904761904761905
  - -0.23774509803921567
  - -0.25396825396825395
  - -0.2411003236245955
  - -0.2459935897435897
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7738095238095238
  - 0.7794117647058824
  - 0.75
  - 0.7742718446601943
  - 0.7692307692307692
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7738095238095238
  - 0.7794117647058824
  - 0.75
  - 0.7742718446601942
  - 0.7692307692307693
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7738095238095238
  - 0.7794117647058824
  - 0.75
  - 0.7742718446601942
  - 0.7692307692307693
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7100226757369615
  - 0.7137826004188083
  - 0.6739229024943312
  - 0.7130836800739714
  - 0.7002747252747252
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7738095238095238
  - 0.7794117647058824
  - 0.75
  - 0.7742718446601943
  - 0.7692307692307692
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7738095238095238
  - 0.7794117647058824
  - 0.75
  - 0.7742718446601942
  - 0.7692307692307693
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7738095238095238
  - 0.7794117647058824
  - 0.75
  - 0.7742718446601942
  - 0.7692307692307693
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7100226757369615
  - 0.7137826004188083
  - 0.6739229024943312
  - 0.7130836800739714
  - 0.7002747252747252
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7060825787360343
  - 0.6904630180149212
  - 0.7038307163104822
  - 0.6131936397296004
  - 0.675777590162355
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7746334089191232
  - 0.7900047747891135
  - 0.7704610733182161
  - 0.7712114161625563
  - 0.7747971214209156
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7809523809523808
  - 0.7622549019607843
  - 0.7460317460317462
  - 0.7588996763754045
  - 0.7540064102564101
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6926820654004175
  - 0.6989089595600161
  - 0.6756516634278696
  - 0.6812782059461377
  - 0.6729764297770214
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9995885812936723
  - 0.9998331358954048
  - 0.9996820497344769
  - 0.9997483056535345
  - 0.9990511654833644
  train_average_precision_macro_oob:
  - 0.5933173683672641
  - 0.6200247008522768
  - 0.5664829338940145
  - 0.5920514384446507
  - 0.5837220201448008
  train_average_precision_micro:
  - 0.9804259437229764
  - 0.9815736775171015
  - 0.9792199816458804
  - 0.9815646473300668
  - 0.9790600482114592
  train_average_precision_micro_oob:
  - 0.7111324013320127
  - 0.7531334939340404
  - 0.6795831251653186
  - 0.7135972853400809
  - 0.6927956369513794
  train_average_precision_samples:
  - 0.976046698872786
  - 0.976219024780176
  - 0.9750402576489533
  - 0.9753605769230769
  - 0.9740963855421687
  train_average_precision_samples_oob:
  - 0.7741545893719807
  - 0.8055555555555556
  - 0.7652979066022545
  - 0.7944711538461539
  - 0.7773092369477911
  train_average_precision_weighted:
  - 0.9995369401342754
  - 0.9997775145272063
  - 0.9996122884835967
  - 0.9997044605406464
  - 0.9989348080907149
  train_average_precision_weighted_oob:
  - 0.7421687258488362
  - 0.7791955968367033
  - 0.7189573940738694
  - 0.7487121636667756
  - 0.7395636247079097
  train_f1_macro:
  - 0.9444444444444444
  - 0.946043165467626
  - 0.9365942028985507
  - 0.9375
  - 0.9325301204819277
  train_f1_macro_oob:
  - 0.802536231884058
  - 0.8117505995203838
  - 0.8067632850241546
  - 0.8016826923076923
  - 0.7993975903614459
  train_f1_micro:
  - 0.9444444444444444
  - 0.9460431654676259
  - 0.9365942028985508
  - 0.9375
  - 0.9325301204819277
  train_f1_micro_oob:
  - 0.802536231884058
  - 0.8117505995203836
  - 0.8067632850241546
  - 0.8016826923076923
  - 0.7993975903614458
  train_f1_samples:
  - 0.9444444444444444
  - 0.9460431654676259
  - 0.9365942028985508
  - 0.9375
  - 0.9325301204819277
  train_f1_samples_oob:
  - 0.802536231884058
  - 0.8117505995203836
  - 0.8067632850241546
  - 0.8016826923076923
  - 0.7993975903614458
  train_f1_weighted:
  - 0.9476400157178189
  - 0.9479387918236839
  - 0.9369264729676627
  - 0.9368731597350018
  - 0.9316423589093216
  train_f1_weighted_oob:
  - 0.7525541455747407
  - 0.7689277149708804
  - 0.7595809352102258
  - 0.7523118329039381
  - 0.7497780596068484
  train_jaccard_macro:
  - 0.8977528052745037
  - 0.8994621874120494
  - 0.8836715579811509
  - 0.8846200537751414
  - 0.8760626543465557
  train_jaccard_macro_oob:
  - 0.6818647036814457
  - 0.6933937075743275
  - 0.6871603530764212
  - 0.6807970178225328
  - 0.677520628761527
  train_jaccard_micro:
  - 0.8947368421052632
  - 0.8976109215017065
  - 0.8807495741056218
  - 0.8823529411764706
  - 0.873589164785553
  train_jaccard_micro_oob:
  - 0.670196671709531
  - 0.6831483350151363
  - 0.6761133603238867
  - 0.6690070210631895
  - 0.6658304064224787
  train_jaccard_samples:
  - 0.9114331723027373
  - 0.9136690647482014
  - 0.8988727858293074
  - 0.9003205128205127
  - 0.8920481927710842
  train_jaccard_samples_oob:
  - 0.6882447665056358
  - 0.702318145483613
  - 0.6953301127214168
  - 0.6884615384615385
  - 0.6848192771084336
  train_jaccard_weighted:
  - 0.9035962279584697
  - 0.9031119267741077
  - 0.8842273553548419
  - 0.8835277296821604
  - 0.8742919195167492
  train_jaccard_weighted_oob:
  - 0.6054203432242062
  - 0.626542933825649
  - 0.6142403526407816
  - 0.6050843792550402
  - 0.6019662977719547
  train_label_ranking_average_precision_score:
  - 0.9760466988727856
  - 0.9762190247801756
  - 0.9750402576489531
  - 0.9753605769230766
  - 0.9740963855421685
  train_label_ranking_average_precision_score_oob:
  - 0.7741545893719806
  - 0.8055555555555555
  - 0.7652979066022542
  - 0.794471153846154
  - 0.7773092369477909
  train_matthews_corrcoef_macro:
  - 0.6240528158986285
  - 0.6347290296902084
  - 0.6068451005464561
  - 0.6112088068638158
  - 0.5986115606489801
  train_matthews_corrcoef_macro_oob:
  - 0.21715331389933937
  - 0.23754710168375634
  - 0.22725120107097624
  - 0.20767024601405779
  - 0.20628449408440655
  train_matthews_corrcoef_micro:
  - 0.8520305384324041
  - 0.8560744996827361
  - 0.8308188546787054
  - 0.8326621433121553
  - 0.8194529784576359
  train_matthews_corrcoef_micro_oob:
  - 0.4045109621229222
  - 0.44111752338936144
  - 0.4214767224292708
  - 0.39561824741250784
  - 0.3872333623442711
  train_matthews_corrcoef_samples:
  - 0.7843769343177991
  - 0.7883262609294217
  - 0.7529759681342243
  - 0.7537917073778597
  - 0.7342940983314912
  train_matthews_corrcoef_samples_oob:
  - 0.23606775557383786
  - 0.2675715833793516
  - 0.2539968612038146
  - 0.2371794871794872
  - 0.23067964050016596
  train_matthews_corrcoef_weighted:
  - 0.8332288228463333
  - 0.8374592383339634
  - 0.8097194763961865
  - 0.8121169657627503
  - 0.796092084032502
  train_matthews_corrcoef_weighted_oob:
  - 0.3194695150226722
  - 0.3509098879124206
  - 0.3339743245161952
  - 0.3089714776795685
  - 0.30431455816113073
  train_ndgc:
  - 0.982041996254187
  - 0.9821896968333698
  - 0.9813179701563561
  - 0.9814526743844674
  - 0.9806870053936906
  train_ndgc_oob:
  - 0.8322723528933443
  - 0.8553802816881169
  - 0.825721388393769
  - 0.8471501219228318
  - 0.8344300084845495
  train_neg_coverage_error:
  - -1.0942028985507246
  - -1.0887290167865706
  - -1.0942028985507246
  - -1.0865384615384615
  - -1.0987951807228915
  train_neg_coverage_error_oob:
  - -1.5797101449275361
  - -1.5203836930455636
  - -1.608695652173913
  - -1.5384615384615385
  - -1.5855421686746989
  train_neg_hamming_loss_macro:
  - -0.05555555555555556
  - -0.0539568345323741
  - -0.06340579710144928
  - -0.0625
  - -0.06746987951807229
  train_neg_hamming_loss_macro_oob:
  - -0.19746376811594202
  - -0.18824940047961627
  - -0.19323671497584544
  - -0.1983173076923077
  - -0.2006024096385542
  train_neg_hamming_loss_micro:
  - -0.05555555555555555
  - -0.0539568345323741
  - -0.06340579710144928
  - -0.0625
  - -0.06746987951807229
  train_neg_hamming_loss_micro_oob:
  - -0.19746376811594202
  - -0.1882494004796163
  - -0.1932367149758454
  - -0.19831730769230768
  - -0.20060240963855422
  train_neg_hamming_loss_samples:
  - -0.05555555555555555
  - -0.0539568345323741
  - -0.06340579710144928
  - -0.0625
  - -0.06746987951807229
  train_neg_hamming_loss_samples_oob:
  - -0.19746376811594202
  - -0.1882494004796163
  - -0.1932367149758454
  - -0.19831730769230768
  - -0.20060240963855422
  train_neg_hamming_loss_weighted:
  - -0.05235998428218108
  - -0.05206120817631609
  - -0.06307352703233711
  - -0.06312684026499815
  - -0.0683576410906785
  train_neg_hamming_loss_weighted_oob:
  - -0.24744585442525946
  - -0.23107228502911953
  - -0.24041906478977415
  - -0.2476881670960618
  - -0.25022194039315154
  train_neg_label_ranking_loss:
  - -0.02797906602254428
  - -0.02697841726618705
  - -0.02797906602254428
  - -0.02724358974358974
  - -0.030120481927710843
  train_neg_label_ranking_loss_oob:
  - -0.1898148148148148
  - -0.1704636290967226
  - -0.1988727858293076
  - -0.1774839743589744
  - -0.19216867469879517
  train_precision_macro:
  - 0.9444444444444444
  - 0.946043165467626
  - 0.9365942028985507
  - 0.9375
  - 0.9325301204819277
  train_precision_macro_oob:
  - 0.802536231884058
  - 0.8117505995203838
  - 0.8067632850241546
  - 0.8016826923076923
  - 0.7993975903614459
  train_precision_micro:
  - 0.9444444444444444
  - 0.9460431654676259
  - 0.9365942028985508
  - 0.9375
  - 0.9325301204819277
  train_precision_micro_oob:
  - 0.802536231884058
  - 0.8117505995203836
  - 0.8067632850241546
  - 0.8016826923076923
  - 0.7993975903614458
  train_precision_samples:
  - 0.9444444444444444
  - 0.9460431654676259
  - 0.9365942028985508
  - 0.9375
  - 0.9325301204819277
  train_precision_samples_oob:
  - 0.802536231884058
  - 0.8117505995203836
  - 0.8067632850241546
  - 0.8016826923076923
  - 0.7993975903614458
  train_precision_weighted:
  - 0.9476400157178189
  - 0.9479387918236839
  - 0.9369264729676627
  - 0.9368731597350018
  - 0.9316423589093216
  train_precision_weighted_oob:
  - 0.7525541455747407
  - 0.7689277149708804
  - 0.7595809352102258
  - 0.7523118329039381
  - 0.7497780596068484
  train_recall_macro:
  - 0.9444444444444444
  - 0.946043165467626
  - 0.9365942028985507
  - 0.9375
  - 0.9325301204819277
  train_recall_macro_oob:
  - 0.802536231884058
  - 0.8117505995203838
  - 0.8067632850241546
  - 0.8016826923076923
  - 0.7993975903614459
  train_recall_micro:
  - 0.9444444444444444
  - 0.9460431654676259
  - 0.9365942028985508
  - 0.9375
  - 0.9325301204819277
  train_recall_micro_oob:
  - 0.802536231884058
  - 0.8117505995203836
  - 0.8067632850241546
  - 0.8016826923076923
  - 0.7993975903614458
  train_recall_samples:
  - 0.9444444444444444
  - 0.9460431654676259
  - 0.9365942028985508
  - 0.9375
  - 0.9325301204819277
  train_recall_samples_oob:
  - 0.802536231884058
  - 0.8117505995203836
  - 0.8067632850241546
  - 0.8016826923076923
  - 0.7993975903614458
  train_recall_weighted:
  - 0.9476400157178189
  - 0.9479387918236839
  - 0.9369264729676627
  - 0.9368731597350018
  - 0.9316423589093216
  train_recall_weighted_oob:
  - 0.7525541455747407
  - 0.7689277149708804
  - 0.7595809352102258
  - 0.7523118329039381
  - 0.7497780596068484
  train_roc_auc_macro:
  - 0.9998292410199503
  - 0.9999161939143888
  - 0.9998572170655776
  - 0.9998899956864341
  - 0.9995853009272847
  train_roc_auc_macro_oob:
  - 0.813132307481684
  - 0.8301524859451505
  - 0.7727212544569504
  - 0.8144724498484568
  - 0.7873135612511716
  train_roc_auc_micro:
  - 0.9851473668751112
  - 0.9872958638583639
  - 0.9837734113518486
  - 0.9867883447126499
  - 0.9848523372550833
  train_roc_auc_micro_oob:
  - 0.8620865572655385
  - 0.8772626678876679
  - 0.8459044144360018
  - 0.8636421236953465
  - 0.8556464723512779
  train_roc_auc_samples:
  - 0.9720209339774558
  - 0.9730215827338129
  - 0.9720209339774558
  - 0.9727564102564104
  - 0.9698795180722891
  train_roc_auc_samples_oob:
  - 0.8101851851851851
  - 0.8295363709032773
  - 0.8011272141706923
  - 0.8225160256410258
  - 0.8078313253012048
  train_roc_auc_weighted:
  - 0.9998013720880294
  - 0.9998882585525185
  - 0.999820783519271
  - 0.9998662681435618
  - 0.9995241670215863
  train_roc_auc_weighted_oob:
  - 0.8470378201373965
  - 0.8730747798277817
  - 0.8177104612816142
  - 0.8497767786297594
  - 0.8376663104694275
start: 2023-12-21 18:30:32.522276
wrapper: null
