active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ6T8AmJmZmZnJvwCYmZmZmcm/AJqZmZmZ6T8AMzMzMzPzvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 19:33:52.669375
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 5
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__5
  params: {}
hash: e18602272cad8955b3c0270ccb3e4e633edbd67441788a4b5b7e0a7a65247fe1
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/e186022_20231221T193241101403_embedding_proba_weak__5_GrampositivePseAAC.yml
results:
  fit_time:
  - 52.274648666381836
  - 52.81835317611694
  - 52.688711404800415
  - 53.73368954658508
  - 55.560938119888306
  score_time:
  - 4.439509153366089
  - 4.4832892417907715
  - 4.753274202346802
  - 4.839068174362183
  - 4.89781641960144
  test_average_precision_macro:
  - 0.4192344949752407
  - 0.37378214571140855
  - 0.4410385792869363
  - 0.372726422510982
  - 0.38866507969514025
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5374960036209482
  - 0.46229059417716745
  - 0.5838240974214409
  - 0.4831598939805785
  - 0.4936593813931846
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7127831715210355
  - 0.7091346153846154
  - 0.7508012820512822
  - 0.7022653721682848
  - 0.7079365079365079
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5244748745637554
  - 0.4617067269386808
  - 0.5647651548741904
  - 0.47674717224517443
  - 0.47676910896958125
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7597087378640778
  - 0.7596153846153846
  - 0.8004807692307693
  - 0.7330097087378641
  - 0.7452380952380953
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7597087378640777
  - 0.7596153846153846
  - 0.8004807692307693
  - 0.7330097087378641
  - 0.7452380952380953
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7597087378640777
  - 0.7596153846153846
  - 0.8004807692307693
  - 0.7330097087378641
  - 0.7452380952380953
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6894137415982077
  - 0.6889792899408285
  - 0.7488095238095238
  - 0.6510455563853623
  - 0.6743935309973045
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6314450996592766
  - 0.6319555665356626
  - 0.6836091410559496
  - 0.6022531165688345
  - 0.61368029206655
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6125244618395304
  - 0.6124031007751938
  - 0.6673346693386774
  - 0.578544061302682
  - 0.5939278937381404
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.671197411003236
  - 0.6666666666666665
  - 0.7217948717948718
  - 0.634396671289875
  - 0.6533333333333331
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5302199532496299
  - 0.5331059693920049
  - 0.6081203797515854
  - 0.48871702541135126
  - 0.514053893126015
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7127831715210355
  - 0.7091346153846154
  - 0.7508012820512818
  - 0.7022653721682848
  - 0.7079365079365079
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.16349204152731334
  - 0.15763867703160425
  - 0.2523878805556529
  - 0.09517371177195201
  - 0.14836505525830515
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.33711467950099916
  - 0.31806692856392527
  - 0.4412902217864855
  - 0.25147269507881803
  - 0.3016513229093091
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.32275744597918726
  - 0.29487179487179493
  - 0.4126027269473362
  - 0.23711310418262502
  - 0.29121285970656796
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.23087516270111272
  - 0.2112415477435732
  - 0.3432847665405227
  - 0.13342703058236766
  - 0.20159278490515248
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7865973728257574
  - 0.7832506035982788
  - 0.8141585024306947
  - 0.7784000795351852
  - 0.7828985555808342
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.766990291262136
  - -1.7596153846153846
  - -1.6730769230769231
  - -1.766990291262136
  - -1.7904761904761906
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2402912621359223
  - -0.24038461538461536
  - -0.19951923076923078
  - -0.2669902912621359
  - -0.25476190476190474
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.24029126213592233
  - -0.2403846153846154
  - -0.19951923076923078
  - -0.2669902912621359
  - -0.25476190476190474
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.24029126213592233
  - -0.2403846153846154
  - -0.19951923076923078
  - -0.2669902912621359
  - -0.25476190476190474
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3105862584017923
  - -0.3110207100591716
  - -0.2511904761904762
  - -0.3489544436146378
  - -0.32560646900269546
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2508090614886731
  - -0.2532051282051282
  - -0.22115384615384615
  - -0.2540453074433657
  - -0.25873015873015875
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7597087378640778
  - 0.7596153846153846
  - 0.8004807692307693
  - 0.7330097087378641
  - 0.7452380952380953
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7597087378640777
  - 0.7596153846153846
  - 0.8004807692307693
  - 0.7330097087378641
  - 0.7452380952380953
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7597087378640777
  - 0.7596153846153846
  - 0.8004807692307693
  - 0.7330097087378641
  - 0.7452380952380953
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6894137415982077
  - 0.6889792899408285
  - 0.7488095238095238
  - 0.6510455563853623
  - 0.6743935309973045
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7597087378640778
  - 0.7596153846153846
  - 0.8004807692307693
  - 0.7330097087378641
  - 0.7452380952380953
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7597087378640777
  - 0.7596153846153846
  - 0.8004807692307693
  - 0.7330097087378641
  - 0.7452380952380953
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7597087378640777
  - 0.7596153846153846
  - 0.8004807692307693
  - 0.7330097087378641
  - 0.7452380952380953
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6894137415982077
  - 0.6889792899408285
  - 0.7488095238095238
  - 0.6510455563853623
  - 0.6743935309973045
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7089045150120642
  - 0.6602955320847851
  - 0.6463943333395124
  - 0.638357664410136
  - 0.6483283014525942
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7826236263736264
  - 0.7575505424063118
  - 0.7992956668197825
  - 0.7506555944055944
  - 0.757090493931018
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.749190938511327
  - 0.7467948717948718
  - 0.7788461538461539
  - 0.7459546925566344
  - 0.7412698412698412
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6848749376759977
  - 0.6483459249084249
  - 0.7174299733224178
  - 0.6326529495825373
  - 0.6572442133027318
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9540403620926133
  - 0.9646050451710741
  - 0.9522829112418866
  - 0.9590585609542901
  - 0.9596800060458284
  train_average_precision_macro_oob:
  - 0.8285920583906309
  - 0.8602521128012066
  - 0.8858691317492318
  - 0.8852057163938295
  - 0.8693588876333378
  train_average_precision_micro:
  - 0.9167537399196319
  - 0.9329662467534632
  - 0.8991451287167768
  - 0.9180646896291691
  - 0.9155416418839195
  train_average_precision_micro_oob:
  - 0.8766496343945692
  - 0.9016936783827607
  - 0.8772135300296624
  - 0.8849921851878556
  - 0.8784717711678179
  train_average_precision_samples:
  - 0.9573317307692307
  - 0.963855421686747
  - 0.9626506024096385
  - 0.9587339743589745
  - 0.9579307568438005
  train_average_precision_samples_oob:
  - 0.9463141025641024
  - 0.9548192771084337
  - 0.9560240963855422
  - 0.9493189102564104
  - 0.9488727858293077
  train_average_precision_weighted:
  - 0.941748439176032
  - 0.9533762799967291
  - 0.9367406038168736
  - 0.9453662903155281
  - 0.9469064892533638
  train_average_precision_weighted_oob:
  - 0.9092953598341897
  - 0.9318374232272669
  - 0.923191547980008
  - 0.9243209410268429
  - 0.9237729756433852
  train_f1_macro:
  - 0.966346153846154
  - 0.9704819277108434
  - 0.972289156626506
  - 0.967548076923077
  - 0.9679951690821256
  train_f1_macro_oob:
  - 0.9591346153846154
  - 0.9590361445783132
  - 0.9602409638554217
  - 0.9573317307692308
  - 0.9535024154589372
  train_f1_micro:
  - 0.9663461538461539
  - 0.9704819277108434
  - 0.9722891566265061
  - 0.9675480769230769
  - 0.9679951690821256
  train_f1_micro_oob:
  - 0.9591346153846154
  - 0.9590361445783132
  - 0.9602409638554217
  - 0.9573317307692307
  - 0.9535024154589372
  train_f1_samples:
  - 0.9663461538461539
  - 0.9704819277108434
  - 0.9722891566265061
  - 0.9675480769230769
  - 0.9679951690821256
  train_f1_samples_oob:
  - 0.9591346153846154
  - 0.9590361445783132
  - 0.9602409638554217
  - 0.9573317307692307
  - 0.9535024154589372
  train_f1_weighted:
  - 0.9675394712685882
  - 0.9708485493285792
  - 0.9733786821928864
  - 0.9676025794015054
  - 0.968656958491178
  train_f1_weighted_oob:
  - 0.9580330916100606
  - 0.9548782241136383
  - 0.9564362714013951
  - 0.9529729667706995
  - 0.9482558880431886
  train_jaccard_macro:
  - 0.9360966859143446
  - 0.9433747323478132
  - 0.9472841118098276
  - 0.9382661738509256
  - 0.9390028213433574
  train_jaccard_macro_oob:
  - 0.9221832422304703
  - 0.9217415703109364
  - 0.9242394191867689
  - 0.9187950314400244
  - 0.9116509628927061
  train_jaccard_micro:
  - 0.9348837209302325
  - 0.9426565242832066
  - 0.9460726846424384
  - 0.9371362048894063
  - 0.9379754242246928
  train_jaccard_micro_oob:
  - 0.9214780600461894
  - 0.9212962962962963
  - 0.9235225955967555
  - 0.9181556195965418
  - 0.911136757068667
  train_jaccard_samples:
  - 0.9519230769230769
  - 0.9579116465863453
  - 0.9598393574297189
  - 0.9538461538461539
  - 0.95426731078905
  train_jaccard_samples_oob:
  - 0.9426282051282051
  - 0.9434538152610441
  - 0.9447389558232933
  - 0.9416666666666667
  - 0.9365539452495975
  train_jaccard_weighted:
  - 0.9387873713893484
  - 0.9442493621283534
  - 0.9496965898674173
  - 0.9386925446659978
  - 0.9406188728520024
  train_jaccard_weighted_oob:
  - 0.9203954324101629
  - 0.9141216942391115
  - 0.9173261397792304
  - 0.9108690627561472
  - 0.9021162531647318
  train_label_ranking_average_precision_score:
  - 0.9573317307692307
  - 0.963855421686747
  - 0.9626506024096385
  - 0.9587339743589743
  - 0.9579307568438002
  train_label_ranking_average_precision_score_oob:
  - 0.9463141025641024
  - 0.9548192771084336
  - 0.956024096385542
  - 0.94931891025641
  - 0.9488727858293073
  train_matthews_corrcoef_macro:
  - 0.6972089887269656
  - 0.7053804433372199
  - 0.7103652121312902
  - 0.7008091796032704
  - 0.6995317646235146
  train_matthews_corrcoef_macro_oob:
  - 0.6800827363074794
  - 0.6794666785219318
  - 0.683014071083344
  - 0.6781331889667497
  - 0.6665809869660132
  train_matthews_corrcoef_micro:
  - 0.911688690231777
  - 0.9219808518662984
  - 0.9273187737674565
  - 0.9146651464809075
  - 0.9159392835266849
  train_matthews_corrcoef_micro_oob:
  - 0.8915451783266718
  - 0.890364780912767
  - 0.8938824503201402
  - 0.8860403413341902
  - 0.875649572831825
  train_matthews_corrcoef_samples:
  - 0.9206001324870262
  - 0.9271073986393288
  - 0.9364730645331796
  - 0.9226321023466914
  - 0.9230634973660795
  train_matthews_corrcoef_samples_oob:
  - 0.8932568987907265
  - 0.8855133346306326
  - 0.8918813693537456
  - 0.8839712759797329
  - 0.8723543491265198
  train_matthews_corrcoef_weighted:
  - 0.8985935610851082
  - 0.9079295026488174
  - 0.9144283307920515
  - 0.8995793962852638
  - 0.9027893469884092
  train_matthews_corrcoef_weighted_oob:
  - 0.8768846228026203
  - 0.8728534004961028
  - 0.8770922774564361
  - 0.8680358530778653
  - 0.8577878050564408
  train_ndgc:
  - 0.968467038893036
  - 0.9732444734037978
  - 0.9723551475087895
  - 0.9694453022194482
  - 0.9688899243293722
  train_ndgc_oob:
  - 0.9601318096679462
  - 0.966457791073554
  - 0.9676666920762482
  - 0.9624816821756494
  - 0.9620217970455918
  train_neg_coverage_error:
  - -1.0961538461538463
  - -1.0891566265060242
  - -1.0891566265060242
  - -1.0985576923076923
  - -1.0966183574879227
  train_neg_coverage_error_oob:
  - -1.1658653846153846
  - -1.1397590361445784
  - -1.1228915662650603
  - -1.1466346153846154
  - -1.142512077294686
  train_neg_hamming_loss_macro:
  - -0.03365384615384615
  - -0.02951807228915663
  - -0.027710843373493974
  - -0.03245192307692307
  - -0.0320048309178744
  train_neg_hamming_loss_macro_oob:
  - -0.040865384615384616
  - -0.04096385542168675
  - -0.03975903614457831
  - -0.04266826923076923
  - -0.0464975845410628
  train_neg_hamming_loss_micro:
  - -0.03365384615384615
  - -0.029518072289156625
  - -0.027710843373493974
  - -0.03245192307692308
  - -0.0320048309178744
  train_neg_hamming_loss_micro_oob:
  - -0.040865384615384616
  - -0.04096385542168675
  - -0.03975903614457831
  - -0.04266826923076923
  - -0.0464975845410628
  train_neg_hamming_loss_samples:
  - -0.03365384615384615
  - -0.029518072289156625
  - -0.027710843373493974
  - -0.03245192307692308
  - -0.0320048309178744
  train_neg_hamming_loss_samples_oob:
  - -0.040865384615384616
  - -0.04096385542168675
  - -0.03975903614457831
  - -0.04266826923076923
  - -0.0464975845410628
  train_neg_hamming_loss_weighted:
  - -0.03246052873141179
  - -0.02915145067142076
  - -0.02662131780711362
  - -0.03239742059849458
  - -0.03134304150882193
  train_neg_hamming_loss_weighted_oob:
  - -0.04196690838993941
  - -0.04512177588636167
  - -0.043563728598604946
  - -0.047027033229300526
  - -0.05174411195681136
  train_neg_label_ranking_loss:
  - -0.029647435897435896
  - -0.02650602409638554
  - -0.027309236947791162
  - -0.030448717948717948
  - -0.02979066022544283
  train_neg_label_ranking_loss_oob:
  - -0.05228365384615385
  - -0.0429718875502008
  - -0.03775100401606426
  - -0.04587339743589743
  - -0.044887278582930755
  train_precision_macro:
  - 0.966346153846154
  - 0.9704819277108434
  - 0.972289156626506
  - 0.967548076923077
  - 0.9679951690821256
  train_precision_macro_oob:
  - 0.9591346153846154
  - 0.9590361445783132
  - 0.9602409638554217
  - 0.9573317307692308
  - 0.9535024154589372
  train_precision_micro:
  - 0.9663461538461539
  - 0.9704819277108434
  - 0.9722891566265061
  - 0.9675480769230769
  - 0.9679951690821256
  train_precision_micro_oob:
  - 0.9591346153846154
  - 0.9590361445783132
  - 0.9602409638554217
  - 0.9573317307692307
  - 0.9535024154589372
  train_precision_samples:
  - 0.9663461538461539
  - 0.9704819277108434
  - 0.9722891566265061
  - 0.9675480769230769
  - 0.9679951690821256
  train_precision_samples_oob:
  - 0.9591346153846154
  - 0.9590361445783132
  - 0.9602409638554217
  - 0.9573317307692307
  - 0.9535024154589372
  train_precision_weighted:
  - 0.9675394712685882
  - 0.9708485493285792
  - 0.9733786821928864
  - 0.9676025794015054
  - 0.968656958491178
  train_precision_weighted_oob:
  - 0.9580330916100606
  - 0.9548782241136383
  - 0.9564362714013951
  - 0.9529729667706995
  - 0.9482558880431886
  train_recall_macro:
  - 0.966346153846154
  - 0.9704819277108434
  - 0.972289156626506
  - 0.967548076923077
  - 0.9679951690821256
  train_recall_macro_oob:
  - 0.9591346153846154
  - 0.9590361445783132
  - 0.9602409638554217
  - 0.9573317307692308
  - 0.9535024154589372
  train_recall_micro:
  - 0.9663461538461539
  - 0.9704819277108434
  - 0.9722891566265061
  - 0.9675480769230769
  - 0.9679951690821256
  train_recall_micro_oob:
  - 0.9591346153846154
  - 0.9590361445783132
  - 0.9602409638554217
  - 0.9573317307692307
  - 0.9535024154589372
  train_recall_samples:
  - 0.9663461538461539
  - 0.9704819277108434
  - 0.9722891566265061
  - 0.9675480769230769
  - 0.9679951690821256
  train_recall_samples_oob:
  - 0.9591346153846154
  - 0.9590361445783132
  - 0.9602409638554217
  - 0.9573317307692307
  - 0.9535024154589372
  train_recall_weighted:
  - 0.9675394712685882
  - 0.9708485493285792
  - 0.9733786821928864
  - 0.9676025794015054
  - 0.968656958491178
  train_recall_weighted_oob:
  - 0.9580330916100606
  - 0.9548782241136383
  - 0.9564362714013951
  - 0.9529729667706995
  - 0.9482558880431886
  train_roc_auc_macro:
  - 0.984541493349607
  - 0.9881253125282833
  - 0.9849162080069499
  - 0.9863959912072997
  - 0.9858552652126809
  train_roc_auc_macro_oob:
  - 0.9649365141165436
  - 0.9760376342412989
  - 0.9595126185833676
  - 0.9710818314355645
  - 0.9747308599808695
  train_roc_auc_micro:
  - 0.9837018719268482
  - 0.9875783445100668
  - 0.9837794420174283
  - 0.9855843421418371
  - 0.98475021435636
  train_roc_auc_micro_oob:
  - 0.9590476464329873
  - 0.9675813830943172
  - 0.9713323162979913
  - 0.9685251746844179
  - 0.9664075035371218
  train_roc_auc_samples:
  - 0.970352564102564
  - 0.9734939759036144
  - 0.9726907630522087
  - 0.969551282051282
  - 0.970209339774557
  train_roc_auc_samples_oob:
  - 0.9477163461538461
  - 0.9570281124497991
  - 0.9622489959839357
  - 0.9541266025641024
  - 0.9551127214170692
  train_roc_auc_weighted:
  - 0.980007214073962
  - 0.9843403084717874
  - 0.9799995384403704
  - 0.9818256810262856
  - 0.9812916770039924
  train_roc_auc_weighted_oob:
  - 0.9715443498899281
  - 0.9794369030193564
  - 0.9738943535292035
  - 0.9753891165019762
  - 0.9764455104315523
start: 2023-12-21 19:32:41.101403
wrapper: null
