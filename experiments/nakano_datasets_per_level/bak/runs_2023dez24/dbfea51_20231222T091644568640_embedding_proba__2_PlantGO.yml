active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/kJmZmZmZ6b/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T+AmZmZmZnZP0AzMzMzM+O/QDMzMzMz47+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz478wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjvzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AM3MzMzMBEAANDMzMzPjPwAzMzMzMwvAAJiZmZmZ2b8ANDMzMzPjPw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 09:17:16.164221
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__2
  params: {}
hash: dbfea51ce18f78dd773a769a3cfc015c3aaf1b35f475a2f1d9b6b25a3800ceda
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/dbfea51_20231222T091644568640_embedding_proba__2_PlantGO.yml
results:
  fit_time:
  - 9.800278186798096
  - 9.047794580459595
  - 9.288531064987183
  - 10.43683385848999
  - 10.892431497573853
  score_time:
  - 4.172427177429199
  - 3.52629017829895
  - 4.245972156524658
  - 4.3130786418914795
  - 4.009438753128052
  test_average_precision_macro:
  - 0.7549607016174747
  - 0.782344750960966
  - 0.740736501085733
  - 0.7433011009092869
  - 0.7767305396267709
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8345789229566647
  - 0.8326395090567205
  - 0.8705217462832335
  - 0.7854392884300382
  - 0.8003233512017423
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8798133070153796
  - 0.9021794871794873
  - 0.8854572284220525
  - 0.8778121963070943
  - 0.8691475191475191
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8494069518193279
  - 0.8318383102852497
  - 0.8628093258433219
  - 0.8054368809911677
  - 0.811832270875627
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9149395509499136
  - 0.9115384615384615
  - 0.9120603015075376
  - 0.9145408163265305
  - 0.9128205128205128
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9149395509499136
  - 0.9115384615384615
  - 0.9120603015075377
  - 0.9145408163265306
  - 0.9128205128205128
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9149395509499135
  - 0.9115384615384615
  - 0.9120603015075377
  - 0.9145408163265306
  - 0.9128205128205128
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8512143015003807
  - 0.8346460556986872
  - 0.8392907935905946
  - 0.8480831584970437
  - 0.8389890810943442
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8506540582745069
  - 0.8472175653690158
  - 0.8474533880157621
  - 0.8504353409634842
  - 0.8487425285834781
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8432152805411859
  - 0.8374558303886925
  - 0.8383371824480369
  - 0.8425381903642774
  - 0.839622641509434
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.845220064909184
  - 0.8382642998027613
  - 0.8390855375779996
  - 0.8445391343350526
  - 0.8406311637080867
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7477891285354878
  - 0.7273141382011313
  - 0.7330904136135677
  - 0.7436688274092039
  - 0.7326479480982162
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8798133070153796
  - 0.9021794871794873
  - 0.8854572284220525
  - 0.8778121963070943
  - 0.8691475191475191
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.03526857897471652
  - 0.019894656361845033
  - 0.0132527920367475
  - 0.06096342928229501
  - 0.044270739792609974
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2453241247716538
  - 0.09339235487641212
  - 0.09275584650405698
  - 0.23465718449088416
  - 0.14776110884301671
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.07724917569477155
  - 0.010256410256410256
  - 0.010050251256281407
  - 0.07096474953617811
  - 0.02564102564102564
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.11433036975690093
  - 0.034268307608919676
  - 0.042759008269506085
  - 0.1171638716265952
  - 0.10138218139016368
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9122901281489069
  - 0.9278819162523917
  - 0.9149664919823829
  - 0.9095540887201671
  - 0.902274198954419
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.544041450777202
  - -1.3846153846153846
  - -1.5175879396984924
  - -1.4846938775510203
  - -1.5692307692307692
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08506044905008636
  - -0.08846153846153847
  - -0.0879396984924623
  - -0.08545918367346939
  - -0.08717948717948719
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08506044905008636
  - -0.08846153846153847
  - -0.08793969849246232
  - -0.08545918367346939
  - -0.08717948717948718
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08506044905008635
  - -0.08846153846153847
  - -0.08793969849246232
  - -0.08545918367346939
  - -0.08717948717948718
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.14878569849961937
  - -0.16535394430131273
  - -0.1607092064094055
  - -0.1519168415029563
  - -0.16101091890565575
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.03663317108912963
  - -0.02643356643356643
  - -0.039150296939241665
  - -0.03386930529787673
  - -0.04426573426573427
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9149395509499136
  - 0.9115384615384615
  - 0.9120603015075376
  - 0.9145408163265305
  - 0.9128205128205128
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9149395509499136
  - 0.9115384615384615
  - 0.9120603015075377
  - 0.9145408163265306
  - 0.9128205128205128
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9149395509499135
  - 0.9115384615384615
  - 0.9120603015075377
  - 0.9145408163265306
  - 0.9128205128205128
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8512143015003807
  - 0.8346460556986872
  - 0.8392907935905946
  - 0.8480831584970437
  - 0.8389890810943442
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9149395509499136
  - 0.9115384615384615
  - 0.9120603015075376
  - 0.9145408163265305
  - 0.9128205128205128
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9149395509499136
  - 0.9115384615384615
  - 0.9120603015075377
  - 0.9145408163265306
  - 0.9128205128205128
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9149395509499135
  - 0.9115384615384615
  - 0.9120603015075377
  - 0.9145408163265306
  - 0.9128205128205128
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8512143015003807
  - 0.8346460556986872
  - 0.8392907935905946
  - 0.8480831584970437
  - 0.8389890810943442
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9668455798485435
  - 0.9697914653012792
  - 0.9720428048696533
  - 0.9626030586897073
  - 0.964986789687419
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9714221386678074
  - 0.9780434192002767
  - 0.9774512694228635
  - 0.9678645428079348
  - 0.9721024116538949
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9633668289108703
  - 0.9735664335664336
  - 0.9608497030607582
  - 0.9661306947021232
  - 0.9557342657342658
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9728788300831216
  - 0.9684241398680651
  - 0.9790070416857332
  - 0.9599193749907511
  - 0.9643351273519947
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8634287410140171
  - 0.8936863671932844
  - 0.864747059429788
  - 0.8804909195523107
  - 0.8762937571509655
  train_average_precision_macro_oob:
  - 0.725620411807444
  - 0.7907468896166789
  - 0.7535882283044977
  - 0.7696462127684457
  - 0.7595710462758812
  train_average_precision_micro:
  - 0.9144803349538474
  - 0.918373550128327
  - 0.9045377613244259
  - 0.9139261479869352
  - 0.916619474239785
  train_average_precision_micro_oob:
  - 0.8367734353130639
  - 0.8375024301237612
  - 0.8131612337001641
  - 0.8440925569026836
  - 0.839914058264652
  train_average_precision_samples:
  - 0.9311444747750479
  - 0.9400576186974654
  - 0.9356332905434318
  - 0.9331019364267447
  - 0.9283423543959942
  train_average_precision_samples_oob:
  - 0.8949666363360631
  - 0.9005631022872402
  - 0.8949319436803391
  - 0.8957506652199747
  - 0.8904574849019293
  train_average_precision_weighted:
  - 0.9168841349723077
  - 0.9260784420481731
  - 0.9100350807285239
  - 0.9140528668439073
  - 0.919012463432984
  train_average_precision_weighted_oob:
  - 0.8371605284200414
  - 0.8521976341988351
  - 0.8271539717817787
  - 0.8450535335591647
  - 0.8420310175271357
  train_f1_macro:
  - 0.9226114649681528
  - 0.918156662409536
  - 0.9178433889602055
  - 0.9233802216538788
  - 0.9177309493401449
  train_f1_macro_oob:
  - 0.9141188959660297
  - 0.9124095359727545
  - 0.9104621309370988
  - 0.9154944586530264
  - 0.9109195402298851
  train_f1_micro:
  - 0.9226114649681528
  - 0.918156662409536
  - 0.9178433889602053
  - 0.9233802216538789
  - 0.9177309493401448
  train_f1_micro_oob:
  - 0.9141188959660297
  - 0.9124095359727543
  - 0.9104621309370988
  - 0.9154944586530265
  - 0.9109195402298851
  train_f1_samples:
  - 0.9226114649681528
  - 0.9181566624095361
  - 0.9178433889602053
  - 0.9233802216538789
  - 0.9177309493401447
  train_f1_samples_oob:
  - 0.9141188959660296
  - 0.9124095359727543
  - 0.9104621309370988
  - 0.9154944586530264
  - 0.9109195402298849
  train_f1_weighted:
  - 0.8679008059890724
  - 0.855527778532588
  - 0.8529489246943416
  - 0.8696366826728624
  - 0.8526323258124023
  train_f1_weighted_oob:
  - 0.845295378392248
  - 0.8410610822773535
  - 0.8343604432485607
  - 0.8497237182625724
  - 0.8350648684063536
  train_jaccard_macro:
  - 0.8620390854358865
  - 0.8557012767023316
  - 0.8555163476845392
  - 0.8633026679600663
  - 0.85541600575399
  train_jaccard_macro_oob:
  - 0.8500509765823211
  - 0.847683419069695
  - 0.8453169474140965
  - 0.8518421525981044
  - 0.8460787551427648
  train_jaccard_micro:
  - 0.8563405261602128
  - 0.8486965076242007
  - 0.8481613285883749
  - 0.8576660397901613
  - 0.8479693185170617
  train_jaccard_micro_oob:
  - 0.8418222700166195
  - 0.8389274880125257
  - 0.8356406480117821
  - 0.8441583963840031
  - 0.8364116094986808
  train_jaccard_samples:
  - 0.8587975082242598
  - 0.8506561127250781
  - 0.8501996078376051
  - 0.860200668896321
  - 0.8499543878854224
  train_jaccard_samples_oob:
  - 0.8432029117379435
  - 0.8402144471109987
  - 0.8367419486803311
  - 0.8457266518647591
  - 0.8374075477523752
  train_jaccard_weighted:
  - 0.7717219685777699
  - 0.7545840388412136
  - 0.7514506636713789
  - 0.7742826941555256
  - 0.7508855810332017
  train_jaccard_weighted_oob:
  - 0.7403345024826152
  - 0.7348732107896195
  - 0.726490924639571
  - 0.7461338750609342
  - 0.7277837117909148
  train_label_ranking_average_precision_score:
  - 0.9311444747750484
  - 0.9400576186974655
  - 0.935633290543432
  - 0.9331019364267449
  - 0.9283423543959946
  train_label_ranking_average_precision_score_oob:
  - 0.8949666363360634
  - 0.9005631022872405
  - 0.8949319436803396
  - 0.8957506652199748
  - 0.8904574849019298
  train_matthews_corrcoef_macro:
  - 0.11026794533821184
  - 0.0944531947434451
  - 0.09613424520236417
  - 0.1395921651244854
  - 0.12502183542197845
  train_matthews_corrcoef_macro_oob:
  - 0.04232699045313315
  - 0.03241627259454676
  - 0.019794428812566146
  - 0.051038514445080535
  - 0.04431232988168723
  train_matthews_corrcoef_micro:
  - 0.35412460225513326
  - 0.28897387559991683
  - 0.284870242954217
  - 0.36555123342471013
  - 0.2813075988804814
  train_matthews_corrcoef_micro_oob:
  - 0.1939543563026579
  - 0.15677799313795354
  - 0.08840008202494076
  - 0.22786344750585508
  - 0.0983249527900576
  train_matthews_corrcoef_samples:
  - 0.14682482883314316
  - 0.09709144264034447
  - 0.09852358448608788
  - 0.15633950208953631
  - 0.09323116219667944
  train_matthews_corrcoef_samples_oob:
  - 0.046902142443543716
  - 0.032857308719377684
  - 0.014704166180417786
  - 0.06370611485701
  - 0.013400232031475173
  train_matthews_corrcoef_weighted:
  - 0.262996113901488
  - 0.21846444958908237
  - 0.21642303639220556
  - 0.27680277485093624
  - 0.22621475475053893
  train_matthews_corrcoef_weighted_oob:
  - 0.11531597207466292
  - 0.08839156142741622
  - 0.05097112028809376
  - 0.13571086109557165
  - 0.06699731458716159
  train_ndgc:
  - 0.9492649527966588
  - 0.956035430199474
  - 0.9526897708334056
  - 0.9507420742189827
  - 0.9472675076429093
  train_ndgc_oob:
  - 0.9222981820684979
  - 0.9268238968156142
  - 0.9227163661258713
  - 0.9230424713275643
  - 0.9190911110888635
  train_neg_coverage_error:
  - -1.3235668789808916
  - -1.3154533844189016
  - -1.3042362002567394
  - -1.2851662404092072
  - -1.3295019157088122
  train_neg_coverage_error_oob:
  - -1.4687898089171973
  - -1.4687100893997447
  - -1.4621309370988447
  - -1.4514066496163682
  - -1.471264367816092
  train_neg_hamming_loss_macro:
  - -0.07738853503184713
  - -0.08184333759046404
  - -0.0821566110397946
  - -0.07661977834612105
  - -0.08226905065985526
  train_neg_hamming_loss_macro_oob:
  - -0.08588110403397027
  - -0.08759046402724564
  - -0.08953786906290116
  - -0.08450554134697356
  - -0.08908045977011496
  train_neg_hamming_loss_micro:
  - -0.07738853503184713
  - -0.08184333759046403
  - -0.0821566110397946
  - -0.07661977834612106
  - -0.08226905065985526
  train_neg_hamming_loss_micro_oob:
  - -0.08588110403397027
  - -0.08759046402724564
  - -0.08953786906290115
  - -0.08450554134697358
  - -0.08908045977011494
  train_neg_hamming_loss_samples:
  - -0.07738853503184713
  - -0.08184333759046404
  - -0.0821566110397946
  - -0.07661977834612106
  - -0.08226905065985526
  train_neg_hamming_loss_samples_oob:
  - -0.08588110403397027
  - -0.08759046402724564
  - -0.08953786906290115
  - -0.08450554134697358
  - -0.08908045977011494
  train_neg_hamming_loss_weighted:
  - -0.13209919401092762
  - -0.14447222146741182
  - -0.14705107530565847
  - -0.13036331732713766
  - -0.14736767418759755
  train_neg_hamming_loss_weighted_oob:
  - -0.154704621607752
  - -0.15893891772264643
  - -0.16563955675143943
  - -0.15027628173742744
  - -0.1649351315936463
  train_neg_label_ranking_loss:
  - -0.02101181668060649
  - -0.01898809293445309
  - -0.018381936610434683
  - -0.018177727832459294
  - -0.02067825982257655
  train_neg_label_ranking_loss_oob:
  - -0.03336271419073967
  - -0.031863333204329373
  - -0.03157332849245558
  - -0.03205090116854823
  - -0.03320583441911667
  train_precision_macro:
  - 0.9226114649681528
  - 0.918156662409536
  - 0.9178433889602055
  - 0.9233802216538788
  - 0.9177309493401449
  train_precision_macro_oob:
  - 0.9141188959660297
  - 0.9124095359727545
  - 0.9104621309370988
  - 0.9154944586530264
  - 0.9109195402298851
  train_precision_micro:
  - 0.9226114649681528
  - 0.918156662409536
  - 0.9178433889602053
  - 0.9233802216538789
  - 0.9177309493401448
  train_precision_micro_oob:
  - 0.9141188959660297
  - 0.9124095359727543
  - 0.9104621309370988
  - 0.9154944586530265
  - 0.9109195402298851
  train_precision_samples:
  - 0.9226114649681528
  - 0.9181566624095361
  - 0.9178433889602053
  - 0.9233802216538789
  - 0.9177309493401447
  train_precision_samples_oob:
  - 0.9141188959660296
  - 0.9124095359727543
  - 0.9104621309370988
  - 0.9154944586530264
  - 0.9109195402298849
  train_precision_weighted:
  - 0.8679008059890724
  - 0.855527778532588
  - 0.8529489246943416
  - 0.8696366826728624
  - 0.8526323258124023
  train_precision_weighted_oob:
  - 0.845295378392248
  - 0.8410610822773535
  - 0.8343604432485607
  - 0.8497237182625724
  - 0.8350648684063536
  train_recall_macro:
  - 0.9226114649681528
  - 0.918156662409536
  - 0.9178433889602055
  - 0.9233802216538788
  - 0.9177309493401449
  train_recall_macro_oob:
  - 0.9141188959660297
  - 0.9124095359727545
  - 0.9104621309370988
  - 0.9154944586530264
  - 0.9109195402298851
  train_recall_micro:
  - 0.9226114649681528
  - 0.918156662409536
  - 0.9178433889602053
  - 0.9233802216538789
  - 0.9177309493401448
  train_recall_micro_oob:
  - 0.9141188959660297
  - 0.9124095359727543
  - 0.9104621309370988
  - 0.9154944586530265
  - 0.9109195402298851
  train_recall_samples:
  - 0.9226114649681528
  - 0.9181566624095361
  - 0.9178433889602053
  - 0.9233802216538789
  - 0.9177309493401447
  train_recall_samples_oob:
  - 0.9141188959660296
  - 0.9124095359727543
  - 0.9104621309370988
  - 0.9154944586530264
  - 0.9109195402298849
  train_recall_weighted:
  - 0.8679008059890724
  - 0.855527778532588
  - 0.8529489246943416
  - 0.8696366826728624
  - 0.8526323258124023
  train_recall_weighted_oob:
  - 0.845295378392248
  - 0.8410610822773535
  - 0.8343604432485607
  - 0.8497237182625724
  - 0.8350648684063536
  train_roc_auc_macro:
  - 0.9841485312692297
  - 0.9806432362498411
  - 0.9820441941805435
  - 0.9828433910968672
  - 0.9816989941265621
  train_roc_auc_macro_oob:
  - 0.9654806555677622
  - 0.9681232586680301
  - 0.9677488095314107
  - 0.9719850913203771
  - 0.9683773891490274
  train_roc_auc_micro:
  - 0.9859027397078588
  - 0.9849905299102761
  - 0.9850065169954454
  - 0.9864929642489842
  - 0.9851422587200863
  train_roc_auc_micro_oob:
  - 0.9731928516481572
  - 0.9743140751800697
  - 0.9735737055099122
  - 0.9766167181397375
  - 0.9749673039967925
  train_roc_auc_samples:
  - 0.9789881833193935
  - 0.9810119070655469
  - 0.9816180633895653
  - 0.9818222721675408
  - 0.9793217401774236
  train_roc_auc_samples_oob:
  - 0.9666372858092603
  - 0.9681366667956706
  - 0.9684266715075444
  - 0.9679490988314517
  - 0.9667941655808832
  train_roc_auc_weighted:
  - 0.9832945781153676
  - 0.9824600911906554
  - 0.9823476304499561
  - 0.9815734148009418
  - 0.9821101503542576
  train_roc_auc_weighted_oob:
  - 0.969891297630369
  - 0.9718016309826719
  - 0.969348565844606
  - 0.9721276626993623
  - 0.9714249170339995
start: 2023-12-22 09:16:44.568640
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
