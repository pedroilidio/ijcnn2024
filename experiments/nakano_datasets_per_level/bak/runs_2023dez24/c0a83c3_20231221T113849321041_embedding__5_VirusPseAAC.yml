active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz47+AZmZmZmb2P6CZmZmZmRFAwMzMzMzMDMCAmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 11:39:10.294179
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 5
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__5
  params: {}
hash: c0a83c3c38d148e9e53b2db44a335548d18622c687fd49610acc283fa30a0d85
metaestimator: null
modify_params:
  max_levels: 5
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c0a83c3_20231221T113849321041_embedding__5_VirusPseAAC.yml
results:
  fit_time:
  - 12.094354629516602
  - 12.774425029754639
  - 12.673277854919434
  - 12.761725902557373
  - 12.426855564117432
  score_time:
  - 2.5728442668914795
  - 2.354097843170166
  - 2.609567880630493
  - 2.3713572025299072
  - 2.414228677749634
  test_average_precision_macro:
  - 0.31567537847363925
  - 0.3410433896800573
  - 0.39443893607706176
  - 0.3553574764497831
  - 0.4330794310990697
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.436696985385016
  - 0.3996439222402715
  - 0.4166122393122934
  - 0.3574270898772224
  - 0.4127293372224632
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.653968253968254
  - 0.6266666666666666
  - 0.648873873873874
  - 0.6222222222222222
  - 0.6494186046511629
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4409993713052998
  - 0.40027228152556626
  - 0.3918422151567249
  - 0.34849329082617275
  - 0.4249285213200708
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8015873015873015
  - 0.7916666666666666
  - 0.7747747747747747
  - 0.8074074074074075
  - 0.8062015503875969
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8015873015873016
  - 0.7916666666666666
  - 0.7747747747747747
  - 0.8074074074074075
  - 0.8062015503875969
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8015873015873017
  - 0.7916666666666667
  - 0.7747747747747749
  - 0.8074074074074076
  - 0.8062015503875972
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6847619047619048
  - 0.675
  - 0.6432432432432432
  - 0.7017094017094017
  - 0.6976744186046511
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6947039769151969
  - 0.6812122532946332
  - 0.6632805735287549
  - 0.6998860945571407
  - 0.6987423811132017
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6688741721854304
  - 0.6551724137931034
  - 0.6323529411764706
  - 0.6770186335403726
  - 0.6753246753246753
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6746031746031746
  - 0.661904761904762
  - 0.6402831402831405
  - 0.680952380952381
  - 0.6794019933554819
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5386919563474077
  - 0.5301811841857609
  - 0.495034253532328
  - 0.5582837397994616
  - 0.5544893134558788
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.653968253968254
  - 0.6266666666666667
  - 0.6488738738738739
  - 0.6222222222222221
  - 0.6494186046511627
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7425467270915117
  - 0.7236012694169959
  - 0.739240693443345
  - 0.7194032725384059
  - 0.7381727370662063
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.380952380952381
  - -2.475
  - -2.4864864864864864
  - -2.3555555555555556
  - -2.302325581395349
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.19841269841269837
  - -0.20833333333333337
  - -0.22522522522522523
  - -0.19259259259259257
  - -0.19379844961240308
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1984126984126984
  - -0.20833333333333334
  - -0.22522522522522523
  - -0.1925925925925926
  - -0.1937984496124031
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.19841269841269837
  - -0.20833333333333331
  - -0.22522522522522523
  - -0.19259259259259254
  - -0.19379844961240308
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3152380952380952
  - -0.325
  - -0.3567567567567568
  - -0.29829059829059834
  - -0.3023255813953488
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.23333333333333334
  - -0.23652777777777775
  - -0.23663663663663662
  - -0.23666666666666664
  - -0.23313953488372088
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8015873015873015
  - 0.7916666666666666
  - 0.7747747747747747
  - 0.8074074074074075
  - 0.8062015503875969
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8015873015873016
  - 0.7916666666666666
  - 0.7747747747747747
  - 0.8074074074074075
  - 0.8062015503875969
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8015873015873017
  - 0.7916666666666667
  - 0.7747747747747749
  - 0.8074074074074076
  - 0.8062015503875972
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6847619047619048
  - 0.675
  - 0.6432432432432432
  - 0.7017094017094017
  - 0.6976744186046511
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8015873015873015
  - 0.7916666666666666
  - 0.7747747747747747
  - 0.8074074074074075
  - 0.8062015503875969
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8015873015873016
  - 0.7916666666666666
  - 0.7747747747747747
  - 0.8074074074074075
  - 0.8062015503875969
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8015873015873017
  - 0.7916666666666667
  - 0.7747747747747749
  - 0.8074074074074076
  - 0.8062015503875972
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6847619047619048
  - 0.675
  - 0.6432432432432432
  - 0.7017094017094017
  - 0.6976744186046511
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.642333992367231
  - 0.5846058738776467
  - 0.5280833545539428
  - 0.5568919670262632
  - 0.6426307529248705
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7815841584158416
  - 0.7682105263157893
  - 0.7562790697674419
  - 0.7555575158786169
  - 0.7785576923076923
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7666666666666667
  - 0.7634722222222222
  - 0.7633633633633634
  - 0.7633333333333332
  - 0.7668604651162789
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6152204643879868
  - 0.5425787828479981
  - 0.4746060606060606
  - 0.49427117189155584
  - 0.5692099792099793
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.6939623801688691
  - 0.731751386432563
  - 0.6839661439426193
  - 0.7244013789229307
  - 0.7058523132916353
  train_average_precision_macro_oob:
  - 0.35667221746500005
  - 0.38418208826011546
  - 0.3338570231943949
  - 0.3567154288900996
  - 0.3464332476295762
  train_average_precision_micro:
  - 0.7390076897067347
  - 0.7644123396467116
  - 0.7297841394926934
  - 0.7417922903286104
  - 0.7667151755618475
  train_average_precision_micro_oob:
  - 0.5019787992198763
  - 0.5327246921482122
  - 0.5110799678362801
  - 0.5568295752283283
  - 0.5423457872700116
  train_average_precision_samples:
  - 0.8036868686868686
  - 0.8268962075848302
  - 0.8020588235294117
  - 0.8155864197530864
  - 0.8142276422764227
  train_average_precision_samples_oob:
  - 0.6901346801346802
  - 0.6939454424484365
  - 0.6898529411764707
  - 0.695713305898491
  - 0.6984586720867209
  train_average_precision_weighted:
  - 0.7335401579184968
  - 0.7532507121326576
  - 0.7291363553127878
  - 0.7428595371351995
  - 0.760304949483363
  train_average_precision_weighted_oob:
  - 0.4573063360683696
  - 0.5003242949118251
  - 0.47291510329279074
  - 0.5180388833460203
  - 0.4911239594143018
  train_f1_macro:
  - 0.798989898989899
  - 0.8083832335329341
  - 0.8107843137254903
  - 0.8096707818930042
  - 0.8018292682926829
  train_f1_macro_oob:
  - 0.7959595959595961
  - 0.7984031936127743
  - 0.8019607843137256
  - 0.794238683127572
  - 0.7947154471544716
  train_f1_micro:
  - 0.798989898989899
  - 0.8083832335329342
  - 0.8107843137254902
  - 0.8096707818930041
  - 0.801829268292683
  train_f1_micro_oob:
  - 0.795959595959596
  - 0.7984031936127745
  - 0.8019607843137255
  - 0.7942386831275721
  - 0.7947154471544715
  train_f1_samples:
  - 0.7989898989898989
  - 0.8083832335329338
  - 0.8107843137254901
  - 0.8096707818930039
  - 0.801829268292683
  train_f1_samples_oob:
  - 0.7959595959595959
  - 0.7984031936127741
  - 0.8019607843137254
  - 0.7942386831275717
  - 0.7947154471544714
  train_f1_weighted:
  - 0.6875187518751875
  - 0.703859607517638
  - 0.708474082702388
  - 0.708611111111111
  - 0.6928278193673025
  train_f1_weighted_oob:
  - 0.6813081308130812
  - 0.6838204778561688
  - 0.6905649388468259
  - 0.6767283950617283
  - 0.6780367061096354
  train_jaccard_macro:
  - 0.6896071039147064
  - 0.7002852081115765
  - 0.702951169721485
  - 0.7010942185459098
  - 0.6926635061132645
  train_jaccard_macro_oob:
  - 0.6865546008622033
  - 0.6898652790837426
  - 0.693796272272119
  - 0.6849782810437134
  - 0.6854594196140238
  train_jaccard_micro:
  - 0.6652649285113541
  - 0.678391959798995
  - 0.6817807089859852
  - 0.6802074330164217
  - 0.6692111959287532
  train_jaccard_micro_oob:
  - 0.6610738255033557
  - 0.6644518272425249
  - 0.6693944353518821
  - 0.658703071672355
  - 0.6593591905564924
  train_jaccard_samples:
  - 0.672005772005772
  - 0.6861990305104079
  - 0.6892156862745099
  - 0.6900352733686068
  - 0.6777003484320558
  train_jaccard_samples_oob:
  - 0.666810966810967
  - 0.6699458226404335
  - 0.6745098039215688
  - 0.6649029982363316
  - 0.6655052264808364
  train_jaccard_weighted:
  - 0.5424489178720547
  - 0.5593058589764719
  - 0.5647529948286573
  - 0.5643034900570312
  - 0.5471962744033743
  train_jaccard_weighted_oob:
  - 0.5361927977545484
  - 0.5383910413766827
  - 0.5461772390219733
  - 0.5310055541275536
  - 0.5322174806920817
  train_label_ranking_average_precision_score:
  - 0.8036868686868684
  - 0.8268962075848304
  - 0.8020588235294116
  - 0.8155864197530862
  - 0.8142276422764225
  train_label_ranking_average_precision_score_oob:
  - 0.69013468013468
  - 0.6939454424484365
  - 0.6898529411764707
  - 0.695713305898491
  - 0.6984586720867205
  train_matthews_corrcoef_macro:
  - 0.0267524117968376
  - 0.06727305726430725
  - 0.0668952733745566
  - 0.07515206298667874
  - 0.04078146755879582
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.10889037038667848
  - 0.1998082760383739
  - 0.18986575650712062
  - 0.24597066369410628
  - 0.16654416825738022
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.01818181818181818
  - 0.055478509365672765
  - 0.05077915018843339
  - 0.08578621355617919
  - 0.042682926829268296
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.05482920041530083
  - 0.13580481871929748
  - 0.13588369447849621
  - 0.15462631968094606
  - 0.08479315036977349
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_ndgc:
  - 0.8550088499203775
  - 0.8729070052585101
  - 0.8536536878781135
  - 0.8633748010376353
  - 0.8626934931755503
  train_ndgc_oob:
  - 0.7701950367637609
  - 0.7719781974261429
  - 0.7690024765871452
  - 0.7733159072358455
  - 0.7755948364445708
  train_neg_coverage_error:
  - -1.8424242424242425
  - -1.8263473053892216
  - -1.8588235294117648
  - -1.845679012345679
  - -1.8597560975609757
  train_neg_coverage_error_oob:
  - -2.2848484848484847
  - -2.3293413173652695
  - -2.3411764705882354
  - -2.3209876543209877
  - -2.3292682926829267
  train_neg_hamming_loss_macro:
  - -0.201010101010101
  - -0.19161676646706585
  - -0.1892156862745098
  - -0.19032921810699588
  - -0.1981707317073171
  train_neg_hamming_loss_macro_oob:
  - -0.20404040404040402
  - -0.20159680638722555
  - -0.19803921568627447
  - -0.20576131687242796
  - -0.20528455284552846
  train_neg_hamming_loss_micro:
  - -0.201010101010101
  - -0.19161676646706588
  - -0.1892156862745098
  - -0.19032921810699588
  - -0.19817073170731708
  train_neg_hamming_loss_micro_oob:
  - -0.20404040404040405
  - -0.20159680638722555
  - -0.1980392156862745
  - -0.205761316872428
  - -0.20528455284552846
  train_neg_hamming_loss_samples:
  - -0.20101010101010103
  - -0.19161676646706582
  - -0.18921568627450983
  - -0.19032921810699588
  - -0.19817073170731708
  train_neg_hamming_loss_samples_oob:
  - -0.20404040404040408
  - -0.20159680638722557
  - -0.19803921568627453
  - -0.20576131687242796
  - -0.2052845528455285
  train_neg_hamming_loss_weighted:
  - -0.3124812481248125
  - -0.29614039248236196
  - -0.29152591729761207
  - -0.2913888888888889
  - -0.3071721806326974
  train_neg_hamming_loss_weighted_oob:
  - -0.31869186918691866
  - -0.31617952214383116
  - -0.30943506115317415
  - -0.3232716049382717
  - -0.3219632938903647
  train_neg_label_ranking_loss:
  - -0.12112794612794613
  - -0.11698270126413839
  - -0.12977124183006536
  - -0.12019890260631001
  - -0.1211720867208672
  train_neg_label_ranking_loss_oob:
  - -0.21065656565656565
  - -0.2235528942115768
  - -0.2265359477124183
  - -0.21786694101508916
  - -0.2174119241192412
  train_precision_macro:
  - 0.798989898989899
  - 0.8083832335329341
  - 0.8107843137254903
  - 0.8096707818930042
  - 0.8018292682926829
  train_precision_macro_oob:
  - 0.7959595959595961
  - 0.7984031936127743
  - 0.8019607843137256
  - 0.794238683127572
  - 0.7947154471544716
  train_precision_micro:
  - 0.798989898989899
  - 0.8083832335329342
  - 0.8107843137254902
  - 0.8096707818930041
  - 0.801829268292683
  train_precision_micro_oob:
  - 0.795959595959596
  - 0.7984031936127745
  - 0.8019607843137255
  - 0.7942386831275721
  - 0.7947154471544715
  train_precision_samples:
  - 0.7989898989898989
  - 0.8083832335329338
  - 0.8107843137254901
  - 0.8096707818930039
  - 0.801829268292683
  train_precision_samples_oob:
  - 0.7959595959595959
  - 0.7984031936127741
  - 0.8019607843137254
  - 0.7942386831275717
  - 0.7947154471544714
  train_precision_weighted:
  - 0.6875187518751875
  - 0.703859607517638
  - 0.708474082702388
  - 0.708611111111111
  - 0.6928278193673025
  train_precision_weighted_oob:
  - 0.6813081308130812
  - 0.6838204778561688
  - 0.6905649388468259
  - 0.6767283950617283
  - 0.6780367061096354
  train_recall_macro:
  - 0.798989898989899
  - 0.8083832335329341
  - 0.8107843137254903
  - 0.8096707818930042
  - 0.8018292682926829
  train_recall_macro_oob:
  - 0.7959595959595961
  - 0.7984031936127743
  - 0.8019607843137256
  - 0.794238683127572
  - 0.7947154471544716
  train_recall_micro:
  - 0.798989898989899
  - 0.8083832335329342
  - 0.8107843137254902
  - 0.8096707818930041
  - 0.801829268292683
  train_recall_micro_oob:
  - 0.795959595959596
  - 0.7984031936127745
  - 0.8019607843137255
  - 0.7942386831275721
  - 0.7947154471544715
  train_recall_samples:
  - 0.7989898989898989
  - 0.8083832335329338
  - 0.8107843137254901
  - 0.8096707818930039
  - 0.801829268292683
  train_recall_samples_oob:
  - 0.7959595959595959
  - 0.7984031936127741
  - 0.8019607843137254
  - 0.7942386831275717
  - 0.7947154471544714
  train_recall_weighted:
  - 0.6875187518751875
  - 0.703859607517638
  - 0.708474082702388
  - 0.708611111111111
  - 0.6928278193673025
  train_recall_weighted_oob:
  - 0.6813081308130812
  - 0.6838204778561688
  - 0.6905649388468259
  - 0.6767283950617283
  - 0.6780367061096354
  train_roc_auc_macro:
  - 0.8041336012019106
  - 0.811514074745659
  - 0.8009100270191561
  - 0.8239149252611577
  - 0.8064035263820514
  train_roc_auc_macro_oob:
  - 0.6098567522100574
  - 0.5840602487109969
  - 0.5937893631413232
  - 0.6062142774811086
  - 0.5971634651897527
  train_roc_auc_micro:
  - 0.8817975071618837
  - 0.8865965346534652
  - 0.8760137016146603
  - 0.8818199481865284
  - 0.8880631029854904
  train_roc_auc_micro_oob:
  - 0.7891956073779967
  - 0.7807797029702972
  - 0.7788133336561041
  - 0.7901360103626942
  - 0.7886353852776581
  train_roc_auc_samples:
  - 0.8788720538720537
  - 0.8830172987358615
  - 0.8702287581699345
  - 0.87980109739369
  - 0.8788279132791329
  train_roc_auc_samples_oob:
  - 0.7893434343434343
  - 0.7764471057884232
  - 0.7734640522875816
  - 0.7821330589849108
  - 0.7825880758807587
  train_roc_auc_weighted:
  - 0.762905714777067
  - 0.7823657218626683
  - 0.7657287707479171
  - 0.771074586445594
  - 0.7927052542382778
  train_roc_auc_weighted_oob:
  - 0.6202800268557771
  - 0.6161637012901113
  - 0.6267471947038563
  - 0.6437468656043945
  - 0.6436141533581007
start: 2023-12-21 11:38:49.321041
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
