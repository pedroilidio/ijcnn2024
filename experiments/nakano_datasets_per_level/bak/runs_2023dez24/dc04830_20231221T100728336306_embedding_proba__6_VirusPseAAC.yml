active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j8AMzMzMzPjv8DMzMzMzATAAJqZmZmZ2T+AZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:08:00.782338
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 6
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__6
  params: {}
hash: dc048308ddddcc5097b0573a3dab64b95755ff1c9cb5327258369d72fabaea91
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/dc04830_20231221T100728336306_embedding_proba__6_VirusPseAAC.yml
results:
  fit_time:
  - 20.418734788894653
  - 20.237799406051636
  - 20.518315076828003
  - 20.745959281921387
  - 20.246636390686035
  score_time:
  - 4.127887010574341
  - 4.301219940185547
  - 4.066121816635132
  - 4.2218546867370605
  - 4.034810781478882
  test_average_precision_macro:
  - 0.27321462685101167
  - 0.35387801027067806
  - 0.4333879362190371
  - 0.46520635799279364
  - 0.5311525595640406
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.43162041561327913
  - 0.40806948340954313
  - 0.3127450356559256
  - 0.4353923530006777
  - 0.5280796420282802
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6634722222222222
  - 0.665079365079365
  - 0.5596590909090909
  - 0.6182926829268293
  - 0.6954166666666666
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4113446257627456
  - 0.41215145185689667
  - 0.40899440072900173
  - 0.4723886153748819
  - 0.5384624529642912
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7583333333333333
  - 0.7936507936507936
  - 0.7992424242424243
  - 0.7845528455284553
  - 0.8041666666666667
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7583333333333333
  - 0.7936507936507936
  - 0.7992424242424242
  - 0.7845528455284553
  - 0.8041666666666667
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7583333333333334
  - 0.7936507936507937
  - 0.7992424242424243
  - 0.7845528455284553
  - 0.8041666666666668
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6056122448979592
  - 0.6825396825396826
  - 0.6800356506238859
  - 0.6624390243902439
  - 0.6882352941176471
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.648251330789167
  - 0.683479263136156
  - 0.6928888492912013
  - 0.676995842594556
  - 0.6974613016361076
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.610738255033557
  - 0.6578947368421053
  - 0.6656151419558359
  - 0.6454849498327759
  - 0.6724738675958188
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6333333333333333
  - 0.6785714285714286
  - 0.6753246753246755
  - 0.6655052264808363
  - 0.6904761904761905
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.46223089257669636
  - 0.5383804547274885
  - 0.5371562105478922
  - 0.5232010555830446
  - 0.5423728965321079
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6634722222222221
  - 0.665079365079365
  - 0.5596590909090908
  - 0.6182926829268293
  - 0.6954166666666666
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - -0.028411290693781937
  - 0.04012608836339452
  - 0.0003310189916421226
  - 0.06614167271093285
  - 0.11453301045000218
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.1971898668323835
  - 0.2516560705968956
  - 0.10394435163518885
  - 0.2104483545303164
  - 0.3021709860574474
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.19277402395547233
  - 0.20186917681393374
  - 0.05982853481894717
  - 0.18240257137037114
  - 0.23777402395547234
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - -0.035668472798232716
  - 0.08025217672678905
  - 0.0033881197754865432
  - 0.06077975387141794
  - 0.1630983307031938
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7488830369623531
  - 0.7499300720639193
  - 0.6738468828434017
  - 0.7169109517285318
  - 0.7789060646429649
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.325
  - -2.357142857142857
  - -2.590909090909091
  - -2.5609756097560976
  - -2.45
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2416666666666667
  - -0.20634920634920637
  - -0.20075757575757572
  - -0.21544715447154475
  - -0.19583333333333333
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.24166666666666667
  - -0.20634920634920634
  - -0.20075757575757575
  - -0.21544715447154472
  - -0.19583333333333333
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.24166666666666664
  - -0.20634920634920628
  - -0.2007575757575757
  - -0.21544715447154472
  - -0.1958333333333333
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3943877551020408
  - -0.31746031746031744
  - -0.31996434937611407
  - -0.3375609756097561
  - -0.31176470588235294
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.22520833333333332
  - -0.2339285714285714
  - -0.2914772727272727
  - -0.2605691056910569
  - -0.216875
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7583333333333333
  - 0.7936507936507936
  - 0.7992424242424243
  - 0.7845528455284553
  - 0.8041666666666667
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7583333333333333
  - 0.7936507936507936
  - 0.7992424242424242
  - 0.7845528455284553
  - 0.8041666666666667
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7583333333333334
  - 0.7936507936507937
  - 0.7992424242424243
  - 0.7845528455284553
  - 0.8041666666666668
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6056122448979592
  - 0.6825396825396826
  - 0.6800356506238859
  - 0.6624390243902439
  - 0.6882352941176471
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7583333333333333
  - 0.7936507936507936
  - 0.7992424242424243
  - 0.7845528455284553
  - 0.8041666666666667
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7583333333333333
  - 0.7936507936507936
  - 0.7992424242424242
  - 0.7845528455284553
  - 0.8041666666666667
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7583333333333334
  - 0.7936507936507937
  - 0.7992424242424243
  - 0.7845528455284553
  - 0.8041666666666668
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6056122448979592
  - 0.6825396825396826
  - 0.6800356506238859
  - 0.6624390243902439
  - 0.6882352941176471
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5299193116488513
  - 0.573420684063099
  - 0.6314663764741164
  - 0.6530741350594292
  - 0.679783156125867
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7547814937493322
  - 0.7373914740025364
  - 0.7088281321918439
  - 0.768469387755102
  - 0.8036103330220978
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7747916666666667
  - 0.7660714285714285
  - 0.7085227272727272
  - 0.739430894308943
  - 0.7831250000000001
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5572078329659624
  - 0.5628998968008256
  - 0.537894384024415
  - 0.6118537360890302
  - 0.6462708930739621
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9855196907433091
  - 0.9410446377563106
  - 0.9360442316171483
  - 0.9659278450825975
  - 0.9650461518448842
  train_average_precision_macro_oob:
  - 0.8466257783576401
  - 0.7537713078516123
  - 0.7739980580685569
  - 0.7588175442034887
  - 0.7510226879316444
  train_average_precision_micro:
  - 0.9924874943290617
  - 0.9890374043707464
  - 0.9930653094585356
  - 0.9919724366767084
  - 0.9924289709706903
  train_average_precision_micro_oob:
  - 0.9249909338848402
  - 0.9054292376251589
  - 0.9093958722131362
  - 0.9113099481253614
  - 0.9226089149630069
  train_average_precision_samples:
  - 0.9930139720558883
  - 0.9898989898989898
  - 0.992842535787321
  - 0.9869477911646585
  - 0.9865269461077845
  train_average_precision_samples_oob:
  - 0.9405189620758483
  - 0.9065993265993267
  - 0.9187457396046351
  - 0.9293172690763051
  - 0.9301397205588822
  train_average_precision_weighted:
  - 0.9942442339832505
  - 0.9837559892857504
  - 0.9851361325241922
  - 0.9910902923991269
  - 0.9897636474712534
  train_average_precision_weighted_oob:
  - 0.9331041254884542
  - 0.9034420318664252
  - 0.9166438814978997
  - 0.9094649751401248
  - 0.9004736971129289
  train_f1_macro:
  - 0.9580838323353293
  - 0.9525252525252527
  - 0.950920245398773
  - 0.9548192771084337
  - 0.9560878243512975
  train_f1_macro_oob:
  - 0.9411177644710579
  - 0.9282828282828284
  - 0.9345603271983639
  - 0.9327309236947792
  - 0.9341317365269463
  train_f1_micro:
  - 0.9580838323353293
  - 0.9525252525252526
  - 0.950920245398773
  - 0.9548192771084337
  - 0.9560878243512974
  train_f1_micro_oob:
  - 0.9411177644710579
  - 0.9282828282828283
  - 0.934560327198364
  - 0.9327309236947792
  - 0.9341317365269461
  train_f1_samples:
  - 0.9580838323353293
  - 0.9525252525252527
  - 0.950920245398773
  - 0.9548192771084337
  - 0.9560878243512975
  train_f1_samples_oob:
  - 0.941117764471058
  - 0.9282828282828284
  - 0.934560327198364
  - 0.9327309236947791
  - 0.9341317365269461
  train_f1_weighted:
  - 0.9744845284799858
  - 0.9712045831448816
  - 0.9700271647895492
  - 0.9743528569724442
  - 0.9756308278964458
  train_f1_weighted_oob:
  - 0.9589097666735494
  - 0.9397557666214382
  - 0.9506760675151847
  - 0.9484074913515448
  - 0.9535853665802723
  train_jaccard_macro:
  - 0.9221036799512744
  - 0.9116078988808965
  - 0.9086602362923807
  - 0.9159566352080093
  - 0.9184285689862505
  train_jaccard_macro_oob:
  - 0.8905485443510459
  - 0.8678417790537735
  - 0.8792354665061651
  - 0.8760587559493168
  - 0.878971994539202
  train_jaccard_micro:
  - 0.9195402298850575
  - 0.9093539054966249
  - 0.9064327485380117
  - 0.9135446685878963
  - 0.9158699808795411
  train_jaccard_micro_oob:
  - 0.8887841658812441
  - 0.8661639962299718
  - 0.8771593090211133
  - 0.8739416745061148
  - 0.8764044943820225
  train_jaccard_samples:
  - 0.9294268605645851
  - 0.9215007215007215
  - 0.9187846917908268
  - 0.9246987951807228
  - 0.9271457085828342
  train_jaccard_samples_oob:
  - 0.903193612774451
  - 0.8836940836940836
  - 0.8932223196026876
  - 0.8892713711990818
  - 0.8920729968634159
  train_jaccard_weighted:
  - 0.9519201661795978
  - 0.9456957618135154
  - 0.9434784310731178
  - 0.951734922705679
  - 0.9542040469463514
  train_jaccard_weighted_oob:
  - 0.9226679483269573
  - 0.8877766721086167
  - 0.9079697599634894
  - 0.9038424628136267
  - 0.9138650736810952
  train_label_ranking_average_precision_score:
  - 0.9930139720558881
  - 0.9898989898989898
  - 0.992842535787321
  - 0.9869477911646585
  - 0.9865269461077845
  train_label_ranking_average_precision_score_oob:
  - 0.9405189620758483
  - 0.9065993265993265
  - 0.9187457396046353
  - 0.9293172690763053
  - 0.9301397205588825
  train_matthews_corrcoef_macro:
  - 0.5921401416916725
  - 0.4722077605990447
  - 0.46883752271133333
  - 0.4783493084368102
  - 0.48618452085724106
  train_matthews_corrcoef_macro_oob:
  - 0.4339024675312863
  - 0.3857571469450714
  - 0.41017397483776546
  - 0.3938739275156406
  - 0.39398921819802163
  train_matthews_corrcoef_micro:
  - 0.868041144339853
  - 0.8499873598148776
  - 0.8467032403415523
  - 0.857636809006886
  - 0.8604778611951586
  train_matthews_corrcoef_micro_oob:
  - 0.8127612186317904
  - 0.7692111118677364
  - 0.7930276280843328
  - 0.7836325356507925
  - 0.78772669765852
  train_matthews_corrcoef_samples:
  - 0.8112507526767859
  - 0.7930086070605429
  - 0.7804537707543308
  - 0.7884000139743114
  - 0.7998892760534265
  train_matthews_corrcoef_samples_oob:
  - 0.725999681363485
  - 0.6752090379131415
  - 0.704750934476906
  - 0.6871062907004181
  - 0.6911631695756564
  train_matthews_corrcoef_weighted:
  - 0.8078243709269299
  - 0.7786758380646693
  - 0.7756193517973939
  - 0.7872450886814275
  - 0.7874730374386986
  train_matthews_corrcoef_weighted_oob:
  - 0.7375915635192588
  - 0.686056263536329
  - 0.7157436739629773
  - 0.7037253300248076
  - 0.7057438577641765
  train_ndgc:
  - 0.9950992832113239
  - 0.9924961182251085
  - 0.9946682806967574
  - 0.9903180075946649
  - 0.9899608731663939
  train_ndgc_oob:
  - 0.9579502758662677
  - 0.932588199239938
  - 0.9410715124065278
  - 0.950262038150463
  - 0.9482885424750189
  train_neg_coverage_error:
  - -1.2335329341317365
  - -1.2424242424242424
  - -1.2515337423312884
  - -1.2469879518072289
  - -1.2395209580838322
  train_neg_coverage_error_oob:
  - -1.4550898203592815
  - -1.5757575757575757
  - -1.5153374233128833
  - -1.5120481927710843
  - -1.4131736526946108
  train_neg_hamming_loss_macro:
  - -0.041916167664670656
  - -0.047474747474747475
  - -0.049079754601226995
  - -0.04518072289156627
  - -0.043912175648702596
  train_neg_hamming_loss_macro_oob:
  - -0.05888223552894212
  - -0.07171717171717172
  - -0.065439672801636
  - -0.06726907630522089
  - -0.0658682634730539
  train_neg_hamming_loss_micro:
  - -0.041916167664670656
  - -0.047474747474747475
  - -0.049079754601226995
  - -0.045180722891566265
  - -0.043912175648702596
  train_neg_hamming_loss_micro_oob:
  - -0.05888223552894212
  - -0.07171717171717172
  - -0.065439672801636
  - -0.06726907630522089
  - -0.0658682634730539
  train_neg_hamming_loss_samples:
  - -0.041916167664670656
  - -0.04747474747474747
  - -0.049079754601226995
  - -0.045180722891566265
  - -0.043912175648702596
  train_neg_hamming_loss_samples_oob:
  - -0.05888223552894211
  - -0.07171717171717171
  - -0.06543967280163598
  - -0.06726907630522089
  - -0.0658682634730539
  train_neg_hamming_loss_weighted:
  - -0.025515471520014158
  - -0.02879541685511835
  - -0.029972835210450813
  - -0.02564714302755577
  - -0.02436917210355409
  train_neg_hamming_loss_weighted_oob:
  - -0.041090233326450544
  - -0.06024423337856173
  - -0.04932393248481519
  - -0.05159250864845521
  - -0.04641463341972771
  train_neg_label_ranking_loss:
  - -0.0031437125748502996
  - -0.0048484848484848485
  - -0.003680981595092025
  - -0.006024096385542169
  - -0.007185628742514971
  train_neg_label_ranking_loss_oob:
  - -0.04183300066533599
  - -0.06649831649831649
  - -0.05320381731424676
  - -0.05120481927710843
  - -0.041234198270126414
  train_precision_macro:
  - 0.9580838323353293
  - 0.9525252525252527
  - 0.950920245398773
  - 0.9548192771084337
  - 0.9560878243512975
  train_precision_macro_oob:
  - 0.9411177644710579
  - 0.9282828282828284
  - 0.9345603271983639
  - 0.9327309236947792
  - 0.9341317365269463
  train_precision_micro:
  - 0.9580838323353293
  - 0.9525252525252526
  - 0.950920245398773
  - 0.9548192771084337
  - 0.9560878243512974
  train_precision_micro_oob:
  - 0.9411177644710579
  - 0.9282828282828283
  - 0.934560327198364
  - 0.9327309236947792
  - 0.9341317365269461
  train_precision_samples:
  - 0.9580838323353293
  - 0.9525252525252527
  - 0.950920245398773
  - 0.9548192771084337
  - 0.9560878243512975
  train_precision_samples_oob:
  - 0.941117764471058
  - 0.9282828282828284
  - 0.934560327198364
  - 0.9327309236947791
  - 0.9341317365269461
  train_precision_weighted:
  - 0.9744845284799858
  - 0.9712045831448816
  - 0.9700271647895492
  - 0.9743528569724442
  - 0.9756308278964458
  train_precision_weighted_oob:
  - 0.9589097666735494
  - 0.9397557666214382
  - 0.9506760675151847
  - 0.9484074913515448
  - 0.9535853665802723
  train_recall_macro:
  - 0.9580838323353293
  - 0.9525252525252527
  - 0.950920245398773
  - 0.9548192771084337
  - 0.9560878243512975
  train_recall_macro_oob:
  - 0.9411177644710579
  - 0.9282828282828284
  - 0.9345603271983639
  - 0.9327309236947792
  - 0.9341317365269463
  train_recall_micro:
  - 0.9580838323353293
  - 0.9525252525252526
  - 0.950920245398773
  - 0.9548192771084337
  - 0.9560878243512974
  train_recall_micro_oob:
  - 0.9411177644710579
  - 0.9282828282828283
  - 0.934560327198364
  - 0.9327309236947792
  - 0.9341317365269461
  train_recall_samples:
  - 0.9580838323353293
  - 0.9525252525252527
  - 0.950920245398773
  - 0.9548192771084337
  - 0.9560878243512975
  train_recall_samples_oob:
  - 0.941117764471058
  - 0.9282828282828284
  - 0.934560327198364
  - 0.9327309236947791
  - 0.9341317365269461
  train_recall_weighted:
  - 0.9744845284799858
  - 0.9712045831448816
  - 0.9700271647895492
  - 0.9743528569724442
  - 0.9756308278964458
  train_recall_weighted_oob:
  - 0.9589097666735494
  - 0.9397557666214382
  - 0.9506760675151847
  - 0.9484074913515448
  - 0.9535853665802723
  train_roc_auc_macro:
  - 0.9983884091390465
  - 0.996650571817615
  - 0.997201839865458
  - 0.9977132936507935
  - 0.9971908700330481
  train_roc_auc_macro_oob:
  - 0.9642799461800848
  - 0.961594442096854
  - 0.9681439203794221
  - 0.9635262277988118
  - 0.969479549145933
  train_roc_auc_micro:
  - 0.9974845404045698
  - 0.9966895560221706
  - 0.9978678038379531
  - 0.9974561687906826
  - 0.997391320550804
  train_roc_auc_micro_oob:
  - 0.9653569424835231
  - 0.9585532413975748
  - 0.9583229284721823
  - 0.9599658328553258
  - 0.9690685151023906
  train_roc_auc_samples:
  - 0.9968562874251496
  - 0.9951515151515151
  - 0.9963190184049079
  - 0.9939759036144579
  - 0.9928143712574851
  train_roc_auc_samples_oob:
  - 0.958166999334664
  - 0.9335016835016835
  - 0.9467961826857533
  - 0.9487951807228916
  - 0.9587658017298736
  train_roc_auc_weighted:
  - 0.9989854600551078
  - 0.9985469865898863
  - 0.9989783551662577
  - 0.9991150990099009
  - 0.9987945799220048
  train_roc_auc_weighted_oob:
  - 0.9781285144748426
  - 0.9796485870602211
  - 0.9854772778058937
  - 0.9782799134505286
  - 0.9834652353205899
start: 2023-12-21 10:07:28.336306
wrapper: null
