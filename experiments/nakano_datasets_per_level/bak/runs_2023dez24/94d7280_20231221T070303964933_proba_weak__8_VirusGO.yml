active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz478gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ2T8AmpmZmZnZP4BmZmZmZvY/ADMzMzMz47+AmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 07:06:15.405978
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 8
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: proba_weak__8
  params: {}
hash: 94d7280fa330a5bd0089428a527c67c53b461735c95bd027cba7ff994c088a42
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/94d7280_20231221T070303964933_proba_weak__8_VirusGO.yml
results:
  fit_time:
  - 175.61574125289917
  - 176.21038007736206
  - 181.52278566360474
  - 181.63027048110962
  - 183.7921085357666
  score_time:
  - 2.1219496726989746
  - 2.1713578701019287
  - 2.072638511657715
  - 2.1009457111358643
  - 2.2763102054595947
  test_average_precision_macro:
  - 0.8799723694375983
  - 0.9567319551854133
  - 0.891803785654112
  - 0.8831267688000416
  - 0.9267861359773125
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8036242338121559
  - 0.8660752146593318
  - 0.847808918684806
  - 0.8270939358936981
  - 0.8006809616640066
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8922764227642275
  - 0.8495934959349593
  - 0.8583333333333332
  - 0.8567460317460318
  - 0.8697674418604653
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8891241948658893
  - 0.9501880286451387
  - 0.9050060132505952
  - 0.8977742014211669
  - 0.8965752218303238
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8943089430894308
  - 0.9349593495934959
  - 0.9083333333333333
  - 0.9087301587301587
  - 0.9302325581395348
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8943089430894309
  - 0.9349593495934959
  - 0.9083333333333333
  - 0.9087301587301587
  - 0.9302325581395349
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.894308943089431
  - 0.934959349593496
  - 0.9083333333333332
  - 0.9087301587301588
  - 0.9302325581395349
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8864915572232646
  - 0.937560975609756
  - 0.898
  - 0.9033613445378151
  - 0.9221642145230186
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8107642399730367
  - 0.8790692081389756
  - 0.8339339700655639
  - 0.8337332623179062
  - 0.8707639141959215
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8088235294117647
  - 0.8778625954198473
  - 0.8320610687022901
  - 0.8327272727272728
  - 0.8695652173913043
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8315911730545876
  - 0.8937282229965158
  - 0.8547619047619047
  - 0.8520408163265306
  - 0.8837209302325582
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7972002389532725
  - 0.8832619886573374
  - 0.8158249540212104
  - 0.8245848593130521
  - 0.8560918707740434
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8922764227642275
  - 0.8495934959349593
  - 0.8583333333333332
  - 0.8567460317460318
  - 0.869767441860465
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.2589628689724592
  - 0.4419683241386678
  - 0.3500659614912544
  - 0.35225559784969906
  - 0.4090424644646045
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6588801488047958
  - 0.7911761305689893
  - 0.7066004603213302
  - 0.6985583901177624
  - 0.7604793126255667
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5631279417383106
  - 0.6983525739520409
  - 0.6594955532033676
  - 0.6070801570500245
  - 0.6867400494915047
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5233874038911653
  - 0.702622775201439
  - 0.613248634881661
  - 0.6049360241156712
  - 0.6729427265391097
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9224163426200516
  - 0.889351975113895
  - 0.8979051878862135
  - 0.8964056040388465
  - 0.9044615460610833
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.6341463414634145
  - -1.6585365853658536
  - -1.75
  - -1.6904761904761905
  - -1.558139534883721
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.10569105691056911
  - -0.06504065040650407
  - -0.09166666666666667
  - -0.09126984126984126
  - -0.06976744186046512
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.10569105691056911
  - -0.06504065040650407
  - -0.09166666666666666
  - -0.09126984126984126
  - -0.06976744186046512
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.1056910569105691
  - -0.06504065040650406
  - -0.09166666666666665
  - -0.09126984126984126
  - -0.0697674418604651
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.11350844277673547
  - -0.062439024390243895
  - -0.10200000000000001
  - -0.09663865546218488
  - -0.07783578547698149
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06673441734417344
  - -0.08536585365853659
  - -0.09187500000000001
  - -0.08690476190476192
  - -0.07848837209302326
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8943089430894308
  - 0.9349593495934959
  - 0.9083333333333333
  - 0.9087301587301587
  - 0.9302325581395348
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8943089430894309
  - 0.9349593495934959
  - 0.9083333333333333
  - 0.9087301587301587
  - 0.9302325581395349
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.894308943089431
  - 0.934959349593496
  - 0.9083333333333332
  - 0.9087301587301588
  - 0.9302325581395349
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8864915572232646
  - 0.937560975609756
  - 0.898
  - 0.9033613445378151
  - 0.9221642145230186
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8943089430894308
  - 0.9349593495934959
  - 0.9083333333333333
  - 0.9087301587301587
  - 0.9302325581395348
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8943089430894309
  - 0.9349593495934959
  - 0.9083333333333333
  - 0.9087301587301587
  - 0.9302325581395349
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.894308943089431
  - 0.934959349593496
  - 0.9083333333333332
  - 0.9087301587301588
  - 0.9302325581395349
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8864915572232646
  - 0.937560975609756
  - 0.898
  - 0.9033613445378151
  - 0.9221642145230186
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.951312062884953
  - 0.9760954976715848
  - 0.9535411276939411
  - 0.9631207219729996
  - 0.9695538298479475
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9387390959555908
  - 0.948469387755102
  - 0.9389473684210525
  - 0.9335674568334796
  - 0.9441460794844253
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9332655826558265
  - 0.9146341463414634
  - 0.9081250000000001
  - 0.913095238095238
  - 0.9215116279069767
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9478315370259103
  - 0.9614176263219741
  - 0.9536780851998243
  - 0.9518148311956361
  - 0.9484350912922342
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9548153438653079
  - 0.9284435669901973
  - 0.926810836279684
  - 0.9507481646466398
  - 0.906578728451433
  train_average_precision_macro_oob:
  - 0.9353765811076671
  - 0.887880765128953
  - 0.8881250969557883
  - 0.9133291325785398
  - 0.8780701264457439
  train_average_precision_micro:
  - 0.8706149462402882
  - 0.8353864354032539
  - 0.8550824562205973
  - 0.8665983076483724
  - 0.8015476374968705
  train_average_precision_micro_oob:
  - 0.8471763096559447
  - 0.8047681764254028
  - 0.814821845344436
  - 0.8458867276898342
  - 0.7868361101752375
  train_average_precision_samples:
  - 0.9181726907630522
  - 0.8877510040160643
  - 0.8732534930139719
  - 0.8963636363636363
  - 0.8899390243902439
  train_average_precision_samples_oob:
  - 0.8848393574297189
  - 0.8517068273092369
  - 0.8573852295409182
  - 0.8776767676767676
  - 0.8527439024390243
  train_average_precision_weighted:
  - 0.9509920896689417
  - 0.914193032292581
  - 0.9237394778289225
  - 0.943989693925757
  - 0.8842707225921284
  train_average_precision_weighted_oob:
  - 0.9348055998865505
  - 0.8818085905728096
  - 0.890060227780716
  - 0.9214736492227766
  - 0.8677702085058576
  train_f1_macro:
  - 0.9116465863453814
  - 0.9236947791164658
  - 0.9251497005988024
  - 0.9232323232323233
  - 0.9227642276422764
  train_f1_macro_oob:
  - 0.9106425702811244
  - 0.9186746987951806
  - 0.9241516966067865
  - 0.9191919191919192
  - 0.9186991869918698
  train_f1_micro:
  - 0.9116465863453815
  - 0.9236947791164659
  - 0.9251497005988024
  - 0.9232323232323232
  - 0.9227642276422764
  train_f1_micro_oob:
  - 0.9106425702811245
  - 0.9186746987951807
  - 0.9241516966067864
  - 0.9191919191919192
  - 0.9186991869918699
  train_f1_samples:
  - 0.9116465863453815
  - 0.9236947791164658
  - 0.9251497005988024
  - 0.9232323232323231
  - 0.9227642276422763
  train_f1_samples_oob:
  - 0.9106425702811244
  - 0.9186746987951807
  - 0.9241516966067863
  - 0.9191919191919193
  - 0.9186991869918698
  train_f1_weighted:
  - 0.9140963855421687
  - 0.9184957652391744
  - 0.9242603901108674
  - 0.9217850143223276
  - 0.9210020425327407
  train_f1_weighted_oob:
  - 0.9107831325301206
  - 0.913247047596326
  - 0.923489654354657
  - 0.9173224785165084
  - 0.9152649285113541
  train_jaccard_macro:
  - 0.8397598256609884
  - 0.8591436179695515
  - 0.8613210516826889
  - 0.8581235674077652
  - 0.8573564178645848
  train_jaccard_macro_oob:
  - 0.8377940766858026
  - 0.850513781951975
  - 0.8595739339039347
  - 0.8512366699545746
  - 0.8503534757443806
  train_jaccard_micro:
  - 0.8376383763837638
  - 0.8582089552238806
  - 0.8607242339832869
  - 0.8574108818011257
  - 0.8566037735849057
  train_jaccard_micro_oob:
  - 0.8359447004608295
  - 0.8495821727019499
  - 0.8589981447124304
  - 0.8504672897196262
  - 0.849624060150376
  train_jaccard_samples:
  - 0.8549913941480207
  - 0.8755020080321284
  - 0.8793840889649271
  - 0.8761904761904761
  - 0.8751451800232287
  train_jaccard_samples_oob:
  - 0.8539873780837636
  - 0.8691910499139415
  - 0.8781009409751923
  - 0.8692640692640692
  - 0.8689024390243902
  train_jaccard_weighted:
  - 0.843251118713328
  - 0.8498845986951502
  - 0.8594620978742133
  - 0.8551904928782194
  - 0.8541213687636225
  train_jaccard_weighted_oob:
  - 0.8373374771890961
  - 0.8409623896531483
  - 0.858112838599532
  - 0.8475265242333787
  - 0.844267362767858
  train_label_ranking_average_precision_score:
  - 0.9181726907630522
  - 0.8877510040160641
  - 0.8732534930139719
  - 0.8963636363636364
  - 0.8899390243902439
  train_label_ranking_average_precision_score_oob:
  - 0.8848393574297189
  - 0.8517068273092367
  - 0.857385229540918
  - 0.8776767676767678
  - 0.8527439024390242
  train_matthews_corrcoef_macro:
  - 0.2837181044034432
  - 0.4033973867770357
  - 0.40715904390416874
  - 0.3934581053757917
  - 0.40227884912492445
  train_matthews_corrcoef_macro_oob:
  - 0.30953235354974057
  - 0.38372187687162623
  - 0.40419166714545135
  - 0.3770857845470494
  - 0.3890876537250556
  train_matthews_corrcoef_micro:
  - 0.7057795300507534
  - 0.751743719093505
  - 0.7555758947061295
  - 0.7497226118242556
  - 0.7519178788775803
  train_matthews_corrcoef_micro_oob:
  - 0.7021227850998747
  - 0.734293640402581
  - 0.7523263073305065
  - 0.7355368533918055
  - 0.7378313198730138
  train_matthews_corrcoef_samples:
  - 0.602736291854641
  - 0.6937112314533674
  - 0.6949701468689069
  - 0.6838202751489322
  - 0.6879818823025874
  train_matthews_corrcoef_samples_oob:
  - 0.6000422340504243
  - 0.6766729638293666
  - 0.6937725420784877
  - 0.6557447870760008
  - 0.6662365910463872
  train_matthews_corrcoef_weighted:
  - 0.5790542088114485
  - 0.6631325217304802
  - 0.6701855183597923
  - 0.6624598314879568
  - 0.6639537662273011
  train_matthews_corrcoef_weighted_oob:
  - 0.59377731069036
  - 0.6449687148005135
  - 0.6678938808629612
  - 0.6470788703053055
  - 0.6481392097923308
  train_ndgc:
  - 0.9412417964785652
  - 0.9175454027078076
  - 0.9066517793457174
  - 0.9244754598811417
  - 0.9200651427494141
  train_ndgc_oob:
  - 0.9171225319003443
  - 0.8918424218094887
  - 0.896303306056654
  - 0.910845003231039
  - 0.8921523636419795
  train_neg_coverage_error:
  - -1.4698795180722892
  - -1.5421686746987953
  - -1.5389221556886228
  - -1.5454545454545454
  - -1.548780487804878
  train_neg_coverage_error_oob:
  - -1.6626506024096386
  - -1.716867469879518
  - -1.6467065868263473
  - -1.6848484848484848
  - -1.701219512195122
  train_neg_hamming_loss_macro:
  - -0.08835341365461848
  - -0.07630522088353414
  - -0.0748502994011976
  - -0.07676767676767676
  - -0.07723577235772357
  train_neg_hamming_loss_macro_oob:
  - -0.0893574297188755
  - -0.08132530120481929
  - -0.07584830339321358
  - -0.0808080808080808
  - -0.08130081300813008
  train_neg_hamming_loss_micro:
  - -0.08835341365461848
  - -0.07630522088353414
  - -0.0748502994011976
  - -0.07676767676767676
  - -0.07723577235772358
  train_neg_hamming_loss_micro_oob:
  - -0.0893574297188755
  - -0.08132530120481928
  - -0.07584830339321358
  - -0.08080808080808081
  - -0.08130081300813008
  train_neg_hamming_loss_samples:
  - -0.08835341365461848
  - -0.07630522088353414
  - -0.0748502994011976
  - -0.07676767676767676
  - -0.07723577235772357
  train_neg_hamming_loss_samples_oob:
  - -0.08935742971887549
  - -0.08132530120481928
  - -0.07584830339321358
  - -0.0808080808080808
  - -0.08130081300813008
  train_neg_hamming_loss_weighted:
  - -0.08590361445783133
  - -0.08150423476082548
  - -0.07573960988913261
  - -0.07821498567767224
  - -0.07899795746725942
  train_neg_hamming_loss_weighted_oob:
  - -0.08921686746987952
  - -0.0867529524036741
  - -0.07651034564534298
  - -0.08267752148349164
  - -0.08473507148864592
  train_neg_label_ranking_loss:
  - -0.04804216867469879
  - -0.06340361445783134
  - -0.06518629407850966
  - -0.061582491582491586
  - -0.059129403794037944
  train_neg_label_ranking_loss_oob:
  - -0.08207831325301204
  - -0.09372489959839357
  - -0.0816367265469062
  - -0.08671717171717172
  - -0.0888550135501355
  train_precision_macro:
  - 0.9116465863453814
  - 0.9236947791164658
  - 0.9251497005988024
  - 0.9232323232323233
  - 0.9227642276422764
  train_precision_macro_oob:
  - 0.9106425702811244
  - 0.9186746987951806
  - 0.9241516966067865
  - 0.9191919191919192
  - 0.9186991869918698
  train_precision_micro:
  - 0.9116465863453815
  - 0.9236947791164659
  - 0.9251497005988024
  - 0.9232323232323232
  - 0.9227642276422764
  train_precision_micro_oob:
  - 0.9106425702811245
  - 0.9186746987951807
  - 0.9241516966067864
  - 0.9191919191919192
  - 0.9186991869918699
  train_precision_samples:
  - 0.9116465863453815
  - 0.9236947791164658
  - 0.9251497005988024
  - 0.9232323232323231
  - 0.9227642276422763
  train_precision_samples_oob:
  - 0.9106425702811244
  - 0.9186746987951807
  - 0.9241516966067863
  - 0.9191919191919193
  - 0.9186991869918698
  train_precision_weighted:
  - 0.9140963855421687
  - 0.9184957652391744
  - 0.9242603901108674
  - 0.9217850143223276
  - 0.9210020425327407
  train_precision_weighted_oob:
  - 0.9107831325301206
  - 0.913247047596326
  - 0.923489654354657
  - 0.9173224785165084
  - 0.9152649285113541
  train_recall_macro:
  - 0.9116465863453814
  - 0.9236947791164658
  - 0.9251497005988024
  - 0.9232323232323233
  - 0.9227642276422764
  train_recall_macro_oob:
  - 0.9106425702811244
  - 0.9186746987951806
  - 0.9241516966067865
  - 0.9191919191919192
  - 0.9186991869918698
  train_recall_micro:
  - 0.9116465863453815
  - 0.9236947791164659
  - 0.9251497005988024
  - 0.9232323232323232
  - 0.9227642276422764
  train_recall_micro_oob:
  - 0.9106425702811245
  - 0.9186746987951807
  - 0.9241516966067864
  - 0.9191919191919192
  - 0.9186991869918699
  train_recall_samples:
  - 0.9116465863453815
  - 0.9236947791164658
  - 0.9251497005988024
  - 0.9232323232323231
  - 0.9227642276422763
  train_recall_samples_oob:
  - 0.9106425702811244
  - 0.9186746987951807
  - 0.9241516966067863
  - 0.9191919191919193
  - 0.9186991869918698
  train_recall_weighted:
  - 0.9140963855421687
  - 0.9184957652391744
  - 0.9242603901108674
  - 0.9217850143223276
  - 0.9210020425327407
  train_recall_weighted_oob:
  - 0.9107831325301206
  - 0.913247047596326
  - 0.923489654354657
  - 0.9173224785165084
  - 0.9152649285113541
  train_roc_auc_macro:
  - 0.982637502472611
  - 0.9745359753390995
  - 0.9743588475264563
  - 0.981862479055268
  - 0.9701295329862852
  train_roc_auc_macro_oob:
  - 0.9722384876135034
  - 0.9567185419165525
  - 0.9606208504628425
  - 0.9663595404704312
  - 0.9570592890054516
  train_roc_auc_micro:
  - 0.95634108040201
  - 0.9519508940818515
  - 0.9583849009900991
  - 0.9540415791763615
  - 0.9482127876979747
  train_roc_auc_micro_oob:
  - 0.9431469849246231
  - 0.9353193505748559
  - 0.9418440594059406
  - 0.941704657952317
  - 0.935670449026447
  train_roc_auc_samples:
  - 0.9519578313253012
  - 0.9365963855421685
  - 0.9348137059214903
  - 0.9384175084175085
  - 0.940870596205962
  train_roc_auc_samples_oob:
  - 0.9179216867469879
  - 0.9062751004016064
  - 0.9183632734530939
  - 0.9132828282828283
  - 0.9111449864498645
  train_roc_auc_weighted:
  - 0.9763572198420136
  - 0.9602059876222402
  - 0.9656097658039433
  - 0.9722885577867346
  - 0.9533442152891988
  train_roc_auc_weighted_oob:
  - 0.965622410407462
  - 0.9433987708521452
  - 0.9525569493051245
  - 0.960220385742059
  - 0.9411838184747607
start: 2023-12-21 07:03:03.964933
wrapper: null
