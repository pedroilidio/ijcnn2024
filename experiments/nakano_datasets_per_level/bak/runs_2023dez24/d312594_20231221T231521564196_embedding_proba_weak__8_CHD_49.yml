active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+amZmZmZkBQJiZmZmZmem/NDMzMzMz8z/MzMzMzMz8vw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAA8D8AAAAAAAAAwAAAAAAAAPC/AAAAAAAAAAAAAAAAAAAAQA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:24:54.897501
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 8
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__8
  params: {}
hash: d3125947e6e5f8479d9ed8eba7b314c3408d7dc57b387c3f27b7d0a0cd6b4800
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d312594_20231221T231521564196_embedding_proba_weak__8_CHD_49.yml
results:
  fit_time:
  - 537.017284154892
  - 541.3885746002197
  - 540.1049633026123
  - 545.7264471054077
  - 552.6437609195709
  score_time:
  - 6.859618663787842
  - 6.588618516921997
  - 7.314323902130127
  - 7.336781978607178
  - 6.822031021118164
  test_average_precision_macro:
  - 0.5032808220848675
  - 0.5295619775444269
  - 0.5546457355495745
  - 0.5333252176408758
  - 0.5209269842540052
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6455357599419651
  - 0.6902180844084469
  - 0.689725750502503
  - 0.6714850354968291
  - 0.6919638006556067
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7719823232323232
  - 0.7888520157325467
  - 0.8167534722222223
  - 0.7626001001001
  - 0.7995285423037715
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6187470000375518
  - 0.6592505693677563
  - 0.652976944059941
  - 0.6587426971681439
  - 0.6471468304573793
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7015151515151515
  - 0.7079646017699114
  - 0.7083333333333334
  - 0.7147147147147147
  - 0.7064220183486238
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7015151515151515
  - 0.7079646017699115
  - 0.7083333333333334
  - 0.7147147147147147
  - 0.7064220183486238
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7015151515151515
  - 0.7079646017699116
  - 0.7083333333333334
  - 0.7147147147147148
  - 0.7064220183486237
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6583732057416268
  - 0.6575470522248535
  - 0.6697355412753337
  - 0.671882408724514
  - 0.6771213612266277
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.559047982054001
  - 0.57209995236192
  - 0.5688035829318664
  - 0.5773680882464501
  - 0.56355678350991
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5402567094515752
  - 0.547945205479452
  - 0.5483870967741935
  - 0.5560747663551402
  - 0.5460992907801419
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5793624557260921
  - 0.5863119181703252
  - 0.5858031849103279
  - 0.6050388050388049
  - 0.5968704078795821
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.4972624882414213
  - 0.49732070997451494
  - 0.5113341050237141
  - 0.5128526148760265
  - 0.5186310605024756
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7901641414141417
  - 0.7888520157325465
  - 0.8167534722222225
  - 0.7716091091091091
  - 0.7995285423037718
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.13332105195241864
  - 0.1587932924986497
  - 0.16469418273772948
  - 0.17001656276272473
  - 0.17854782373671632
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.43522149219301837
  - 0.45710594258632703
  - 0.44017647836139057
  - 0.46238026776668045
  - 0.43116182593166236
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.45355210818173364
  - 0.4774230549862129
  - 0.47287851344830056
  - 0.4915331979383549
  - 0.43841753169740083
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.11187682583897594
  - 0.15599165841058696
  - 0.1608568659737461
  - 0.16678099685949052
  - 0.20657903280052706
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8390518447102588
  - 0.8601053687009833
  - 0.8829487439794956
  - 0.8329785775380314
  - 0.8685310691972473
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.590909090909091
  - -3.5575221238938055
  - -3.544642857142857
  - -3.630630630630631
  - -3.770642201834862
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.29848484848484846
  - -0.2920353982300885
  - -0.2916666666666667
  - -0.2852852852852853
  - -0.2935779816513761
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.29848484848484846
  - -0.2920353982300885
  - -0.2916666666666667
  - -0.2852852852852853
  - -0.29357798165137616
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.29848484848484846
  - -0.29203539823008856
  - -0.2916666666666667
  - -0.28528528528528524
  - -0.29357798165137616
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3416267942583732
  - -0.3424529477751465
  - -0.33026445872466637
  - -0.328117591275486
  - -0.3228786387733723
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.20169191919191917
  - -0.19904129793510325
  - -0.17624007936507935
  - -0.21463963963963964
  - -0.21279306829765543
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7015151515151515
  - 0.7079646017699114
  - 0.7083333333333334
  - 0.7147147147147147
  - 0.7064220183486238
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7015151515151515
  - 0.7079646017699115
  - 0.7083333333333334
  - 0.7147147147147147
  - 0.7064220183486238
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7015151515151515
  - 0.7079646017699116
  - 0.7083333333333334
  - 0.7147147147147148
  - 0.7064220183486237
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6583732057416268
  - 0.6575470522248535
  - 0.6697355412753337
  - 0.671882408724514
  - 0.6771213612266277
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7015151515151515
  - 0.7079646017699114
  - 0.7083333333333334
  - 0.7147147147147147
  - 0.7064220183486238
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7015151515151515
  - 0.7079646017699115
  - 0.7083333333333334
  - 0.7147147147147147
  - 0.7064220183486238
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7015151515151515
  - 0.7079646017699116
  - 0.7083333333333334
  - 0.7147147147147148
  - 0.7064220183486237
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6583732057416268
  - 0.6575470522248535
  - 0.6697355412753337
  - 0.671882408724514
  - 0.6771213612266277
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5364674042899665
  - 0.6281907297134001
  - 0.6011624411824034
  - 0.5419895823735126
  - 0.5382565985786877
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7599157894736841
  - 0.7971777364695789
  - 0.7963356130349544
  - 0.7817838559653727
  - 0.7717590178698394
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.8009587020648967
  - 0.8237599206349208
  - .nan
  - 0.7872069317023447
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5524077527670055
  - 0.6375046499789417
  - 0.6206939807656752
  - 0.5960921599914748
  - 0.6021163291245154
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8342381590616674
  - 0.8559037882953833
  - 0.8246821333434432
  - 0.8222109995883738
  - 0.835197550717393
  train_average_precision_macro_oob:
  - 0.6829283838663079
  - 0.7054335854244501
  - 0.7286869242969146
  - 0.6842163508455613
  - 0.6754221678025911
  train_average_precision_micro:
  - 0.8103638427856261
  - 0.8366321408674114
  - 0.8050967382918607
  - 0.7905437406895819
  - 0.8174222917234539
  train_average_precision_micro_oob:
  - 0.8072162481922346
  - 0.8286028492367425
  - 0.7887248616748349
  - 0.7792637647000277
  - 0.8085831006718968
  train_average_precision_samples:
  - 0.8737265917602995
  - 0.8758484162895928
  - 0.8717456734386757
  - 0.8490615615615617
  - 0.8861360239162929
  train_average_precision_samples_oob:
  - 0.8644475655430712
  - 0.8727249874308697
  - 0.8632963380988211
  - 0.846096096096096
  - 0.8789144245142002
  train_average_precision_weighted:
  - 0.8110150026088366
  - 0.8328674040018313
  - 0.7991669201182204
  - 0.7950325618371187
  - 0.8077273274013306
  train_average_precision_weighted_oob:
  - 0.799327174663543
  - 0.8149419306699969
  - 0.7790720699089281
  - 0.777130782125707
  - 0.7932618270685854
  train_f1_macro:
  - 0.8460674157303371
  - 0.8601055806938159
  - 0.8393528969149736
  - 0.8382132132132131
  - 0.8628550074738416
  train_f1_macro_oob:
  - 0.8299625468164794
  - 0.8469079939668175
  - 0.8243039879608727
  - 0.8175675675675675
  - 0.8490284005979074
  train_f1_micro:
  - 0.8460674157303371
  - 0.860105580693816
  - 0.8393528969149736
  - 0.8382132132132132
  - 0.8628550074738416
  train_f1_micro_oob:
  - 0.8299625468164794
  - 0.8469079939668175
  - 0.8243039879608728
  - 0.8175675675675675
  - 0.8490284005979073
  train_f1_samples:
  - 0.8460674157303372
  - 0.8601055806938159
  - 0.8393528969149737
  - 0.8382132132132133
  - 0.8628550074738416
  train_f1_samples_oob:
  - 0.8299625468164795
  - 0.8469079939668176
  - 0.8243039879608729
  - 0.8175675675675675
  - 0.8490284005979074
  train_f1_weighted:
  - 0.8157401330290059
  - 0.8377485140397622
  - 0.8124890144939556
  - 0.8083189990339075
  - 0.8367250057868327
  train_f1_weighted_oob:
  - 0.7938285512769021
  - 0.8183265801630221
  - 0.7898998516833252
  - 0.7814313877958167
  - 0.8154176916226279
  train_jaccard_macro:
  - 0.7403063068929704
  - 0.7581989833230932
  - 0.7293819078603568
  - 0.7306409158944273
  - 0.7631768441796134
  train_jaccard_macro_oob:
  - 0.7174850598033787
  - 0.7394555859830082
  - 0.7084218748197814
  - 0.7018535343792524
  - 0.7434549773192008
  train_jaccard_micro:
  - 0.7332035053554041
  - 0.7545484617929209
  - 0.7231766612641816
  - 0.7214862681744749
  - 0.7587906671048308
  train_jaccard_micro_oob:
  - 0.7093469910371318
  - 0.7344669718770438
  - 0.70112
  - 0.6914285714285714
  - 0.7376623376623377
  train_jaccard_samples:
  - 0.7665187995525073
  - 0.7850473056355409
  - 0.7564148417421555
  - 0.7514381264381264
  - 0.7902849766078465
  train_jaccard_samples_oob:
  - 0.744496327642395
  - 0.7665285694697459
  - 0.7345831745380278
  - 0.7248946998946998
  - 0.7709170500650321
  train_jaccard_weighted:
  - 0.6916102000863396
  - 0.7214978585138679
  - 0.6856117254431106
  - 0.6831995535204941
  - 0.7200796174230055
  train_jaccard_weighted_oob:
  - 0.6609905233961055
  - 0.6941661184922258
  - 0.6542844962895915
  - 0.6461070289528196
  - 0.6900487182938482
  train_label_ranking_average_precision_score:
  - 0.8759737827715349
  - 0.8826357466063344
  - 0.8785176824680204
  - 0.8535660660660648
  - 0.8928624813153956
  train_label_ranking_average_precision_score_oob:
  - 0.8666947565543064
  - 0.8795123177476114
  - 0.870068347128166
  - 0.8506006006005997
  - 0.885640881913303
  train_matthews_corrcoef_macro:
  - 0.5139112429432939
  - 0.5372000783398557
  - 0.507726254153419
  - 0.5011125266394961
  - 0.5431939609226062
  train_matthews_corrcoef_macro_oob:
  - 0.45338175782302725
  - 0.4773852773772305
  - 0.4450231810501597
  - 0.4289366117039481
  - 0.48445673272752154
  train_matthews_corrcoef_micro:
  - 0.7198096425931476
  - 0.7398392640391093
  - 0.7091834067238404
  - 0.7067255674333939
  - 0.7425451045863509
  train_matthews_corrcoef_micro_oob:
  - 0.6899527020400043
  - 0.7156520332261977
  - 0.6802914269607948
  - 0.6676529086725236
  - 0.717270298499929
  train_matthews_corrcoef_samples:
  - 0.7318156808707752
  - 0.743460288891506
  - 0.7166251384084198
  - 0.7169532969421831
  - 0.7475714619517065
  train_matthews_corrcoef_samples_oob:
  - 0.7004465394863234
  - 0.7191860024954432
  - 0.685898367482312
  - 0.6778765440110143
  - 0.7217871957414755
  train_matthews_corrcoef_weighted:
  - 0.576357338357518
  - 0.6099845987068463
  - 0.5790020423546207
  - 0.561389533798857
  - 0.6200477669108634
  train_matthews_corrcoef_weighted_oob:
  - 0.48447364497854684
  - 0.5129169481266052
  - 0.4791362022846983
  - 0.45581410885510276
  - 0.5238714899772047
  train_ndgc:
  - 0.9149833595938042
  - 0.9156402406797464
  - 0.9142994196721859
  - 0.8974730251691839
  - 0.9225593268928947
  train_ndgc_oob:
  - 0.9085263599421288
  - 0.9145521988124707
  - 0.9093198023398981
  - 0.8961462577093026
  - 0.9180379417738616
  train_neg_coverage_error:
  - -3.1370786516853935
  - -3.1357466063348416
  - -3.1715575620767495
  - -3.2184684684684686
  - -3.0358744394618835
  train_neg_coverage_error_oob:
  - -3.197752808988764
  - -3.2104072398190047
  - -3.2325056433408577
  - -3.286036036036036
  - -3.096412556053812
  train_neg_hamming_loss_macro:
  - -0.15393258426966294
  - -0.13989441930618401
  - -0.16064710308502636
  - -0.1617867867867868
  - -0.13714499252615844
  train_neg_hamming_loss_macro_oob:
  - -0.1700374531835206
  - -0.1530920060331825
  - -0.1756960120391272
  - -0.18243243243243243
  - -0.15097159940209268
  train_neg_hamming_loss_micro:
  - -0.15393258426966291
  - -0.13989441930618401
  - -0.16064710308502633
  - -0.1617867867867868
  - -0.13714499252615844
  train_neg_hamming_loss_micro_oob:
  - -0.1700374531835206
  - -0.15309200603318251
  - -0.17569601203912716
  - -0.18243243243243243
  - -0.15097159940209268
  train_neg_hamming_loss_samples:
  - -0.1539325842696629
  - -0.13989441930618404
  - -0.1606471030850263
  - -0.16178678678678676
  - -0.13714499252615842
  train_neg_hamming_loss_samples_oob:
  - -0.17003745318352056
  - -0.1530920060331825
  - -0.17569601203912716
  - -0.18243243243243243
  - -0.15097159940209268
  train_neg_hamming_loss_weighted:
  - -0.18425986697099417
  - -0.16225148596023775
  - -0.18751098550604425
  - -0.19168100096609253
  - -0.16327499421316732
  train_neg_hamming_loss_weighted_oob:
  - -0.20617144872309784
  - -0.18167341983697793
  - -0.21010014831667487
  - -0.21856861220418325
  - -0.1845823083773721
  train_neg_label_ranking_loss:
  - -0.11021847690387017
  - -0.1015082956259427
  - -0.1088725859041886
  - -0.12104604604604605
  - -0.09161684105630295
  train_neg_label_ranking_loss_oob:
  - -0.11950686641697876
  - -0.1129587732528909
  - -0.12039127163280662
  - -0.13019269269269268
  - -0.10184354758345789
  train_precision_macro:
  - 0.8460674157303371
  - 0.8601055806938159
  - 0.8393528969149736
  - 0.8382132132132131
  - 0.8628550074738416
  train_precision_macro_oob:
  - 0.8299625468164794
  - 0.8469079939668175
  - 0.8243039879608727
  - 0.8175675675675675
  - 0.8490284005979074
  train_precision_micro:
  - 0.8460674157303371
  - 0.860105580693816
  - 0.8393528969149736
  - 0.8382132132132132
  - 0.8628550074738416
  train_precision_micro_oob:
  - 0.8299625468164794
  - 0.8469079939668175
  - 0.8243039879608728
  - 0.8175675675675675
  - 0.8490284005979073
  train_precision_samples:
  - 0.8460674157303372
  - 0.8601055806938159
  - 0.8393528969149737
  - 0.8382132132132133
  - 0.8628550074738416
  train_precision_samples_oob:
  - 0.8299625468164795
  - 0.8469079939668176
  - 0.8243039879608729
  - 0.8175675675675675
  - 0.8490284005979074
  train_precision_weighted:
  - 0.8157401330290059
  - 0.8377485140397622
  - 0.8124890144939556
  - 0.8083189990339075
  - 0.8367250057868327
  train_precision_weighted_oob:
  - 0.7938285512769021
  - 0.8183265801630221
  - 0.7898998516833252
  - 0.7814313877958167
  - 0.8154176916226279
  train_recall_macro:
  - 0.8460674157303371
  - 0.8601055806938159
  - 0.8393528969149736
  - 0.8382132132132131
  - 0.8628550074738416
  train_recall_macro_oob:
  - 0.8299625468164794
  - 0.8469079939668175
  - 0.8243039879608727
  - 0.8175675675675675
  - 0.8490284005979074
  train_recall_micro:
  - 0.8460674157303371
  - 0.860105580693816
  - 0.8393528969149736
  - 0.8382132132132132
  - 0.8628550074738416
  train_recall_micro_oob:
  - 0.8299625468164794
  - 0.8469079939668175
  - 0.8243039879608728
  - 0.8175675675675675
  - 0.8490284005979073
  train_recall_samples:
  - 0.8460674157303372
  - 0.8601055806938159
  - 0.8393528969149737
  - 0.8382132132132133
  - 0.8628550074738416
  train_recall_samples_oob:
  - 0.8299625468164795
  - 0.8469079939668176
  - 0.8243039879608729
  - 0.8175675675675675
  - 0.8490284005979074
  train_recall_weighted:
  - 0.8157401330290059
  - 0.8377485140397622
  - 0.8124890144939556
  - 0.8083189990339075
  - 0.8367250057868327
  train_recall_weighted_oob:
  - 0.7938285512769021
  - 0.8183265801630221
  - 0.7898998516833252
  - 0.7814313877958167
  - 0.8154176916226279
  train_roc_auc_macro:
  - 0.8670150759895768
  - 0.8748146296067705
  - 0.8501327558241876
  - 0.8506568835961672
  - 0.8704504218359315
  train_roc_auc_macro_oob:
  - 0.8219504442741394
  - 0.8425825165104538
  - 0.8175052426969422
  - 0.8128638734028613
  - 0.8245418105567314
  train_roc_auc_micro:
  - 0.9002387684106702
  - 0.9108107184557788
  - 0.8936883714618181
  - 0.8889617177940907
  - 0.907235625227212
  train_roc_auc_micro_oob:
  - 0.8905472095695127
  - 0.9003412502780044
  - 0.8834183680835276
  - 0.8782907346498475
  - 0.897279392587342
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8233584816443373
  - 0.8285858541980462
  - 0.801333302205693
  - 0.8033661722316506
  - 0.824984905423244
  train_roc_auc_weighted_oob:
  - 0.8127935737792421
  - 0.8178984067678817
  - 0.7881058712538519
  - 0.7939588546426779
  - 0.8122635113767355
start: 2023-12-21 23:15:21.564196
wrapper: null
