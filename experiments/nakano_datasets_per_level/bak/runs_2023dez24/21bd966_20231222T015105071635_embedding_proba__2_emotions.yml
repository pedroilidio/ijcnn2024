active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMzA8BAMzMzMzPjP0AzMzMzM+M/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMzA8AgMzMzMzMLwHBmZmZmZhZAAJmZmZmZ2b+AMzMzMzPjPw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 01:51:25.500420
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__2
  params: {}
hash: 21bd966a2ca0b81fbd55a051dd8a644b7a2fa1c8b5cdd12581284a58b81bea69
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/21bd966_20231222T015105071635_embedding_proba__2_emotions.yml
results:
  fit_time:
  - 6.2048869132995605
  - 7.604829788208008
  - 6.653066158294678
  - 8.083682775497437
  - 8.206016302108765
  score_time:
  - 2.7817115783691406
  - 3.0052967071533203
  - 2.8199520111083984
  - 3.0335195064544678
  - 3.004639148712158
  test_average_precision_macro:
  - 0.7626314230507486
  - 0.7468966846719501
  - 0.7712440667252194
  - 0.757647903139035
  - 0.7396740931673088
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7735401595020512
  - 0.7542637507296794
  - 0.7823844592272703
  - 0.7646129899632886
  - 0.7392391904592788
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8303489439853077
  - 0.8068306010928962
  - 0.8410521140609638
  - 0.8296685340802987
  - 0.7876177024482108
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7699207302113903
  - 0.750488695529008
  - 0.7744473455848965
  - 0.7604438021508013
  - 0.7387737372238307
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8209366391184573
  - 0.8155737704918032
  - 0.8274336283185842
  - 0.8263305322128852
  - 0.8206214689265537
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8209366391184573
  - 0.8155737704918032
  - 0.827433628318584
  - 0.8263305322128851
  - 0.8206214689265536
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8209366391184573
  - 0.8155737704918031
  - 0.8274336283185842
  - 0.8263305322128851
  - 0.8206214689265536
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8191735537190082
  - 0.8123655515169498
  - 0.8224859211584875
  - 0.819327731092437
  - 0.8138674884437597
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6972477529395791
  - 0.692037861014831
  - 0.7087116927344547
  - 0.7073063764214371
  - 0.7022551255834332
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6962616822429907
  - 0.6885813148788927
  - 0.7056603773584905
  - 0.7040572792362768
  - 0.6958083832335329
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7207792207792207
  - 0.7270101483216236
  - 0.739654445849136
  - 0.7294917967186872
  - 0.7336965294592412
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6945635653736987
  - 0.6868409841742787
  - 0.701182373728286
  - 0.6974017414045621
  - 0.6918662061616654
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8303489439853075
  - 0.8068306010928961
  - 0.8410521140609635
  - 0.8296685340802986
  - 0.7876177024482109
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5597318403466922
  - 0.5404753977134035
  - 0.5831950632600958
  - 0.5746366375557491
  - 0.5667085456787891
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5697420989403201
  - 0.5526376165798057
  - 0.5943777771539389
  - 0.5821235560724994
  - 0.574879892831817
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5726182570235502
  - 0.5389086948755231
  - 0.5823908782025037
  - 0.6018411834550779
  - 0.5476567400536365
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5662036059969234
  - 0.5427811073526798
  - 0.5797602052665972
  - 0.5692259163762796
  - 0.5611788088654648
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8846739366034456
  - 0.8640153320029214
  - 0.8926223354705919
  - 0.8861368507231431
  - 0.8505649052647404
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.5785123966942147
  - -2.680327868852459
  - -2.5929203539823007
  - -2.6218487394957983
  - -2.7542372881355934
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1790633608815427
  - -0.18442622950819673
  - -0.17256637168141595
  - -0.17366946778711487
  - -0.17937853107344628
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1790633608815427
  - -0.18442622950819673
  - -0.17256637168141592
  - -0.17366946778711484
  - -0.17937853107344634
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.1790633608815427
  - -0.18442622950819676
  - -0.1725663716814159
  - -0.17366946778711487
  - -0.17937853107344634
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.18082644628099173
  - -0.1876344484830502
  - -0.17751407884151246
  - -0.180672268907563
  - -0.1861325115562404
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.12814508723599632
  - -0.16202185792349727
  - -0.11782202556538841
  - -0.1357142857142857
  - -0.16930320150659137
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8209366391184573
  - 0.8155737704918032
  - 0.8274336283185842
  - 0.8263305322128852
  - 0.8206214689265537
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8209366391184573
  - 0.8155737704918032
  - 0.827433628318584
  - 0.8263305322128851
  - 0.8206214689265536
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8209366391184573
  - 0.8155737704918031
  - 0.8274336283185842
  - 0.8263305322128851
  - 0.8206214689265536
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8191735537190082
  - 0.8123655515169498
  - 0.8224859211584875
  - 0.819327731092437
  - 0.8138674884437597
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8209366391184573
  - 0.8155737704918032
  - 0.8274336283185842
  - 0.8263305322128852
  - 0.8206214689265537
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8209366391184573
  - 0.8155737704918032
  - 0.827433628318584
  - 0.8263305322128851
  - 0.8206214689265536
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8209366391184573
  - 0.8155737704918031
  - 0.8274336283185842
  - 0.8263305322128851
  - 0.8206214689265536
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8191735537190082
  - 0.8123655515169498
  - 0.8224859211584875
  - 0.819327731092437
  - 0.8138674884437597
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8698208788225839
  - 0.8500857808176718
  - 0.8763865390087439
  - 0.8620553131239609
  - 0.8537921443881196
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8840008871146595
  - 0.8640585844453693
  - 0.891732830488289
  - 0.8781220244634879
  - 0.8695789865871834
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8718549127640036
  - 0.8379781420765028
  - 0.8821779744346117
  - 0.8642857142857143
  - 0.8306967984934086
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8708840457527849
  - 0.8495857695984184
  - 0.8757011957340903
  - 0.8612264465013936
  - 0.8516720489848832
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9818559248234108
  - 0.9793764209258301
  - 0.9813485306639809
  - 0.9813734492205081
  - 0.9808315699569877
  train_average_precision_macro_oob:
  - 0.8972756978311448
  - 0.8934713428024769
  - 0.9025630793594063
  - 0.8986547434561372
  - 0.8999457216712269
  train_average_precision_micro:
  - 0.9800413843732234
  - 0.977907979289427
  - 0.9796190185815294
  - 0.9798809427917211
  - 0.9787597083127424
  train_average_precision_micro_oob:
  - 0.9034760889706892
  - 0.9011543282478673
  - 0.9052620552932382
  - 0.9015603215762731
  - 0.9018692632125394
  train_average_precision_samples:
  - 0.9741643126177024
  - 0.9722222222222221
  - 0.9723379629629629
  - 0.9762072198781059
  - 0.9741871345029239
  train_average_precision_samples_oob:
  - 0.9138830037664785
  - 0.9161948572776598
  - 0.908425925925926
  - 0.9127988748241912
  - 0.9137076023391814
  train_average_precision_weighted:
  - 0.9825086194310851
  - 0.9805101006485808
  - 0.9820417756902288
  - 0.9822133854133113
  - 0.9817380429899701
  train_average_precision_weighted_oob:
  - 0.8993289966502076
  - 0.8980242177821637
  - 0.9066365673420105
  - 0.9017080234713674
  - 0.9036369721899192
  train_f1_macro:
  - 0.9477401129943503
  - 0.9437367303609342
  - 0.9458333333333334
  - 0.9462025316455698
  - 0.9484210526315789
  train_f1_macro_oob:
  - 0.8852401129943503
  - 0.8828733191790518
  - 0.8836805555555557
  - 0.8843178621659633
  - 0.8821052631578947
  train_f1_micro:
  - 0.9477401129943502
  - 0.9437367303609342
  - 0.9458333333333333
  - 0.9462025316455697
  - 0.9484210526315789
  train_f1_micro_oob:
  - 0.8852401129943502
  - 0.8828733191790517
  - 0.8836805555555556
  - 0.8843178621659634
  - 0.8821052631578947
  train_f1_samples:
  - 0.9477401129943502
  - 0.9437367303609342
  - 0.9458333333333334
  - 0.9462025316455697
  - 0.9484210526315789
  train_f1_samples_oob:
  - 0.8852401129943503
  - 0.8828733191790517
  - 0.8836805555555556
  - 0.8843178621659633
  - 0.8821052631578947
  train_f1_weighted:
  - 0.948005643319193
  - 0.943443511729942
  - 0.945115427927928
  - 0.9463858806945357
  - 0.9475580844001896
  train_f1_weighted_oob:
  - 0.8841200069101868
  - 0.882106961369343
  - 0.8822682057057057
  - 0.8831233153317902
  - 0.8823565670934091
  train_jaccard_macro:
  - 0.9009942593267065
  - 0.8938602293146959
  - 0.8975192078450621
  - 0.898349144363625
  - 0.902091861693905
  train_jaccard_macro_oob:
  - 0.7957431502552562
  - 0.7919938534329084
  - 0.7929353903662588
  - 0.794285326317515
  - 0.7901858340670969
  train_jaccard_micro:
  - 0.9006711409395973
  - 0.893467336683417
  - 0.8972332015810277
  - 0.8978978978978979
  - 0.9019019019019019
  train_jaccard_micro_oob:
  - 0.7941083306936966
  - 0.7903072537218878
  - 0.7916018662519441
  - 0.792625275764261
  - 0.7890772128060264
  train_jaccard_samples:
  - 0.9143966908797417
  - 0.9076938631078758
  - 0.9115773809523808
  - 0.9114928671890697
  - 0.9147869674185464
  train_jaccard_samples_oob:
  - 0.8187247780468119
  - 0.8152866242038217
  - 0.8158928571428571
  - 0.8169278681936909
  - 0.8134035087719297
  train_jaccard_weighted:
  - 0.9014388912053806
  - 0.8933021745586139
  - 0.8962144878423455
  - 0.898639860718788
  - 0.9005244383072664
  train_jaccard_weighted_oob:
  - 0.7937457575032935
  - 0.7905782864473692
  - 0.790525471059242
  - 0.792189601562879
  - 0.7904731774954435
  train_label_ranking_average_precision_score:
  - 0.9741643126177022
  - 0.9722222222222219
  - 0.9723379629629627
  - 0.9762072198781059
  - 0.9741871345029239
  train_label_ranking_average_precision_score_oob:
  - 0.9138830037664779
  - 0.916194857277659
  - 0.9084259259259252
  - 0.912798874824191
  - 0.9137076023391806
  train_matthews_corrcoef_macro:
  - 0.8740487158244683
  - 0.8655753031904387
  - 0.8692367829026996
  - 0.8700418345492144
  - 0.8767661697081808
  train_matthews_corrcoef_macro_oob:
  - 0.7201530851080848
  - 0.7162941662137533
  - 0.7154231190845457
  - 0.7183244861271353
  - 0.712242967920683
  train_matthews_corrcoef_micro:
  - 0.8770296213333713
  - 0.8680884630376078
  - 0.8716474556115875
  - 0.8733263875378051
  - 0.8786520179993137
  train_matthews_corrcoef_micro_oob:
  - 0.726444704006165
  - 0.7231181129099742
  - 0.7212501222723967
  - 0.7249043634009344
  - 0.7198579855509794
  train_matthews_corrcoef_samples:
  - 0.874765578866433
  - 0.8704254618342835
  - 0.8606808686744658
  - 0.8671853181558813
  - 0.8756847290763419
  train_matthews_corrcoef_samples_oob:
  - 0.7180449169079001
  - 0.7258250899007249
  - 0.7150638721685875
  - 0.7156498896214075
  - 0.716711027627588
  train_matthews_corrcoef_weighted:
  - 0.8766127986723528
  - 0.8672803123819156
  - 0.8699423828156404
  - 0.8726388501953554
  - 0.8771273318342087
  train_matthews_corrcoef_weighted_oob:
  - 0.7231177289431872
  - 0.7199910274911254
  - 0.7177770467622854
  - 0.7210956656458223
  - 0.7183620039681684
  train_ndgc:
  - 0.9825670018102678
  - 0.9814064682913004
  - 0.9814034402826013
  - 0.984326518089372
  - 0.9831799794035576
  train_ndgc_oob:
  - 0.9427040068472738
  - 0.9440634972848253
  - 0.9380141573328263
  - 0.9412211612696655
  - 0.9428016677067583
  train_neg_coverage_error:
  - -1.9639830508474576
  - -1.989384288747346
  - -1.9520833333333334
  - -1.9641350210970465
  - -1.9852631578947368
  train_neg_coverage_error_oob:
  - -2.2542372881355934
  - -2.2441613588110405
  - -2.247916666666667
  - -2.2320675105485233
  - -2.261052631578947
  train_neg_hamming_loss_macro:
  - -0.052259887005649715
  - -0.05626326963906581
  - -0.05416666666666666
  - -0.05379746835443037
  - -0.05157894736842106
  train_neg_hamming_loss_macro_oob:
  - -0.11475988700564971
  - -0.11712668082094833
  - -0.11631944444444443
  - -0.11568213783403658
  - -0.11789473684210526
  train_neg_hamming_loss_micro:
  - -0.052259887005649715
  - -0.05626326963906582
  - -0.05416666666666667
  - -0.05379746835443038
  - -0.05157894736842105
  train_neg_hamming_loss_micro_oob:
  - -0.11475988700564972
  - -0.11712668082094833
  - -0.11631944444444445
  - -0.11568213783403657
  - -0.11789473684210526
  train_neg_hamming_loss_samples:
  - -0.052259887005649715
  - -0.05626326963906582
  - -0.05416666666666666
  - -0.05379746835443038
  - -0.05157894736842105
  train_neg_hamming_loss_samples_oob:
  - -0.11475988700564971
  - -0.11712668082094832
  - -0.11631944444444443
  - -0.11568213783403655
  - -0.11789473684210526
  train_neg_hamming_loss_weighted:
  - -0.05199435668080696
  - -0.05655648827005796
  - -0.05488457207207208
  - -0.05361411930546429
  - -0.05244191559981034
  train_neg_hamming_loss_weighted_oob:
  - -0.11587999308981324
  - -0.117893038630657
  - -0.11773179429429428
  - -0.11687668466820965
  - -0.1176434329065908
  train_neg_label_ranking_loss:
  - -0.015683851224105462
  - -0.017297711724463316
  - -0.016730324074074078
  - -0.015301218940459448
  - -0.018584795321637426
  train_neg_label_ranking_loss_oob:
  - -0.06231756120527308
  - -0.059896201934418504
  - -0.0668113425925926
  - -0.06086497890295359
  - -0.06363157894736843
  train_precision_macro:
  - 0.9477401129943503
  - 0.9437367303609342
  - 0.9458333333333334
  - 0.9462025316455698
  - 0.9484210526315789
  train_precision_macro_oob:
  - 0.8852401129943503
  - 0.8828733191790518
  - 0.8836805555555557
  - 0.8843178621659633
  - 0.8821052631578947
  train_precision_micro:
  - 0.9477401129943502
  - 0.9437367303609342
  - 0.9458333333333333
  - 0.9462025316455697
  - 0.9484210526315789
  train_precision_micro_oob:
  - 0.8852401129943502
  - 0.8828733191790517
  - 0.8836805555555556
  - 0.8843178621659634
  - 0.8821052631578947
  train_precision_samples:
  - 0.9477401129943502
  - 0.9437367303609342
  - 0.9458333333333334
  - 0.9462025316455697
  - 0.9484210526315789
  train_precision_samples_oob:
  - 0.8852401129943503
  - 0.8828733191790517
  - 0.8836805555555556
  - 0.8843178621659633
  - 0.8821052631578947
  train_precision_weighted:
  - 0.948005643319193
  - 0.943443511729942
  - 0.945115427927928
  - 0.9463858806945357
  - 0.9475580844001896
  train_precision_weighted_oob:
  - 0.8841200069101868
  - 0.882106961369343
  - 0.8822682057057057
  - 0.8831233153317902
  - 0.8823565670934091
  train_recall_macro:
  - 0.9477401129943503
  - 0.9437367303609342
  - 0.9458333333333334
  - 0.9462025316455698
  - 0.9484210526315789
  train_recall_macro_oob:
  - 0.8852401129943503
  - 0.8828733191790518
  - 0.8836805555555557
  - 0.8843178621659633
  - 0.8821052631578947
  train_recall_micro:
  - 0.9477401129943502
  - 0.9437367303609342
  - 0.9458333333333333
  - 0.9462025316455697
  - 0.9484210526315789
  train_recall_micro_oob:
  - 0.8852401129943502
  - 0.8828733191790517
  - 0.8836805555555556
  - 0.8843178621659634
  - 0.8821052631578947
  train_recall_samples:
  - 0.9477401129943502
  - 0.9437367303609342
  - 0.9458333333333334
  - 0.9462025316455697
  - 0.9484210526315789
  train_recall_samples_oob:
  - 0.8852401129943503
  - 0.8828733191790517
  - 0.8836805555555556
  - 0.8843178621659633
  - 0.8821052631578947
  train_recall_weighted:
  - 0.948005643319193
  - 0.943443511729942
  - 0.945115427927928
  - 0.9463858806945357
  - 0.9475580844001896
  train_recall_weighted_oob:
  - 0.8841200069101868
  - 0.882106961369343
  - 0.8822682057057057
  - 0.8831233153317902
  - 0.8823565670934091
  train_roc_auc_macro:
  - 0.9913284701748696
  - 0.9903193681608006
  - 0.990954282016986
  - 0.9910184514512347
  - 0.9903393560818031
  train_roc_auc_macro_oob:
  - 0.9504587576297885
  - 0.9481702842916272
  - 0.9495915780271084
  - 0.9510630997663698
  - 0.9480286668294751
  train_roc_auc_micro:
  - 0.9900701175560019
  - 0.9888870993718795
  - 0.9897133579362496
  - 0.9898921366760665
  - 0.9888707514854305
  train_roc_auc_micro_oob:
  - 0.9512390417712833
  - 0.9491823037828516
  - 0.9494266480335757
  - 0.9502665455375527
  - 0.9487055863202654
  train_roc_auc_samples:
  - 0.9843161487758947
  - 0.9827022882755366
  - 0.983269675925926
  - 0.9846987810595407
  - 0.9814152046783625
  train_roc_auc_samples_oob:
  - 0.9376824387947269
  - 0.9401037980655815
  - 0.9331886574074074
  - 0.9391350210970465
  - 0.9363684210526315
  train_roc_auc_weighted:
  - 0.991254486165953
  - 0.9905215030271606
  - 0.9908306940430446
  - 0.991044443774685
  - 0.9904061854166109
  train_roc_auc_weighted_oob:
  - 0.9506594722612787
  - 0.9492046485595909
  - 0.9501527972574249
  - 0.9513953875434832
  - 0.9486783529816968
start: 2023-12-22 01:51:05.071635
wrapper: null
