active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j+AZmZmZmb2P4BmZmZmZvY/wMzMzMzMDMAAMzMzMzPjvw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:49:56.857091
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - xt
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.ExtraTreesRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.8
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    - - rf_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - rf
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.RandomForestRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.95
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_weak__2
  params: {}
hash: 4cdac20434f97bf3bb9b8f36e181f430b893fc6eb356385e8dedd03ca6de3857
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/4cdac20_20231221T084944283964_embedding_weak__2_VirusGO.yml
results:
  fit_time:
  - 7.402249574661255
  - 7.1538918018341064
  - 7.592620849609375
  - 6.818271636962891
  - 7.136431932449341
  score_time:
  - 1.3198041915893555
  - 1.3393206596374512
  - 1.3275902271270752
  - 1.3020992279052734
  - 1.216658115386963
  test_average_precision_macro:
  - 0.8966392150693735
  - 0.9305623628330356
  - 0.8972831844636402
  - 0.9243153629105839
  - 0.9883086614717541
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.827204936284495
  - 0.8559442639031579
  - 0.8712415317231706
  - 0.8563186991294199
  - 0.9324862660787764
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9049999999999999
  - 0.8902083333333334
  - 0.9229166666666666
  - 0.914814814814815
  - 0.9404761904761905
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8699131244205002
  - 0.932996734798503
  - 0.9179550372834862
  - 0.9286768778955012
  - 0.9761383545530332
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7875000000000001
  - 0.7958333333333334
  - 0.8041666666666667
  - 0.8296296296296296
  - 0.7976190476190476
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7875
  - 0.7958333333333333
  - 0.8041666666666667
  - 0.8296296296296296
  - 0.7976190476190477
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7875
  - 0.7958333333333333
  - 0.8041666666666668
  - 0.82962962962963
  - 0.7976190476190478
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6749999999999999
  - 0.6903846153846154
  - 0.7025510204081633
  - 0.7297052154195011
  - 0.6755368814192344
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6750451240932764
  - 0.683551237862548
  - 0.6938954765041722
  - 0.7286222735463074
  - 0.6906128021635897
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6494845360824743
  - 0.6608996539792388
  - 0.6724738675958188
  - 0.7088607594936709
  - 0.6633663366336634
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.656547619047619
  - 0.6726190476190477
  - 0.6815476190476192
  - 0.7126984126984128
  - 0.6683673469387756
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5291994160316404
  - 0.5444488322427852
  - 0.5586566642467263
  - 0.5887399454885246
  - 0.5287367422504983
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.905
  - 0.8902083333333334
  - 0.9229166666666664
  - 0.9148148148148147
  - 0.9404761904761905
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.05246668231127973
  - 0.0444745340180939
  - 0.05716619504750295
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.2139260671822357
  - 0.18098607550490678
  - 0.22511430508837743
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.075
  - 0.05
  - 0.05849901182297058
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.10896926326188867
  - 0.09257964224174647
  - 0.118999018262149
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9333247570839127
  - 0.9228359864401738
  - 0.9474163029643894
  - 0.9392285907920312
  - 0.956063065901364
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.675
  - -1.7
  - -1.55
  - -1.4
  - -1.3333333333333333
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21250000000000002
  - -0.2041666666666667
  - -0.1958333333333334
  - -0.17037037037037037
  - -0.2023809523809524
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2125
  - -0.20416666666666666
  - -0.19583333333333333
  - -0.17037037037037037
  - -0.20238095238095238
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2125
  - -0.20416666666666666
  - -0.19583333333333333
  - -0.1703703703703704
  - -0.20238095238095233
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3249999999999999
  - -0.30961538461538457
  - -0.29744897959183675
  - -0.2702947845804989
  - -0.32446311858076554
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.07
  - -0.07340277777777779
  - -0.05465277777777777
  - -0.05555555555555555
  - -0.023809523809523808
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7875000000000001
  - 0.7958333333333334
  - 0.8041666666666667
  - 0.8296296296296296
  - 0.7976190476190476
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7875
  - 0.7958333333333333
  - 0.8041666666666667
  - 0.8296296296296296
  - 0.7976190476190477
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7875
  - 0.7958333333333333
  - 0.8041666666666668
  - 0.82962962962963
  - 0.7976190476190478
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6749999999999999
  - 0.6903846153846154
  - 0.7025510204081633
  - 0.7297052154195011
  - 0.6755368814192344
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7875000000000001
  - 0.7958333333333334
  - 0.8041666666666667
  - 0.8296296296296296
  - 0.7976190476190476
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7875
  - 0.7958333333333333
  - 0.8041666666666667
  - 0.8296296296296296
  - 0.7976190476190477
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7875
  - 0.7958333333333333
  - 0.8041666666666668
  - 0.82962962962963
  - 0.7976190476190478
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6749999999999999
  - 0.6903846153846154
  - 0.7025510204081633
  - 0.7297052154195011
  - 0.6755368814192344
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9588317485536155
  - 0.9731099894942606
  - 0.962027749656626
  - 0.9670355947256951
  - 0.9929920116194625
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9565307604523291
  - 0.9549918166939443
  - 0.9496206859707234
  - 0.9512420352756487
  - 0.9841966637401229
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9299999999999999
  - 0.9265972222222221
  - 0.9453472222222222
  - 0.9444444444444444
  - 0.9761904761904762
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9375489765515341
  - 0.9689980912806999
  - 0.9535317750288522
  - 0.9621169025101329
  - 0.9856209150326797
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9535878672969963
  - 0.9536869792245537
  - 0.9606090359141309
  - 0.9642821538064759
  - 0.9363090123260392
  train_average_precision_macro_oob:
  - 0.895966265233184
  - 0.8960759453127927
  - 0.9131588408220824
  - 0.9103703740407997
  - 0.8466326883087856
  train_average_precision_micro:
  - 0.9308880312837884
  - 0.9210441607867635
  - 0.9228993066283286
  - 0.9308498078387504
  - 0.9079054253567932
  train_average_precision_micro_oob:
  - 0.8600996282999032
  - 0.8468932092219462
  - 0.8439431685865222
  - 0.8689927519053674
  - 0.8062462305726494
  train_average_precision_samples:
  - 0.9615768463073852
  - 0.9428143712574849
  - 0.9615768463073852
  - 0.9651234567901235
  - 0.9544444444444443
  train_average_precision_samples_oob:
  - 0.899251497005988
  - 0.900998003992016
  - 0.9067864271457085
  - 0.9019547325102881
  - 0.8884848484848483
  train_average_precision_weighted:
  - 0.9621350160651292
  - 0.9531655321903565
  - 0.9549041468058828
  - 0.9691791365027328
  - 0.9393514772475442
  train_average_precision_weighted_oob:
  - 0.9061248594756643
  - 0.8969268495609518
  - 0.8993839450267386
  - 0.9242463115377144
  - 0.8499588805739529
  train_f1_macro:
  - 0.7994011976047903
  - 0.8093812375249501
  - 0.8053892215568862
  - 0.815843621399177
  - 0.8010101010101011
  train_f1_macro_oob:
  - 0.7994011976047903
  - 0.8093812375249501
  - 0.8043912175648703
  - 0.8065843621399177
  - 0.796969696969697
  train_f1_micro:
  - 0.7994011976047904
  - 0.8093812375249501
  - 0.8053892215568862
  - 0.815843621399177
  - 0.8010101010101011
  train_f1_micro_oob:
  - 0.7994011976047904
  - 0.8093812375249501
  - 0.8043912175648703
  - 0.8065843621399177
  - 0.796969696969697
  train_f1_samples:
  - 0.7994011976047901
  - 0.8093812375249498
  - 0.8053892215568861
  - 0.8158436213991769
  - 0.8010101010101007
  train_f1_samples_oob:
  - 0.7994011976047901
  - 0.8093812375249498
  - 0.8043912175648702
  - 0.8065843621399177
  - 0.7969696969696968
  train_f1_weighted:
  - 0.6838263770965531
  - 0.705
  - 0.6979145157959943
  - 0.7260840479231284
  - 0.6921151816674205
  train_f1_weighted_oob:
  - 0.6838263770965531
  - 0.705
  - 0.6958496799504439
  - 0.7071094082588334
  - 0.6837931554349465
  train_jaccard_macro:
  - 0.6913520230254836
  - 0.7016991794162467
  - 0.6970584043862605
  - 0.7068447096803873
  - 0.6916597639733956
  train_jaccard_macro_oob:
  - 0.6913520230254836
  - 0.7016991794162467
  - 0.696001509253041
  - 0.696531013248435
  - 0.6875720642335219
  train_jaccard_micro:
  - 0.6658354114713217
  - 0.6797988264878457
  - 0.6741854636591479
  - 0.6889661164205039
  - 0.6680707666385847
  train_jaccard_micro_oob:
  - 0.6658354114713217
  - 0.6797988264878457
  - 0.672787979966611
  - 0.6758620689655173
  - 0.6624685138539043
  train_jaccard_samples:
  - 0.6712289706301683
  - 0.6879098944967209
  - 0.6823495865412034
  - 0.6984126984126986
  - 0.6735930735930736
  train_jaccard_samples_oob:
  - 0.6712289706301683
  - 0.6879098944967209
  - 0.6806387225548903
  - 0.6851851851851852
  - 0.6683982683982685
  train_jaccard_weighted:
  - 0.5386331986490818
  - 0.5606985648690972
  - 0.5527862121956125
  - 0.583715628788404
  - 0.5472436024931395
  train_jaccard_weighted_oob:
  - 0.5386331986490818
  - 0.5606985648690972
  - 0.5505995326096412
  - 0.5625627941066078
  - 0.5388241612378774
  train_label_ranking_average_precision_score:
  - 0.9615768463073852
  - 0.9428143712574849
  - 0.9615768463073853
  - 0.9651234567901236
  - 0.9544444444444445
  train_label_ranking_average_precision_score_oob:
  - 0.8992514970059879
  - 0.900998003992016
  - 0.9067864271457086
  - 0.9019547325102879
  - 0.8884848484848487
  train_matthews_corrcoef_macro:
  - 0.0
  - 0.04740563336230987
  - 0.04400804014137594
  - 0.10099899195373672
  - 0.030986810656512976
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.04740563336230987
  - 0.04103690750748377
  - 0.07440693604194801
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.0
  - 0.19064210153093922
  - 0.1779824464279636
  - 0.3096824563887566
  - 0.12619205451224627
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.19064210153093922
  - 0.1664036508403467
  - 0.24367154198763405
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.0
  - 0.05389221556886228
  - 0.04790419161676647
  - 0.12319142501463233
  - 0.015332255322028506
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.05389221556886228
  - 0.041916167664670656
  - 0.08124862753190358
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.0
  - 0.09812966105998143
  - 0.09105111753388126
  - 0.20654623665031313
  - 0.06382358015819091
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.09812966105998143
  - 0.0849039465672078
  - 0.15255851195652453
  - 0.0
  train_ndgc:
  - 0.9728206480136632
  - 0.9589673533895708
  - 0.9712777965280336
  - 0.975702780269455
  - 0.9683071354125259
  train_ndgc_oob:
  - 0.9274845220488938
  - 0.9294858441103887
  - 0.9331363357896518
  - 0.930392777342699
  - 0.9197436474207675
  train_neg_coverage_error:
  - -1.3293413173652695
  - -1.3952095808383234
  - -1.3293413173652695
  - -1.3888888888888888
  - -1.393939393939394
  train_neg_coverage_error_oob:
  - -1.5508982035928143
  - -1.5449101796407185
  - -1.532934131736527
  - -1.5925925925925926
  - -1.587878787878788
  train_neg_hamming_loss_macro:
  - -0.20059880239520958
  - -0.1906187624750499
  - -0.1946107784431138
  - -0.18415637860082304
  - -0.19898989898989897
  train_neg_hamming_loss_macro_oob:
  - -0.20059880239520958
  - -0.1906187624750499
  - -0.19560878243512977
  - -0.1934156378600823
  - -0.203030303030303
  train_neg_hamming_loss_micro:
  - -0.20059880239520958
  - -0.1906187624750499
  - -0.19461077844311378
  - -0.18415637860082304
  - -0.198989898989899
  train_neg_hamming_loss_micro_oob:
  - -0.20059880239520958
  - -0.1906187624750499
  - -0.19560878243512975
  - -0.1934156378600823
  - -0.20303030303030303
  train_neg_hamming_loss_samples:
  - -0.20059880239520958
  - -0.19061876247504989
  - -0.19461077844311372
  - -0.18415637860082304
  - -0.198989898989899
  train_neg_hamming_loss_samples_oob:
  - -0.20059880239520958
  - -0.19061876247504989
  - -0.19560878243512972
  - -0.1934156378600823
  - -0.20303030303030303
  train_neg_hamming_loss_weighted:
  - -0.31617362290344686
  - -0.295
  - -0.30208548420400577
  - -0.2739159520768716
  - -0.3078848183325795
  train_neg_hamming_loss_weighted_oob:
  - -0.31617362290344686
  - -0.295
  - -0.304150320049556
  - -0.29289059174116644
  - -0.3162068445650535
  train_neg_label_ranking_loss:
  - -0.02230538922155689
  - -0.03622754491017964
  - -0.02275449101796407
  - -0.02330246913580247
  - -0.029915824915824913
  train_neg_label_ranking_loss_oob:
  - -0.06375582168995343
  - -0.06166001330671989
  - -0.05763473053892216
  - -0.060168038408779156
  - -0.06883838383838384
  train_precision_macro:
  - 0.7994011976047903
  - 0.8093812375249501
  - 0.8053892215568862
  - 0.815843621399177
  - 0.8010101010101011
  train_precision_macro_oob:
  - 0.7994011976047903
  - 0.8093812375249501
  - 0.8043912175648703
  - 0.8065843621399177
  - 0.796969696969697
  train_precision_micro:
  - 0.7994011976047904
  - 0.8093812375249501
  - 0.8053892215568862
  - 0.815843621399177
  - 0.8010101010101011
  train_precision_micro_oob:
  - 0.7994011976047904
  - 0.8093812375249501
  - 0.8043912175648703
  - 0.8065843621399177
  - 0.796969696969697
  train_precision_samples:
  - 0.7994011976047901
  - 0.8093812375249498
  - 0.8053892215568861
  - 0.8158436213991769
  - 0.8010101010101007
  train_precision_samples_oob:
  - 0.7994011976047901
  - 0.8093812375249498
  - 0.8043912175648702
  - 0.8065843621399177
  - 0.7969696969696968
  train_precision_weighted:
  - 0.6838263770965531
  - 0.705
  - 0.6979145157959943
  - 0.7260840479231284
  - 0.6921151816674205
  train_precision_weighted_oob:
  - 0.6838263770965531
  - 0.705
  - 0.6958496799504439
  - 0.7071094082588334
  - 0.6837931554349465
  train_recall_macro:
  - 0.7994011976047903
  - 0.8093812375249501
  - 0.8053892215568862
  - 0.815843621399177
  - 0.8010101010101011
  train_recall_macro_oob:
  - 0.7994011976047903
  - 0.8093812375249501
  - 0.8043912175648703
  - 0.8065843621399177
  - 0.796969696969697
  train_recall_micro:
  - 0.7994011976047904
  - 0.8093812375249501
  - 0.8053892215568862
  - 0.815843621399177
  - 0.8010101010101011
  train_recall_micro_oob:
  - 0.7994011976047904
  - 0.8093812375249501
  - 0.8043912175648703
  - 0.8065843621399177
  - 0.796969696969697
  train_recall_samples:
  - 0.7994011976047901
  - 0.8093812375249498
  - 0.8053892215568861
  - 0.8158436213991769
  - 0.8010101010101007
  train_recall_samples_oob:
  - 0.7994011976047901
  - 0.8093812375249498
  - 0.8043912175648702
  - 0.8065843621399177
  - 0.7969696969696968
  train_recall_weighted:
  - 0.6838263770965531
  - 0.705
  - 0.6979145157959943
  - 0.7260840479231284
  - 0.6921151816674205
  train_recall_weighted_oob:
  - 0.6838263770965531
  - 0.705
  - 0.6958496799504439
  - 0.7071094082588334
  - 0.6837931554349465
  train_roc_auc_macro:
  - 0.9861635268621245
  - 0.9803126728944397
  - 0.9824422239895294
  - 0.9909896634531719
  - 0.9746803643249589
  train_roc_auc_macro_oob:
  - 0.9658869929580322
  - 0.9625388248296374
  - 0.9707395414969291
  - 0.9772898050620062
  - 0.9511732321538698
  train_roc_auc_micro:
  - 0.9781274650468009
  - 0.9745511221945138
  - 0.9788652071246694
  - 0.9764968899536857
  - 0.9725138565726501
  train_roc_auc_micro_oob:
  - 0.9552922031540176
  - 0.9534725685785537
  - 0.9553567575232588
  - 0.9542557348485334
  - 0.9453619103468716
  train_roc_auc_samples:
  - 0.977694610778443
  - 0.9637724550898205
  - 0.9772455089820359
  - 0.9766975308641975
  - 0.970084175084175
  train_roc_auc_samples_oob:
  - 0.9362441783100465
  - 0.9383399866932801
  - 0.9423652694610778
  - 0.939831961591221
  - 0.9311616161616161
  train_roc_auc_weighted:
  - 0.9846600869483402
  - 0.9763104300561989
  - 0.9781866224033134
  - 0.9881301933233609
  - 0.9716386469506111
  train_roc_auc_weighted_oob:
  - 0.962530658628501
  - 0.9542432756870538
  - 0.9576633436873483
  - 0.9707414308775849
  - 0.9427812975442321
start: 2023-12-21 08:49:44.283964
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
