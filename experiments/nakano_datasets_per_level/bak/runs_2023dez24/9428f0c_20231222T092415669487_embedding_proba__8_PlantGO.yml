active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            kJmZmZmZ6b/AmZmZmZnJP8CZmZmZmck/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz47+AmZmZmZnZP4CZmZmZmdk/gJmZmZmZ2T9AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AM3MzMzMDEAAMzMzMzMDwAAzMzMzMwvAAM3MzMzMDEAAZmZmZmb2vw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 09:26:50.071484
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 8
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__8
  params: {}
hash: 9428f0c5dc9bc7422d9d71b383553d50213ed28ae496ac32ccc300e07d29f00d
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/9428f0c_20231222T092415669487_embedding_proba__8_PlantGO.yml
results:
  fit_time:
  - 91.47748160362244
  - 91.40316557884216
  - 96.08211255073547
  - 98.380774974823
  - 98.31207132339478
  score_time:
  - 10.777974367141724
  - 10.956263065338135
  - 11.998852729797363
  - 11.888468503952026
  - 11.922525644302368
  test_average_precision_macro:
  - 0.7135451583424599
  - 0.7335659643313254
  - 0.7135188180328903
  - 0.68636546167134
  - 0.7900128287452706
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7612306556384296
  - 0.7572910949996452
  - 0.7780006496334889
  - 0.735539570533208
  - 0.8140999858567138
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.863341375060125
  - 0.8617845117845118
  - 0.8681801866475235
  - 0.873950066137566
  - 0.9106659415035049
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7945266714524694
  - 0.7869877216667758
  - 0.796490242348164
  - 0.7506780547079567
  - 0.8362213965048448
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9171006944444445
  - 0.9183501683501684
  - 0.916247906197655
  - 0.9144965277777777
  - 0.918781725888325
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9171006944444444
  - 0.9183501683501684
  - 0.916247906197655
  - 0.9144965277777778
  - 0.9187817258883249
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9171006944444443
  - 0.9183501683501686
  - 0.9162479061976548
  - 0.9144965277777777
  - 0.9187817258883249
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8588590801886791
  - 0.8574129924840824
  - 0.8503179404129654
  - 0.8467653508771928
  - 0.8608370845704434
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8535593377761638
  - 0.8558437243587299
  - 0.8531258755500254
  - 0.85045252798044
  - 0.856232645755071
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8468937875751503
  - 0.8490272373540856
  - 0.8454404945904173
  - 0.8424630147940824
  - 0.8497652582159625
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8496794871794872
  - 0.8509268509268507
  - 0.8470373847258266
  - 0.8445283882783882
  - 0.8520444022982093
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7582167527001371
  - 0.7566815370413668
  - 0.7472809452382326
  - 0.7416287727643522
  - 0.7613377290394177
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8633413750601252
  - 0.8617845117845118
  - 0.8681801866475233
  - 0.8739500661375664
  - 0.9106659415035049
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.067805876637747
  - 0.0513107385955491
  - 0.054401766361760605
  - 0.0314711994248611
  - 0.06847031544551581
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.30020939070460345
  - 0.2708680767487892
  - 0.21933649713235398
  - 0.22944732156402278
  - 0.2931267075232644
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.12357954545454546
  - 0.0950413223140496
  - 0.06898126998629511
  - 0.07670454545454546
  - 0.1107521919704661
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.17927601567904186
  - 0.14687885243443516
  - 0.13982753232675363
  - 0.1029966526631818
  - 0.1779869624151339
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.89900827676892
  - 0.897018491005479
  - 0.9018589980808593
  - 0.9072049446722178
  - 0.9346734210921245
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.6458333333333333
  - -1.5101010101010102
  - -1.5628140703517588
  - -1.5833333333333333
  - -1.380710659898477
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08289930555555555
  - -0.08164983164983165
  - -0.08375209380234507
  - -0.08550347222222222
  - -0.08121827411167513
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08289930555555555
  - -0.08164983164983165
  - -0.08375209380234507
  - -0.08550347222222222
  - -0.08121827411167512
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08289930555555555
  - -0.08164983164983168
  - -0.08375209380234507
  - -0.08550347222222221
  - -0.08121827411167512
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.1411409198113207
  - -0.14258700751591746
  - -0.1496820595870347
  - -0.15323464912280702
  - -0.13916291542955656
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.04656723484848485
  - -0.03996786042240588
  - -0.04314755596162631
  - -0.04060220258136925
  - -0.024867114461023087
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9171006944444445
  - 0.9183501683501684
  - 0.916247906197655
  - 0.9144965277777777
  - 0.918781725888325
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9171006944444444
  - 0.9183501683501684
  - 0.916247906197655
  - 0.9144965277777778
  - 0.9187817258883249
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9171006944444443
  - 0.9183501683501686
  - 0.9162479061976548
  - 0.9144965277777777
  - 0.9187817258883249
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8588590801886791
  - 0.8574129924840824
  - 0.8503179404129654
  - 0.8467653508771928
  - 0.8608370845704434
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9171006944444445
  - 0.9183501683501684
  - 0.916247906197655
  - 0.9144965277777777
  - 0.918781725888325
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9171006944444444
  - 0.9183501683501684
  - 0.916247906197655
  - 0.9144965277777778
  - 0.9187817258883249
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9171006944444443
  - 0.9183501683501686
  - 0.9162479061976548
  - 0.9144965277777777
  - 0.9187817258883249
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8588590801886791
  - 0.8574129924840824
  - 0.8503179404129654
  - 0.8467653508771928
  - 0.8608370845704434
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9563589405429852
  - 0.9654059822959243
  - 0.9621323763127153
  - 0.9372679688378208
  - 0.9739991744780472
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9617951585555033
  - 0.967912612326653
  - 0.9661345344586991
  - 0.956341711297119
  - 0.9743766220102406
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9534327651515152
  - 0.9600321395775941
  - 0.9568524440383737
  - 0.9593977974186307
  - 0.9751328855389768
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9618985490300636
  - 0.9600329931241155
  - 0.9623770048238434
  - 0.9489668418766846
  - 0.9682151118525356
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8757693865470833
  - 0.8653848024443827
  - 0.8432901476672475
  - 0.8571021629875997
  - 0.8790109501931034
  train_average_precision_macro_oob:
  - 0.7573493051525922
  - 0.7846683021079232
  - 0.7652964130866984
  - 0.789663229811044
  - 0.781097832582497
  train_average_precision_micro:
  - 0.8959871354038718
  - 0.901911759625896
  - 0.895570458192305
  - 0.8907617515059275
  - 0.9052594219078135
  train_average_precision_micro_oob:
  - 0.836374423058149
  - 0.8497696370590907
  - 0.8402736931602859
  - 0.8514999283646041
  - 0.853554961317352
  train_average_precision_samples:
  - 0.9239610297816405
  - 0.9232147944647945
  - 0.9244967092528069
  - 0.9247219101226734
  - 0.9322521446401089
  train_average_precision_samples_oob:
  - 0.8936372540380175
  - 0.9005077330077329
  - 0.8921495812702487
  - 0.8972701845793449
  - 0.9025273311124782
  train_average_precision_weighted:
  - 0.912749308710847
  - 0.9067519738095642
  - 0.8981551799242077
  - 0.8984466863796237
  - 0.9131388947956067
  train_average_precision_weighted_oob:
  - 0.8473276545819891
  - 0.8611997259955811
  - 0.8508496248067164
  - 0.8643878671644691
  - 0.8603510361004502
  train_f1_macro:
  - 0.9328880407124681
  - 0.9333333333333332
  - 0.9324989302524603
  - 0.9346904156064463
  - 0.9329918907383695
  train_f1_macro_oob:
  - 0.9206955046649702
  - 0.9197649572649572
  - 0.9213735558408215
  - 0.9233460559796437
  - 0.9220017072129746
  train_f1_micro:
  - 0.9328880407124682
  - 0.9333333333333333
  - 0.9324989302524604
  - 0.9346904156064462
  - 0.9329918907383696
  train_f1_micro_oob:
  - 0.9206955046649703
  - 0.9197649572649572
  - 0.9213735558408216
  - 0.9233460559796438
  - 0.9220017072129748
  train_f1_samples:
  - 0.9328880407124682
  - 0.9333333333333332
  - 0.9324989302524603
  - 0.934690415606446
  - 0.9329918907383695
  train_f1_samples_oob:
  - 0.9206955046649703
  - 0.9197649572649572
  - 0.9213735558408214
  - 0.9233460559796438
  - 0.9220017072129747
  train_f1_weighted:
  - 0.8913836141974469
  - 0.8920524972657674
  - 0.8876171905894664
  - 0.8950291447855196
  - 0.8921737043635696
  train_f1_weighted_oob:
  - 0.8656440254875505
  - 0.8612893425689633
  - 0.8639570113585895
  - 0.8716456427192176
  - 0.8684109401366682
  train_jaccard_macro:
  - 0.8776230462897275
  - 0.8783527319341173
  - 0.8773036760882714
  - 0.8805959414047934
  - 0.8777252873690772
  train_jaccard_macro_oob:
  - 0.8590577551080858
  - 0.8578228897339472
  - 0.8602308364562353
  - 0.8630379505954237
  - 0.8609285365577852
  train_jaccard_micro:
  - 0.8742175856929956
  - 0.875
  - 0.8735344222868023
  - 0.8773885350318471
  - 0.8744
  train_jaccard_micro_oob:
  - 0.8530451866404715
  - 0.8514489170210662
  - 0.8542100565307944
  - 0.8576070901033973
  - 0.8552905077699693
  train_jaccard_samples:
  - 0.8775717920756089
  - 0.8784277261200337
  - 0.8766748014501544
  - 0.880619634818108
  - 0.8776378551026437
  train_jaccard_samples_oob:
  - 0.8553421133573805
  - 0.8537728937728937
  - 0.8566604127579737
  - 0.8601795151413472
  - 0.8577929113140379
  train_jaccard_weighted:
  - 0.8070304695780625
  - 0.8082159808997068
  - 0.8020555911862804
  - 0.8130190925507352
  - 0.8081799701443534
  train_jaccard_weighted_oob:
  - 0.7680587190074284
  - 0.7621817112486932
  - 0.766253425863443
  - 0.7771047132137613
  - 0.7720753490465238
  train_label_ranking_average_precision_score:
  - 0.9239610297816412
  - 0.9232147944647946
  - 0.9244967092528071
  - 0.9247219101226736
  - 0.9322521446401093
  train_label_ranking_average_precision_score_oob:
  - 0.8936372540380177
  - 0.9005077330077332
  - 0.8921495812702492
  - 0.8972701845793454
  - 0.9025273311124786
  train_matthews_corrcoef_macro:
  - 0.17121372784138264
  - 0.1784911271560322
  - 0.1795915569321146
  - 0.19855512073923487
  - 0.1723194322022766
  train_matthews_corrcoef_macro_oob:
  - 0.07759225518918146
  - 0.09441442841954965
  - 0.11402046426723833
  - 0.1169339925459082
  - 0.09945239598371043
  train_matthews_corrcoef_micro:
  - 0.4813553719890327
  - 0.492653995580381
  - 0.48453678824254526
  - 0.5036549006826276
  - 0.4872268416779883
  train_matthews_corrcoef_micro_oob:
  - 0.32109303431127634
  - 0.3173197103164093
  - 0.34409789494599546
  - 0.36619406484652145
  - 0.34933791492965194
  train_matthews_corrcoef_samples:
  - 0.26617274900494625
  - 0.2773690884404824
  - 0.2654215073576722
  - 0.2830297680176528
  - 0.26958299848131445
  train_matthews_corrcoef_samples_oob:
  - 0.1254915567892667
  - 0.12263969644070943
  - 0.1409145980770888
  - 0.15607404562654356
  - 0.14489959224469692
  train_matthews_corrcoef_weighted:
  - 0.3882295840665946
  - 0.3991503799134562
  - 0.3936232024708296
  - 0.41590942350876897
  - 0.39252442878504484
  train_matthews_corrcoef_weighted_oob:
  - 0.2076091004984152
  - 0.22761766433649092
  - 0.26465669405601366
  - 0.2602554412349971
  - 0.2502223136314849
  train_ndgc:
  - 0.9438332863823767
  - 0.9433645374930266
  - 0.9446853437836338
  - 0.9441607493465752
  - 0.9504720364282455
  train_ndgc_oob:
  - 0.920928618982356
  - 0.9264469934217531
  - 0.9206853660334349
  - 0.9239070138328326
  - 0.9282765956928525
  train_neg_coverage_error:
  - -1.33206106870229
  - -1.3564102564102565
  - -1.3645699614890885
  - -1.39058524173028
  - -1.321382842509603
  train_neg_coverage_error_oob:
  - -1.4783715012722647
  - -1.5
  - -1.4929396662387677
  - -1.470737913486005
  - -1.440460947503201
  train_neg_hamming_loss_macro:
  - -0.0671119592875318
  - -0.06666666666666667
  - -0.06750106974753958
  - -0.06530958439355386
  - -0.06700810926163038
  train_neg_hamming_loss_macro_oob:
  - -0.07930449533502969
  - -0.08023504273504273
  - -0.07862644415917844
  - -0.07665394402035623
  - -0.07799829278702518
  train_neg_hamming_loss_micro:
  - -0.0671119592875318
  - -0.06666666666666667
  - -0.06750106974753958
  - -0.06530958439355386
  - -0.0670081092616304
  train_neg_hamming_loss_micro_oob:
  - -0.07930449533502969
  - -0.08023504273504274
  - -0.07862644415917844
  - -0.07665394402035623
  - -0.07799829278702518
  train_neg_hamming_loss_samples:
  - -0.0671119592875318
  - -0.06666666666666667
  - -0.06750106974753957
  - -0.06530958439355386
  - -0.0670081092616304
  train_neg_hamming_loss_samples_oob:
  - -0.07930449533502969
  - -0.08023504273504273
  - -0.07862644415917844
  - -0.07665394402035625
  - -0.07799829278702519
  train_neg_hamming_loss_weighted:
  - -0.10861638580255295
  - -0.10794750273423259
  - -0.11238280941053361
  - -0.10497085521448037
  - -0.10782629563643048
  train_neg_hamming_loss_weighted_oob:
  - -0.13435597451244946
  - -0.13871065743103658
  - -0.13604298864141048
  - -0.12835435728078248
  - -0.13158905986333183
  train_neg_label_ranking_loss:
  - -0.022177243169609583
  - -0.023020590520590523
  - -0.023518669795948355
  - -0.026773888160656605
  - -0.01971098091456606
  train_neg_label_ranking_loss_oob:
  - -0.03489346390109749
  - -0.03491560908227575
  - -0.03497037123481283
  - -0.03377626990858543
  - -0.03027112783834935
  train_precision_macro:
  - 0.9328880407124681
  - 0.9333333333333332
  - 0.9324989302524603
  - 0.9346904156064463
  - 0.9329918907383695
  train_precision_macro_oob:
  - 0.9206955046649702
  - 0.9197649572649572
  - 0.9213735558408215
  - 0.9233460559796437
  - 0.9220017072129746
  train_precision_micro:
  - 0.9328880407124682
  - 0.9333333333333333
  - 0.9324989302524604
  - 0.9346904156064462
  - 0.9329918907383696
  train_precision_micro_oob:
  - 0.9206955046649703
  - 0.9197649572649572
  - 0.9213735558408216
  - 0.9233460559796438
  - 0.9220017072129748
  train_precision_samples:
  - 0.9328880407124682
  - 0.9333333333333332
  - 0.9324989302524603
  - 0.934690415606446
  - 0.9329918907383695
  train_precision_samples_oob:
  - 0.9206955046649703
  - 0.9197649572649572
  - 0.9213735558408214
  - 0.9233460559796438
  - 0.9220017072129747
  train_precision_weighted:
  - 0.8913836141974469
  - 0.8920524972657674
  - 0.8876171905894664
  - 0.8950291447855196
  - 0.8921737043635696
  train_precision_weighted_oob:
  - 0.8656440254875505
  - 0.8612893425689633
  - 0.8639570113585895
  - 0.8716456427192176
  - 0.8684109401366682
  train_recall_macro:
  - 0.9328880407124681
  - 0.9333333333333332
  - 0.9324989302524603
  - 0.9346904156064463
  - 0.9329918907383695
  train_recall_macro_oob:
  - 0.9206955046649702
  - 0.9197649572649572
  - 0.9213735558408215
  - 0.9233460559796437
  - 0.9220017072129746
  train_recall_micro:
  - 0.9328880407124682
  - 0.9333333333333333
  - 0.9324989302524604
  - 0.9346904156064462
  - 0.9329918907383696
  train_recall_micro_oob:
  - 0.9206955046649703
  - 0.9197649572649572
  - 0.9213735558408216
  - 0.9233460559796438
  - 0.9220017072129748
  train_recall_samples:
  - 0.9328880407124682
  - 0.9333333333333332
  - 0.9324989302524603
  - 0.934690415606446
  - 0.9329918907383695
  train_recall_samples_oob:
  - 0.9206955046649703
  - 0.9197649572649572
  - 0.9213735558408214
  - 0.9233460559796438
  - 0.9220017072129747
  train_recall_weighted:
  - 0.8913836141974469
  - 0.8920524972657674
  - 0.8876171905894664
  - 0.8950291447855196
  - 0.8921737043635696
  train_recall_weighted_oob:
  - 0.8656440254875505
  - 0.8612893425689633
  - 0.8639570113585895
  - 0.8716456427192176
  - 0.8684109401366682
  train_roc_auc_macro:
  - 0.9842261603512613
  - 0.9828992143634864
  - 0.9808369780613534
  - 0.9783061874952398
  - 0.9792579618261605
  train_roc_auc_macro_oob:
  - 0.9711233527744989
  - 0.968134047389675
  - 0.9711858693257537
  - 0.9744716684320444
  - 0.9689123976638077
  train_roc_auc_micro:
  - 0.9831121408704091
  - 0.982958757309909
  - 0.9818127822758624
  - 0.9788393910808679
  - 0.9825929175833981
  train_roc_auc_micro_oob:
  - 0.9715319064482462
  - 0.9712954594529618
  - 0.9721569554110024
  - 0.9728191585730579
  - 0.9724822728178664
  train_roc_auc_samples:
  - 0.9778227568303904
  - 0.9769794094794095
  - 0.9764813302040516
  - 0.9732261118393435
  - 0.9802890190854339
  train_roc_auc_samples_oob:
  - 0.9651065360989025
  - 0.9650843909177241
  - 0.9650296287651873
  - 0.9662237300914146
  - 0.9697288721616506
  train_roc_auc_weighted:
  - 0.9828960951229643
  - 0.9806999296613395
  - 0.9787302236938692
  - 0.9755385599223664
  - 0.9799324789031523
  train_roc_auc_weighted_oob:
  - 0.9733965452963134
  - 0.9708223071009963
  - 0.9693304411467989
  - 0.9709276906152591
  - 0.9720302307333687
start: 2023-12-22 09:24:15.669487
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
