active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          4MzMzMzMDECQmZmZmZkdwODMzMzMzARAAJmZmZmZ2b/AmZmZmZn5Pw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 03:37:54.052809
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 8
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__8
  params: {}
hash: d9759e778906fa6d66546c76ab7e7e32d3c7bfab49389f90b0f7cdb94b1da588
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d9759e7_20231222T033627218634_embedding__8_emotions.yml
results:
  fit_time:
  - 61.59238362312317
  - 59.29965949058533
  - 62.12311244010925
  - 61.678542137145996
  - 65.35782074928284
  score_time:
  - 6.151841640472412
  - 5.994141340255737
  - 6.4229981899261475
  - 6.676931381225586
  - 6.492834091186523
  test_average_precision_macro:
  - 0.7424799074021307
  - 0.6996571707240941
  - 0.6292626966714231
  - 0.7335122952802443
  - 0.7339661035501083
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7300054244791154
  - 0.7060132605364164
  - 0.6465126582354332
  - 0.7063454208826584
  - 0.73035082183447
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8191787439613526
  - 0.7921737213403881
  - 0.7662116858237547
  - 0.8105042016806723
  - 0.7882716049382716
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7348548752427542
  - 0.7058437682300466
  - 0.6306593131410182
  - 0.7288545580849616
  - 0.73721419090611
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.681159420289855
  - 0.7063492063492064
  - 0.6839080459770116
  - 0.689075630252101
  - 0.6837606837606839
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6811594202898551
  - 0.7063492063492064
  - 0.6839080459770115
  - 0.6890756302521008
  - 0.6837606837606838
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6811594202898551
  - 0.7063492063492064
  - 0.6839080459770116
  - 0.6890756302521008
  - 0.6837606837606838
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6671936758893281
  - 0.6941226941226941
  - 0.6711598746081505
  - 0.6766206482593037
  - 0.6706706706706707
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5201216853680648
  - 0.5491366537246031
  - 0.5229939480395056
  - 0.5289767530247452
  - 0.5228870817713969
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5164835164835165
  - 0.5460122699386503
  - 0.519650655021834
  - 0.5256410256410257
  - 0.5194805194805194
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5248447204968945
  - 0.5593348450491306
  - 0.5324302134646962
  - 0.5372148859543818
  - 0.5288970288970289
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5050728958910696
  - 0.535372476505406
  - 0.5090736916568368
  - 0.5153668628915192
  - 0.5087084171012586
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8191787439613523
  - 0.792173721340388
  - 0.7662116858237547
  - 0.8105042016806723
  - 0.7882716049382712
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.033757978902788886
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.07838790035042599
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.010629504740061779
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.03164810522136458
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.878904565414932
  - 0.8549682585997169
  - 0.8404312501964134
  - 0.8705290456673871
  - 0.8580752052470473
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.7043478260869565
  - -2.6825396825396823
  - -2.9741379310344827
  - -2.73109243697479
  - -2.8632478632478633
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.31884057971014496
  - -0.29365079365079366
  - -0.3160919540229885
  - -0.3109243697478991
  - -0.3162393162393162
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3188405797101449
  - -0.29365079365079366
  - -0.3160919540229885
  - -0.31092436974789917
  - -0.3162393162393162
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.31884057971014496
  - -0.29365079365079366
  - -0.31609195402298856
  - -0.31092436974789917
  - -0.3162393162393162
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3328063241106719
  - -0.30587730587730594
  - -0.32884012539184954
  - -0.3233793517406963
  - -0.32932932932932935
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1401207729468599
  - -0.16410934744268077
  - -0.18635057471264369
  - -0.15520541549953315
  - -0.16678537511870845
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.681159420289855
  - 0.7063492063492064
  - 0.6839080459770116
  - 0.689075630252101
  - 0.6837606837606839
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6811594202898551
  - 0.7063492063492064
  - 0.6839080459770115
  - 0.6890756302521008
  - 0.6837606837606838
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6811594202898551
  - 0.7063492063492064
  - 0.6839080459770116
  - 0.6890756302521008
  - 0.6837606837606838
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6671936758893281
  - 0.6941226941226941
  - 0.6711598746081505
  - 0.6766206482593037
  - 0.6706706706706707
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.681159420289855
  - 0.7063492063492064
  - 0.6839080459770116
  - 0.689075630252101
  - 0.6837606837606839
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6811594202898551
  - 0.7063492063492064
  - 0.6839080459770115
  - 0.6890756302521008
  - 0.6837606837606838
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6811594202898551
  - 0.7063492063492064
  - 0.6839080459770116
  - 0.6890756302521008
  - 0.6837606837606838
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6671936758893281
  - 0.6941226941226941
  - 0.6711598746081505
  - 0.6766206482593037
  - 0.6706706706706707
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8502966938540473
  - 0.846748464249855
  - 0.8018865252469992
  - 0.8484000983684176
  - 0.8418534421630169
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8707543520309479
  - 0.863329621756588
  - 0.8226413292589764
  - 0.8621082361516035
  - 0.8562593843843844
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.85987922705314
  - 0.8358906525573191
  - 0.8136494252873563
  - 0.8447945845004668
  - 0.8332146248812916
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8418518391987369
  - 0.8491509369354044
  - 0.8021980357898383
  - 0.8455917457826017
  - 0.8406905028614339
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8907663459482635
  - 0.8894481744916183
  - 0.8997502959551875
  - 0.8817501501072381
  - 0.8895662196898243
  train_average_precision_macro_oob:
  - 0.7462917581575145
  - 0.7449057919574859
  - 0.7619886969848255
  - 0.7224928731916123
  - 0.7505738862449766
  train_average_precision_micro:
  - 0.8945314678817914
  - 0.8908135645082106
  - 0.901400570313985
  - 0.8862822546624878
  - 0.8941085339515387
  train_average_precision_micro_oob:
  - 0.7559953414945118
  - 0.7512101067203478
  - 0.7740220066147329
  - 0.7371601806711423
  - 0.7597150734718935
  train_average_precision_samples:
  - 0.9015341701534169
  - 0.8958244111349037
  - 0.9028010715117634
  - 0.8933251289263948
  - 0.9030578898225956
  train_average_precision_samples_oob:
  - 0.8071187819618781
  - 0.8151677373304782
  - 0.8210633589564408
  - 0.7969702297233944
  - 0.8109243697478992
  train_average_precision_weighted:
  - 0.8914874388650661
  - 0.8907853547004407
  - 0.9010905785027521
  - 0.8839904726844751
  - 0.8910953985979009
  train_average_precision_weighted_oob:
  - 0.7522874000074695
  - 0.7507123072100359
  - 0.7698319878694355
  - 0.7319906596385863
  - 0.7547103172326229
  train_f1_macro:
  - 0.7203626220362622
  - 0.7137758743754462
  - 0.726764500349406
  - 0.7208157524613221
  - 0.7226890756302521
  train_f1_macro_oob:
  - 0.690376569037657
  - 0.6841541755888652
  - 0.6907756813417191
  - 0.689873417721519
  - 0.6897759103641458
  train_f1_micro:
  - 0.7203626220362622
  - 0.7137758743754461
  - 0.726764500349406
  - 0.7208157524613221
  - 0.7226890756302521
  train_f1_micro_oob:
  - 0.6903765690376569
  - 0.684154175588865
  - 0.6907756813417191
  - 0.689873417721519
  - 0.6897759103641457
  train_f1_samples:
  - 0.7203626220362621
  - 0.7137758743754461
  - 0.726764500349406
  - 0.720815752461322
  - 0.7226890756302521
  train_f1_samples_oob:
  - 0.6903765690376569
  - 0.684154175588865
  - 0.6907756813417191
  - 0.689873417721519
  - 0.6897759103641455
  train_f1_weighted:
  - 0.7126964830939727
  - 0.7066332819350254
  - 0.7202131376659681
  - 0.7137770395402561
  - 0.7135150900089157
  train_f1_weighted_oob:
  - 0.6778242677824267
  - 0.6711491147084555
  - 0.67795389729352
  - 0.6769073257345781
  - 0.6770206954113474
  train_jaccard_macro:
  - 0.5645163858369256
  - 0.556189843836521
  - 0.5720183447672612
  - 0.5647761937778477
  - 0.5679199050010416
  train_jaccard_macro_oob:
  - 0.5304151422273046
  - 0.5233347462564292
  - 0.5309439988985627
  - 0.5299409194219106
  - 0.5297685997918553
  train_jaccard_micro:
  - 0.5629427792915531
  - 0.5549389567147613
  - 0.570801317233809
  - 0.5634964266080263
  - 0.5657894736842105
  train_jaccard_micro_oob:
  - 0.5271565495207667
  - 0.5199349064279902
  - 0.5276220976781425
  - 0.5265700483091788
  - 0.5264564404061999
  train_jaccard_samples:
  - 0.5790496114763897
  - 0.5705108595900887
  - 0.5866526904262753
  - 0.5796162346795257
  - 0.5819327731092437
  train_jaccard_samples_oob:
  - 0.5389519824666268
  - 0.5305903946160905
  - 0.5384845762204252
  - 0.5379244524814145
  - 0.5380152060824329
  train_jaccard_weighted:
  - 0.5554156299455035
  - 0.5477852201415225
  - 0.5641940970185597
  - 0.5564373714402936
  - 0.5571386752206775
  train_jaccard_weighted_oob:
  - 0.5166321757793815
  - 0.5092126395094575
  - 0.5169115711174699
  - 0.5157452610423843
  - 0.5157797731314464
  train_label_ranking_average_precision_score:
  - 0.9015341701534164
  - 0.8958244111349027
  - 0.9028010715117625
  - 0.8933251289263942
  - 0.9030578898225947
  train_label_ranking_average_precision_score_oob:
  - 0.8071187819618771
  - 0.8151677373304769
  - 0.8210633589564392
  - 0.7969702297233929
  - 0.8109243697478982
  train_matthews_corrcoef_macro:
  - 0.2093672482021737
  - 0.20906318502899246
  - 0.23990546297353077
  - 0.20058715035234106
  - 0.23782739206475081
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.011921041422679706
  - 0.019482313724439617
  - 0.023165790515415438
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.2625407823283962
  - 0.2585209887417269
  - 0.2924020528295937
  - 0.2691790090131938
  - 0.27508590719856507
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.027785891595585283
  - 0.04829705403120734
  - 0.03950070657520836
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.12333167233814614
  - 0.12202210250385981
  - 0.14597587653013616
  - 0.12629728473970114
  - 0.1259339959961176
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0021413276231263384
  - 0.00397770774863947
  - 0.0034439990127292743
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.22134010507711913
  - 0.22270984163314944
  - 0.2541735639670709
  - 0.21664995446211172
  - 0.24470109290499692
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.01114065722119503
  - 0.019877225489124205
  - 0.02268722202790475
  - 0.0
  train_ndgc:
  - 0.9365114532690849
  - 0.9329676783308626
  - 0.9350854642501886
  - 0.9297339500438536
  - 0.9368631013851654
  train_ndgc_oob:
  - 0.8698953946383006
  - 0.8759405664952599
  - 0.8781291533755676
  - 0.8631539890208767
  - 0.8707407969009027
  train_neg_coverage_error:
  - -2.3723849372384938
  - -2.443254817987152
  - -2.3186582809224316
  - -2.388185654008439
  - -2.338235294117647
  train_neg_coverage_error_oob:
  - -2.7384937238493725
  - -2.790149892933619
  - -2.7148846960167714
  - -2.810126582278481
  - -2.7247899159663866
  train_neg_hamming_loss_macro:
  - -0.2796373779637378
  - -0.2862241256245539
  - -0.27323549965059396
  - -0.27918424753867793
  - -0.27731092436974786
  train_neg_hamming_loss_macro_oob:
  - -0.30962343096234307
  - -0.3158458244111349
  - -0.30922431865828093
  - -0.31012658227848106
  - -0.3102240896358543
  train_neg_hamming_loss_micro:
  - -0.2796373779637378
  - -0.2862241256245539
  - -0.273235499650594
  - -0.27918424753867793
  - -0.2773109243697479
  train_neg_hamming_loss_micro_oob:
  - -0.30962343096234307
  - -0.3158458244111349
  - -0.30922431865828093
  - -0.310126582278481
  - -0.31022408963585435
  train_neg_hamming_loss_samples:
  - -0.2796373779637378
  - -0.2862241256245539
  - -0.273235499650594
  - -0.2791842475386779
  - -0.2773109243697479
  train_neg_hamming_loss_samples_oob:
  - -0.30962343096234307
  - -0.3158458244111349
  - -0.30922431865828093
  - -0.310126582278481
  - -0.31022408963585424
  train_neg_hamming_loss_weighted:
  - -0.28730351690602735
  - -0.2933667180649745
  - -0.2797868623340321
  - -0.28622296045974377
  - -0.28648490999108445
  train_neg_hamming_loss_weighted_oob:
  - -0.32217573221757323
  - -0.3288508852915444
  - -0.32204610270648004
  - -0.3230926742654219
  - -0.32297930458865265
  train_neg_label_ranking_loss:
  - -0.08153184565318458
  - -0.0871936711872472
  - -0.07656068017703238
  - -0.08543717768401313
  - -0.07668650793650794
  train_neg_label_ranking_loss_oob:
  - -0.1535913528591353
  - -0.15643587913395193
  - -0.15199743768926155
  - -0.16336146272855134
  - -0.15214169000933706
  train_precision_macro:
  - 0.7203626220362622
  - 0.7137758743754462
  - 0.726764500349406
  - 0.7208157524613221
  - 0.7226890756302521
  train_precision_macro_oob:
  - 0.690376569037657
  - 0.6841541755888652
  - 0.6907756813417191
  - 0.689873417721519
  - 0.6897759103641458
  train_precision_micro:
  - 0.7203626220362622
  - 0.7137758743754461
  - 0.726764500349406
  - 0.7208157524613221
  - 0.7226890756302521
  train_precision_micro_oob:
  - 0.6903765690376569
  - 0.684154175588865
  - 0.6907756813417191
  - 0.689873417721519
  - 0.6897759103641457
  train_precision_samples:
  - 0.7203626220362621
  - 0.7137758743754461
  - 0.726764500349406
  - 0.720815752461322
  - 0.7226890756302521
  train_precision_samples_oob:
  - 0.6903765690376569
  - 0.684154175588865
  - 0.6907756813417191
  - 0.689873417721519
  - 0.6897759103641455
  train_precision_weighted:
  - 0.7126964830939727
  - 0.7066332819350254
  - 0.7202131376659681
  - 0.7137770395402561
  - 0.7135150900089157
  train_precision_weighted_oob:
  - 0.6778242677824267
  - 0.6711491147084555
  - 0.67795389729352
  - 0.6769073257345781
  - 0.6770206954113474
  train_recall_macro:
  - 0.7203626220362622
  - 0.7137758743754462
  - 0.726764500349406
  - 0.7208157524613221
  - 0.7226890756302521
  train_recall_macro_oob:
  - 0.690376569037657
  - 0.6841541755888652
  - 0.6907756813417191
  - 0.689873417721519
  - 0.6897759103641458
  train_recall_micro:
  - 0.7203626220362622
  - 0.7137758743754461
  - 0.726764500349406
  - 0.7208157524613221
  - 0.7226890756302521
  train_recall_micro_oob:
  - 0.6903765690376569
  - 0.684154175588865
  - 0.6907756813417191
  - 0.689873417721519
  - 0.6897759103641457
  train_recall_samples:
  - 0.7203626220362621
  - 0.7137758743754461
  - 0.726764500349406
  - 0.720815752461322
  - 0.7226890756302521
  train_recall_samples_oob:
  - 0.6903765690376569
  - 0.684154175588865
  - 0.6907756813417191
  - 0.689873417721519
  - 0.6897759103641455
  train_recall_weighted:
  - 0.7126964830939727
  - 0.7066332819350254
  - 0.7202131376659681
  - 0.7137770395402561
  - 0.7135150900089157
  train_recall_weighted_oob:
  - 0.6778242677824267
  - 0.6711491147084555
  - 0.67795389729352
  - 0.6769073257345781
  - 0.6770206954113474
  train_roc_auc_macro:
  - 0.9269560948151422
  - 0.9248525225439321
  - 0.9361737768956884
  - 0.9223441344809205
  - 0.9288233848235383
  train_roc_auc_macro_oob:
  - 0.8557715229762507
  - 0.8507152690921819
  - 0.8579781395626607
  - 0.8474996718984831
  - 0.8586165773055155
  train_roc_auc_micro:
  - 0.9338969651469652
  - 0.9286082036975075
  - 0.941080898527707
  - 0.928217633207129
  - 0.935141112167845
  train_roc_auc_micro_oob:
  - 0.8676016926016926
  - 0.8608863461783154
  - 0.8710425851383298
  - 0.8590838258380274
  - 0.8690292307868593
  train_roc_auc_samples:
  - 0.9184681543468155
  - 0.9128063288127528
  - 0.9234393198229676
  - 0.914562822315987
  - 0.923313492063492
  train_roc_auc_samples_oob:
  - 0.8464086471408648
  - 0.843564120866048
  - 0.8480025623107385
  - 0.8366385372714487
  - 0.8478583099906628
  train_roc_auc_weighted:
  - 0.9260532744960264
  - 0.9238905193531225
  - 0.935756159315336
  - 0.9219619211324981
  - 0.9282399471889096
  train_roc_auc_weighted_oob:
  - 0.8569888305675806
  - 0.851832149821897
  - 0.861033770011627
  - 0.8497457653532053
  - 0.8593169933856961
start: 2023-12-22 03:36:27.218634
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
