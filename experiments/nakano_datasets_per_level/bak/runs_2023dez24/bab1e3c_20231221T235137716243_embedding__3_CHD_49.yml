active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz8z+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAEMAAAAAAAAAAQAAAAAAAAPC/AAAAAAAACEAAAAAAAAAAAA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:52:00.768342
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 3
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__3
  params: {}
hash: bab1e3ccf34a82eb445058774c0f707807eb1e7b1a95194c17376257fe69e7fd
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/bab1e3c_20231221T235137716243_embedding__3_CHD_49.yml
results:
  fit_time:
  - 9.750210523605347
  - 9.195944547653198
  - 10.170133829116821
  - 10.213924407958984
  - 10.393776416778564
  score_time:
  - 2.7047719955444336
  - 2.868043899536133
  - 3.130687952041626
  - 3.1284101009368896
  - 3.1039044857025146
  test_average_precision_macro:
  - 0.48088092541850763
  - 0.4949161663472846
  - 0.4742320299136999
  - 0.5260258475138011
  - 0.5036486581048413
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6592166848629215
  - 0.699433794832355
  - 0.6711653395929497
  - 0.7140652370856908
  - 0.6566105279357621
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7739975845410627
  - 0.7825433231396535
  - 0.773921130952381
  - 0.8068698559670783
  - 0.7831831831831829
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6029509574129603
  - 0.6188458155728191
  - 0.5961522722958238
  - 0.6464675563423821
  - 0.587278159235473
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.5869565217391305
  - 0.5626911314984709
  - 0.5729166666666666
  - 0.5601851851851852
  - 0.566066066066066
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.5869565217391305
  - 0.5626911314984709
  - 0.5729166666666666
  - 0.5601851851851852
  - 0.566066066066066
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.5869565217391306
  - 0.562691131498471
  - 0.5729166666666666
  - 0.5601851851851852
  - 0.566066066066066
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.46486651411136537
  - 0.43311734137422214
  - 0.45311722249875563
  - 0.4327810266406758
  - 0.4434053430593222
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.45588390090795006
  - 0.43435723214180766
  - 0.4408137736280116
  - 0.43150908400908405
  - 0.43514537328980046
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.4153846153846154
  - 0.39148936170212767
  - 0.40145985401459855
  - 0.3890675241157556
  - 0.3947643979057592
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.4315527950310559
  - 0.41411096548711235
  - 0.4207482993197279
  - 0.4055154721821389
  - 0.40982410982410994
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.3173337135912787
  - 0.2934628327946077
  - 0.3093140910173386
  - 0.2925688195161879
  - 0.30170650999651516
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7739975845410628
  - 0.81006625891947
  - 0.7739211309523809
  - 0.8068698559670783
  - 0.7831831831831829
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8550484800367082
  - 0.8535387751609769
  - 0.8539585397875958
  - 0.8754879501294076
  - 0.8615222711032904
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.765217391304348
  - -3.7522935779816513
  - -3.8392857142857144
  - -3.7314814814814814
  - -3.774774774774775
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.41304347826086957
  - -0.437308868501529
  - -0.4270833333333333
  - -0.4398148148148148
  - -0.43393393393393387
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.41304347826086957
  - -0.43730886850152906
  - -0.4270833333333333
  - -0.4398148148148148
  - -0.4339339339339339
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.4130434782608696
  - -0.43730886850152906
  - -0.4270833333333333
  - -0.4398148148148148
  - -0.433933933933934
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.5351334858886346
  - -0.5668826586257779
  - -0.5468827775012444
  - -0.5672189733593241
  - -0.5565946569406777
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.22164251207729468
  - -0.19671253822629967
  - -0.22512400793650794
  - -0.19650205761316872
  - -0.21326326326326325
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.5869565217391305
  - 0.5626911314984709
  - 0.5729166666666666
  - 0.5601851851851852
  - 0.566066066066066
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.5869565217391305
  - 0.5626911314984709
  - 0.5729166666666666
  - 0.5601851851851852
  - 0.566066066066066
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.5869565217391306
  - 0.562691131498471
  - 0.5729166666666666
  - 0.5601851851851852
  - 0.566066066066066
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.46486651411136537
  - 0.43311734137422214
  - 0.45311722249875563
  - 0.4327810266406758
  - 0.4434053430593222
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.5869565217391305
  - 0.5626911314984709
  - 0.5729166666666666
  - 0.5601851851851852
  - 0.566066066066066
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.5869565217391305
  - 0.5626911314984709
  - 0.5729166666666666
  - 0.5601851851851852
  - 0.566066066066066
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.5869565217391306
  - 0.562691131498471
  - 0.5729166666666666
  - 0.5601851851851852
  - 0.566066066066066
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.46486651411136537
  - 0.43311734137422214
  - 0.45311722249875563
  - 0.4327810266406758
  - 0.4434053430593222
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5719021058492274
  - 0.5399858545069339
  - 0.5197198621929966
  - 0.5748924469386888
  - 0.5673103602150972
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7733939787740957
  - 0.7846799939191245
  - 0.7626227431105479
  - 0.7883234256439998
  - 0.7713876625700989
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7783574879227054
  - .nan
  - 0.7748759920634919
  - 0.8034979423868313
  - 0.7867367367367368
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5770994408525157
  - 0.5553265577594113
  - 0.5283674652440042
  - 0.5840948030714795
  - 0.51274944586898
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8109544067522351
  - 0.8172138241890793
  - 0.8179040814416405
  - 0.8192475686009472
  - 0.8073002276028404
  train_average_precision_macro_oob:
  - 0.5563185400580116
  - 0.5939386391302858
  - 0.5776695738544028
  - 0.5710201166579407
  - 0.5551548642823533
  train_average_precision_micro:
  - 0.8896717550779062
  - 0.887733202644857
  - 0.8900271409832589
  - 0.8865718165341824
  - 0.8836825171202292
  train_average_precision_micro_oob:
  - 0.740584037943831
  - 0.7315767348511286
  - 0.7401116221806345
  - 0.727124497564856
  - 0.7318177416787012
  train_average_precision_samples:
  - 0.8986994949494949
  - 0.9007069008470353
  - 0.8820165537998496
  - 0.8852752920705941
  - 0.8927114614614614
  train_average_precision_samples_oob:
  - 0.7982796717171717
  - 0.7957741654210264
  - 0.7942375219463256
  - 0.7931705195128014
  - 0.7865365365365365
  train_average_precision_weighted:
  - 0.8747551076319457
  - 0.8765069536709557
  - 0.8812897611684127
  - 0.8741011441454647
  - 0.868632672845813
  train_average_precision_weighted_oob:
  - 0.694494940574708
  - 0.7237299593271601
  - 0.7146509557163174
  - 0.7035041133905746
  - 0.6930914609064608
  train_f1_macro:
  - 0.6515151515151515
  - 0.6502242152466368
  - 0.644469525959368
  - 0.6506338553318419
  - 0.6520270270270271
  train_f1_macro_oob:
  - 0.5674242424242424
  - 0.5739910313901346
  - 0.5703536493604213
  - 0.5730797912005966
  - 0.5724474474474475
  train_f1_micro:
  - 0.6515151515151515
  - 0.6502242152466368
  - 0.6444695259593679
  - 0.6506338553318419
  - 0.652027027027027
  train_f1_micro_oob:
  - 0.5674242424242424
  - 0.5739910313901345
  - 0.5703536493604213
  - 0.5730797912005966
  - 0.5724474474474475
  train_f1_samples:
  - 0.6515151515151514
  - 0.6502242152466368
  - 0.6444695259593679
  - 0.6506338553318418
  - 0.652027027027027
  train_f1_samples_oob:
  - 0.5674242424242424
  - 0.5739910313901345
  - 0.5703536493604213
  - 0.5730797912005966
  - 0.5724474474474475
  train_f1_weighted:
  - 0.583890782277879
  - 0.5798585839613708
  - 0.5715378473488619
  - 0.579628990323946
  - 0.5827914528701931
  train_f1_weighted_oob:
  - 0.4439724181659666
  - 0.4528013210308423
  - 0.44589588652202633
  - 0.45021639955608356
  - 0.44901003365570297
  train_jaccard_macro:
  - 0.5057372140592099
  - 0.5050590169327017
  - 0.500276498234861
  - 0.505422039916242
  - 0.5073805480216502
  train_jaccard_macro_oob:
  - 0.4367338268454028
  - 0.4424216912654713
  - 0.4400908409694293
  - 0.44212074868329365
  - 0.4417542740113191
  train_jaccard_micro:
  - 0.48314606741573035
  - 0.48172757475083056
  - 0.47543713572023316
  - 0.4821773970710141
  - 0.48370927318295737
  train_jaccard_micro_oob:
  - 0.3960867265996827
  - 0.4025157232704403
  - 0.3989473684210526
  - 0.4016200679383329
  - 0.4009992111490928
  train_jaccard_samples:
  - 0.5075875639512003
  - 0.5024673383417778
  - 0.4983983661184564
  - 0.5051667199318206
  - 0.5067362817362817
  train_jaccard_samples_oob:
  - 0.4146438410074774
  - 0.41963582008425065
  - 0.41692025055456217
  - 0.4197933312027272
  - 0.4198207948207949
  train_jaccard_weighted:
  - 0.41607520935056486
  - 0.4122387087934851
  - 0.4047357495708057
  - 0.41187605308039527
  - 0.4153569751450364
  train_jaccard_weighted_oob:
  - 0.3014907910770934
  - 0.30799963792463303
  - 0.30275545602219767
  - 0.30646528067621703
  - 0.3051076488235122
  train_label_ranking_average_precision_score:
  - 0.9055176767676761
  - 0.9007069008470348
  - 0.8887885628291945
  - 0.8919867014665661
  - 0.8994682182182175
  train_label_ranking_average_precision_score_oob:
  - 0.8050978535353527
  - 0.7957741654210252
  - 0.8010095309756701
  - 0.7998819289087734
  - 0.7932932932932922
  train_matthews_corrcoef_macro:
  - 0.12499194876452291
  - 0.12749352955894375
  - 0.11234175876070868
  - 0.11997572250106074
  - 0.12078601286016107
  train_matthews_corrcoef_macro_oob:
  - 0.01505121968254969
  - 0.011068692822320645
  - 0.007670423415552554
  - 0.006345102479922846
  - 0.003389958801061252
  train_matthews_corrcoef_micro:
  - 0.34993103601634323
  - 0.3371836579666272
  - 0.32789951872269213
  - 0.3371769634078146
  - 0.34265940834166203
  train_matthews_corrcoef_micro_oob:
  - 0.049698454941161666
  - 0.05477386677028991
  - 0.03864070889725117
  - 0.03160240116548623
  - 0.038808433959147896
  train_matthews_corrcoef_samples:
  - 0.24763307840542192
  - 0.2246861771324308
  - 0.2157547683310025
  - 0.21935872708936938
  - 0.23224336211726196
  train_matthews_corrcoef_samples_oob:
  - 0.005626286411554785
  - 0.0072557577970847305
  - 0.004282994573591484
  - 0.0014148893334086708
  - 0.0041511497501135804
  train_matthews_corrcoef_weighted:
  - 0.20144681430776912
  - 0.20201491216971873
  - 0.1835923841612293
  - 0.1937713146636972
  - 0.1963490386665579
  train_matthews_corrcoef_weighted_oob:
  - 0.024410324078268236
  - 0.01952957843519402
  - 0.013585693176192647
  - 0.011218716503298634
  - 0.005996934991903632
  train_ndgc:
  - 0.9368787601381003
  - 0.941933214284972
  - 0.9245152983507766
  - 0.9268785960903994
  - 0.9324086763175536
  train_ndgc_oob:
  - 0.8688497859594657
  - 0.8676869112668164
  - 0.8659910182689956
  - 0.8636102313130073
  - 0.8599897457302644
  train_neg_coverage_error:
  - -3.2613636363636362
  - -3.2600896860986546
  - -3.275395033860045
  - -3.2818791946308723
  - -3.2612612612612613
  train_neg_coverage_error_oob:
  - -3.7477272727272726
  - -3.6704035874439462
  - -3.711060948081264
  - -3.684563758389262
  - -3.77027027027027
  train_neg_hamming_loss_macro:
  - -0.34848484848484845
  - -0.3497757847533633
  - -0.35553047404063204
  - -0.34936614466815813
  - -0.34797297297297297
  train_neg_hamming_loss_macro_oob:
  - -0.43257575757575756
  - -0.4260089686098654
  - -0.4296463506395787
  - -0.4269202087994035
  - -0.42755255255255253
  train_neg_hamming_loss_micro:
  - -0.3484848484848485
  - -0.34977578475336324
  - -0.35553047404063204
  - -0.3493661446681581
  - -0.34797297297297297
  train_neg_hamming_loss_micro_oob:
  - -0.43257575757575756
  - -0.4260089686098655
  - -0.4296463506395786
  - -0.42692020879940346
  - -0.42755255255255253
  train_neg_hamming_loss_samples:
  - -0.34848484848484845
  - -0.34977578475336324
  - -0.35553047404063204
  - -0.349366144668158
  - -0.34797297297297297
  train_neg_hamming_loss_samples_oob:
  - -0.43257575757575756
  - -0.4260089686098655
  - -0.4296463506395787
  - -0.4269202087994034
  - -0.42755255255255253
  train_neg_hamming_loss_weighted:
  - -0.41610921772212095
  - -0.4201414160386292
  - -0.4284621526511381
  - -0.42037100967605406
  - -0.41720854712980693
  train_neg_hamming_loss_weighted_oob:
  - -0.5560275818340334
  - -0.5471986789691577
  - -0.5541041134779737
  - -0.5497836004439166
  - -0.5509899663442971
  train_neg_label_ranking_loss:
  - -0.10172979797979796
  - -0.10201793721973094
  - -0.111518685728618
  - -0.10960104399701713
  - -0.10578078078078078
  train_neg_label_ranking_loss_oob:
  - -0.19758838383838387
  - -0.19410189337319386
  - -0.19883370955605717
  - -0.194220730797912
  - -0.2068818818818819
  train_precision_macro:
  - 0.6515151515151515
  - 0.6502242152466368
  - 0.644469525959368
  - 0.6506338553318419
  - 0.6520270270270271
  train_precision_macro_oob:
  - 0.5674242424242424
  - 0.5739910313901346
  - 0.5703536493604213
  - 0.5730797912005966
  - 0.5724474474474475
  train_precision_micro:
  - 0.6515151515151515
  - 0.6502242152466368
  - 0.6444695259593679
  - 0.6506338553318419
  - 0.652027027027027
  train_precision_micro_oob:
  - 0.5674242424242424
  - 0.5739910313901345
  - 0.5703536493604213
  - 0.5730797912005966
  - 0.5724474474474475
  train_precision_samples:
  - 0.6515151515151514
  - 0.6502242152466368
  - 0.6444695259593679
  - 0.6506338553318418
  - 0.652027027027027
  train_precision_samples_oob:
  - 0.5674242424242424
  - 0.5739910313901345
  - 0.5703536493604213
  - 0.5730797912005966
  - 0.5724474474474475
  train_precision_weighted:
  - 0.583890782277879
  - 0.5798585839613708
  - 0.5715378473488619
  - 0.579628990323946
  - 0.5827914528701931
  train_precision_weighted_oob:
  - 0.4439724181659666
  - 0.4528013210308423
  - 0.44589588652202633
  - 0.45021639955608356
  - 0.44901003365570297
  train_recall_macro:
  - 0.6515151515151515
  - 0.6502242152466368
  - 0.644469525959368
  - 0.6506338553318419
  - 0.6520270270270271
  train_recall_macro_oob:
  - 0.5674242424242424
  - 0.5739910313901346
  - 0.5703536493604213
  - 0.5730797912005966
  - 0.5724474474474475
  train_recall_micro:
  - 0.6515151515151515
  - 0.6502242152466368
  - 0.6444695259593679
  - 0.6506338553318419
  - 0.652027027027027
  train_recall_micro_oob:
  - 0.5674242424242424
  - 0.5739910313901345
  - 0.5703536493604213
  - 0.5730797912005966
  - 0.5724474474474475
  train_recall_samples:
  - 0.6515151515151514
  - 0.6502242152466368
  - 0.6444695259593679
  - 0.6506338553318418
  - 0.652027027027027
  train_recall_samples_oob:
  - 0.5674242424242424
  - 0.5739910313901345
  - 0.5703536493604213
  - 0.5730797912005966
  - 0.5724474474474475
  train_recall_weighted:
  - 0.583890782277879
  - 0.5798585839613708
  - 0.5715378473488619
  - 0.579628990323946
  - 0.5827914528701931
  train_recall_weighted_oob:
  - 0.4439724181659666
  - 0.4528013210308423
  - 0.44589588652202633
  - 0.45021639955608356
  - 0.44901003365570297
  train_roc_auc_macro:
  - 0.8054444641986339
  - 0.7968832324310666
  - 0.8109463088161099
  - 0.8152673012508442
  - 0.8158269890755213
  train_roc_auc_macro_oob:
  - 0.6107076010677667
  - 0.6435841139540783
  - 0.6366261054226725
  - 0.6350383580943408
  - 0.6558801391446963
  train_roc_auc_micro:
  - 0.8936265198067588
  - 0.8944427334633678
  - 0.8951835186751214
  - 0.8936900965271249
  - 0.889661104985151
  train_roc_auc_micro_oob:
  - 0.7956239842893691
  - 0.8075796461691134
  - 0.802224678694401
  - 0.8017141445322594
  - 0.7939439851412393
  train_roc_auc_samples:
  - .nan
  - 0.897982062780269
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - 0.8058981066268062
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8065670546576821
  - 0.8116586674846461
  - 0.8166924840280764
  - 0.8087423663306162
  - 0.8020367194672816
  train_roc_auc_weighted_oob:
  - 0.6490737277573198
  - 0.6732358215276607
  - 0.6741087758477222
  - 0.6644150558868536
  - 0.6600540367479121
start: 2023-12-21 23:51:37.716243
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
