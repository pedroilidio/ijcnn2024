active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ2T9AMzMzMzMDQICZmZmZmfm/gJmZmZmZ+b8AmpmZmZnZPw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:30:14.595997
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 3
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__3
  params: {}
hash: dc099d3c7c770468405ffaefcdfb01e8db86f9dbe5a6ae6c97f10d1dede90270
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/dc099d3_20231221T083000618957_embedding_proba__3_VirusGO.yml
results:
  fit_time:
  - 6.607154607772827
  - 6.551609039306641
  - 6.4318153858184814
  - 6.431495428085327
  - 6.746978044509888
  score_time:
  - 2.2749924659729004
  - 2.2074735164642334
  - 2.244145393371582
  - 2.322301149368286
  - 2.2775332927703857
  test_average_precision_macro:
  - 0.8783084571281353
  - 0.8852635236331284
  - 0.8540941920307831
  - 0.9754142847047635
  - 0.9783481375006143
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8534804845751283
  - 0.863847946514303
  - 0.8686693620044611
  - 0.9468614952658446
  - 0.9588328203643943
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8991869918699187
  - 0.9209401709401709
  - 0.9503875968992248
  - 0.9593023255813954
  - 0.975609756097561
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8710164756062984
  - 0.8747419510419447
  - 0.8683112567400494
  - 0.9649856891525076
  - 0.981830200501253
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7967479674796748
  - 0.7905982905982906
  - 0.8023255813953488
  - 0.8023255813953488
  - 0.8170731707317073
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7967479674796748
  - 0.7905982905982906
  - 0.8023255813953488
  - 0.8023255813953488
  - 0.8170731707317073
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7967479674796749
  - 0.7905982905982906
  - 0.802325581395349
  - 0.802325581395349
  - 0.8170731707317075
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.681013868962219
  - 0.6614338042909471
  - 0.6976744186046511
  - 0.6967624259005929
  - 0.7195121951219512
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6872813744318119
  - 0.6828257659653008
  - 0.6928920409771474
  - 0.6930247939023427
  - 0.7110202741546267
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6621621621621622
  - 0.6537102473498233
  - 0.6699029126213593
  - 0.6699029126213593
  - 0.6907216494845361
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.670150987224158
  - 0.6593406593406596
  - 0.6755260243632337
  - 0.6744186046511629
  - 0.7015098722415797
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5361289214357353
  - 0.5146687911044816
  - 0.553604969174431
  - 0.5529333955528549
  - 0.5764972322913117
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8991869918699186
  - 0.9209401709401711
  - 0.9503875968992248
  - 0.9593023255813954
  - 0.975609756097561
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.029788348041010024
  - 0.0
  - 0.0
  - 0.0
  - 0.07380124046167462
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.12492494745645803
  - 0.0
  - 0.0
  - 0.0
  - 0.2851802953043487
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.024390243902439025
  - 0.0
  - 0.0
  - 0.0
  - 0.11298672029350429
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.06308120761625652
  - 0.0
  - 0.0
  - 0.0
  - 0.15055453054181622
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.928186444295407
  - 0.943637323230044
  - 0.9654275997544267
  - 0.9713954552570331
  - 0.9827274180653145
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.5365853658536586
  - -1.564102564102564
  - -1.4186046511627908
  - -1.302325581395349
  - -1.2926829268292683
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2032520325203252
  - -0.2094017094017094
  - -0.19767441860465115
  - -0.19767441860465115
  - -0.1829268292682927
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2032520325203252
  - -0.2094017094017094
  - -0.19767441860465115
  - -0.19767441860465115
  - -0.18292682926829268
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20325203252032517
  - -0.20940170940170938
  - -0.19767441860465113
  - -0.19767441860465115
  - -0.18292682926829268
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3189861310377809
  - -0.3385661957090529
  - -0.3023255813953488
  - -0.3032375740994072
  - -0.28048780487804875
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.051219512195121955
  - -0.058333333333333334
  - -0.04037467700258398
  - -0.01976744186046512
  - -0.013685636856368564
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7967479674796748
  - 0.7905982905982906
  - 0.8023255813953488
  - 0.8023255813953488
  - 0.8170731707317073
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7967479674796748
  - 0.7905982905982906
  - 0.8023255813953488
  - 0.8023255813953488
  - 0.8170731707317073
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7967479674796749
  - 0.7905982905982906
  - 0.802325581395349
  - 0.802325581395349
  - 0.8170731707317075
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.681013868962219
  - 0.6614338042909471
  - 0.6976744186046511
  - 0.6967624259005929
  - 0.7195121951219512
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7967479674796748
  - 0.7905982905982906
  - 0.8023255813953488
  - 0.8023255813953488
  - 0.8170731707317073
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7967479674796748
  - 0.7905982905982906
  - 0.8023255813953488
  - 0.8023255813953488
  - 0.8170731707317073
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7967479674796749
  - 0.7905982905982906
  - 0.802325581395349
  - 0.802325581395349
  - 0.8170731707317075
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.681013868962219
  - 0.6614338042909471
  - 0.6976744186046511
  - 0.6967624259005929
  - 0.7195121951219512
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9616587998301553
  - 0.9457841722547604
  - 0.9414488017429194
  - 0.992434710351377
  - 0.9940712771595125
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9655103066867773
  - 0.9569773855488141
  - 0.9600265226863691
  - 0.988917306052856
  - 0.9895918367346938
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.948780487804878
  - 0.9416666666666667
  - 0.959625322997416
  - 0.9802325581395348
  - 0.9863143631436314
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9429916580811721
  - 0.9401713932326178
  - 0.937363834422658
  - 0.9869191665270095
  - 0.991418918918919
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9745760704516648
  - 0.9707153381101437
  - 0.9465431104638142
  - 0.9346880078767171
  - 0.9550484036084642
  train_average_precision_macro_oob:
  - 0.939730131413354
  - 0.9234690563684772
  - 0.9161772003524141
  - 0.8745400794246265
  - 0.8955635831497523
  train_average_precision_micro:
  - 0.9695714106296888
  - 0.9544641506919944
  - 0.9395920129847545
  - 0.9206488589131053
  - 0.9438202752836927
  train_average_precision_micro_oob:
  - 0.9388135113131061
  - 0.9084517648231364
  - 0.889201209512534
  - 0.8539076491195011
  - 0.8917118932796845
  train_average_precision_samples:
  - 0.9799196787148594
  - 0.9765873015873016
  - 0.9598577235772358
  - 0.9585365853658536
  - 0.9545180722891565
  train_average_precision_samples_oob:
  - 0.9620481927710842
  - 0.9527116402116401
  - 0.9453252032520323
  - 0.9210365853658535
  - 0.9279116465863452
  train_average_precision_weighted:
  - 0.9787570387302045
  - 0.9689721937591281
  - 0.9469261728559979
  - 0.9348560829290226
  - 0.9547333416883506
  train_average_precision_weighted_oob:
  - 0.9516066229122898
  - 0.9190867544703437
  - 0.9073156640735506
  - 0.8769658356110499
  - 0.9013239610975888
  train_f1_macro:
  - 0.8142570281124497
  - 0.808531746031746
  - 0.7997967479674797
  - 0.8008130081300813
  - 0.8172690763052208
  train_f1_macro_oob:
  - 0.8032128514056224
  - 0.8035714285714287
  - 0.7967479674796748
  - 0.7987804878048781
  - 0.8042168674698796
  train_f1_micro:
  - 0.8142570281124498
  - 0.808531746031746
  - 0.7997967479674797
  - 0.8008130081300813
  - 0.8172690763052208
  train_f1_micro_oob:
  - 0.8032128514056225
  - 0.8035714285714286
  - 0.7967479674796748
  - 0.7987804878048781
  - 0.8042168674698795
  train_f1_samples:
  - 0.8142570281124497
  - 0.8085317460317459
  - 0.7997967479674796
  - 0.8008130081300812
  - 0.8172690763052206
  train_f1_samples_oob:
  - 0.8032128514056224
  - 0.8035714285714286
  - 0.7967479674796746
  - 0.7987804878048781
  - 0.8042168674698793
  train_f1_weighted:
  - 0.7172271174249236
  - 0.7065153647665963
  - 0.6863548113093072
  - 0.6884783400072806
  - 0.7233389001550758
  train_f1_weighted_oob:
  - 0.6947191752082958
  - 0.6967804363124561
  - 0.6800752335881567
  - 0.6843829632326174
  - 0.6971847787188358
  train_jaccard_macro:
  - 0.7061503470020073
  - 0.7000581458893479
  - 0.6910465854254393
  - 0.6921385402028782
  - 0.7097538667377806
  train_jaccard_macro_oob:
  - 0.6945092300608753
  - 0.6945863016088664
  - 0.6879947261425253
  - 0.6900086764323375
  - 0.695319080508848
  train_jaccard_micro:
  - 0.6867061812023709
  - 0.678601165695254
  - 0.6663844199830652
  - 0.6677966101694915
  - 0.6910016977928692
  train_jaccard_micro_oob:
  - 0.6711409395973155
  - 0.6716417910447762
  - 0.6621621621621622
  - 0.6649746192893401
  - 0.672544080604534
  train_jaccard_samples:
  - 0.697217441193345
  - 0.6875000000000001
  - 0.6734901277584205
  - 0.6755226480836237
  - 0.700229489386116
  train_jaccard_samples_oob:
  - 0.6778542742398166
  - 0.6789965986394558
  - 0.6682636469221835
  - 0.6720383275261325
  - 0.6791451520367183
  train_jaccard_weighted:
  - 0.5731599021792635
  - 0.5629296663885252
  - 0.5408078356677856
  - 0.5430862987258316
  - 0.581630972625684
  train_jaccard_weighted_oob:
  - 0.549434672547776
  - 0.5521818291400589
  - 0.5345237633446608
  - 0.5387931811297089
  - 0.5527242186490583
  train_label_ranking_average_precision_score:
  - 0.9799196787148592
  - 0.9765873015873016
  - 0.9598577235772358
  - 0.9585365853658536
  - 0.9545180722891565
  train_label_ranking_average_precision_score_oob:
  - 0.9620481927710842
  - 0.9527116402116401
  - 0.9453252032520325
  - 0.9210365853658535
  - 0.9279116465863455
  train_matthews_corrcoef_macro:
  - 0.08926436260551611
  - 0.05148058717057823
  - 0.04374160400157975
  - 0.03511691446565827
  - 0.09491119981193359
  train_matthews_corrcoef_macro_oob:
  - 0.04918165697607627
  - 0.0472180377903533
  - 0.01844688820414948
  - 0.037320930947163315
  - 0.050449187061837264
  train_matthews_corrcoef_micro:
  - 0.2541162800074982
  - 0.1993355003434849
  - 0.1260955644732816
  - 0.14105111013159366
  - 0.28380801455410315
  train_matthews_corrcoef_micro_oob:
  - 0.1412647192012362
  - 0.14059972035110213
  - 0.06342472758857211
  - 0.10914628945461968
  - 0.1629331105847845
  train_matthews_corrcoef_samples:
  - 0.0963855421686747
  - 0.05952380952380952
  - 0.024390243902439025
  - 0.03048780487804878
  - 0.10719718790483167
  train_matthews_corrcoef_samples_oob:
  - 0.027906358626708892
  - 0.02976190476190476
  - 0.008734484951424853
  - 0.018292682926829267
  - 0.038131458603221105
  train_matthews_corrcoef_weighted:
  - 0.1815157096549988
  - 0.10194677853483965
  - 0.08940496112238937
  - 0.07128209503476901
  - 0.19124220284030788
  train_matthews_corrcoef_weighted_oob:
  - 0.09996383756280501
  - 0.09485877433804585
  - 0.03713910659373256
  - 0.0762131628842225
  - 0.1013983952917242
  train_ndgc:
  - 0.9858551302901141
  - 0.9839125690561141
  - 0.9711948461944495
  - 0.9709318825672997
  - 0.967586501983291
  train_ndgc_oob:
  - 0.9727029304009518
  - 0.9673878376243445
  - 0.9608767939488679
  - 0.9443975143958926
  - 0.948567555660625
  train_neg_coverage_error:
  - -1.2710843373493976
  - -1.3154761904761905
  - -1.3475609756097562
  - -1.3597560975609757
  - -1.3614457831325302
  train_neg_coverage_error_oob:
  - -1.3493975903614457
  - -1.4047619047619047
  - -1.4085365853658536
  - -1.5182926829268293
  - -1.4518072289156627
  train_neg_hamming_loss_macro:
  - -0.1857429718875502
  - -0.19146825396825395
  - -0.20020325203252032
  - -0.19918699186991873
  - -0.18273092369477914
  train_neg_hamming_loss_macro_oob:
  - -0.19678714859437751
  - -0.1964285714285714
  - -0.20325203252032523
  - -0.201219512195122
  - -0.1957831325301205
  train_neg_hamming_loss_micro:
  - -0.1857429718875502
  - -0.19146825396825398
  - -0.20020325203252032
  - -0.1991869918699187
  - -0.1827309236947791
  train_neg_hamming_loss_micro_oob:
  - -0.19678714859437751
  - -0.19642857142857142
  - -0.2032520325203252
  - -0.20121951219512196
  - -0.19578313253012047
  train_neg_hamming_loss_samples:
  - -0.1857429718875502
  - -0.19146825396825395
  - -0.2002032520325203
  - -0.19918699186991867
  - -0.1827309236947791
  train_neg_hamming_loss_samples_oob:
  - -0.19678714859437754
  - -0.19642857142857142
  - -0.20325203252032517
  - -0.20121951219512196
  - -0.19578313253012047
  train_neg_hamming_loss_weighted:
  - -0.2827728825750764
  - -0.29348463523340373
  - -0.31364518869069286
  - -0.31152165999271936
  - -0.27666109984492426
  train_neg_hamming_loss_weighted_oob:
  - -0.30528082479170415
  - -0.303219563687544
  - -0.31992476641184325
  - -0.3156170367673826
  - -0.3028152212811642
  train_neg_label_ranking_loss:
  - -0.01069277108433735
  - -0.018154761904761903
  - -0.022865853658536585
  - -0.02293360433604336
  - -0.02635542168674699
  train_neg_label_ranking_loss_oob:
  - -0.025970548862115125
  - -0.0333829365079365
  - -0.03323170731707317
  - -0.05028794037940379
  - -0.04382530120481928
  train_precision_macro:
  - 0.8142570281124497
  - 0.808531746031746
  - 0.7997967479674797
  - 0.8008130081300813
  - 0.8172690763052208
  train_precision_macro_oob:
  - 0.8032128514056224
  - 0.8035714285714287
  - 0.7967479674796748
  - 0.7987804878048781
  - 0.8042168674698796
  train_precision_micro:
  - 0.8142570281124498
  - 0.808531746031746
  - 0.7997967479674797
  - 0.8008130081300813
  - 0.8172690763052208
  train_precision_micro_oob:
  - 0.8032128514056225
  - 0.8035714285714286
  - 0.7967479674796748
  - 0.7987804878048781
  - 0.8042168674698795
  train_precision_samples:
  - 0.8142570281124497
  - 0.8085317460317459
  - 0.7997967479674796
  - 0.8008130081300812
  - 0.8172690763052206
  train_precision_samples_oob:
  - 0.8032128514056224
  - 0.8035714285714286
  - 0.7967479674796746
  - 0.7987804878048781
  - 0.8042168674698793
  train_precision_weighted:
  - 0.7172271174249236
  - 0.7065153647665963
  - 0.6863548113093072
  - 0.6884783400072806
  - 0.7233389001550758
  train_precision_weighted_oob:
  - 0.6947191752082958
  - 0.6967804363124561
  - 0.6800752335881567
  - 0.6843829632326174
  - 0.6971847787188358
  train_recall_macro:
  - 0.8142570281124497
  - 0.808531746031746
  - 0.7997967479674797
  - 0.8008130081300813
  - 0.8172690763052208
  train_recall_macro_oob:
  - 0.8032128514056224
  - 0.8035714285714287
  - 0.7967479674796748
  - 0.7987804878048781
  - 0.8042168674698796
  train_recall_micro:
  - 0.8142570281124498
  - 0.808531746031746
  - 0.7997967479674797
  - 0.8008130081300813
  - 0.8172690763052208
  train_recall_micro_oob:
  - 0.8032128514056225
  - 0.8035714285714286
  - 0.7967479674796748
  - 0.7987804878048781
  - 0.8042168674698795
  train_recall_samples:
  - 0.8142570281124497
  - 0.8085317460317459
  - 0.7997967479674796
  - 0.8008130081300812
  - 0.8172690763052206
  train_recall_samples_oob:
  - 0.8032128514056224
  - 0.8035714285714286
  - 0.7967479674796746
  - 0.7987804878048781
  - 0.8042168674698793
  train_recall_weighted:
  - 0.7172271174249236
  - 0.7065153647665963
  - 0.6863548113093072
  - 0.6884783400072806
  - 0.7233389001550758
  train_recall_weighted_oob:
  - 0.6947191752082958
  - 0.6967804363124561
  - 0.6800752335881567
  - 0.6843829632326174
  - 0.6971847787188358
  train_roc_auc_macro:
  - 0.9895604323157241
  - 0.9885255926823605
  - 0.9771671041903938
  - 0.96666578342806
  - 0.9807959356839954
  train_roc_auc_macro_oob:
  - 0.9750348933928982
  - 0.9747083276572709
  - 0.9676470955220942
  - 0.9454880679685921
  - 0.9673512010032533
  train_roc_auc_micro:
  - 0.9901811696235803
  - 0.9841966771716183
  - 0.982942884555511
  - 0.9752196870055851
  - 0.9837643713993567
  train_roc_auc_micro_oob:
  - 0.978422353640602
  - 0.9731970749319218
  - 0.9738726546069144
  - 0.957828990424633
  - 0.9707272364516049
  train_roc_auc_samples:
  - 0.9893072289156628
  - 0.981845238095238
  - 0.9771341463414634
  - 0.9770663956639566
  - 0.973644578313253
  train_roc_auc_samples_oob:
  - 0.9740294511378847
  - 0.9666170634920634
  - 0.9667682926829269
  - 0.9497120596205963
  - 0.9561746987951809
  train_roc_auc_weighted:
  - 0.9897141475226425
  - 0.9822213199106603
  - 0.9768680208118412
  - 0.9653955420420934
  - 0.9783757572185791
  train_roc_auc_weighted_oob:
  - 0.9749220752368996
  - 0.9660817542395977
  - 0.9649446260870789
  - 0.9428962514719372
  - 0.9635027342019916
start: 2023-12-21 08:30:00.618957
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
