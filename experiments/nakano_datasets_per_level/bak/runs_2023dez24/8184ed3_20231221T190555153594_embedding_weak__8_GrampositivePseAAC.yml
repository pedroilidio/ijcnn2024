active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb8AzczMzMz8P4CZmZmZmQHAAM3MzMzM/D8AMzMzMzPzvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 19:13:34.344962
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 8
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__8
  params: {}
hash: 8184ed392b24ee1a82992cb8c80cf6ebfc84774e5f058eb84bb5cd7297dd4097
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/8184ed3_20231221T190555153594_embedding_weak__8_GrampositivePseAAC.yml
results:
  fit_time:
  - 424.17529344558716
  - 425.24140763282776
  - 427.0689015388489
  - 442.4060151576996
  - 439.3398172855377
  score_time:
  - 5.082624435424805
  - 5.355111122131348
  - 5.027543306350708
  - 4.83085036277771
  - 4.86698579788208
  test_average_precision_macro:
  - 0.43943652056567134
  - 0.39562619190195913
  - 0.41392804014816265
  - 0.3958908125223184
  - 0.45685691174310855
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.5007418312086943
  - 0.5364358808296239
  - 0.5717502971888044
  - 0.5017735458571871
  - 0.5227184762796667
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6971153846153846
  - 0.7352941176470589
  - 0.7216981132075472
  - 0.7148692810457516
  - 0.7285714285714285
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4891660537178047
  - 0.5152025720012232
  - 0.5400771246813716
  - 0.4918940276131825
  - 0.5406654997716122
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7572115384615384
  - 0.7696078431372548
  - 0.7806603773584905
  - 0.7720588235294117
  - 0.7714285714285714
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7572115384615384
  - 0.7696078431372549
  - 0.7806603773584906
  - 0.7720588235294118
  - 0.7714285714285715
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7572115384615384
  - 0.7696078431372549
  - 0.7806603773584906
  - 0.7720588235294118
  - 0.7714285714285715
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6851886094674556
  - 0.700280112044818
  - 0.7168031327874688
  - 0.70319108035371
  - 0.7078167115902965
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6295326795726583
  - 0.6438824954572986
  - 0.6594258671221841
  - 0.646695642395571
  - 0.6444214419019294
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6092843326885881
  - 0.6254980079681275
  - 0.6402321083172147
  - 0.6287425149700598
  - 0.627906976744186
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6423076923076921
  - 0.6549019607843134
  - 0.6767295597484275
  - 0.656209150326797
  - 0.6596825396825395
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5292852630272673
  - 0.5438964634915141
  - 0.5693461536641996
  - 0.5471072651148439
  - 0.5530198617919095
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6971153846153848
  - 0.7352941176470589
  - 0.7216981132075472
  - 0.7148692810457516
  - 0.7285714285714285
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.10073529742462878
  - 0.13508932021763048
  - 0.1648746922935027
  - 0.1270220465347475
  - 0.13531210210779285
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.24120300162633465
  - 0.2938559201323777
  - 0.3313195059260635
  - 0.27769395366529287
  - 0.29418412904651203
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.18269230769230768
  - 0.21066699874228023
  - 0.2610062893081761
  - 0.19281045751633985
  - 0.21819698669069487
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.14230456092693133
  - 0.19301063475940333
  - 0.2262420854280808
  - 0.18305263462969903
  - 0.19321695123537572
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7742275873640947
  - 0.8033664624239768
  - 0.7926383876025079
  - 0.7875209119671521
  - 0.7981758106804056
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7980769230769231
  - -1.7352941176470589
  - -1.7264150943396226
  - -1.7450980392156863
  - -1.723809523809524
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2427884615384615
  - -0.2303921568627451
  - -0.21933962264150947
  - -0.22794117647058826
  - -0.2285714285714286
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.24278846153846154
  - -0.23039215686274508
  - -0.21933962264150944
  - -0.22794117647058823
  - -0.22857142857142856
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.24278846153846154
  - -0.23039215686274508
  - -0.21933962264150944
  - -0.22794117647058823
  - -0.22857142857142856
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.31481139053254437
  - -0.29971988795518206
  - -0.2831968672125312
  - -0.29680891964628986
  - -0.2921832884097035
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.266025641025641
  - -0.2352941176470588
  - -0.24213836477987422
  - -0.24836601307189535
  - -0.2373015873015873
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7572115384615384
  - 0.7696078431372548
  - 0.7806603773584905
  - 0.7720588235294117
  - 0.7714285714285714
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7572115384615384
  - 0.7696078431372549
  - 0.7806603773584906
  - 0.7720588235294118
  - 0.7714285714285715
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7572115384615384
  - 0.7696078431372549
  - 0.7806603773584906
  - 0.7720588235294118
  - 0.7714285714285715
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6851886094674556
  - 0.700280112044818
  - 0.7168031327874688
  - 0.70319108035371
  - 0.7078167115902965
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7572115384615384
  - 0.7696078431372548
  - 0.7806603773584905
  - 0.7720588235294117
  - 0.7714285714285714
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7572115384615384
  - 0.7696078431372549
  - 0.7806603773584906
  - 0.7720588235294118
  - 0.7714285714285715
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7572115384615384
  - 0.7696078431372549
  - 0.7806603773584906
  - 0.7720588235294118
  - 0.7714285714285715
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6851886094674556
  - 0.700280112044818
  - 0.7168031327874688
  - 0.70319108035371
  - 0.7078167115902965
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6828082261315626
  - 0.6744814348172558
  - 0.6478571756199871
  - 0.7200028234839657
  - 0.7033663095051002
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7603242110453649
  - 0.7718686154329719
  - 0.7814465408805031
  - 0.7779379725746507
  - 0.7724432159596202
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7339743589743589
  - 0.7647058823529413
  - 0.7578616352201257
  - 0.7516339869281046
  - 0.7626984126984128
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6552378629824283
  - 0.6723251399157584
  - 0.692547300862698
  - 0.6816846653408569
  - 0.6895601302043951
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9985729199436602
  - 0.9975177657228677
  - 0.9993380118730658
  - 0.9989932667074519
  - 0.9974187654966897
  train_average_precision_macro_oob:
  - 0.6122319274828482
  - 0.5807517789098966
  - 0.636130886662041
  - 0.5847545640267122
  - 0.6131598942153368
  train_average_precision_micro:
  - 0.9769175514079179
  - 0.9748071538079073
  - 0.9798600190119066
  - 0.977398208362879
  - 0.9730651416037125
  train_average_precision_micro_oob:
  - 0.748457919933308
  - 0.6944854778115662
  - 0.736540394739343
  - 0.7060735719157696
  - 0.7268132786242629
  train_average_precision_samples:
  - 0.9759036144578314
  - 0.9700239808153477
  - 0.9729620661824052
  - 0.9756195043964829
  - 0.9728260869565217
  train_average_precision_samples_oob:
  - 0.7967871485943774
  - 0.7721822541966427
  - 0.800040355125101
  - 0.7871702637889688
  - 0.7814009661835749
  train_average_precision_weighted:
  - 0.9978206837793762
  - 0.9963119641955535
  - 0.99906526592927
  - 0.9986898099429946
  - 0.9960559020585451
  train_average_precision_weighted_oob:
  - 0.7806636954837357
  - 0.7238828175088416
  - 0.7795586776544324
  - 0.746755905517818
  - 0.7770394974483649
  train_f1_macro:
  - 0.9451807228915662
  - 0.9376498800959232
  - 0.9455205811138014
  - 0.9400479616306954
  - 0.9450483091787439
  train_f1_macro_oob:
  - 0.8186746987951807
  - 0.8075539568345323
  - 0.8105326876513317
  - 0.8051558752997602
  - 0.8158212560386473
  train_f1_micro:
  - 0.9451807228915663
  - 0.9376498800959233
  - 0.9455205811138014
  - 0.9400479616306955
  - 0.9450483091787439
  train_f1_micro_oob:
  - 0.8186746987951807
  - 0.8075539568345323
  - 0.8105326876513317
  - 0.8051558752997602
  - 0.8158212560386473
  train_f1_samples:
  - 0.9451807228915663
  - 0.9376498800959233
  - 0.9455205811138014
  - 0.9400479616306955
  - 0.9450483091787439
  train_f1_samples_oob:
  - 0.8186746987951807
  - 0.8075539568345323
  - 0.8105326876513317
  - 0.8051558752997602
  - 0.8158212560386473
  train_f1_weighted:
  - 0.9468671823331513
  - 0.9377129875047331
  - 0.9456338077237967
  - 0.940600488730156
  - 0.9454349563827199
  train_f1_weighted_oob:
  - 0.7777324093510077
  - 0.7617867428545203
  - 0.764407360310299
  - 0.7590924884795252
  - 0.7739199944392314
  train_jaccard_macro:
  - 0.8982745728270025
  - 0.8847971327393495
  - 0.8981111217109503
  - 0.8890734021145519
  - 0.8974084758163419
  train_jaccard_macro_oob:
  - 0.7027540016455895
  - 0.687880083638788
  - 0.6920622410392889
  - 0.6848539824646902
  - 0.6990864495363277
  train_jaccard_micro:
  - 0.8960593946316391
  - 0.8826185101580135
  - 0.8966704936854191
  - 0.8868778280542986
  - 0.8958214081282198
  train_jaccard_micro_oob:
  - 0.6930137684854666
  - 0.6772247360482655
  - 0.6814249363867685
  - 0.6738585047666834
  - 0.688934217236104
  train_jaccard_samples:
  - 0.9126104417670683
  - 0.9008792965627497
  - 0.9131557707828895
  - 0.904396482813749
  - 0.913365539452496
  train_jaccard_samples_oob:
  - 0.7134136546184737
  - 0.6968824940047961
  - 0.7016949152542372
  - 0.6930455635491606
  - 0.7104669887278582
  train_jaccard_weighted:
  - 0.9015718160863403
  - 0.8849665012163015
  - 0.8984063892482891
  - 0.8903017091598154
  - 0.8981783646428743
  train_jaccard_weighted_oob:
  - 0.6379906810619046
  - 0.6171774336441843
  - 0.6205357524715451
  - 0.6137823903714
  - 0.6331181692265354
  train_label_ranking_average_precision_score:
  - 0.9759036144578311
  - 0.9700239808153476
  - 0.972962066182405
  - 0.9756195043964826
  - 0.9728260869565216
  train_label_ranking_average_precision_score_oob:
  - 0.7967871485943776
  - 0.7721822541966423
  - 0.8000403551251006
  - 0.7871702637889688
  - 0.7814009661835748
  train_matthews_corrcoef_macro:
  - 0.6306710778113687
  - 0.6124344857700502
  - 0.634016436145004
  - 0.619934982183349
  - 0.6316834834853106
  train_matthews_corrcoef_macro_oob:
  - 0.2542914426669964
  - 0.2239840578006608
  - 0.23633649957868919
  - 0.22109419391091634
  - 0.24278500146126689
  train_matthews_corrcoef_micro:
  - 0.8537801830363917
  - 0.8322491588783572
  - 0.8547008178427039
  - 0.8399047930231983
  - 0.8525448999823637
  train_matthews_corrcoef_micro_oob:
  - 0.4679857380105581
  - 0.41819854489844055
  - 0.43567780624360897
  - 0.4140726730878628
  - 0.45380818792765815
  train_matthews_corrcoef_samples:
  - 0.7878941391407834
  - 0.7551814954496953
  - 0.7892882996208841
  - 0.7673286996245207
  - 0.7908181581503274
  train_matthews_corrcoef_samples_oob:
  - 0.29734630716683264
  - 0.2555811757054907
  - 0.27075391575071656
  - 0.2495572761172715
  - 0.29205479131044193
  train_matthews_corrcoef_weighted:
  - 0.8360699269333193
  - 0.8114199420262908
  - 0.835936325217847
  - 0.8199286721916204
  - 0.834232425867929
  train_matthews_corrcoef_weighted_oob:
  - 0.37551210134134044
  - 0.33035658072553864
  - 0.3466827079548833
  - 0.32765583352888333
  - 0.36061810859198096
  train_ndgc:
  - 0.9819182241139923
  - 0.9774766867211659
  - 0.9798211768419555
  - 0.9816909670353365
  - 0.9797024700333358
  train_ndgc_oob:
  - 0.849062625246175
  - 0.8304652936845669
  - 0.8514400348611635
  - 0.8418549773198535
  - 0.8376763387736732
  train_neg_coverage_error:
  - -1.0963855421686748
  - -1.0983213429256595
  - -1.0944309927360776
  - -1.0983213429256595
  - -1.0942028985507246
  train_neg_coverage_error_oob:
  - -1.5373493975903614
  - -1.589928057553957
  - -1.5326876513317191
  - -1.565947242206235
  - -1.5579710144927537
  train_neg_hamming_loss_macro:
  - -0.054819277108433734
  - -0.06235011990407674
  - -0.05447941888619855
  - -0.05995203836930456
  - -0.05495169082125604
  train_neg_hamming_loss_macro_oob:
  - -0.1813253012048193
  - -0.19244604316546762
  - -0.1894673123486683
  - -0.1948441247002398
  - -0.18417874396135264
  train_neg_hamming_loss_micro:
  - -0.054819277108433734
  - -0.06235011990407674
  - -0.05447941888619855
  - -0.05995203836930456
  - -0.05495169082125604
  train_neg_hamming_loss_micro_oob:
  - -0.18132530120481927
  - -0.19244604316546762
  - -0.1894673123486683
  - -0.19484412470023982
  - -0.18417874396135267
  train_neg_hamming_loss_samples:
  - -0.054819277108433734
  - -0.06235011990407674
  - -0.05447941888619855
  - -0.05995203836930456
  - -0.05495169082125604
  train_neg_hamming_loss_samples_oob:
  - -0.18132530120481927
  - -0.19244604316546762
  - -0.1894673123486683
  - -0.19484412470023982
  - -0.18417874396135267
  train_neg_hamming_loss_weighted:
  - -0.05313281766684877
  - -0.06228701249526695
  - -0.054366192276203255
  - -0.059399511269843976
  - -0.05456504361728009
  train_neg_hamming_loss_weighted_oob:
  - -0.22226759064899218
  - -0.2382132571454798
  - -0.23559263968970107
  - -0.24090751152047485
  - -0.22608000556076877
  train_neg_label_ranking_loss:
  - -0.028714859437751
  - -0.0319744204636291
  - -0.028046811945117028
  - -0.029376498800959234
  - -0.028784219001610302
  train_neg_label_ranking_loss_oob:
  - -0.17510040160642568
  - -0.19564348521183056
  - -0.17352703793381757
  - -0.18465227817745802
  - -0.18297101449275363
  train_precision_macro:
  - 0.9451807228915662
  - 0.9376498800959232
  - 0.9455205811138014
  - 0.9400479616306954
  - 0.9450483091787439
  train_precision_macro_oob:
  - 0.8186746987951807
  - 0.8075539568345323
  - 0.8105326876513317
  - 0.8051558752997602
  - 0.8158212560386473
  train_precision_micro:
  - 0.9451807228915663
  - 0.9376498800959233
  - 0.9455205811138014
  - 0.9400479616306955
  - 0.9450483091787439
  train_precision_micro_oob:
  - 0.8186746987951807
  - 0.8075539568345323
  - 0.8105326876513317
  - 0.8051558752997602
  - 0.8158212560386473
  train_precision_samples:
  - 0.9451807228915663
  - 0.9376498800959233
  - 0.9455205811138014
  - 0.9400479616306955
  - 0.9450483091787439
  train_precision_samples_oob:
  - 0.8186746987951807
  - 0.8075539568345323
  - 0.8105326876513317
  - 0.8051558752997602
  - 0.8158212560386473
  train_precision_weighted:
  - 0.9468671823331513
  - 0.9377129875047331
  - 0.9456338077237967
  - 0.940600488730156
  - 0.9454349563827199
  train_precision_weighted_oob:
  - 0.7777324093510077
  - 0.7617867428545203
  - 0.764407360310299
  - 0.7590924884795252
  - 0.7739199944392314
  train_recall_macro:
  - 0.9451807228915662
  - 0.9376498800959232
  - 0.9455205811138014
  - 0.9400479616306954
  - 0.9450483091787439
  train_recall_macro_oob:
  - 0.8186746987951807
  - 0.8075539568345323
  - 0.8105326876513317
  - 0.8051558752997602
  - 0.8158212560386473
  train_recall_micro:
  - 0.9451807228915663
  - 0.9376498800959233
  - 0.9455205811138014
  - 0.9400479616306955
  - 0.9450483091787439
  train_recall_micro_oob:
  - 0.8186746987951807
  - 0.8075539568345323
  - 0.8105326876513317
  - 0.8051558752997602
  - 0.8158212560386473
  train_recall_samples:
  - 0.9451807228915663
  - 0.9376498800959233
  - 0.9455205811138014
  - 0.9400479616306955
  - 0.9450483091787439
  train_recall_samples_oob:
  - 0.8186746987951807
  - 0.8075539568345323
  - 0.8105326876513317
  - 0.8051558752997602
  - 0.8158212560386473
  train_recall_weighted:
  - 0.9468671823331513
  - 0.9377129875047331
  - 0.9456338077237967
  - 0.940600488730156
  - 0.9454349563827199
  train_recall_weighted_oob:
  - 0.7777324093510077
  - 0.7617867428545203
  - 0.764407360310299
  - 0.7590924884795252
  - 0.7739199944392314
  train_roc_auc_macro:
  - 0.9993540109687086
  - 0.9988364048918346
  - 0.9996360482136102
  - 0.9995506998129435
  - 0.9986541292147284
  train_roc_auc_macro_oob:
  - 0.825677425777742
  - 0.8008378435884169
  - 0.8432675793003244
  - 0.7905199438928538
  - 0.8255236398757964
  train_roc_auc_micro:
  - 0.9838974266268445
  - 0.9846755980861245
  - 0.9863862755949088
  - 0.9831081531542686
  - 0.9835173023808557
  train_roc_auc_micro_oob:
  - 0.8765527069362417
  - 0.8554354066985645
  - 0.8713735084806649
  - 0.8607870290121471
  - 0.8731049059057839
  train_roc_auc_samples:
  - 0.9712851405622491
  - 0.9680255795363708
  - 0.9719531880548828
  - 0.9706235011990407
  - 0.9712157809983898
  train_roc_auc_samples_oob:
  - 0.8248995983935744
  - 0.8043565147881695
  - 0.8264729620661825
  - 0.815347721822542
  - 0.8170289855072463
  train_roc_auc_weighted:
  - 0.999004765529909
  - 0.9982649286958262
  - 0.9994722008436124
  - 0.9994116363176281
  - 0.9979288138589689
  train_roc_auc_weighted_oob:
  - 0.872412865771048
  - 0.8381793443550067
  - 0.8606921508200331
  - 0.8487850609928684
  - 0.873784727294448
start: 2023-12-21 19:05:55.153594
wrapper: null
