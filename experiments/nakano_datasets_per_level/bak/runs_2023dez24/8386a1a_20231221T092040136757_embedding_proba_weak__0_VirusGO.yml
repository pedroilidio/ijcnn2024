active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 09:20:44.801019
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 0
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__0
  params: {}
hash: 8386a1ab223121771688be6ee3ab940394d77f92f0c9a3cf12156614b05e6c7c
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/8386a1a_20231221T092040136757_embedding_proba_weak__0_VirusGO.yml
results:
  fit_time:
  - 1.218724250793457
  - 1.1826133728027344
  - 1.1928503513336182
  - 1.2001192569732666
  - 1.260728120803833
  score_time:
  - 0.5432443618774414
  - 0.5721583366394043
  - 0.5475637912750244
  - 0.5820949077606201
  - 0.5680825710296631
  test_average_precision_macro:
  - 0.9297808334446255
  - 0.8800805113882447
  - 0.9839000761189342
  - 0.8895526605774869
  - 0.9310921683363205
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7533360978982637
  - 0.6716782219825805
  - 0.814051654404746
  - 0.7525126394930963
  - 0.7549026246603681
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7837301587301587
  - 0.7934523809523808
  - 0.9134146341463415
  - 0.804878048780488
  - 0.8056910569105691
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9109195668937028
  - 0.8211996225814291
  - 0.9671561552826259
  - 0.8804847618201288
  - 0.9196754234757332
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8015873015873017
  - 0.7976190476190476
  - 0.7967479674796748
  - 0.7926829268292682
  - 0.7967479674796748
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8015873015873016
  - 0.7976190476190477
  - 0.7967479674796748
  - 0.7926829268292683
  - 0.7967479674796748
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8015873015873017
  - 0.7976190476190478
  - 0.7967479674796747
  - 0.7926829268292683
  - 0.7967479674796749
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6857142857142857
  - 0.6755368814192344
  - 0.6829268292682927
  - 0.6829268292682926
  - 0.6819512195121952
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6945676044234766
  - 0.6906128021635897
  - 0.6872813744318119
  - 0.6812234548100626
  - 0.6874215065661611
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6688741721854304
  - 0.6633663366336634
  - 0.6621621621621622
  - 0.6565656565656566
  - 0.6621621621621622
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6734693877551022
  - 0.6695011337868482
  - 0.6684088269454124
  - 0.6631823461091755
  - 0.667247386759582
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5393792737056777
  - 0.5287367422504983
  - 0.5385756377954846
  - 0.5376280415044036
  - 0.5378861876944869
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7837301587301585
  - 0.7934523809523808
  - 0.9134146341463414
  - 0.8048780487804879
  - 0.8056910569105691
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8420114016574028
  - 0.8478256522052516
  - 0.935916888019219
  - 0.8554724282196458
  - 0.8556591567441042
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.8571428571428572
  - -1.8333333333333333
  - -1.5609756097560976
  - -1.7804878048780488
  - -1.9024390243902438
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.19841269841269846
  - -0.2023809523809524
  - -0.2032520325203252
  - -0.2073170731707317
  - -0.20325203252032523
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1984126984126984
  - -0.20238095238095238
  - -0.2032520325203252
  - -0.2073170731707317
  - -0.2032520325203252
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.19841269841269837
  - -0.20238095238095233
  - -0.20325203252032517
  - -0.20731707317073167
  - -0.20325203252032517
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3142857142857143
  - -0.32446311858076554
  - -0.3170731707317073
  - -0.3170731707317073
  - -0.3180487804878049
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1273809523809524
  - -0.1255952380952381
  - -0.06673441734417344
  - -0.10548780487804879
  - -0.13658536585365852
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8015873015873017
  - 0.7976190476190476
  - 0.7967479674796748
  - 0.7926829268292682
  - 0.7967479674796748
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8015873015873016
  - 0.7976190476190477
  - 0.7967479674796748
  - 0.7926829268292683
  - 0.7967479674796748
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8015873015873017
  - 0.7976190476190478
  - 0.7967479674796747
  - 0.7926829268292683
  - 0.7967479674796749
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6857142857142857
  - 0.6755368814192344
  - 0.6829268292682927
  - 0.6829268292682926
  - 0.6819512195121952
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8015873015873017
  - 0.7976190476190476
  - 0.7967479674796748
  - 0.7926829268292682
  - 0.7967479674796748
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8015873015873016
  - 0.7976190476190477
  - 0.7967479674796748
  - 0.7926829268292683
  - 0.7967479674796748
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8015873015873017
  - 0.7976190476190478
  - 0.7967479674796747
  - 0.7926829268292683
  - 0.7967479674796749
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6857142857142857
  - 0.6755368814192344
  - 0.6829268292682927
  - 0.6829268292682926
  - 0.6819512195121952
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9708320433436533
  - 0.9585282777828481
  - 0.9865196078431374
  - 0.9640128573952104
  - 0.9697068302774824
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9078712871287129
  - 0.9078138718173836
  - 0.9213265306122449
  - 0.910708898944193
  - 0.8978061224489796
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8726190476190476
  - 0.8744047619047618
  - 0.9332655826558267
  - 0.8945121951219513
  - 0.8634146341463415
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9499052631578947
  - 0.9250904221337658
  - 0.9725
  - 0.9484696634350614
  - 0.9643603827429914
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9311365750887353
  - 0.9454173237962323
  - 0.921372779332045
  - 0.9587462012982852
  - 0.9411250573455167
  train_average_precision_macro_oob:
  - 0.8216683911581932
  - 0.8652213615553576
  - 0.8247801396358545
  - 0.8491936772637168
  - 0.8488320018454288
  train_average_precision_micro:
  - 0.7401504170854581
  - 0.7903722705862416
  - 0.7699343199093069
  - 0.802958011795769
  - 0.7605465871990259
  train_average_precision_micro_oob:
  - 0.680166584148694
  - 0.7560287361552426
  - 0.7237974746962549
  - 0.7531982713743441
  - 0.7016071426261151
  train_average_precision_samples:
  - 0.8121212121212121
  - 0.8097474747474747
  - 0.8513052208835341
  - 0.8545180722891564
  - 0.8415997322623828
  train_average_precision_samples_oob:
  - 0.7837373737373737
  - 0.7983164983164983
  - 0.8244979919678715
  - 0.8069611780455154
  - 0.8100234270414994
  train_average_precision_weighted:
  - 0.8969283130286945
  - 0.9388950160916306
  - 0.9052291407690649
  - 0.9503900568987145
  - 0.9147567845827874
  train_average_precision_weighted_oob:
  - 0.8112192143220573
  - 0.8891245737292639
  - 0.8399884461732279
  - 0.8755516316488208
  - 0.8318555050406707
  train_f1_macro:
  - 0.7959595959595961
  - 0.796969696969697
  - 0.7971887550200804
  - 0.7981927710843374
  - 0.7971887550200804
  train_f1_macro_oob:
  - 0.7959595959595961
  - 0.796969696969697
  - 0.7971887550200804
  - 0.7981927710843374
  - 0.7971887550200804
  train_f1_micro:
  - 0.795959595959596
  - 0.796969696969697
  - 0.7971887550200804
  - 0.7981927710843374
  - 0.7971887550200804
  train_f1_micro_oob:
  - 0.795959595959596
  - 0.796969696969697
  - 0.7971887550200804
  - 0.7981927710843374
  - 0.7971887550200804
  train_f1_samples:
  - 0.7959595959595959
  - 0.7969696969696968
  - 0.79718875502008
  - 0.7981927710843372
  - 0.7971887550200802
  train_f1_samples_oob:
  - 0.7959595959595959
  - 0.7969696969696968
  - 0.79718875502008
  - 0.7981927710843372
  - 0.7971887550200802
  train_f1_weighted:
  - 0.6811881188118811
  - 0.6837931554349465
  - 0.6819157819396398
  - 0.6819217167176167
  - 0.6820350709769772
  train_f1_weighted_oob:
  - 0.6811881188118811
  - 0.6837931554349465
  - 0.6819157819396398
  - 0.6819217167176167
  - 0.6820350709769772
  train_jaccard_macro:
  - 0.6865718823822763
  - 0.6875720642335219
  - 0.6884106375428006
  - 0.6899038730062433
  - 0.6883934727712367
  train_jaccard_macro_oob:
  - 0.6865718823822763
  - 0.6875720642335219
  - 0.6884106375428006
  - 0.6899038730062433
  - 0.6883934727712367
  train_jaccard_micro:
  - 0.6610738255033557
  - 0.6624685138539043
  - 0.662771285475793
  - 0.6641604010025063
  - 0.662771285475793
  train_jaccard_micro_oob:
  - 0.6610738255033557
  - 0.6624685138539043
  - 0.662771285475793
  - 0.6641604010025063
  - 0.662771285475793
  train_jaccard_samples:
  - 0.6670995670995672
  - 0.6681096681096682
  - 0.6683878370625359
  - 0.6696787148594379
  - 0.6686746987951808
  train_jaccard_samples_oob:
  - 0.6670995670995672
  - 0.6681096681096682
  - 0.6683878370625359
  - 0.6696787148594379
  - 0.6686746987951808
  train_jaccard_weighted:
  - 0.5361081011957751
  - 0.5388241612378774
  - 0.5363515099374782
  - 0.5365957337601076
  - 0.5364361441576639
  train_jaccard_weighted_oob:
  - 0.5361081011957751
  - 0.5388241612378774
  - 0.5363515099374782
  - 0.5365957337601076
  - 0.5364361441576639
  train_label_ranking_average_precision_score:
  - 0.8121212121212118
  - 0.8097474747474745
  - 0.851305220883534
  - 0.8545180722891562
  - 0.8415997322623826
  train_label_ranking_average_precision_score_oob:
  - 0.7837373737373732
  - 0.798316498316498
  - 0.8244979919678713
  - 0.806961178045515
  - 0.8100234270414992
  train_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_ndgc:
  - 0.8611605927469982
  - 0.860263407747633
  - 0.8915565434520195
  - 0.8940504516460707
  - 0.884228085713836
  train_ndgc_oob:
  - 0.8397800253107154
  - 0.8518475224823734
  - 0.8708509001700738
  - 0.8590638376634199
  - 0.8597115269772911
  train_neg_coverage_error:
  - -1.793939393939394
  - -1.8303030303030303
  - -1.7289156626506024
  - -1.7048192771084338
  - -1.7530120481927711
  train_neg_coverage_error_oob:
  - -1.9090909090909092
  - -1.903030303030303
  - -1.8493975903614457
  - -1.8975903614457832
  - -1.891566265060241
  train_neg_hamming_loss_macro:
  - -0.20404040404040402
  - -0.203030303030303
  - -0.20281124497991973
  - -0.2018072289156627
  - -0.20281124497991967
  train_neg_hamming_loss_macro_oob:
  - -0.20404040404040402
  - -0.203030303030303
  - -0.20281124497991973
  - -0.2018072289156627
  - -0.20281124497991967
  train_neg_hamming_loss_micro:
  - -0.20404040404040405
  - -0.20303030303030303
  - -0.20281124497991967
  - -0.20180722891566266
  - -0.20281124497991967
  train_neg_hamming_loss_micro_oob:
  - -0.20404040404040405
  - -0.20303030303030303
  - -0.20281124497991967
  - -0.20180722891566266
  - -0.20281124497991967
  train_neg_hamming_loss_samples:
  - -0.20404040404040408
  - -0.20303030303030303
  - -0.2028112449799197
  - -0.20180722891566266
  - -0.2028112449799197
  train_neg_hamming_loss_samples_oob:
  - -0.20404040404040408
  - -0.20303030303030303
  - -0.2028112449799197
  - -0.20180722891566266
  - -0.2028112449799197
  train_neg_hamming_loss_weighted:
  - -0.31881188118811876
  - -0.3162068445650535
  - -0.31808421806036025
  - -0.3180782832823833
  - -0.3179649290230228
  train_neg_hamming_loss_weighted_oob:
  - -0.31881188118811876
  - -0.3162068445650535
  - -0.31808421806036025
  - -0.3180782832823833
  - -0.3179649290230228
  train_neg_label_ranking_loss:
  - -0.11264309764309766
  - -0.11794612794612798
  - -0.09683734939759035
  - -0.09298862115127175
  - -0.10194109772423027
  train_neg_label_ranking_loss_oob:
  - -0.13574074074074075
  - -0.13095959595959597
  - -0.12205488621151273
  - -0.13002008032128515
  - -0.13303212851405624
  train_precision_macro:
  - 0.7959595959595961
  - 0.796969696969697
  - 0.7971887550200804
  - 0.7981927710843374
  - 0.7971887550200804
  train_precision_macro_oob:
  - 0.7959595959595961
  - 0.796969696969697
  - 0.7971887550200804
  - 0.7981927710843374
  - 0.7971887550200804
  train_precision_micro:
  - 0.795959595959596
  - 0.796969696969697
  - 0.7971887550200804
  - 0.7981927710843374
  - 0.7971887550200804
  train_precision_micro_oob:
  - 0.795959595959596
  - 0.796969696969697
  - 0.7971887550200804
  - 0.7981927710843374
  - 0.7971887550200804
  train_precision_samples:
  - 0.7959595959595959
  - 0.7969696969696968
  - 0.79718875502008
  - 0.7981927710843372
  - 0.7971887550200802
  train_precision_samples_oob:
  - 0.7959595959595959
  - 0.7969696969696968
  - 0.79718875502008
  - 0.7981927710843372
  - 0.7971887550200802
  train_precision_weighted:
  - 0.6811881188118811
  - 0.6837931554349465
  - 0.6819157819396398
  - 0.6819217167176167
  - 0.6820350709769772
  train_precision_weighted_oob:
  - 0.6811881188118811
  - 0.6837931554349465
  - 0.6819157819396398
  - 0.6819217167176167
  - 0.6820350709769772
  train_recall_macro:
  - 0.7959595959595961
  - 0.796969696969697
  - 0.7971887550200804
  - 0.7981927710843374
  - 0.7971887550200804
  train_recall_macro_oob:
  - 0.7959595959595961
  - 0.796969696969697
  - 0.7971887550200804
  - 0.7981927710843374
  - 0.7971887550200804
  train_recall_micro:
  - 0.795959595959596
  - 0.796969696969697
  - 0.7971887550200804
  - 0.7981927710843374
  - 0.7971887550200804
  train_recall_micro_oob:
  - 0.795959595959596
  - 0.796969696969697
  - 0.7971887550200804
  - 0.7981927710843374
  - 0.7971887550200804
  train_recall_samples:
  - 0.7959595959595959
  - 0.7969696969696968
  - 0.79718875502008
  - 0.7981927710843372
  - 0.7971887550200802
  train_recall_samples_oob:
  - 0.7959595959595959
  - 0.7969696969696968
  - 0.79718875502008
  - 0.7981927710843372
  - 0.7971887550200802
  train_recall_weighted:
  - 0.6811881188118811
  - 0.6837931554349465
  - 0.6819157819396398
  - 0.6819217167176167
  - 0.6820350709769772
  train_recall_weighted_oob:
  - 0.6811881188118811
  - 0.6837931554349465
  - 0.6819157819396398
  - 0.6819217167176167
  - 0.6820350709769772
  train_roc_auc_macro:
  - 0.9658332785317437
  - 0.9805944045472882
  - 0.967363340848288
  - 0.9828001033481444
  - 0.9810408993815377
  train_roc_auc_macro_oob:
  - 0.9469886000990919
  - 0.9523301368658693
  - 0.9494177929823443
  - 0.95570212799224
  - 0.9578928880644174
  train_roc_auc_micro:
  - 0.9093739005880282
  - 0.9185630781453946
  - 0.9147754196074519
  - 0.9216558715854688
  - 0.9119603711000823
  train_roc_auc_micro_oob:
  - 0.896686686435141
  - 0.9037512059474491
  - 0.9007968177170361
  - 0.9043962577051848
  - 0.8967628500885354
  train_roc_auc_samples:
  - 0.8873569023569023
  - 0.8820538720538721
  - 0.9031626506024097
  - 0.9070113788487282
  - 0.8980589022757698
  train_roc_auc_samples_oob:
  - 0.8642592592592592
  - 0.869040404040404
  - 0.8779451137884873
  - 0.8699799196787148
  - 0.8669678714859439
  train_roc_auc_weighted:
  - 0.9469351866085423
  - 0.9708622745064838
  - 0.9573583113707054
  - 0.9763221635329845
  - 0.9657455523958157
  train_roc_auc_weighted_oob:
  - 0.9172041779645901
  - 0.9452535591898577
  - 0.9339839199747313
  - 0.9501811020654304
  - 0.9318194714871135
start: 2023-12-21 09:20:40.136757
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
