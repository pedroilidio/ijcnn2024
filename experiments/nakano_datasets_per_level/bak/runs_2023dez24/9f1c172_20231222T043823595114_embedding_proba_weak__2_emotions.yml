active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/YGZmZmZm9r9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          kJmZmZmZFcDAmZmZmZn5P3BmZmZmZhpA4MzMzMzMDECQmZmZmZkZwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 04:38:44.638155
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__2
  params: {}
hash: 9f1c172fc60e43ccae6d5b59030564c7defd673b0a9c6a8ca9e1dd74f8841a93
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/9f1c172_20231222T043823595114_embedding_proba_weak__2_emotions.yml
results:
  fit_time:
  - 8.652462244033813
  - 8.660699605941772
  - 9.157485723495483
  - 9.245907306671143
  - 9.233328819274902
  score_time:
  - 2.464456081390381
  - 2.446992874145508
  - 2.734657049179077
  - 2.763015031814575
  - 2.9055964946746826
  test_average_precision_macro:
  - 0.693347899057616
  - 0.7742648101858968
  - 0.7542352585847376
  - 0.7506595193545826
  - 0.721092207362953
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6931163460356277
  - 0.7946717222142521
  - 0.7655060685158839
  - 0.7386822992686252
  - 0.718468643846225
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7986111111111112
  - 0.8364197530864197
  - 0.8431051587301587
  - 0.8248309178743961
  - 0.7705777777777778
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.691840249660612
  - 0.7841629695537425
  - 0.7643807817357878
  - 0.743221613631135
  - 0.7112443102211725
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7271505376344086
  - 0.7222222222222222
  - 0.7023809523809524
  - 0.7028985507246377
  - 0.7519999999999999
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7271505376344086
  - 0.7222222222222222
  - 0.7023809523809523
  - 0.7028985507246377
  - 0.752
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7271505376344086
  - 0.7222222222222222
  - 0.7023809523809523
  - 0.7028985507246378
  - 0.7519999999999998
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7152605459057073
  - 0.7150481494372897
  - 0.690085649644473
  - 0.6918478260869565
  - 0.739475113122172
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5748204839006076
  - 0.5665921562878764
  - 0.5447363475002859
  - 0.5452475592669478
  - 0.6073517516428076
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5712777191129884
  - 0.5652173913043478
  - 0.5412844036697247
  - 0.5418994413407822
  - 0.6025641025641025
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5875576036866359
  - 0.5805860805860804
  - 0.559608843537415
  - 0.55527950310559
  - 0.6209523809523806
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.56052888986058
  - 0.5579273873077895
  - 0.5308089657299476
  - 0.5325388107826586
  - 0.5921352568010304
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7986111111111109
  - 0.8364197530864197
  - 0.8431051587301587
  - 0.8248309178743959
  - 0.7705777777777778
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.19789239188161936
  - 0.2506133122755436
  - 0.2164418134680609
  - 0.1817173612165557
  - 0.30416541391419516
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.22867064654871175
  - 0.285021224219838
  - 0.2438879280623833
  - 0.22721882830994636
  - 0.32763568449747477
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.11411264790983706
  - 0.14814223199222604
  - 0.11575715270935823
  - 0.11285496318612125
  - 0.17732137099428932
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.1920474720968499
  - 0.2615332176920734
  - 0.21486875221020496
  - 0.17990446094482984
  - 0.2913231040295013
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8645508770666941
  - 0.8919599560591602
  - 0.8976768281539232
  - 0.8828844491276875
  - 0.8340535565020111
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.693548387096774
  - -2.606837606837607
  - -2.767857142857143
  - -2.7304347826086954
  - -2.712
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2728494623655914
  - -0.27777777777777773
  - -0.2976190476190476
  - -0.29710144927536236
  - -0.248
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2728494623655914
  - -0.2777777777777778
  - -0.2976190476190476
  - -0.2971014492753623
  - -0.248
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.27284946236559143
  - -0.27777777777777773
  - -0.29761904761904756
  - -0.29710144927536236
  - -0.24800000000000003
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2847394540942928
  - -0.2849518505627103
  - -0.3099143503555269
  - -0.30815217391304345
  - -0.26052488687782804
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.15945340501792113
  - -0.12507122507122506
  - -0.13090277777777776
  - -0.13654589371980677
  - -0.1842888888888889
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7271505376344086
  - 0.7222222222222222
  - 0.7023809523809524
  - 0.7028985507246377
  - 0.7519999999999999
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7271505376344086
  - 0.7222222222222222
  - 0.7023809523809523
  - 0.7028985507246377
  - 0.752
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7271505376344086
  - 0.7222222222222222
  - 0.7023809523809523
  - 0.7028985507246378
  - 0.7519999999999998
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7152605459057073
  - 0.7150481494372897
  - 0.690085649644473
  - 0.6918478260869565
  - 0.739475113122172
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7271505376344086
  - 0.7222222222222222
  - 0.7023809523809524
  - 0.7028985507246377
  - 0.7519999999999999
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7271505376344086
  - 0.7222222222222222
  - 0.7023809523809523
  - 0.7028985507246377
  - 0.752
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7271505376344086
  - 0.7222222222222222
  - 0.7023809523809523
  - 0.7028985507246378
  - 0.7519999999999998
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7152605459057073
  - 0.7150481494372897
  - 0.690085649644473
  - 0.6918478260869565
  - 0.739475113122172
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8307476551399554
  - 0.8711268059417231
  - 0.8587448924048005
  - 0.8591236227475533
  - 0.8357512199949904
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.848792642516633
  - 0.8861910988607822
  - 0.8808078578523342
  - 0.8788415849172287
  - 0.8517992626743878
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8405465949820787
  - 0.8749287749287749
  - 0.8690972222222222
  - 0.8634541062801931
  - 0.8157111111111109
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8283989656267241
  - 0.8756778392684083
  - 0.8647534451298853
  - 0.8529333280044854
  - 0.8302527328542397
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.90423565384322
  - 0.8933689621103277
  - 0.8970067272865867
  - 0.8887732488958912
  - 0.8980583272447901
  train_average_precision_macro_oob:
  - 0.8697565208716003
  - 0.8640967968222045
  - 0.8627961295987863
  - 0.8596232351812881
  - 0.8600165303264525
  train_average_precision_micro:
  - 0.9103189961607869
  - 0.8998877902947876
  - 0.9026795571464741
  - 0.8906808851717596
  - 0.904260628503098
  train_average_precision_micro_oob:
  - 0.8792258033767824
  - 0.8736239540389749
  - 0.8707867691210819
  - 0.8633786056960666
  - 0.8729661001629758
  train_average_precision_samples:
  - 0.9116856195214403
  - 0.9048611111111111
  - 0.9074093324093324
  - 0.9069967456996745
  - 0.9098646723646723
  train_average_precision_samples_oob:
  - 0.8873785832741057
  - 0.8839577497665734
  - 0.8874740124740125
  - 0.8912308228730823
  - 0.8931089743589744
  train_average_precision_weighted:
  - 0.9064334327701661
  - 0.8949845354882411
  - 0.8984402809431911
  - 0.8905045351619235
  - 0.8994213713726126
  train_average_precision_weighted_oob:
  - 0.8733420760244844
  - 0.8678436563667802
  - 0.8654973125292502
  - 0.8627345396312914
  - 0.8638703158901515
  train_f1_macro:
  - 0.7977967306325514
  - 0.8018207282913165
  - 0.7986832986832987
  - 0.7995118549511854
  - 0.798076923076923
  train_f1_macro_oob:
  - 0.7459132906894101
  - 0.7507002801120448
  - 0.7453222453222453
  - 0.7416317991631799
  - 0.7510683760683761
  train_f1_micro:
  - 0.7977967306325515
  - 0.8018207282913166
  - 0.7986832986832987
  - 0.7995118549511855
  - 0.7980769230769231
  train_f1_micro_oob:
  - 0.7459132906894101
  - 0.7507002801120448
  - 0.7453222453222453
  - 0.7416317991631799
  - 0.7510683760683761
  train_f1_samples:
  - 0.7977967306325514
  - 0.8018207282913165
  - 0.7986832986832986
  - 0.7995118549511854
  - 0.7980769230769231
  train_f1_samples_oob:
  - 0.7459132906894101
  - 0.7507002801120448
  - 0.7453222453222453
  - 0.7416317991631799
  - 0.751068376068376
  train_f1_weighted:
  - 0.7935591810635982
  - 0.7973719363731964
  - 0.7933420368595117
  - 0.79401825100816
  - 0.7934721860877441
  train_f1_weighted_oob:
  - 0.7411797511075641
  - 0.7464425454511006
  - 0.7409380588636507
  - 0.7379162801264696
  - 0.7441871669605604
  train_jaccard_macro:
  - 0.6643414250210299
  - 0.6701725336579848
  - 0.6660185361421922
  - 0.6670163473290737
  - 0.6649502873931554
  train_jaccard_macro_oob:
  - 0.5960317744528233
  - 0.6022936802257196
  - 0.5947180085710548
  - 0.590502740767231
  - 0.6038096588372112
  train_jaccard_micro:
  - 0.6636121785397576
  - 0.6691992986557569
  - 0.6648399192385348
  - 0.6659889631135637
  - 0.664
  train_jaccard_micro_oob:
  - 0.5947860583734769
  - 0.600896860986547
  - 0.5940347970173985
  - 0.5893599334995844
  - 0.6013686911890505
  train_jaccard_samples:
  - 0.68519646664636
  - 0.6895258103241295
  - 0.6859716859716859
  - 0.6863419007770472
  - 0.6855413105413105
  train_jaccard_samples_oob:
  - 0.6124987308356178
  - 0.6188475390156062
  - 0.6129591129591129
  - 0.6052500498107193
  - 0.6217439967439967
  train_jaccard_weighted:
  - 0.6585691331797194
  - 0.6640562592856031
  - 0.6587445328175615
  - 0.6595555177742561
  - 0.6586294115643001
  train_jaccard_weighted_oob:
  - 0.5899885548047064
  - 0.5967620066883011
  - 0.5892492252191512
  - 0.5857803616968856
  - 0.5950861233324747
  train_label_ranking_average_precision_score:
  - 0.91168561952144
  - 0.9048611111111106
  - 0.9074093324093319
  - 0.9069967456996737
  - 0.9098646723646717
  train_label_ranking_average_precision_score_oob:
  - 0.8873785832741049
  - 0.8839577497665733
  - 0.8874740124740118
  - 0.8912308228730819
  - 0.8931089743589733
  train_matthews_corrcoef_macro:
  - 0.5149936135752681
  - 0.5188419910622342
  - 0.5076751556147543
  - 0.5110268163427668
  - 0.5163135522312976
  train_matthews_corrcoef_macro_oob:
  - 0.33872991580734535
  - 0.33791047488979126
  - 0.31577071231744136
  - 0.2666193088982404
  - 0.3519703394171377
  train_matthews_corrcoef_micro:
  - 0.5261024410797799
  - 0.5296513143783554
  - 0.5170058383006904
  - 0.5195068402764278
  - 0.5272338086021323
  train_matthews_corrcoef_micro_oob:
  - 0.3760770783151205
  - 0.3798286311393354
  - 0.35308068791382574
  - 0.34135988128439226
  - 0.39037313125705836
  train_matthews_corrcoef_samples:
  - 0.41170537273211893
  - 0.41909895977759054
  - 0.3981177581063652
  - 0.3958883868878283
  - 0.4045308824730469
  train_matthews_corrcoef_samples_oob:
  - 0.23393351586429262
  - 0.23518272878300614
  - 0.21842836962208198
  - 0.19625711400352505
  - 0.2483054167396498
  train_matthews_corrcoef_weighted:
  - 0.5192693797683996
  - 0.5224464944032692
  - 0.5099800222951909
  - 0.5132548140707043
  - 0.5196236830991092
  train_matthews_corrcoef_weighted_oob:
  - 0.34882824386197026
  - 0.3493598453621903
  - 0.3299843652501223
  - 0.2848615340967914
  - 0.35847873518792217
  train_ndgc:
  - 0.9423394930201814
  - 0.9389258559174436
  - 0.9386189253477386
  - 0.9387123210956312
  - 0.9422827810531592
  train_ndgc_oob:
  - 0.9255837254451492
  - 0.923798992391675
  - 0.9256010193589661
  - 0.9275469906535193
  - 0.929997051064347
  train_neg_coverage_error:
  - -2.319829424307036
  - -2.3487394957983194
  - -2.3014553014553014
  - -2.292887029288703
  - -2.3482905982905984
  train_neg_coverage_error_oob:
  - -2.44136460554371
  - -2.430672268907563
  - -2.399168399168399
  - -2.3744769874476988
  - -2.4123931623931623
  train_neg_hamming_loss_macro:
  - -0.20220326936744845
  - -0.19817927170868346
  - -0.20131670131670132
  - -0.2004881450488145
  - -0.2019230769230769
  train_neg_hamming_loss_macro_oob:
  - -0.2540867093105899
  - -0.24929971988795518
  - -0.25467775467775466
  - -0.2583682008368201
  - -0.24893162393162394
  train_neg_hamming_loss_micro:
  - -0.20220326936744848
  - -0.19817927170868346
  - -0.20131670131670132
  - -0.20048814504881451
  - -0.20192307692307693
  train_neg_hamming_loss_micro_oob:
  - -0.2540867093105899
  - -0.24929971988795518
  - -0.25467775467775466
  - -0.2583682008368201
  - -0.24893162393162394
  train_neg_hamming_loss_samples:
  - -0.20220326936744845
  - -0.1981792717086835
  - -0.20131670131670135
  - -0.2004881450488145
  - -0.20192307692307693
  train_neg_hamming_loss_samples_oob:
  - -0.2540867093105899
  - -0.24929971988795518
  - -0.25467775467775466
  - -0.2583682008368201
  - -0.24893162393162396
  train_neg_hamming_loss_weighted:
  - -0.20644081893640193
  - -0.2026280636268036
  - -0.20665796314048848
  - -0.2059817489918401
  - -0.20652781391225586
  train_neg_hamming_loss_weighted_oob:
  - -0.2588202488924359
  - -0.2535574545488996
  - -0.2590619411363493
  - -0.26208371987353035
  - -0.2558128330394396
  train_neg_label_ranking_loss:
  - -0.07032693674484719
  - -0.07825046685340803
  - -0.07601640101640102
  - -0.07327986982798698
  - -0.07078584995251662
  train_neg_label_ranking_loss_oob:
  - -0.09173181710495144
  - -0.09566993464052288
  - -0.09227304227304227
  - -0.0876627150162715
  - -0.0860042735042735
  train_precision_macro:
  - 0.7977967306325514
  - 0.8018207282913165
  - 0.7986832986832987
  - 0.7995118549511854
  - 0.798076923076923
  train_precision_macro_oob:
  - 0.7459132906894101
  - 0.7507002801120448
  - 0.7453222453222453
  - 0.7416317991631799
  - 0.7510683760683761
  train_precision_micro:
  - 0.7977967306325515
  - 0.8018207282913166
  - 0.7986832986832987
  - 0.7995118549511855
  - 0.7980769230769231
  train_precision_micro_oob:
  - 0.7459132906894101
  - 0.7507002801120448
  - 0.7453222453222453
  - 0.7416317991631799
  - 0.7510683760683761
  train_precision_samples:
  - 0.7977967306325514
  - 0.8018207282913165
  - 0.7986832986832986
  - 0.7995118549511854
  - 0.7980769230769231
  train_precision_samples_oob:
  - 0.7459132906894101
  - 0.7507002801120448
  - 0.7453222453222453
  - 0.7416317991631799
  - 0.751068376068376
  train_precision_weighted:
  - 0.7935591810635982
  - 0.7973719363731964
  - 0.7933420368595117
  - 0.79401825100816
  - 0.7934721860877441
  train_precision_weighted_oob:
  - 0.7411797511075641
  - 0.7464425454511006
  - 0.7409380588636507
  - 0.7379162801264696
  - 0.7441871669605604
  train_recall_macro:
  - 0.7977967306325514
  - 0.8018207282913165
  - 0.7986832986832987
  - 0.7995118549511854
  - 0.798076923076923
  train_recall_macro_oob:
  - 0.7459132906894101
  - 0.7507002801120448
  - 0.7453222453222453
  - 0.7416317991631799
  - 0.7510683760683761
  train_recall_micro:
  - 0.7977967306325515
  - 0.8018207282913166
  - 0.7986832986832987
  - 0.7995118549511855
  - 0.7980769230769231
  train_recall_micro_oob:
  - 0.7459132906894101
  - 0.7507002801120448
  - 0.7453222453222453
  - 0.7416317991631799
  - 0.7510683760683761
  train_recall_samples:
  - 0.7977967306325514
  - 0.8018207282913165
  - 0.7986832986832986
  - 0.7995118549511854
  - 0.7980769230769231
  train_recall_samples_oob:
  - 0.7459132906894101
  - 0.7507002801120448
  - 0.7453222453222453
  - 0.7416317991631799
  - 0.751068376068376
  train_recall_weighted:
  - 0.7935591810635982
  - 0.7973719363731964
  - 0.7933420368595117
  - 0.79401825100816
  - 0.7934721860877441
  train_recall_weighted_oob:
  - 0.7411797511075641
  - 0.7464425454511006
  - 0.7409380588636507
  - 0.7379162801264696
  - 0.7441871669605604
  train_roc_auc_macro:
  - 0.9381858105890317
  - 0.9314306191068265
  - 0.9341781139510541
  - 0.9315712141680538
  - 0.9360066042151952
  train_roc_auc_macro_oob:
  - 0.9184728684008303
  - 0.9170599156408145
  - 0.9173904905890914
  - 0.9153681962963983
  - 0.9201829386371566
  train_roc_auc_micro:
  - 0.9441146374811392
  - 0.9387873940096296
  - 0.941324100607237
  - 0.9373243869508101
  - 0.9427933238923967
  train_roc_auc_micro_oob:
  - 0.925535132681078
  - 0.9237716740251807
  - 0.9249794006360564
  - 0.9225352594511751
  - 0.9278484348214449
  train_roc_auc_samples:
  - 0.9296730632551528
  - 0.921749533146592
  - 0.923983598983599
  - 0.926720130172013
  - 0.9292141500474833
  train_roc_auc_samples_oob:
  - 0.9082681828950485
  - 0.9043300653594772
  - 0.9077269577269578
  - 0.9123372849837285
  - 0.9139957264957265
  train_roc_auc_weighted:
  - 0.9380405234927895
  - 0.9309294257392234
  - 0.933272790986711
  - 0.9310952972462577
  - 0.9355012035881602
  train_roc_auc_weighted_oob:
  - 0.9185461096004262
  - 0.9173288055731281
  - 0.9166849521744048
  - 0.9156488252714762
  - 0.9205637361887857
start: 2023-12-22 04:38:23.595114
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
