active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzMBEDMzMzMzMwiwNDMzMzMzARAoJmZmZmZ+T/QzMzMzMwEQA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          cGZmZmZmGkCQmZmZmZkdwODMzMzMzARAgDMzMzMz4z8gMzMzMzMDwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 04:09:24.967930
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - xt
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.ExtraTreesRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.8
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    - - rf_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - rf
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.RandomForestRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.95
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 6
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_weak__6
  params: {}
hash: 2eae4b2f2880b70fee5f74f5ba17fd546aea0486c608025eeef105f8e64f8c4d
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/2eae4b2_20231222T040728516480_embedding_weak__6_emotions.yml
results:
  fit_time:
  - 95.23417091369629
  - 95.28229427337646
  - 100.28444218635559
  - 96.38760924339294
  - 96.6539249420166
  score_time:
  - 4.176086187362671
  - 4.427497386932373
  - 4.049025297164917
  - 4.670415878295898
  - 4.686548948287964
  test_average_precision_macro:
  - 0.7570562408942242
  - 0.7199566356606436
  - 0.6714724169077458
  - 0.7280622759914763
  - 0.6981037266652931
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7709576040278697
  - 0.699708290359326
  - 0.7026649646656344
  - 0.7299412143146725
  - 0.6828317173857208
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8390128968253968
  - 0.7933421516754849
  - 0.790301724137931
  - 0.7957391713747646
  - 0.7807162534435261
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7628987373662736
  - 0.720337795906657
  - 0.6797326676630191
  - 0.7269752409162479
  - 0.6999966966452907
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6726190476190476
  - 0.6944444444444445
  - 0.6867816091954023
  - 0.690677966101695
  - 0.6969696969696969
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6726190476190477
  - 0.6944444444444444
  - 0.6867816091954023
  - 0.690677966101695
  - 0.696969696969697
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6726190476190476
  - 0.6944444444444445
  - 0.6867816091954023
  - 0.6906779661016951
  - 0.6969696969696969
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6579545454545455
  - 0.6822991822991823
  - 0.6720183486238531
  - 0.6777726182184042
  - 0.6834710743801653
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.510574092681912
  - 0.5351368551701569
  - 0.5268038413020307
  - 0.5308714807596214
  - 0.5383586818765339
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5067264573991032
  - 0.5319148936170213
  - 0.5229759299781181
  - 0.5275080906148867
  - 0.5348837209302325
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.51828231292517
  - 0.541761148904006
  - 0.5344827586206896
  - 0.5389426957223568
  - 0.5460448642266824
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.4949736805352506
  - 0.5213702921703957
  - 0.5107547085036083
  - 0.5166346649414978
  - 0.5234163498074382
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8390128968253967
  - 0.7933421516754848
  - 0.7903017241379308
  - 0.7957391713747644
  - 0.780716253443526
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8902780798564444
  - 0.859689769735429
  - 0.8565825340777699
  - 0.8580799619324601
  - 0.8504583541881977
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.6875
  - -2.738095238095238
  - -2.8706896551724137
  - -2.6779661016949152
  - -2.8181818181818183
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.3273809523809524
  - -0.3055555555555555
  - -0.31321839080459773
  - -0.3093220338983051
  - -0.30303030303030304
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3273809523809524
  - -0.3055555555555556
  - -0.3132183908045977
  - -0.3093220338983051
  - -0.30303030303030304
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.32738095238095244
  - -0.30555555555555564
  - -0.31321839080459773
  - -0.30932203389830515
  - -0.303030303030303
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.34204545454545454
  - -0.3177008177008177
  - -0.3279816513761469
  - -0.3222273817815959
  - -0.31652892561983476
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.13529265873015875
  - -0.15842151675485006
  - -0.17423371647509575
  - -0.1495762711864407
  - -0.1727961432506887
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6726190476190476
  - 0.6944444444444445
  - 0.6867816091954023
  - 0.690677966101695
  - 0.6969696969696969
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6726190476190477
  - 0.6944444444444444
  - 0.6867816091954023
  - 0.690677966101695
  - 0.696969696969697
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6726190476190476
  - 0.6944444444444445
  - 0.6867816091954023
  - 0.6906779661016951
  - 0.6969696969696969
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6579545454545455
  - 0.6822991822991823
  - 0.6720183486238531
  - 0.6777726182184042
  - 0.6834710743801653
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6726190476190476
  - 0.6944444444444445
  - 0.6867816091954023
  - 0.690677966101695
  - 0.6969696969696969
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6726190476190477
  - 0.6944444444444444
  - 0.6867816091954023
  - 0.690677966101695
  - 0.696969696969697
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6726190476190476
  - 0.6944444444444445
  - 0.6867816091954023
  - 0.6906779661016951
  - 0.6969696969696969
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6579545454545455
  - 0.6822991822991823
  - 0.6720183486238531
  - 0.6777726182184042
  - 0.6834710743801653
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8693884153665001
  - 0.8490657103038922
  - 0.8089346725108698
  - 0.8497295269964344
  - 0.8268824593225957
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8807320997586483
  - 0.8598556998556999
  - 0.8353997927142912
  - 0.8675985843815073
  - 0.8386902623068629
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8647073412698412
  - 0.8415784832451499
  - 0.8257662835249042
  - 0.8504237288135593
  - 0.8272038567493112
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8701393085489991
  - 0.8450300045125823
  - 0.8138469389137474
  - 0.8479739807715608
  - 0.8247911501268133
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8896472706326156
  - 0.8810605873265976
  - 0.8892221388298468
  - 0.881608968561927
  - 0.892634499561198
  train_average_precision_macro_oob:
  - 0.7445948620903772
  - 0.7372347674820351
  - 0.7559673396762984
  - 0.744416332839716
  - 0.7389314304024753
  train_average_precision_micro:
  - 0.894914773418593
  - 0.8871613299587227
  - 0.8931267596082071
  - 0.8892206766676801
  - 0.8966189075317376
  train_average_precision_micro_oob:
  - 0.7552341606011004
  - 0.7521750212641792
  - 0.7637548828373218
  - 0.7612356320034787
  - 0.7574233459317008
  train_average_precision_samples:
  - 0.9079579579579581
  - 0.903771115869617
  - 0.905246913580247
  - 0.8955672514619883
  - 0.9131826741996234
  train_average_precision_samples_oob:
  - 0.8076172326172326
  - 0.8052522008089459
  - 0.8073608199394362
  - 0.8087017543859649
  - 0.8228695856873823
  train_average_precision_weighted:
  - 0.8911182931699435
  - 0.883232706929201
  - 0.8902017591516261
  - 0.8847742466355234
  - 0.8940751946391201
  train_average_precision_weighted_oob:
  - 0.7504740933241718
  - 0.7463555011358799
  - 0.7606505308433664
  - 0.7517750145500636
  - 0.7462074651027043
  train_f1_macro:
  - 0.7231462231462231
  - 0.7191291934332619
  - 0.7246680642907058
  - 0.7301754385964911
  - 0.7192796610169493
  train_f1_macro_oob:
  - 0.6923076923076924
  - 0.6873661670235546
  - 0.6904262753319358
  - 0.6898245614035088
  - 0.6867937853107344
  train_f1_micro:
  - 0.7231462231462231
  - 0.719129193433262
  - 0.7246680642907058
  - 0.7301754385964913
  - 0.7192796610169492
  train_f1_micro_oob:
  - 0.6923076923076923
  - 0.6873661670235546
  - 0.6904262753319357
  - 0.6898245614035088
  - 0.6867937853107344
  train_f1_samples:
  - 0.7231462231462231
  - 0.7191291934332619
  - 0.7246680642907057
  - 0.7301754385964913
  - 0.7192796610169492
  train_f1_samples_oob:
  - 0.6923076923076923
  - 0.6873661670235546
  - 0.6904262753319357
  - 0.6898245614035087
  - 0.6867937853107344
  train_f1_weighted:
  - 0.7167195782060647
  - 0.7119999804667947
  - 0.7175653075165478
  - 0.7213214137706471
  - 0.7120409604519774
  train_f1_weighted_oob:
  - 0.6798430447079096
  - 0.6734487582985601
  - 0.6780439544908485
  - 0.6767012018234563
  - 0.6742131432279737
  train_jaccard_macro:
  - 0.5674933895806737
  - 0.5626625980000134
  - 0.569668970003378
  - 0.5771172873985814
  - 0.5630860347703851
  train_jaccard_macro_oob:
  - 0.532644070332933
  - 0.5272767001047508
  - 0.5304331524466224
  - 0.5300301634480781
  - 0.526236201903106
  train_jaccard_micro:
  - 0.5663500678426051
  - 0.56143772638618
  - 0.5682191780821918
  - 0.5750207239568942
  - 0.5616211745244003
  train_jaccard_micro_oob:
  - 0.5294117647058824
  - 0.5236541598694943
  - 0.5272145144076841
  - 0.5265131226566685
  - 0.5229900510890024
  train_jaccard_samples:
  - 0.5835560835560836
  - 0.5767818904863874
  - 0.5835579514824797
  - 0.5929824561403508
  - 0.5776331719128328
  train_jaccard_samples_oob:
  - 0.5403920403920405
  - 0.5353319057815845
  - 0.5384346610761704
  - 0.5377944862155388
  - 0.5340496368038741
  train_jaccard_weighted:
  - 0.5597501388131492
  - 0.5541836615571808
  - 0.5611844429384679
  - 0.5665541281262878
  - 0.5545071923826062
  train_jaccard_weighted_oob:
  - 0.5189067714179675
  - 0.5121031789730682
  - 0.5168605816828843
  - 0.5156434192584685
  - 0.5124811266140513
  train_label_ranking_average_precision_score:
  - 0.907957957957957
  - 0.9037711158696162
  - 0.9052469135802464
  - 0.8955672514619876
  - 0.9131826741996226
  train_label_ranking_average_precision_score_oob:
  - 0.8076172326172314
  - 0.8052522008089446
  - 0.8073608199394353
  - 0.8087017543859638
  - 0.822869585687381
  train_matthews_corrcoef_macro:
  - 0.21444370842238425
  - 0.20897955423022244
  - 0.23849382897818583
  - 0.274744568536448
  - 0.22049080904250484
  train_matthews_corrcoef_macro_oob:
  - 0.0
  - 0.011860017039848333
  - 0.022411352237717702
  - 0.03852847011895132
  - 0.008541169136579587
  train_matthews_corrcoef_micro:
  - 0.26757160837055644
  - 0.2698932247227292
  - 0.2861567513973731
  - 0.31138466150663197
  - 0.27263845094581685
  train_matthews_corrcoef_micro_oob:
  - 0.0
  - 0.02799361696151581
  - 0.05568745050966898
  - 0.062263249574081976
  - 0.027808125368682757
  train_matthews_corrcoef_samples:
  - 0.1321580661822241
  - 0.12812612201467113
  - 0.13545852747607912
  - 0.16527774159080305
  - 0.1291180533100223
  train_matthews_corrcoef_samples_oob:
  - 0.0
  - 0.0021413276231263384
  - 0.005303610331519295
  - 0.006657426652986062
  - 0.0009474864311439787
  train_matthews_corrcoef_weighted:
  - 0.228470496964044
  - 0.22550593612663292
  - 0.25006338958561614
  - 0.280864199409408
  - 0.2332667390771952
  train_matthews_corrcoef_weighted_oob:
  - 0.0
  - 0.011278511073242315
  - 0.022965340719998364
  - 0.032478170525732784
  - 0.012176937079853333
  train_ndgc:
  - 0.940196130627996
  - 0.9376930708611364
  - 0.9398048011374102
  - 0.9315724246016451
  - 0.94369948893715
  train_ndgc_oob:
  - 0.8691326127489482
  - 0.8681307617247475
  - 0.8703810043667743
  - 0.871903337094183
  - 0.8811962203385406
  train_neg_coverage_error:
  - -2.30977130977131
  - -2.394004282655246
  - -2.368972746331237
  - -2.4189473684210525
  - -2.319915254237288
  train_neg_coverage_error_oob:
  - -2.7422037422037424
  - -2.798715203426124
  - -2.758909853249476
  - -2.8105263157894735
  - -2.705508474576271
  train_neg_hamming_loss_macro:
  - -0.2768537768537769
  - -0.280870806566738
  - -0.2753319357092942
  - -0.2698245614035088
  - -0.2807203389830508
  train_neg_hamming_loss_macro_oob:
  - -0.3076923076923077
  - -0.31263383297644537
  - -0.3095737246680643
  - -0.31017543859649127
  - -0.3132062146892655
  train_neg_hamming_loss_micro:
  - -0.2768537768537769
  - -0.280870806566738
  - -0.2753319357092942
  - -0.26982456140350874
  - -0.2807203389830508
  train_neg_hamming_loss_micro_oob:
  - -0.3076923076923077
  - -0.31263383297644537
  - -0.30957372466806427
  - -0.3101754385964912
  - -0.3132062146892655
  train_neg_hamming_loss_samples:
  - -0.27685377685377677
  - -0.280870806566738
  - -0.2753319357092942
  - -0.2698245614035088
  - -0.2807203389830508
  train_neg_hamming_loss_samples_oob:
  - -0.3076923076923077
  - -0.31263383297644537
  - -0.3095737246680643
  - -0.3101754385964912
  - -0.31320621468926557
  train_neg_hamming_loss_weighted:
  - -0.2832804217939353
  - -0.2880000195332052
  - -0.28243469248345227
  - -0.27867858622935293
  - -0.28795903954802254
  train_neg_hamming_loss_weighted_oob:
  - -0.32015695529209043
  - -0.3265512417014399
  - -0.3219560455091513
  - -0.3232987981765438
  - -0.32578685677202623
  train_neg_label_ranking_loss:
  - -0.07327327327327328
  - -0.08343445158220318
  - -0.07880852550663872
  - -0.08798830409356725
  - -0.07056850282485876
  train_neg_label_ranking_loss_oob:
  - -0.1554804804804805
  - -0.1634189864382584
  - -0.1572385278360121
  - -0.16116959064327485
  - -0.14422669491525425
  train_precision_macro:
  - 0.7231462231462231
  - 0.7191291934332619
  - 0.7246680642907058
  - 0.7301754385964911
  - 0.7192796610169493
  train_precision_macro_oob:
  - 0.6923076923076924
  - 0.6873661670235546
  - 0.6904262753319358
  - 0.6898245614035088
  - 0.6867937853107344
  train_precision_micro:
  - 0.7231462231462231
  - 0.719129193433262
  - 0.7246680642907058
  - 0.7301754385964913
  - 0.7192796610169492
  train_precision_micro_oob:
  - 0.6923076923076923
  - 0.6873661670235546
  - 0.6904262753319357
  - 0.6898245614035088
  - 0.6867937853107344
  train_precision_samples:
  - 0.7231462231462231
  - 0.7191291934332619
  - 0.7246680642907057
  - 0.7301754385964913
  - 0.7192796610169492
  train_precision_samples_oob:
  - 0.6923076923076923
  - 0.6873661670235546
  - 0.6904262753319357
  - 0.6898245614035087
  - 0.6867937853107344
  train_precision_weighted:
  - 0.7167195782060647
  - 0.7119999804667947
  - 0.7175653075165478
  - 0.7213214137706471
  - 0.7120409604519774
  train_precision_weighted_oob:
  - 0.6798430447079096
  - 0.6734487582985601
  - 0.6780439544908485
  - 0.6767012018234563
  - 0.6742131432279737
  train_recall_macro:
  - 0.7231462231462231
  - 0.7191291934332619
  - 0.7246680642907058
  - 0.7301754385964911
  - 0.7192796610169493
  train_recall_macro_oob:
  - 0.6923076923076924
  - 0.6873661670235546
  - 0.6904262753319358
  - 0.6898245614035088
  - 0.6867937853107344
  train_recall_micro:
  - 0.7231462231462231
  - 0.719129193433262
  - 0.7246680642907058
  - 0.7301754385964913
  - 0.7192796610169492
  train_recall_micro_oob:
  - 0.6923076923076923
  - 0.6873661670235546
  - 0.6904262753319357
  - 0.6898245614035088
  - 0.6867937853107344
  train_recall_samples:
  - 0.7231462231462231
  - 0.7191291934332619
  - 0.7246680642907057
  - 0.7301754385964913
  - 0.7192796610169492
  train_recall_samples_oob:
  - 0.6923076923076923
  - 0.6873661670235546
  - 0.6904262753319357
  - 0.6898245614035087
  - 0.6867937853107344
  train_recall_weighted:
  - 0.7167195782060647
  - 0.7119999804667947
  - 0.7175653075165478
  - 0.7213214137706471
  - 0.7120409604519774
  train_recall_weighted_oob:
  - 0.6798430447079096
  - 0.6734487582985601
  - 0.6780439544908485
  - 0.6767012018234563
  - 0.6742131432279737
  train_roc_auc_macro:
  - 0.9270744746607563
  - 0.9159610353305131
  - 0.926894207605395
  - 0.9202730480307678
  - 0.9295971380029332
  train_roc_auc_macro_oob:
  - 0.8546062808277468
  - 0.8428086040082986
  - 0.8551655349840187
  - 0.8502934851597433
  - 0.8577441170075758
  train_roc_auc_micro:
  - 0.9349326804281759
  - 0.924498215581454
  - 0.9332930692618
  - 0.9274617699814551
  - 0.9361966132799464
  train_roc_auc_micro_oob:
  - 0.8685374563752943
  - 0.858411053029069
  - 0.8684606969482873
  - 0.8628640950732764
  - 0.8691098505913322
  train_roc_auc_samples:
  - 0.9267267267267268
  - 0.9165655484177969
  - 0.9211914744933613
  - 0.9120116959064327
  - 0.9294314971751413
  train_roc_auc_samples_oob:
  - 0.8445195195195195
  - 0.8365810135617416
  - 0.842761472163988
  - 0.8388304093567251
  - 0.8557733050847458
  train_roc_auc_weighted:
  - 0.926507292787356
  - 0.9161236068687202
  - 0.9259403162165771
  - 0.9210919586738009
  - 0.9289555604316977
  train_roc_auc_weighted_oob:
  - 0.8561086580521242
  - 0.8461174779737041
  - 0.855711131580592
  - 0.8527289001780112
  - 0.8581517330161911
start: 2023-12-22 04:07:28.516480
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
