active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJPzQzMzMzM/M/NDMzMzMz8z9mZmZmZmYGwA==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAACMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEAAAAAAAAAAAA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:07:16.423141
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 0
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__0
  params: {}
hash: 0f4774dc5ff4478eb63c8c779d9ba11dc97b572f75244a80767fc9a2b044a6d3
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/0f4774d_20231221T220707646170_embedding_proba__0_CHD_49.yml
results:
  fit_time:
  - 1.2618706226348877
  - 1.3944592475891113
  - 1.3152680397033691
  - 1.3556642532348633
  - 1.2791557312011719
  score_time:
  - 1.093517541885376
  - 1.1501078605651855
  - 1.087913990020752
  - 1.0118870735168457
  - 1.089547872543335
  test_average_precision_macro:
  - 0.5351706189120357
  - 0.6097685542521993
  - 0.5204664172968264
  - 0.5281144988717511
  - 0.5712633655136831
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6979276581862689
  - 0.7112685741906081
  - 0.6946836823930269
  - 0.705466344824679
  - 0.7248264037454866
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7939571150097465
  - 0.7972222222222222
  - 0.8018268268268267
  - 0.7947530864197531
  - 0.799587087087087
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6585180663299053
  - 0.7092167598850011
  - 0.6446236322711778
  - 0.6569982315876747
  - 0.6874870595846934
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7192982456140351
  - 0.7147147147147147
  - 0.7237237237237237
  - 0.7191358024691358
  - 0.7057057057057058
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7192982456140351
  - 0.7147147147147147
  - 0.7237237237237237
  - 0.7191358024691358
  - 0.7057057057057057
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7192982456140352
  - 0.7147147147147146
  - 0.7237237237237235
  - 0.719135802469136
  - 0.7057057057057058
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6746411483253588
  - 0.6749486328433697
  - 0.6823536823536823
  - 0.6756010396361274
  - 0.6692140416278348
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5791089862925696
  - 0.5751665331794286
  - 0.5848605221325613
  - 0.580522079798463
  - 0.562228173897001
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5616438356164384
  - 0.5560747663551402
  - 0.5670588235294117
  - 0.5614457831325301
  - 0.5452436194895591
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5977063871800714
  - 0.5966576966576966
  - 0.6058773058773057
  - 0.5916225749559083
  - 0.5747357747357748
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5134424250184414
  - 0.5154256486550316
  - 0.5219705420073095
  - 0.5158872392314305
  - 0.5101532101233227
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7939571150097463
  - 0.797222222222222
  - 0.8018268268268265
  - 0.8132716049382718
  - 0.8085960960960966
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.1290953181318104
  - 0.12136532960921158
  - 0.127028729715035
  - 0.12152465961613368
  - 0.11772450670000406
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4214906739783059
  - 0.4136777386725103
  - 0.43212396448227003
  - 0.4258132644348459
  - 0.3981115530981299
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.43502988276050103
  - 0.4229302828629525
  - 0.44310777189014317
  - 0.42586595059876486
  - 0.4200684765752424
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.1277435769501689
  - 0.1298059370401795
  - 0.13455120874644416
  - 0.11877796524945418
  - 0.11525786979105275
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8654429317825086
  - 0.865436360863757
  - 0.8749316535383472
  - 0.8614154494401073
  - 0.8696392137040652
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.5964912280701755
  - -3.630630630630631
  - -3.6576576576576576
  - -3.6944444444444446
  - -3.7027027027027026
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2807017543859649
  - -0.2852852852852853
  - -0.27627627627627627
  - -0.28086419753086417
  - -0.29429429429429427
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2807017543859649
  - -0.2852852852852853
  - -0.27627627627627627
  - -0.2808641975308642
  - -0.29429429429429427
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2807017543859649
  - -0.2852852852852853
  - -0.2762762762762763
  - -0.28086419753086417
  - -0.2942942942942942
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3253588516746412
  - -0.3250513671566303
  - -0.3176463176463177
  - -0.3243989603638726
  - -0.3307859583721653
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.19817251461988306
  - -0.19276776776776777
  - -0.2019019019019019
  - -0.1856738683127572
  - -0.19084084084084085
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7192982456140351
  - 0.7147147147147147
  - 0.7237237237237237
  - 0.7191358024691358
  - 0.7057057057057058
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7192982456140351
  - 0.7147147147147147
  - 0.7237237237237237
  - 0.7191358024691358
  - 0.7057057057057057
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7192982456140352
  - 0.7147147147147146
  - 0.7237237237237235
  - 0.719135802469136
  - 0.7057057057057058
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6746411483253588
  - 0.6749486328433697
  - 0.6823536823536823
  - 0.6756010396361274
  - 0.6692140416278348
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7192982456140351
  - 0.7147147147147147
  - 0.7237237237237237
  - 0.7191358024691358
  - 0.7057057057057058
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7192982456140351
  - 0.7147147147147147
  - 0.7237237237237237
  - 0.7191358024691358
  - 0.7057057057057057
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7192982456140352
  - 0.7147147147147146
  - 0.7237237237237235
  - 0.719135802469136
  - 0.7057057057057058
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6746411483253588
  - 0.6749486328433697
  - 0.6823536823536823
  - 0.6756010396361274
  - 0.6692140416278348
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6007098120811688
  - 0.6506115686123403
  - 0.6254896790593937
  - 0.5418967753340739
  - 0.6517883497143662
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7910443827529255
  - 0.8110328314223879
  - 0.7947368421052632
  - 0.7951089845826689
  - 0.7974229640498901
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8018274853801169
  - 0.8072322322322323
  - 0.7980980980980981
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6121468639391043
  - 0.651337930721695
  - 0.5890825551573893
  - 0.5938737417403344
  - 0.6499665008919666
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9477859008635776
  - 0.9472155177327871
  - 0.9416508586232362
  - 0.9459459984885732
  - 0.9396532174575101
  train_average_precision_macro_oob:
  - 0.5184145545477781
  - 0.503425525110147
  - 0.5218927842527301
  - 0.5213828521449609
  - 0.5087964218317392
  train_average_precision_micro:
  - 0.883951361885318
  - 0.8764182199909261
  - 0.8803387893399226
  - 0.8806048854967319
  - 0.8786341615765455
  train_average_precision_micro_oob:
  - 0.6963522498632096
  - 0.693007621943782
  - 0.6984379241156207
  - 0.6934891915061278
  - 0.6925335650928967
  train_average_precision_samples:
  - 0.8675485008818341
  - 0.8631662912912912
  - 0.8647710210210211
  - 0.8693574446930151
  - 0.8560028778778778
  train_average_precision_samples_oob:
  - 0.793543713781809
  - 0.7875218968968968
  - 0.7932651401401402
  - 0.7923440218742233
  - 0.7907657657657658
  train_average_precision_weighted:
  - 0.950062974619261
  - 0.9480171585204076
  - 0.9431315291581288
  - 0.9475538133772299
  - 0.9419697079089734
  train_average_precision_weighted_oob:
  - 0.640996823937369
  - 0.626432810756821
  - 0.6446564308197937
  - 0.6402912759747176
  - 0.6361290401912598
  train_f1_macro:
  - 0.8321995464852608
  - 0.8183183183183184
  - 0.8292042042042044
  - 0.8258762117822521
  - 0.8190690690690691
  train_f1_macro_oob:
  - 0.7123960695389266
  - 0.7094594594594593
  - 0.713963963963964
  - 0.715137956748695
  - 0.7154654654654656
  train_f1_micro:
  - 0.8321995464852607
  - 0.8183183183183184
  - 0.8292042042042042
  - 0.825876211782252
  - 0.8190690690690691
  train_f1_micro_oob:
  - 0.7123960695389266
  - 0.7094594594594594
  - 0.713963963963964
  - 0.715137956748695
  - 0.7154654654654654
  train_f1_samples:
  - 0.8321995464852607
  - 0.8183183183183184
  - 0.8292042042042043
  - 0.8258762117822521
  - 0.819069069069069
  train_f1_samples_oob:
  - 0.7123960695389268
  - 0.7094594594594594
  - 0.713963963963964
  - 0.7151379567486951
  - 0.7154654654654654
  train_f1_weighted:
  - 0.8024757314211315
  - 0.7869412568627914
  - 0.7979556781912803
  - 0.7950903924058287
  - 0.7853497104810588
  train_f1_weighted_oob:
  - 0.6740491426355301
  - 0.6696945419700433
  - 0.6739344056097983
  - 0.6739690545709165
  - 0.6745081333522663
  train_jaccard_macro:
  - 0.7188837201087366
  - 0.6994885178689327
  - 0.7147705535000868
  - 0.7099509551254779
  - 0.7014040509694653
  train_jaccard_macro_oob:
  - 0.5714187274613618
  - 0.568343293263481
  - 0.5735928224963992
  - 0.5742181956973402
  - 0.5753725742107948
  train_jaccard_micro:
  - 0.7126213592233009
  - 0.6925031766200762
  - 0.7082398204552741
  - 0.7033979040965386
  - 0.6935791481246026
  train_jaccard_micro_oob:
  - 0.5532726739066628
  - 0.5497382198952879
  - 0.5551663747810858
  - 0.5565873476494486
  - 0.5569842197545295
  train_jaccard_samples:
  - 0.7406111651009609
  - 0.7235842985842986
  - 0.7393071643071643
  - 0.7350697773516565
  - 0.7275096525096526
  train_jaccard_samples_oob:
  - 0.5891608014056994
  - 0.5821350571350571
  - 0.5898365898365898
  - 0.5936236768451533
  - 0.5943186693186693
  train_jaccard_weighted:
  - 0.6717682628498232
  - 0.6500732432790135
  - 0.6657676504073525
  - 0.6615997451854339
  - 0.6481146766001511
  train_jaccard_weighted_oob:
  - 0.5139255043920102
  - 0.5090759341302846
  - 0.5143413733020209
  - 0.513555789136058
  - 0.5136219790641958
  train_label_ranking_average_precision_score:
  - 0.8743512219702693
  - 0.8699230480480477
  - 0.871527777777777
  - 0.8715945811583389
  - 0.8605073823823817
  train_label_ranking_average_precision_score_oob:
  - 0.8003464348702428
  - 0.7942786536536528
  - 0.8000218968968955
  - 0.7945811583395461
  - 0.7952702702702693
  train_matthews_corrcoef_macro:
  - 0.4042622930236299
  - 0.37706731601858295
  - 0.4011519320968022
  - 0.39416307312829035
  - 0.3745844692768226
  train_matthews_corrcoef_macro_oob:
  - 0.10482570511455991
  - 0.0929931850543075
  - 0.12362009658978906
  - 0.12082303177306541
  - 0.10989684285466006
  train_matthews_corrcoef_micro:
  - 0.6576557965139401
  - 0.6284144185994683
  - 0.6508013329386475
  - 0.643109650500218
  - 0.6296342492691953
  train_matthews_corrcoef_micro_oob:
  - 0.4119318307247752
  - 0.40421641471731834
  - 0.414135398689279
  - 0.41539052417902306
  - 0.41562368473243866
  train_matthews_corrcoef_samples:
  - 0.6553857354830167
  - 0.6277445684655957
  - 0.6432892573540893
  - 0.6457029441985164
  - 0.6227249786807055
  train_matthews_corrcoef_samples_oob:
  - 0.42338257754893455
  - 0.4211376710483008
  - 0.43217543089876737
  - 0.4308213364057837
  - 0.4239701438274115
  train_matthews_corrcoef_weighted:
  - 0.42626364391869526
  - 0.396888764718211
  - 0.4194721331945769
  - 0.41449690384173626
  - 0.3926685070324981
  train_matthews_corrcoef_weighted_oob:
  - 0.11434305563507668
  - 0.09905104324357217
  - 0.126364847254936
  - 0.12214918986921454
  - 0.11688303808527117
  train_ndgc:
  - 0.9116387535250882
  - 0.9096744770426913
  - 0.9095733882361801
  - 0.9141396235573805
  - 0.9044422961328396
  train_ndgc_oob:
  - 0.8654754655877797
  - 0.860589725485601
  - 0.8633833277355111
  - 0.8653669211076687
  - 0.8623064012062205
  train_neg_coverage_error:
  - -3.2176870748299318
  - -3.2545045045045047
  - -3.234234234234234
  - -3.2013422818791946
  - -3.2522522522522523
  train_neg_coverage_error_oob:
  - -3.689342403628118
  - -3.720720720720721
  - -3.6644144144144146
  - -3.680089485458613
  - -3.686936936936937
  train_neg_hamming_loss_macro:
  - -0.16780045351473918
  - -0.18168168168168167
  - -0.17079579579579582
  - -0.17412378821774796
  - -0.18093093093093093
  train_neg_hamming_loss_macro_oob:
  - -0.28760393046107335
  - -0.29054054054054057
  - -0.28603603603603606
  - -0.284862043251305
  - -0.28453453453453453
  train_neg_hamming_loss_micro:
  - -0.16780045351473924
  - -0.1816816816816817
  - -0.1707957957957958
  - -0.17412378821774796
  - -0.18093093093093093
  train_neg_hamming_loss_micro_oob:
  - -0.2876039304610733
  - -0.2905405405405405
  - -0.28603603603603606
  - -0.284862043251305
  - -0.28453453453453453
  train_neg_hamming_loss_samples:
  - -0.16780045351473924
  - -0.18168168168168167
  - -0.17079579579579576
  - -0.17412378821774793
  - -0.18093093093093096
  train_neg_hamming_loss_samples_oob:
  - -0.28760393046107335
  - -0.2905405405405405
  - -0.28603603603603606
  - -0.284862043251305
  - -0.2845345345345345
  train_neg_hamming_loss_weighted:
  - -0.19752426857886843
  - -0.2130587431372087
  - -0.20204432180871973
  - -0.20490960759417137
  - -0.214650289518941
  train_neg_hamming_loss_weighted_oob:
  - -0.32595085736446994
  - -0.3303054580299567
  - -0.3260655943902017
  - -0.32603094542908356
  - -0.32549186664773355
  train_neg_label_ranking_loss:
  - -0.10502015621063239
  - -0.11392017017017017
  - -0.10884634634634635
  - -0.11142182450907283
  - -0.1200950950950951
  train_neg_label_ranking_loss_oob:
  - -0.1968883849836231
  - -0.2023898898898899
  - -0.19439439439439438
  - -0.20096321153368135
  - -0.2026463963963964
  train_precision_macro:
  - 0.8321995464852608
  - 0.8183183183183184
  - 0.8292042042042044
  - 0.8258762117822521
  - 0.8190690690690691
  train_precision_macro_oob:
  - 0.7123960695389266
  - 0.7094594594594593
  - 0.713963963963964
  - 0.715137956748695
  - 0.7154654654654656
  train_precision_micro:
  - 0.8321995464852607
  - 0.8183183183183184
  - 0.8292042042042042
  - 0.825876211782252
  - 0.8190690690690691
  train_precision_micro_oob:
  - 0.7123960695389266
  - 0.7094594594594594
  - 0.713963963963964
  - 0.715137956748695
  - 0.7154654654654654
  train_precision_samples:
  - 0.8321995464852607
  - 0.8183183183183184
  - 0.8292042042042043
  - 0.8258762117822521
  - 0.819069069069069
  train_precision_samples_oob:
  - 0.7123960695389268
  - 0.7094594594594594
  - 0.713963963963964
  - 0.7151379567486951
  - 0.7154654654654654
  train_precision_weighted:
  - 0.8024757314211315
  - 0.7869412568627914
  - 0.7979556781912803
  - 0.7950903924058287
  - 0.7853497104810588
  train_precision_weighted_oob:
  - 0.6740491426355301
  - 0.6696945419700433
  - 0.6739344056097983
  - 0.6739690545709165
  - 0.6745081333522663
  train_recall_macro:
  - 0.8321995464852608
  - 0.8183183183183184
  - 0.8292042042042044
  - 0.8258762117822521
  - 0.8190690690690691
  train_recall_macro_oob:
  - 0.7123960695389266
  - 0.7094594594594593
  - 0.713963963963964
  - 0.715137956748695
  - 0.7154654654654656
  train_recall_micro:
  - 0.8321995464852607
  - 0.8183183183183184
  - 0.8292042042042042
  - 0.825876211782252
  - 0.8190690690690691
  train_recall_micro_oob:
  - 0.7123960695389266
  - 0.7094594594594594
  - 0.713963963963964
  - 0.715137956748695
  - 0.7154654654654654
  train_recall_samples:
  - 0.8321995464852607
  - 0.8183183183183184
  - 0.8292042042042043
  - 0.8258762117822521
  - 0.819069069069069
  train_recall_samples_oob:
  - 0.7123960695389268
  - 0.7094594594594594
  - 0.713963963963964
  - 0.7151379567486951
  - 0.7154654654654654
  train_recall_weighted:
  - 0.8024757314211315
  - 0.7869412568627914
  - 0.7979556781912803
  - 0.7950903924058287
  - 0.7853497104810588
  train_recall_weighted_oob:
  - 0.6740491426355301
  - 0.6696945419700433
  - 0.6739344056097983
  - 0.6739690545709165
  - 0.6745081333522663
  train_roc_auc_macro:
  - 0.9538515834550613
  - 0.9513447423535445
  - 0.9465310977787005
  - 0.9523455513053686
  - 0.9478615942591135
  train_roc_auc_macro_oob:
  - 0.5828872918302154
  - 0.5837832638917904
  - 0.5867261059378919
  - 0.600202307972293
  - 0.5657839096019622
  train_roc_auc_micro:
  - 0.9099607329842931
  - 0.9045286807636096
  - 0.907179868339668
  - 0.9078587676675309
  - 0.9067209819322443
  train_roc_auc_micro_oob:
  - 0.792499127399651
  - 0.7859998770114236
  - 0.7914801325340819
  - 0.7930462983736074
  - 0.7908710770923133
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9495315349058062
  - 0.9447784297614484
  - 0.9401421714128093
  - 0.9474636472762369
  - 0.9426171202447517
  train_roc_auc_weighted_oob:
  - 0.5989548838606019
  - 0.5870714902511013
  - 0.5980657954484497
  - 0.6023917894942467
  - 0.5892529730961222
start: 2023-12-21 22:07:07.646170
wrapper: null
