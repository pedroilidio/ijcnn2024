active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          oJmZmZmZEUCAZmZmZmb2P8DMzMzMzATAADMzMzMz47/AzMzMzMwEwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 06:53:21.120924
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 1
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__1
  params: {}
hash: c48aead42597e4a0ed89f709bb0165bc8b8d2ea9a81a63124b8acb2344fc2a0c
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c48aead_20231221T065313923774_embedding_proba__1_VirusGO.yml
results:
  fit_time:
  - 2.67836856842041
  - 2.5685760974884033
  - 2.6290359497070312
  - 2.6497156620025635
  - 2.6353468894958496
  score_time:
  - 1.033277988433838
  - 1.1239593029022217
  - 1.084984302520752
  - 1.1042940616607666
  - 1.1311228275299072
  test_average_precision_macro:
  - 0.967191573484826
  - 0.9855664488017429
  - 0.9108661635680777
  - 0.9726483829399206
  - 0.9337262121729033
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9564135802118767
  - 0.9630054267078131
  - 0.8860718575002844
  - 0.910649236409291
  - 0.90265994184783
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9513513513513514
  - 0.9729166666666667
  - 0.9231060606060606
  - 0.9424603174603173
  - 0.9242424242424243
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9780708099090453
  - 0.9922222222222221
  - 0.9112198274952801
  - 0.9524255770144314
  - 0.94711568986569
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.945945945945946
  - 0.9375
  - 0.9280303030303031
  - 0.9126984126984127
  - 0.9242424242424243
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9459459459459459
  - 0.9375
  - 0.928030303030303
  - 0.9126984126984127
  - 0.9242424242424242
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9459459459459462
  - 0.9375
  - 0.9280303030303032
  - 0.9126984126984128
  - 0.9242424242424242
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9443243243243243
  - 0.9429999999999998
  - 0.9230769230769229
  - 0.8752380952380951
  - 0.9118181818181817
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8982681061628429
  - 0.8829490922514179
  - 0.8661219035872135
  - 0.8440026802766946
  - 0.8601687360112099
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8974358974358975
  - 0.8823529411764706
  - 0.8657243816254417
  - 0.8394160583941606
  - 0.8591549295774648
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9131274131274131
  - 0.9047619047619048
  - 0.8814935064935067
  - 0.8582766439909297
  - 0.8777056277056278
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8954885290148447
  - 0.8925198832175576
  - 0.857402927014398
  - 0.7817658048052385
  - 0.8388289376805302
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9513513513513514
  - 0.9729166666666667
  - 0.9231060606060605
  - 0.9424603174603173
  - 0.9242424242424242
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6294389442925622
  - 0.5284842104753112
  - 0.48038850817705797
  - 0.4606249150757679
  - 0.4809080009693698
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8428729338451293
  - 0.8030472509786513
  - 0.7605923580047249
  - 0.7064069336477353
  - 0.7412648192631771
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7909435422720906
  - 0.7829056941504209
  - 0.6805586407182042
  - 0.6570174569571918
  - 0.6981977532569185
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.8174087984668539
  - 0.7500399512815925
  - 0.6964907720567827
  - 0.6310281231007212
  - 0.6755949420222892
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9698235407471664
  - 0.981101923658423
  - 0.9437054097203249
  - 0.9575510813786452
  - 0.9437208866883143
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.6486486486486487
  - -1.325
  - -1.5
  - -1.3095238095238095
  - -1.3181818181818181
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.05405405405405406
  - -0.0625
  - -0.07196969696969696
  - -0.08730158730158728
  - -0.07575757575757576
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.05405405405405406
  - -0.0625
  - -0.07196969696969698
  - -0.0873015873015873
  - -0.07575757575757576
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.05405405405405405
  - -0.0625
  - -0.07196969696969696
  - -0.0873015873015873
  - -0.07575757575757576
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.05567567567567568
  - -0.05700000000000001
  - -0.07692307692307693
  - -0.12476190476190474
  - -0.08818181818181817
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.04256756756756756
  - -0.014374999999999999
  - -0.05991161616161616
  - -0.025
  - -0.03636363636363637
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.945945945945946
  - 0.9375
  - 0.9280303030303031
  - 0.9126984126984127
  - 0.9242424242424243
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9459459459459459
  - 0.9375
  - 0.928030303030303
  - 0.9126984126984127
  - 0.9242424242424242
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9459459459459462
  - 0.9375
  - 0.9280303030303032
  - 0.9126984126984128
  - 0.9242424242424242
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9443243243243243
  - 0.9429999999999998
  - 0.9230769230769229
  - 0.8752380952380951
  - 0.9118181818181817
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.945945945945946
  - 0.9375
  - 0.9280303030303031
  - 0.9126984126984127
  - 0.9242424242424243
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9459459459459459
  - 0.9375
  - 0.928030303030303
  - 0.9126984126984127
  - 0.9242424242424242
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9459459459459462
  - 0.9375
  - 0.9280303030303032
  - 0.9126984126984128
  - 0.9242424242424242
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9443243243243243
  - 0.9429999999999998
  - 0.9230769230769229
  - 0.8752380952380951
  - 0.9118181818181817
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9847147950089127
  - 0.9972589277256795
  - 0.9463963141659221
  - 0.9786156499636891
  - 0.9808040774492981
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9787209302325581
  - 0.988
  - 0.9542815674891147
  - 0.9772277227722772
  - 0.9683177570093459
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9574324324324324
  - 0.985625
  - 0.940088383838384
  - 0.9750000000000001
  - 0.9636363636363634
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9865454545454546
  - 0.9980193236714976
  - 0.9386604800066339
  - 0.9572555555555556
  - 0.9789869154869154
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9735792354231174
  - 0.9750539349184143
  - 0.9859511701805954
  - 0.9734704005412208
  - 0.9757470597273133
  train_average_precision_macro_oob:
  - 0.9249206789644648
  - 0.938389115254025
  - 0.944572212996002
  - 0.9275095337536109
  - 0.9297297357284728
  train_average_precision_micro:
  - 0.954709787597086
  - 0.9575047775845005
  - 0.9665889140997351
  - 0.9571864731485927
  - 0.9581394876306457
  train_average_precision_micro_oob:
  - 0.9106295313487434
  - 0.9106985078978473
  - 0.9235498449064402
  - 0.9100749804762612
  - 0.9185377825219121
  train_average_precision_samples:
  - 0.9715686274509804
  - 0.9740518962075848
  - 0.9739263803680982
  - 0.9646464646464648
  - 0.9785276073619632
  train_average_precision_samples_oob:
  - 0.9396405228758169
  - 0.9423153692614771
  - 0.9306748466257668
  - 0.944141414141414
  - 0.9426380368098158
  train_average_precision_weighted:
  - 0.9740282408484452
  - 0.9751633678553357
  - 0.9856123967050396
  - 0.9759516042189704
  - 0.9798346601207373
  train_average_precision_weighted_oob:
  - 0.9298799390386748
  - 0.9381623785343173
  - 0.9516653728392563
  - 0.9357029619775015
  - 0.9403085345710156
  train_f1_macro:
  - 0.9470588235294118
  - 0.9421157684630739
  - 0.9345603271983639
  - 0.9323232323232324
  - 0.9345603271983639
  train_f1_macro_oob:
  - 0.9225490196078431
  - 0.9301397205588823
  - 0.9263803680981595
  - 0.9181818181818181
  - 0.9202453987730062
  train_f1_micro:
  - 0.9470588235294117
  - 0.9421157684630739
  - 0.934560327198364
  - 0.9323232323232323
  - 0.934560327198364
  train_f1_micro_oob:
  - 0.9225490196078432
  - 0.9301397205588823
  - 0.9263803680981595
  - 0.9181818181818182
  - 0.9202453987730062
  train_f1_samples:
  - 0.9470588235294117
  - 0.9421157684630739
  - 0.934560327198364
  - 0.9323232323232322
  - 0.9345603271983639
  train_f1_samples_oob:
  - 0.9225490196078431
  - 0.9301397205588823
  - 0.9263803680981595
  - 0.9181818181818182
  - 0.9202453987730062
  train_f1_weighted:
  - 0.9401863715783343
  - 0.9335388628683229
  - 0.9304294478527608
  - 0.932043204320432
  - 0.9368280386320842
  train_f1_weighted_oob:
  - 0.9102795573675014
  - 0.9185688029880833
  - 0.9186196319018406
  - 0.9115811581158115
  - 0.9149608212354978
  train_jaccard_macro:
  - 0.8998564803401076
  - 0.891065030364242
  - 0.8780458886675467
  - 0.873675200300483
  - 0.8777308991934385
  train_jaccard_macro_oob:
  - 0.8573452965276293
  - 0.8701156346231222
  - 0.8642243468139337
  - 0.8492710959512978
  - 0.8529483226632713
  train_jaccard_micro:
  - 0.8994413407821229
  - 0.8905660377358491
  - 0.8771593090211133
  - 0.8732261116367077
  - 0.8771593090211133
  train_jaccard_micro_oob:
  - 0.8562329390354868
  - 0.8694029850746269
  - 0.8628571428571429
  - 0.8487394957983193
  - 0.8522727272727273
  train_jaccard_samples:
  - 0.9141456582633053
  - 0.9053321927573426
  - 0.8929301782062518
  - 0.8911976911976911
  - 0.8945369558866493
  train_jaccard_samples_oob:
  - 0.8746498599439775
  - 0.888366124893071
  - 0.8802220274612913
  - 0.8698412698412699
  - 0.8724802804557404
  train_jaccard_weighted:
  - 0.8875284965775108
  - 0.8757882113233455
  - 0.8704872053592859
  - 0.8729367445777273
  - 0.8814115554145371
  train_jaccard_weighted_oob:
  - 0.836599822471749
  - 0.8500031890718198
  - 0.8506037073000524
  - 0.8376662357745778
  - 0.843438157172802
  train_label_ranking_average_precision_score:
  - 0.9715686274509802
  - 0.9740518962075846
  - 0.973926380368098
  - 0.9646464646464644
  - 0.978527607361963
  train_label_ranking_average_precision_score_oob:
  - 0.9396405228758169
  - 0.9423153692614771
  - 0.9306748466257668
  - 0.9441414141414142
  - 0.9426380368098158
  train_matthews_corrcoef_macro:
  - 0.6383956768867466
  - 0.6145460135682498
  - 0.5062089601278025
  - 0.4953297427300966
  - 0.4953277332701774
  train_matthews_corrcoef_macro_oob:
  - 0.5108831424791466
  - 0.5646530823114327
  - 0.455178657041708
  - 0.4369586509830456
  - 0.42647696403894736
  train_matthews_corrcoef_micro:
  - 0.8272291551797815
  - 0.8132759118721765
  - 0.7900113668569434
  - 0.7824752996451008
  - 0.7917664078679579
  train_matthews_corrcoef_micro_oob:
  - 0.7417025233027293
  - 0.7724341287293923
  - 0.7621098055755672
  - 0.733183440965289
  - 0.7430751904109139
  train_matthews_corrcoef_samples:
  - 0.7949634515358271
  - 0.7738991218993512
  - 0.7357916967853074
  - 0.7143903170893071
  - 0.732251600321291
  train_matthews_corrcoef_samples_oob:
  - 0.6855812037615963
  - 0.7290593278198857
  - 0.7014358685644484
  - 0.662776815477084
  - 0.6715234819283431
  train_matthews_corrcoef_weighted:
  - 0.7938580158590741
  - 0.77900056608628
  - 0.7276554441965395
  - 0.7214183962147057
  - 0.7340327695977749
  train_matthews_corrcoef_weighted_oob:
  - 0.6907792198921292
  - 0.732271993556941
  - 0.6868309299727855
  - 0.6620324977503499
  - 0.6684933264860006
  train_ndgc:
  - 0.979851208955343
  - 0.9812165304945042
  - 0.9817604805402902
  - 0.97505565131618
  - 0.9854130242946427
  train_ndgc_oob:
  - 0.9570915380209067
  - 0.957917394807178
  - 0.9509225327490445
  - 0.9597841154887942
  - 0.9591908738781035
  train_neg_coverage_error:
  - -1.2705882352941176
  - -1.281437125748503
  - -1.3006134969325154
  - -1.3272727272727274
  - -1.3067484662576687
  train_neg_coverage_error_oob:
  - -1.4
  - -1.3652694610778444
  - -1.4355828220858895
  - -1.406060606060606
  - -1.4294478527607362
  train_neg_hamming_loss_macro:
  - -0.05294117647058824
  - -0.057884231536926144
  - -0.065439672801636
  - -0.06767676767676768
  - -0.065439672801636
  train_neg_hamming_loss_macro_oob:
  - -0.07745098039215685
  - -0.06986027944111776
  - -0.0736196319018405
  - -0.08181818181818183
  - -0.07975460122699386
  train_neg_hamming_loss_micro:
  - -0.052941176470588235
  - -0.05788423153692615
  - -0.065439672801636
  - -0.06767676767676768
  - -0.065439672801636
  train_neg_hamming_loss_micro_oob:
  - -0.07745098039215687
  - -0.06986027944111776
  - -0.0736196319018405
  - -0.08181818181818182
  - -0.07975460122699386
  train_neg_hamming_loss_samples:
  - -0.052941176470588235
  - -0.057884231536926144
  - -0.06543967280163598
  - -0.06767676767676767
  - -0.06543967280163598
  train_neg_hamming_loss_samples_oob:
  - -0.07745098039215687
  - -0.06986027944111775
  - -0.0736196319018405
  - -0.08181818181818182
  - -0.07975460122699386
  train_neg_hamming_loss_weighted:
  - -0.059813628421665696
  - -0.06646113713167724
  - -0.06957055214723927
  - -0.06795679567956796
  - -0.06317196136791593
  train_neg_hamming_loss_weighted_oob:
  - -0.08972044263249855
  - -0.08143119701191676
  - -0.0813803680981595
  - -0.08841884188418841
  - -0.08503917876450222
  train_neg_label_ranking_loss:
  - -0.014918300653594771
  - -0.01347305389221557
  - -0.013190184049079755
  - -0.018333333333333337
  - -0.01119631901840491
  train_neg_label_ranking_loss_oob:
  - -0.03887254901960785
  - -0.030089820359281438
  - -0.03680981595092025
  - -0.03424242424242425
  - -0.0341854124062713
  train_precision_macro:
  - 0.9470588235294118
  - 0.9421157684630739
  - 0.9345603271983639
  - 0.9323232323232324
  - 0.9345603271983639
  train_precision_macro_oob:
  - 0.9225490196078431
  - 0.9301397205588823
  - 0.9263803680981595
  - 0.9181818181818181
  - 0.9202453987730062
  train_precision_micro:
  - 0.9470588235294117
  - 0.9421157684630739
  - 0.934560327198364
  - 0.9323232323232323
  - 0.934560327198364
  train_precision_micro_oob:
  - 0.9225490196078432
  - 0.9301397205588823
  - 0.9263803680981595
  - 0.9181818181818182
  - 0.9202453987730062
  train_precision_samples:
  - 0.9470588235294117
  - 0.9421157684630739
  - 0.934560327198364
  - 0.9323232323232322
  - 0.9345603271983639
  train_precision_samples_oob:
  - 0.9225490196078431
  - 0.9301397205588823
  - 0.9263803680981595
  - 0.9181818181818182
  - 0.9202453987730062
  train_precision_weighted:
  - 0.9401863715783343
  - 0.9335388628683229
  - 0.9304294478527608
  - 0.932043204320432
  - 0.9368280386320842
  train_precision_weighted_oob:
  - 0.9102795573675014
  - 0.9185688029880833
  - 0.9186196319018406
  - 0.9115811581158115
  - 0.9149608212354978
  train_recall_macro:
  - 0.9470588235294118
  - 0.9421157684630739
  - 0.9345603271983639
  - 0.9323232323232324
  - 0.9345603271983639
  train_recall_macro_oob:
  - 0.9225490196078431
  - 0.9301397205588823
  - 0.9263803680981595
  - 0.9181818181818181
  - 0.9202453987730062
  train_recall_micro:
  - 0.9470588235294117
  - 0.9421157684630739
  - 0.934560327198364
  - 0.9323232323232323
  - 0.934560327198364
  train_recall_micro_oob:
  - 0.9225490196078432
  - 0.9301397205588823
  - 0.9263803680981595
  - 0.9181818181818182
  - 0.9202453987730062
  train_recall_samples:
  - 0.9470588235294117
  - 0.9421157684630739
  - 0.934560327198364
  - 0.9323232323232322
  - 0.9345603271983639
  train_recall_samples_oob:
  - 0.9225490196078431
  - 0.9301397205588823
  - 0.9263803680981595
  - 0.9181818181818182
  - 0.9202453987730062
  train_recall_weighted:
  - 0.9401863715783343
  - 0.9335388628683229
  - 0.9304294478527608
  - 0.932043204320432
  - 0.9368280386320842
  train_recall_weighted_oob:
  - 0.9102795573675014
  - 0.9185688029880833
  - 0.9186196319018406
  - 0.9115811581158115
  - 0.9149608212354978
  train_roc_auc_macro:
  - 0.9906377863071549
  - 0.9908028055760942
  - 0.9948300978787143
  - 0.9906476839769719
  - 0.9918587784633416
  train_roc_auc_macro_oob:
  - 0.9686788807080794
  - 0.9760902425013404
  - 0.9824875043114023
  - 0.9716026255992682
  - 0.9737690163937399
  train_roc_auc_micro:
  - 0.9857809436200343
  - 0.9874783415841585
  - 0.9901156812339331
  - 0.9866719857264915
  - 0.9860767326732673
  train_roc_auc_micro_oob:
  - 0.968923237066983
  - 0.9732054455445545
  - 0.9755912596401028
  - 0.9686950294014174
  - 0.9718536286618352
  train_roc_auc_samples:
  - 0.9850816993464053
  - 0.9865269461077845
  - 0.9868098159509202
  - 0.9816666666666667
  - 0.9888036809815952
  train_roc_auc_samples_oob:
  - 0.9611274509803921
  - 0.9699101796407187
  - 0.9631901840490797
  - 0.9657575757575757
  - 0.9658145875937287
  train_roc_auc_weighted:
  - 0.9859619209146989
  - 0.9864223442601944
  - 0.992534005516712
  - 0.9873956174974331
  - 0.989889173445148
  train_roc_auc_weighted_oob:
  - 0.9603801361412146
  - 0.9674978047746742
  - 0.9773107161213608
  - 0.9655231848096376
  - 0.9714561356607517
start: 2023-12-21 06:53:13.923774
wrapper: null
