active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzMBECgmZmZmZn5P2BmZmZmZva/0MzMzMzMBECYmZmZmZkVwA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          cGZmZmZmHkDIzMzMzMwgwODMzMzMzAxAAJmZmZmZ2b8gMzMzMzMDwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 02:46:55.699374
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 1
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__1
  params: {}
hash: 24b4d7c09616814bc851a396c061658de730b6259d53b7efa8d7fa6ea714349c
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/24b4d7c_20231222T024641151507_embedding_proba_weak__1_emotions.yml
results:
  fit_time:
  - 4.334764242172241
  - 4.291535377502441
  - 4.845020532608032
  - 4.403239011764526
  - 4.885967493057251
  score_time:
  - 1.7564284801483154
  - 1.9466042518615723
  - 2.0272514820098877
  - 2.120074987411499
  - 1.9701123237609863
  test_average_precision_macro:
  - 0.8076377142045671
  - 0.7112451088810259
  - 0.7380834795323429
  - 0.7292316890003048
  - 0.6754859007054748
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8141488549832294
  - 0.6455211849641035
  - 0.7184113737878646
  - 0.7211938029419759
  - 0.622463805134454
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8647897897897897
  - 0.7621172353455818
  - 0.8266908212560387
  - 0.7855742296918766
  - 0.7712809917355372
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8130385402870789
  - 0.6985552923931497
  - 0.7350941438909732
  - 0.737371366997689
  - 0.6622005708841282
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8423423423423423
  - 0.8018372703412072
  - 0.8130434782608695
  - 0.8165266106442576
  - 0.8002754820936638
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8423423423423423
  - 0.8018372703412073
  - 0.8130434782608695
  - 0.8165266106442577
  - 0.800275482093664
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8423423423423423
  - 0.8018372703412073
  - 0.8130434782608696
  - 0.8165266106442577
  - 0.800275482093664
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8456592956592957
  - 0.7919770163864652
  - 0.8126940993788818
  - 0.8111556549225194
  - 0.7919495277449823
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7308002330703252
  - 0.6731490835515505
  - 0.6873641088948079
  - 0.6935656055900621
  - 0.6712335168946167
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7276264591439688
  - 0.6692223439211391
  - 0.684981684981685
  - 0.6899408284023668
  - 0.6670493685419059
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7635778635778634
  - 0.7029621297337829
  - 0.715527950310559
  - 0.7256502601040415
  - 0.6989767807949626
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7356544480313766
  - 0.6598230704771705
  - 0.6865183226640078
  - 0.6853735631501636
  - 0.6596263297172171
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8647897897897897
  - 0.7621172353455817
  - 0.8266908212560384
  - 0.7855742296918766
  - 0.7712809917355368
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6249927576270238
  - 0.5212370355212067
  - 0.5443770618005871
  - 0.5573747402415283
  - 0.5242984428843903
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6416802623450385
  - 0.5259662740724103
  - 0.5629590088397325
  - 0.569174143676375
  - 0.5258053461547393
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.637486910253897
  - 0.5274274663230213
  - 0.5828531036044847
  - 0.5512947834100334
  - 0.5422053256251235
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6389840877925501
  - 0.5163263792171355
  - 0.5533748466260823
  - 0.5578833216101421
  - 0.5180986083309245
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9087674388628527
  - 0.832535738574014
  - 0.8834367780370679
  - 0.8486335911453665
  - 0.8424790800747224
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.6036036036036037
  - -2.6850393700787403
  - -2.7217391304347824
  - -2.7394957983193278
  - -2.7520661157024793
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.15765765765765766
  - -0.19816272965879267
  - -0.18695652173913044
  - -0.18347338935574228
  - -0.19972451790633608
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.15765765765765766
  - -0.19816272965879264
  - -0.18695652173913044
  - -0.18347338935574228
  - -0.19972451790633608
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.15765765765765766
  - -0.19816272965879267
  - -0.1869565217391304
  - -0.18347338935574228
  - -0.19972451790633605
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.15434070434070435
  - -0.2080229836135348
  - -0.187305900621118
  - -0.18884434507748052
  - -0.2080504722550177
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.11336336336336336
  - -0.1729440069991251
  - -0.1358937198067633
  - -0.16736694677871147
  - -0.17571166207529845
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8423423423423423
  - 0.8018372703412072
  - 0.8130434782608695
  - 0.8165266106442576
  - 0.8002754820936638
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8423423423423423
  - 0.8018372703412073
  - 0.8130434782608695
  - 0.8165266106442577
  - 0.800275482093664
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8423423423423423
  - 0.8018372703412073
  - 0.8130434782608696
  - 0.8165266106442577
  - 0.800275482093664
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8456592956592957
  - 0.7919770163864652
  - 0.8126940993788818
  - 0.8111556549225194
  - 0.7919495277449823
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8423423423423423
  - 0.8018372703412072
  - 0.8130434782608695
  - 0.8165266106442576
  - 0.8002754820936638
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8423423423423423
  - 0.8018372703412073
  - 0.8130434782608695
  - 0.8165266106442577
  - 0.800275482093664
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8423423423423423
  - 0.8018372703412073
  - 0.8130434782608696
  - 0.8165266106442577
  - 0.800275482093664
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8456592956592957
  - 0.7919770163864652
  - 0.8126940993788818
  - 0.8111556549225194
  - 0.7919495277449823
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8964234921394789
  - 0.8370891012359195
  - 0.8616019017946016
  - 0.8520663511963248
  - 0.8237272830816512
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.905625764370159
  - 0.8532866199532867
  - 0.8765615419987739
  - 0.8677215892275821
  - 0.8440790409789414
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8866366366366367
  - 0.8270559930008748
  - 0.8641062801932367
  - 0.8326330532212884
  - 0.8242883379247015
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8996719755597243
  - 0.8286320355991593
  - 0.8609510121506224
  - 0.8540089959235844
  - 0.814421645792505
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8652936608215175
  - 0.8586409859557308
  - 0.8694279840852035
  - 0.8634018979323499
  - 0.8631595707308181
  train_average_precision_macro_oob:
  - 0.796922048276297
  - 0.8022301431300011
  - 0.7995963338554996
  - 0.8017889314551678
  - 0.7991465682003723
  train_average_precision_micro:
  - 0.8262692109654153
  - 0.809393530657482
  - 0.8213972169631889
  - 0.8136798043468099
  - 0.8139213901839051
  train_average_precision_micro_oob:
  - 0.7694538632472603
  - 0.767842887530108
  - 0.7659120458508858
  - 0.7636976123570094
  - 0.764679061918375
  train_average_precision_samples:
  - 0.9045297372060858
  - 0.9025631855030997
  - 0.9015225476522548
  - 0.8985935302390998
  - 0.8913370998116761
  train_average_precision_samples_oob:
  - 0.8569041032733979
  - 0.8571769194086791
  - 0.8431543468154346
  - 0.8507090951711206
  - 0.8428790018832392
  train_average_precision_weighted:
  - 0.8582459441665371
  - 0.8453606522028271
  - 0.8595219023008925
  - 0.8519155915039537
  - 0.851316087259625
  train_average_precision_weighted_oob:
  - 0.7935340268309523
  - 0.7935594455138754
  - 0.7940001024077012
  - 0.7942772151460585
  - 0.7922804745173511
  train_f1_macro:
  - 0.898686030428769
  - 0.9048640915593705
  - 0.9020223152022315
  - 0.9008438818565402
  - 0.8944209039548022
  train_f1_macro_oob:
  - 0.8437067773167358
  - 0.8530042918454935
  - 0.8465829846582985
  - 0.849507735583685
  - 0.8502824858757063
  train_f1_micro:
  - 0.898686030428769
  - 0.9048640915593705
  - 0.9020223152022315
  - 0.9008438818565401
  - 0.8944209039548022
  train_f1_micro_oob:
  - 0.8437067773167358
  - 0.8530042918454935
  - 0.8465829846582985
  - 0.849507735583685
  - 0.8502824858757062
  train_f1_samples:
  - 0.8986860304287689
  - 0.9048640915593705
  - 0.9020223152022314
  - 0.9008438818565401
  - 0.8944209039548023
  train_f1_samples_oob:
  - 0.8437067773167357
  - 0.8530042918454935
  - 0.8465829846582985
  - 0.849507735583685
  - 0.8502824858757063
  train_f1_weighted:
  - 0.8933684722066465
  - 0.9003138956974975
  - 0.8972505159128346
  - 0.8945100270231829
  - 0.8893200207071095
  train_f1_weighted_oob:
  - 0.8383331464244328
  - 0.850897121653959
  - 0.8427814801491887
  - 0.8450528611387665
  - 0.8469950724748831
  train_jaccard_macro:
  - 0.8173079425490678
  - 0.8277640683446981
  - 0.8229719622107347
  - 0.8213048861710724
  - 0.8104085701689655
  train_jaccard_macro_oob:
  - 0.731957568010282
  - 0.7453791313155703
  - 0.7359867036457577
  - 0.7407651446828624
  - 0.7413800696204179
  train_jaccard_micro:
  - 0.8160125588697017
  - 0.8262573481384716
  - 0.821530644649095
  - 0.8195777351247601
  - 0.8090067071223251
  train_jaccard_micro_oob:
  - 0.7296650717703349
  - 0.7436856875584659
  - 0.7339782345828295
  - 0.7383863080684596
  - 0.7395577395577395
  train_jaccard_samples:
  - 0.8382236712112231
  - 0.8483036991620683
  - 0.8435146443514644
  - 0.8413401647578862
  - 0.833958837772397
  train_jaccard_samples_oob:
  - 0.7577257459000197
  - 0.7723482526057633
  - 0.7622932855150428
  - 0.7659935704239501
  - 0.7690879741727199
  train_jaccard_weighted:
  - 0.808666016064169
  - 0.820143590942028
  - 0.8150954841626459
  - 0.8110835639598123
  - 0.8021393273240613
  train_jaccard_weighted_oob:
  - 0.723820872144811
  - 0.7419076424772648
  - 0.7300402563392029
  - 0.733892855213956
  - 0.7361728731569829
  train_label_ranking_average_precision_score:
  - 0.9045297372060849
  - 0.9025631855030988
  - 0.9015225476522539
  - 0.8985935302390987
  - 0.8913370998116755
  train_label_ranking_average_precision_score_oob:
  - 0.856904103273397
  - 0.8571769194086778
  - 0.8431543468154334
  - 0.8507090951711191
  - 0.8428790018832383
  train_matthews_corrcoef_macro:
  - 0.7660133647018071
  - 0.7840209567698696
  - 0.7726748912018953
  - 0.7755686884465312
  - 0.7567641434466424
  train_matthews_corrcoef_macro_oob:
  - 0.6271984061665905
  - 0.6544155705948503
  - 0.6308208791045024
  - 0.6440262129127581
  - 0.641457607127925
  train_matthews_corrcoef_micro:
  - 0.7640982849166117
  - 0.7829602078948469
  - 0.7709141909756351
  - 0.7720793266859488
  - 0.7558330214312554
  train_matthews_corrcoef_micro_oob:
  - 0.6298450467557543
  - 0.6595583299673176
  - 0.6352506158826096
  - 0.6483662840311877
  - 0.6477205166975177
  train_matthews_corrcoef_samples:
  - 0.7709301027923173
  - 0.7969332574621852
  - 0.7777861888456867
  - 0.7830791024520439
  - 0.7614332908722939
  train_matthews_corrcoef_samples_oob:
  - 0.6358660854100165
  - 0.6666295307185777
  - 0.6292314619183653
  - 0.6546983965024841
  - 0.6430040899916118
  train_matthews_corrcoef_weighted:
  - 0.760564999229065
  - 0.7789884856402638
  - 0.7681445443304858
  - 0.7680874568390229
  - 0.7526797815731049
  train_matthews_corrcoef_weighted_oob:
  - 0.6251989445934091
  - 0.6574697261785211
  - 0.6316008546144577
  - 0.6433407416008848
  - 0.6437732442295458
  train_ndgc:
  - 0.9323803986222592
  - 0.9306731293184226
  - 0.930065964831656
  - 0.9285375927019333
  - 0.9223945813367936
  train_ndgc_oob:
  - 0.901806388475521
  - 0.9017869828722497
  - 0.8918847743710684
  - 0.8968318191718746
  - 0.890371671371616
  train_neg_coverage_error:
  - -2.1307053941908713
  - -2.186695278969957
  - -2.1422594142259412
  - -2.1856540084388185
  - -2.1970338983050848
  train_neg_coverage_error_oob:
  - -2.429460580912863
  - -2.459227467811159
  - -2.481171548117155
  - -2.476793248945148
  - -2.4936440677966103
  train_neg_hamming_loss_macro:
  - -0.10131396957123097
  - -0.09513590844062947
  - -0.09797768479776849
  - -0.09915611814345991
  - -0.10557909604519773
  train_neg_hamming_loss_macro_oob:
  - -0.15629322268326418
  - -0.14699570815450644
  - -0.15341701534170155
  - -0.15049226441631505
  - -0.1497175141242938
  train_neg_hamming_loss_micro:
  - -0.10131396957123098
  - -0.09513590844062947
  - -0.09797768479776849
  - -0.09915611814345991
  - -0.10557909604519775
  train_neg_hamming_loss_micro_oob:
  - -0.15629322268326418
  - -0.14699570815450644
  - -0.15341701534170155
  - -0.15049226441631505
  - -0.1497175141242938
  train_neg_hamming_loss_samples:
  - -0.10131396957123097
  - -0.09513590844062945
  - -0.09797768479776847
  - -0.09915611814345991
  - -0.10557909604519773
  train_neg_hamming_loss_samples_oob:
  - -0.1562932226832642
  - -0.14699570815450644
  - -0.15341701534170152
  - -0.15049226441631505
  - -0.14971751412429377
  train_neg_hamming_loss_weighted:
  - -0.10663152779335351
  - -0.09968610430250245
  - -0.10274948408716561
  - -0.10548997297681696
  - -0.11067997929289057
  train_neg_hamming_loss_weighted_oob:
  - -0.1616668535755673
  - -0.14910287834604097
  - -0.15721851985081128
  - -0.15494713886123354
  - -0.15300492752511696
  train_neg_label_ranking_loss:
  - -0.05460465652374367
  - -0.057302098235574625
  - -0.05664225941422593
  - -0.0595464135021097
  - -0.06358874764595103
  train_neg_label_ranking_loss_oob:
  - -0.10301982480405716
  - -0.10161540295660466
  - -0.11288354253835425
  - -0.10985700890764181
  - -0.11301200564971751
  train_precision_macro:
  - 0.898686030428769
  - 0.9048640915593705
  - 0.9020223152022315
  - 0.9008438818565402
  - 0.8944209039548022
  train_precision_macro_oob:
  - 0.8437067773167358
  - 0.8530042918454935
  - 0.8465829846582985
  - 0.849507735583685
  - 0.8502824858757063
  train_precision_micro:
  - 0.898686030428769
  - 0.9048640915593705
  - 0.9020223152022315
  - 0.9008438818565401
  - 0.8944209039548022
  train_precision_micro_oob:
  - 0.8437067773167358
  - 0.8530042918454935
  - 0.8465829846582985
  - 0.849507735583685
  - 0.8502824858757062
  train_precision_samples:
  - 0.8986860304287689
  - 0.9048640915593705
  - 0.9020223152022314
  - 0.9008438818565401
  - 0.8944209039548023
  train_precision_samples_oob:
  - 0.8437067773167357
  - 0.8530042918454935
  - 0.8465829846582985
  - 0.849507735583685
  - 0.8502824858757063
  train_precision_weighted:
  - 0.8933684722066465
  - 0.9003138956974975
  - 0.8972505159128346
  - 0.8945100270231829
  - 0.8893200207071095
  train_precision_weighted_oob:
  - 0.8383331464244328
  - 0.850897121653959
  - 0.8427814801491887
  - 0.8450528611387665
  - 0.8469950724748831
  train_recall_macro:
  - 0.898686030428769
  - 0.9048640915593705
  - 0.9020223152022315
  - 0.9008438818565402
  - 0.8944209039548022
  train_recall_macro_oob:
  - 0.8437067773167358
  - 0.8530042918454935
  - 0.8465829846582985
  - 0.849507735583685
  - 0.8502824858757063
  train_recall_micro:
  - 0.898686030428769
  - 0.9048640915593705
  - 0.9020223152022315
  - 0.9008438818565401
  - 0.8944209039548022
  train_recall_micro_oob:
  - 0.8437067773167358
  - 0.8530042918454935
  - 0.8465829846582985
  - 0.849507735583685
  - 0.8502824858757062
  train_recall_samples:
  - 0.8986860304287689
  - 0.9048640915593705
  - 0.9020223152022314
  - 0.9008438818565401
  - 0.8944209039548023
  train_recall_samples_oob:
  - 0.8437067773167357
  - 0.8530042918454935
  - 0.8465829846582985
  - 0.849507735583685
  - 0.8502824858757063
  train_recall_weighted:
  - 0.8933684722066465
  - 0.9003138956974975
  - 0.8972505159128346
  - 0.8945100270231829
  - 0.8893200207071095
  train_recall_weighted_oob:
  - 0.8383331464244328
  - 0.850897121653959
  - 0.8427814801491887
  - 0.8450528611387665
  - 0.8469950724748831
  train_roc_auc_macro:
  - 0.9512986799576583
  - 0.9493167981069938
  - 0.9517728050313785
  - 0.9498049010659977
  - 0.9500425097531732
  train_roc_auc_macro_oob:
  - 0.9060820079994415
  - 0.9097993046276844
  - 0.9032563026114775
  - 0.9066245191459564
  - 0.901932262095996
  train_roc_auc_micro:
  - 0.9481032304759851
  - 0.9494705305331332
  - 0.9493413370310904
  - 0.9472950904511633
  - 0.9479301197654865
  train_roc_auc_micro_oob:
  - 0.9078459072845301
  - 0.9158752201198397
  - 0.9080699897825135
  - 0.9101083343875428
  - 0.9087003028979717
  train_roc_auc_samples:
  - 0.9453953434762564
  - 0.9426979017644254
  - 0.943357740585774
  - 0.9404535864978902
  - 0.9364112523540489
  train_roc_auc_samples_oob:
  - 0.8969801751959429
  - 0.8983845970433953
  - 0.8871164574616457
  - 0.8901429910923583
  - 0.8869879943502824
  train_roc_auc_weighted:
  - 0.9456836756683461
  - 0.9424005494554081
  - 0.9449973543578276
  - 0.9426794011381702
  - 0.9431767467537439
  train_roc_auc_weighted_oob:
  - 0.9025641578468068
  - 0.9056537166153917
  - 0.8989955047440447
  - 0.901993982884194
  - 0.8986268468761227
start: 2023-12-22 02:46:41.151507
wrapper: null
