active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6b+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMzE0CAmZmZmZnJv8zMzMzMzBjAMDMzMzMz879oZmZmZmYGQA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz8z8wMzMzMzPzPzQzMzMzMxPAMDMzMzMz8z8wMzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz8z8AmpmZmZnJP0AzMzMzM/M/YGZmZmZmBsAAmpmZmZnJPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzMDMBoZmZmZmb2P6CZmZmZmdk/MDMzMzMz4780MzMzMzMDQA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zczMzMzMFEBmZmZmZmYOwKCZmZmZmck/oJmZmZmZyT/MzMzMzMz8vw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          cGZmZmZmDkDAmZmZmZnpP8jMzMzMzBjAwJmZmZmZ6T/AmZmZmZnpPw==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 13:15:09.202251
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__3
  params: {}
hash: 57629a192c07b99c07437544ef05da665d8d38cea195df24ec5ca8ddb24402ae
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/57629a1_20231221T131457491685_embedding__3_flags.yml
results:
  fit_time:
  - 6.176708221435547
  - 5.891458034515381
  - 6.058342933654785
  - 5.9481353759765625
  - 5.9794230461120605
  score_time:
  - 1.6294519901275635
  - 1.5660514831542969
  - 1.7448537349700928
  - 1.4906466007232666
  - 1.6863412857055664
  test_average_precision_macro:
  - 0.740724984144636
  - 0.7467581126755639
  - 0.7732829284030365
  - 0.7924373018709429
  - 0.7916531810939035
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8576881717560689
  - 0.7902119643475807
  - 0.7376663295883645
  - 0.8141730621769616
  - 0.819817878159901
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8855226757369614
  - 0.8169924812030074
  - 0.7673941798941799
  - 0.8546334586466166
  - 0.8142011278195488
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8753088193813908
  - 0.7831023299672886
  - 0.8196482961700721
  - 0.8239581456558452
  - 0.8336690739216648
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7836734693877551
  - 0.7142857142857143
  - 0.7238095238095238
  - 0.7631578947368421
  - 0.7706766917293233
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7836734693877551
  - 0.7142857142857143
  - 0.7238095238095238
  - 0.7631578947368421
  - 0.7706766917293233
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7836734693877552
  - 0.7142857142857144
  - 0.7238095238095239
  - 0.7631578947368421
  - 0.7706766917293234
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7820276497695853
  - 0.7137161084529505
  - 0.6903073286052009
  - 0.7588373919874312
  - 0.76958143389971
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6535869101658575
  - 0.5623535752403154
  - 0.5744823843464274
  - 0.6214393941316
  - 0.6307803116120523
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6442953020134228
  - 0.5555555555555556
  - 0.5671641791044776
  - 0.6170212765957447
  - 0.6269113149847095
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6781240981240981
  - 0.5845693779904307
  - 0.5969584736251403
  - 0.6637999427473112
  - 0.6567517278043594
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6490071308619696
  - 0.5613449434898246
  - 0.5306450202440528
  - 0.6148923116900141
  - 0.6291663239945722
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8855226757369614
  - 0.8169924812030074
  - 0.7673941798941797
  - 0.8546334586466166
  - 0.8142011278195487
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.2576151288111889
  - 0.16886694651516643
  - 0.19305737228029013
  - 0.21236392290276093
  - 0.23331921980783665
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5673225429997842
  - 0.42865219357756673
  - 0.4398331033424232
  - 0.5265032670957925
  - 0.5410241298864746
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5151202963818508
  - 0.40060887350996177
  - 0.41813689174939517
  - 0.49453620417883526
  - 0.5030415867550321
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.24054573906886703
  - 0.13401632529140337
  - 0.2113741185760957
  - 0.17670481508882538
  - 0.21012271674584865
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.935619059820621
  - 0.8928608111894892
  - 0.8523575196767622
  - 0.9138737688094976
  - 0.886585396369771
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -4.571428571428571
  - -4.894736842105263
  - -4.466666666666667
  - -4.526315789473684
  - -4.684210526315789
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21632653061224486
  - -0.2857142857142857
  - -0.2761904761904762
  - -0.23684210526315788
  - -0.2293233082706767
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2163265306122449
  - -0.2857142857142857
  - -0.2761904761904762
  - -0.23684210526315788
  - -0.22932330827067668
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.21632653061224488
  - -0.28571428571428575
  - -0.27619047619047615
  - -0.23684210526315788
  - -0.2293233082706767
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.21797235023041475
  - -0.2862838915470494
  - -0.30969267139479906
  - -0.24116260801256875
  - -0.2304185661002901
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1480952380952381
  - -0.22894736842105262
  - -0.21592592592592594
  - -0.1793859649122807
  - -0.19342105263157897
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7836734693877551
  - 0.7142857142857143
  - 0.7238095238095238
  - 0.7631578947368421
  - 0.7706766917293233
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7836734693877551
  - 0.7142857142857143
  - 0.7238095238095238
  - 0.7631578947368421
  - 0.7706766917293233
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7836734693877552
  - 0.7142857142857144
  - 0.7238095238095239
  - 0.7631578947368421
  - 0.7706766917293234
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7820276497695853
  - 0.7137161084529505
  - 0.6903073286052009
  - 0.7588373919874312
  - 0.76958143389971
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7836734693877551
  - 0.7142857142857143
  - 0.7238095238095238
  - 0.7631578947368421
  - 0.7706766917293233
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7836734693877551
  - 0.7142857142857143
  - 0.7238095238095238
  - 0.7631578947368421
  - 0.7706766917293233
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7836734693877552
  - 0.7142857142857144
  - 0.7238095238095239
  - 0.7631578947368421
  - 0.7706766917293234
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7820276497695853
  - 0.7137161084529505
  - 0.6903073286052009
  - 0.7588373919874312
  - 0.76958143389971
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - .nan
  - 0.7385434633623564
  - 0.7612747348766373
  - 0.7574034790683949
  - 0.7630068211934383
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8597707278059185
  - 0.7913274536408865
  - 0.8039863047199803
  - 0.8406264133876072
  - 0.8408202571800827
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8519047619047618
  - 0.7710526315789473
  - 0.784074074074074
  - .nan
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - .nan
  - 0.7056969531107461
  - 0.7678472969379365
  - 0.7049662349486757
  - 0.7315168265257166
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9648426753438847
  - 0.9466319078579968
  - 0.9549100212760131
  - 0.9494161503720451
  - 0.964208339876982
  train_average_precision_macro_oob:
  - 0.765889247711099
  - 0.7581999925104708
  - 0.75701933848731
  - 0.7544733882831991
  - 0.7482863311876476
  train_average_precision_micro:
  - 0.9477771247399662
  - 0.9488759727452482
  - 0.9432852638974464
  - 0.9483261117616892
  - 0.9513705710384384
  train_average_precision_micro_oob:
  - 0.8123528156647017
  - 0.8227889370868184
  - 0.8250296996531814
  - 0.8196512769347235
  - 0.824607665101874
  train_average_precision_samples:
  - 0.9270407806728562
  - 0.9259818884818884
  - 0.9197872057100245
  - 0.9268917887667888
  - 0.929355413105413
  train_average_precision_samples_oob:
  - 0.8292263152640511
  - 0.8539272995522995
  - 0.8488939490785129
  - 0.8373221916971917
  - 0.8360935592185592
  train_average_precision_weighted:
  - 0.9812144742801259
  - 0.9767956711365364
  - 0.9814770662979687
  - 0.9768162913313478
  - 0.9817253423486242
  train_average_precision_weighted_oob:
  - 0.8137726545445423
  - 0.8283577767133364
  - 0.8213303944871337
  - 0.8221421747878848
  - 0.8239951164869452
  train_f1_macro:
  - 0.8661275831087151
  - 0.8791208791208793
  - 0.8686481303930969
  - 0.868131868131868
  - 0.8763736263736265
  train_f1_macro_oob:
  - 0.7592093441150044
  - 0.782967032967033
  - 0.7708533077660594
  - 0.7774725274725274
  - 0.760989010989011
  train_f1_micro:
  - 0.8661275831087152
  - 0.8791208791208791
  - 0.8686481303930969
  - 0.8681318681318682
  - 0.8763736263736264
  train_f1_micro_oob:
  - 0.7592093441150045
  - 0.782967032967033
  - 0.7708533077660594
  - 0.7774725274725275
  - 0.760989010989011
  train_f1_samples:
  - 0.8661275831087152
  - 0.8791208791208791
  - 0.8686481303930967
  - 0.868131868131868
  - 0.8763736263736265
  train_f1_samples_oob:
  - 0.7592093441150044
  - 0.782967032967033
  - 0.7708533077660594
  - 0.7774725274725274
  - 0.7609890109890111
  train_f1_weighted:
  - 0.8507054860669445
  - 0.8625816515550356
  - 0.8592940687757197
  - 0.8593168917596399
  - 0.8621975952484427
  train_f1_weighted_oob:
  - 0.7480743410359691
  - 0.7687798576581846
  - 0.7697610115145456
  - 0.766833039733803
  - 0.7495291902071565
  train_jaccard_macro:
  - 0.7700200919911223
  - 0.7891228913597167
  - 0.7715817776529242
  - 0.7707175385369343
  - 0.7850610369227758
  train_jaccard_macro_oob:
  - 0.6141984518185328
  - 0.6464866413175814
  - 0.6303218383581805
  - 0.6377659606512383
  - 0.617732810699257
  train_jaccard_micro:
  - 0.7638668779714739
  - 0.7843137254901961
  - 0.7677966101694915
  - 0.7669902912621359
  - 0.7799511002444988
  train_jaccard_micro_oob:
  - 0.611875452570601
  - 0.6433408577878104
  - 0.6271450858034321
  - 0.6359550561797753
  - 0.614190687361419
  train_jaccard_samples:
  - 0.7896321707642463
  - 0.8085211085211086
  - 0.792478476035523
  - 0.7906047656047657
  - 0.803389665889666
  train_jaccard_samples_oob:
  - 0.6458716336074828
  - 0.675204958858805
  - 0.6620273462555342
  - 0.6652324527324528
  - 0.6469729344729345
  train_jaccard_weighted:
  - 0.7477342183142619
  - 0.7645223824040374
  - 0.7578270563169107
  - 0.7578557564763241
  - 0.7642388320119162
  train_jaccard_weighted_oob:
  - 0.5988553647937531
  - 0.6258969623544706
  - 0.6281873234241768
  - 0.6227044951248665
  - 0.6012130457017839
  train_label_ranking_average_precision_score:
  - 0.9270407806728562
  - 0.9259818884818883
  - 0.9197872057100245
  - 0.9268917887667888
  - 0.929355413105413
  train_label_ranking_average_precision_score_oob:
  - 0.8292263152640509
  - 0.8539272995522995
  - 0.8488939490785131
  - 0.8373221916971918
  - 0.8360935592185592
  train_matthews_corrcoef_macro:
  - 0.5692705320533648
  - 0.550420019448744
  - 0.4501850850518552
  - 0.5439938365079492
  - 0.5537001959985544
  train_matthews_corrcoef_macro_oob:
  - 0.24548738420642055
  - 0.27476374240398155
  - 0.23569776437045883
  - 0.2949074292617985
  - 0.22680691230967723
  train_matthews_corrcoef_micro:
  - 0.7332055817638553
  - 0.7593695397352193
  - 0.7372737069022969
  - 0.7364634656723738
  - 0.7538175791249208
  train_matthews_corrcoef_micro_oob:
  - 0.518171698699374
  - 0.5655205773924862
  - 0.5426319576357298
  - 0.5544093173531998
  - 0.521904615561536
  train_matthews_corrcoef_samples:
  - 0.7190527655020015
  - 0.7452750096322129
  - 0.7183956961319511
  - 0.724373435298636
  - 0.7402032306500854
  train_matthews_corrcoef_samples_oob:
  - 0.4875974382752839
  - 0.5384927684402185
  - 0.5124861111107127
  - 0.5327924571925363
  - 0.48744396696944775
  train_matthews_corrcoef_weighted:
  - 0.5073136183256246
  - 0.5543738402319989
  - 0.40056819948823824
  - 0.5652434122330123
  - 0.5608658863790628
  train_matthews_corrcoef_weighted_oob:
  - 0.20626498027004259
  - 0.2518895945592084
  - 0.2104076572354983
  - 0.2873425400326153
  - 0.21152777877508433
  train_ndgc:
  - 0.9633719471800853
  - 0.9599973682912043
  - 0.9578070373291596
  - 0.9610100663276876
  - 0.9626888610508146
  train_ndgc_oob:
  - 0.8995342622860876
  - 0.9143110743206961
  - 0.9112665026509207
  - 0.9024638125617819
  - 0.9040141861354286
  train_neg_coverage_error:
  - -4.062893081761007
  - -4.012820512820513
  - -4.140939597315437
  - -4.038461538461538
  - -4.044871794871795
  train_neg_coverage_error_oob:
  - -4.60377358490566
  - -4.4423076923076925
  - -4.617449664429531
  - -4.5576923076923075
  - -4.615384615384615
  train_neg_hamming_loss_macro:
  - -0.13387241689128482
  - -0.1208791208791209
  - -0.13135186960690318
  - -0.13186813186813187
  - -0.12362637362637363
  train_neg_hamming_loss_macro_oob:
  - -0.24079065588499549
  - -0.21703296703296707
  - -0.22914669223394055
  - -0.22252747252747254
  - -0.23901098901098902
  train_neg_hamming_loss_micro:
  - -0.13387241689128482
  - -0.12087912087912088
  - -0.13135186960690318
  - -0.13186813186813187
  - -0.12362637362637363
  train_neg_hamming_loss_micro_oob:
  - -0.2407906558849955
  - -0.21703296703296704
  - -0.22914669223394055
  - -0.22252747252747251
  - -0.23901098901098902
  train_neg_hamming_loss_samples:
  - -0.13387241689128482
  - -0.12087912087912088
  - -0.13135186960690315
  - -0.13186813186813184
  - -0.12362637362637362
  train_neg_hamming_loss_samples_oob:
  - -0.24079065588499546
  - -0.217032967032967
  - -0.22914669223394052
  - -0.2225274725274725
  - -0.23901098901098897
  train_neg_hamming_loss_weighted:
  - -0.14929451393305537
  - -0.13741834844496442
  - -0.1407059312242805
  - -0.14068310824036015
  - -0.1378024047515573
  train_neg_hamming_loss_weighted_oob:
  - -0.2519256589640308
  - -0.23122014234181534
  - -0.23023898848545427
  - -0.23316696026619688
  - -0.2504708097928437
  train_neg_label_ranking_loss:
  - -0.08396226415094338
  - -0.07852564102564102
  - -0.08926174496644294
  - -0.08012820512820513
  - -0.07905982905982906
  train_neg_label_ranking_loss_oob:
  - -0.18553459119496854
  - -0.15886752136752136
  - -0.17684563758389263
  - -0.17446581196581198
  - -0.18717948717948715
  train_precision_macro:
  - 0.8661275831087151
  - 0.8791208791208793
  - 0.8686481303930969
  - 0.868131868131868
  - 0.8763736263736265
  train_precision_macro_oob:
  - 0.7592093441150044
  - 0.782967032967033
  - 0.7708533077660594
  - 0.7774725274725274
  - 0.760989010989011
  train_precision_micro:
  - 0.8661275831087152
  - 0.8791208791208791
  - 0.8686481303930969
  - 0.8681318681318682
  - 0.8763736263736264
  train_precision_micro_oob:
  - 0.7592093441150045
  - 0.782967032967033
  - 0.7708533077660594
  - 0.7774725274725275
  - 0.760989010989011
  train_precision_samples:
  - 0.8661275831087152
  - 0.8791208791208791
  - 0.8686481303930967
  - 0.868131868131868
  - 0.8763736263736265
  train_precision_samples_oob:
  - 0.7592093441150044
  - 0.782967032967033
  - 0.7708533077660594
  - 0.7774725274725274
  - 0.7609890109890111
  train_precision_weighted:
  - 0.8507054860669445
  - 0.8625816515550356
  - 0.8592940687757197
  - 0.8593168917596399
  - 0.8621975952484427
  train_precision_weighted_oob:
  - 0.7480743410359691
  - 0.7687798576581846
  - 0.7697610115145456
  - 0.766833039733803
  - 0.7495291902071565
  train_recall_macro:
  - 0.8661275831087151
  - 0.8791208791208793
  - 0.8686481303930969
  - 0.868131868131868
  - 0.8763736263736265
  train_recall_macro_oob:
  - 0.7592093441150044
  - 0.782967032967033
  - 0.7708533077660594
  - 0.7774725274725274
  - 0.760989010989011
  train_recall_micro:
  - 0.8661275831087152
  - 0.8791208791208791
  - 0.8686481303930969
  - 0.8681318681318682
  - 0.8763736263736264
  train_recall_micro_oob:
  - 0.7592093441150045
  - 0.782967032967033
  - 0.7708533077660594
  - 0.7774725274725275
  - 0.760989010989011
  train_recall_samples:
  - 0.8661275831087152
  - 0.8791208791208791
  - 0.8686481303930967
  - 0.868131868131868
  - 0.8763736263736265
  train_recall_samples_oob:
  - 0.7592093441150044
  - 0.782967032967033
  - 0.7708533077660594
  - 0.7774725274725274
  - 0.7609890109890111
  train_recall_weighted:
  - 0.8507054860669445
  - 0.8625816515550356
  - 0.8592940687757197
  - 0.8593168917596399
  - 0.8621975952484427
  train_recall_weighted_oob:
  - 0.7480743410359691
  - 0.7687798576581846
  - 0.7697610115145456
  - 0.766833039733803
  - 0.7495291902071565
  train_roc_auc_macro:
  - 0.9840126298297603
  - 0.9778895642697228
  - 0.9848151001819334
  - 0.9802847200723191
  - 0.9822983640492355
  train_roc_auc_macro_oob:
  - 0.7751724482403225
  - 0.7839113622837421
  - 0.7680687604486545
  - 0.7867625182587712
  - 0.7993549998657858
  train_roc_auc_micro:
  - 0.9475671602207086
  - 0.9496130540515122
  - 0.9440818262717785
  - 0.9489722207289538
  - 0.9500152740431902
  train_roc_auc_micro_oob:
  - 0.835031340358231
  - 0.8506865603461017
  - 0.8457244559501659
  - 0.8421137512095473
  - 0.8438321399438049
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9877353390536436
  - 0.9808600001033012
  - 0.989494612659601
  - 0.9833165022072485
  - 0.9859446955708902
  train_roc_auc_weighted_oob:
  - 0.7564123114325658
  - 0.7650513346646843
  - 0.734327406083431
  - 0.7772216000438613
  - 0.7876003735090569
start: 2023-12-21 13:14:57.491685
wrapper: null
