active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          YGZmZmZmFsCAmZmZmZn5v6CZmZmZmRlAADMzMzMz47+AZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 07:44:52.599935
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 2
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__2
  params: {}
hash: af75970bcae4509c9c6c1c6dc385ad39cbfe8a1e4c14c2434e866fca6b3a0486
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/af75970_20231221T074438958984_embedding_proba_weak__2_VirusGO.yml
results:
  fit_time:
  - 7.493786573410034
  - 7.830958366394043
  - 7.678561210632324
  - 7.548920631408691
  - 7.6943840980529785
  score_time:
  - 1.7161319255828857
  - 1.7604968547821045
  - 1.6533029079437256
  - 1.649949312210083
  - 1.6705951690673828
  test_average_precision_macro:
  - 0.8641835651642816
  - 0.9697951308624203
  - 0.8587086645033741
  - 0.9545504903749494
  - 0.9749489328073887
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8541473385042897
  - 0.9302874683511171
  - 0.9292643369285438
  - 0.9350747295053528
  - 0.9381087038283903
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9156028368794326
  - 0.9399224806201552
  - 0.9519047619047618
  - 0.9511904761904763
  - 0.9270833333333333
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8754172837232544
  - 0.9626150916506953
  - 0.9179788790500863
  - 0.9618963876443593
  - 0.9742302881858704
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9468085106382979
  - 0.945736434108527
  - 0.9285714285714285
  - 0.9325396825396824
  - 0.9291666666666667
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9468085106382979
  - 0.9457364341085271
  - 0.9285714285714286
  - 0.9325396825396826
  - 0.9291666666666667
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9468085106382981
  - 0.9457364341085273
  - 0.9285714285714286
  - 0.9325396825396827
  - 0.9291666666666668
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9374217772215269
  - 0.9288372093023257
  - 0.9062857142857144
  - 0.9194139194139195
  - 0.9204081632653062
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9007051538564143
  - 0.8987575025618503
  - 0.8700517318938371
  - 0.8749688872895206
  - 0.8688322874369385
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.898989898989899
  - 0.8970588235294118
  - 0.8666666666666667
  - 0.8736059479553904
  - 0.867704280155642
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9133738601823709
  - 0.9147286821705427
  - 0.8925170068027212
  - 0.8894557823129252
  - 0.8904761904761905
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8841953825270683
  - 0.869130873956961
  - 0.8315721997300944
  - 0.8524899972203287
  - 0.8542575391175296
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9156028368794326
  - 0.9399224806201549
  - 0.9519047619047618
  - 0.9511904761904763
  - 0.9270833333333334
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5787834758123716
  - 0.6341398258596639
  - 0.55115455132605
  - 0.5812098524786732
  - 0.5978532106896405
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8168143947195406
  - 0.8219812406035084
  - 0.7968920271519282
  - 0.7849573320682875
  - 0.7732852941221827
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.799197397024859
  - 0.81892079911902
  - 0.8075312674890819
  - 0.7331379473119272
  - 0.7387170824512628
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7582309517629707
  - 0.7863534200290075
  - 0.7207913016701849
  - 0.7384536832053382
  - 0.7443852771184784
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9382624178342981
  - 0.9554933875425964
  - 0.9698504787830408
  - 0.9650742403299433
  - 0.9460534679498682
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.446808510638298
  - -1.302325581395349
  - -1.6857142857142857
  - -1.380952380952381
  - -1.4
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.05319148936170212
  - -0.05426356589147286
  - -0.07142857142857142
  - -0.06746031746031744
  - -0.07083333333333333
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.05319148936170213
  - -0.05426356589147287
  - -0.07142857142857142
  - -0.06746031746031746
  - -0.07083333333333333
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.05319148936170212
  - -0.05426356589147286
  - -0.07142857142857141
  - -0.06746031746031746
  - -0.07083333333333333
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.0625782227784731
  - -0.07116279069767444
  - -0.0937142857142857
  - -0.08058608058608058
  - -0.07959183673469387
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06595744680851064
  - -0.029069767441860465
  - -0.03785714285714285
  - -0.02552910052910053
  - -0.03875
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9468085106382979
  - 0.945736434108527
  - 0.9285714285714285
  - 0.9325396825396824
  - 0.9291666666666667
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9468085106382979
  - 0.9457364341085271
  - 0.9285714285714286
  - 0.9325396825396826
  - 0.9291666666666667
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9468085106382981
  - 0.9457364341085273
  - 0.9285714285714286
  - 0.9325396825396827
  - 0.9291666666666668
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9374217772215269
  - 0.9288372093023257
  - 0.9062857142857144
  - 0.9194139194139195
  - 0.9204081632653062
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9468085106382979
  - 0.945736434108527
  - 0.9285714285714285
  - 0.9325396825396824
  - 0.9291666666666667
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9468085106382979
  - 0.9457364341085271
  - 0.9285714285714286
  - 0.9325396825396826
  - 0.9291666666666667
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9468085106382981
  - 0.9457364341085273
  - 0.9285714285714286
  - 0.9325396825396827
  - 0.9291666666666668
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9374217772215269
  - 0.9288372093023257
  - 0.9062857142857144
  - 0.9194139194139195
  - 0.9204081632653062
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9439105487156104
  - 0.9865663853899148
  - 0.9587725771312109
  - 0.9848216469823797
  - 0.9907881026806858
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9526355996944231
  - 0.9800961538461539
  - 0.968125
  - 0.9766346153846153
  - 0.9830110054493001
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9340425531914894
  - 0.9709302325581395
  - 0.9621428571428571
  - 0.9744708994708995
  - 0.96125
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9401466788265695
  - 0.9777413721413721
  - 0.9683154121863798
  - 0.9776939946018893
  - 0.9863931079678249
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9761915976738903
  - 0.9610458760898801
  - 0.9691968651487056
  - 0.9677041349809904
  - 0.9527777011672341
  train_average_precision_macro_oob:
  - 0.9486064366723141
  - 0.922674793659696
  - 0.9461580671120119
  - 0.9359557120556383
  - 0.9188246363973782
  train_average_precision_micro:
  - 0.9426476675756574
  - 0.9448385164613825
  - 0.9481026073847815
  - 0.9490781018203138
  - 0.9364581455197494
  train_average_precision_micro_oob:
  - 0.9166858067296887
  - 0.9214421540734391
  - 0.9309194941174708
  - 0.9223917622501895
  - 0.9127857269575013
  train_average_precision_samples:
  - 0.9677083333333332
  - 0.9715447154471545
  - 0.9738372093023255
  - 0.9580808080808081
  - 0.9600798403193611
  train_average_precision_samples_oob:
  - 0.9542013888888888
  - 0.9478658536585365
  - 0.9522286821705426
  - 0.939090909090909
  - 0.940352628077179
  train_average_precision_weighted:
  - 0.9619817657856328
  - 0.9638235413530374
  - 0.9665296402401671
  - 0.9689238735362793
  - 0.9514314166522431
  train_average_precision_weighted_oob:
  - 0.9439361934869157
  - 0.9395011327441763
  - 0.953677232429346
  - 0.9467267600926064
  - 0.9321721093295526
  train_f1_macro:
  - 0.9510416666666667
  - 0.9461382113821136
  - 0.9515503875968992
  - 0.9464646464646463
  - 0.9510978043912175
  train_f1_macro_oob:
  - 0.9364583333333334
  - 0.9319105691056909
  - 0.939922480620155
  - 0.9393939393939394
  - 0.936127744510978
  train_f1_micro:
  - 0.9510416666666667
  - 0.9461382113821138
  - 0.9515503875968992
  - 0.9464646464646465
  - 0.9510978043912176
  train_f1_micro_oob:
  - 0.9364583333333333
  - 0.931910569105691
  - 0.939922480620155
  - 0.9393939393939394
  - 0.936127744510978
  train_f1_samples:
  - 0.9510416666666668
  - 0.946138211382114
  - 0.9515503875968994
  - 0.9464646464646466
  - 0.9510978043912175
  train_f1_samples_oob:
  - 0.9364583333333334
  - 0.9319105691056911
  - 0.9399224806201552
  - 0.9393939393939394
  - 0.9361277445109779
  train_f1_weighted:
  - 0.9419465174129353
  - 0.9430994928761168
  - 0.9465231406861617
  - 0.9385151515151514
  - 0.9466387422199936
  train_f1_weighted_oob:
  - 0.9301616915422886
  - 0.9278555904370924
  - 0.9323336403407781
  - 0.9298181818181819
  - 0.9298545765611635
  train_jaccard_macro:
  - 0.9075947665835572
  - 0.8981485603014844
  - 0.9083229472636107
  - 0.8990232676579827
  - 0.9068679486298058
  train_jaccard_macro_oob:
  - 0.8812920772576692
  - 0.873219996146283
  - 0.8873471442945516
  - 0.886384403661506
  - 0.8803988286286847
  train_jaccard_micro:
  - 0.9066534260178749
  - 0.8977820636451301
  - 0.9075785582255084
  - 0.8983700862895494
  - 0.9067554709800191
  train_jaccard_micro_oob:
  - 0.8805093046033301
  - 0.8725023786869648
  - 0.886654478976234
  - 0.8857142857142857
  - 0.8799249530956847
  train_jaccard_samples:
  - 0.9194940476190478
  - 0.9136178861788619
  - 0.9202657807308972
  - 0.9132756132756134
  - 0.9214428286284575
  train_jaccard_samples_oob:
  - 0.897470238095238
  - 0.8903890824622531
  - 0.9011627906976745
  - 0.9027417027417028
  - 0.897775876817793
  train_jaccard_weighted:
  - 0.8910263863095279
  - 0.8928313197806528
  - 0.8990485892045097
  - 0.8847967026751953
  - 0.8987587708485619
  train_jaccard_weighted_oob:
  - 0.8698380340249264
  - 0.8661464771665057
  - 0.8737335720184308
  - 0.8695349310315958
  - 0.8691337332119724
  train_label_ranking_average_precision_score:
  - 0.9677083333333332
  - 0.9715447154471544
  - 0.9738372093023255
  - 0.958080808080808
  - 0.9600798403193611
  train_label_ranking_average_precision_score_oob:
  - 0.9542013888888888
  - 0.9478658536585365
  - 0.9522286821705425
  - 0.939090909090909
  - 0.940352628077179
  train_matthews_corrcoef_macro:
  - 0.66143383538535
  - 0.6348009006620033
  - 0.641814100142951
  - 0.6356278164945611
  - 0.6593019353652562
  train_matthews_corrcoef_macro_oob:
  - 0.5358821928006634
  - 0.5380723791398873
  - 0.5787387023332354
  - 0.6055339415429216
  - 0.5657512306681313
  train_matthews_corrcoef_micro:
  - 0.8478337862971487
  - 0.8302284569663122
  - 0.8412216993568566
  - 0.8284342036934959
  - 0.8456594171349501
  train_matthews_corrcoef_micro_oob:
  - 0.8003376669246925
  - 0.782316831988842
  - 0.8012277350013051
  - 0.804870896129035
  - 0.7946132648094536
  train_matthews_corrcoef_samples:
  - 0.8299282497080791
  - 0.8160956320404944
  - 0.8153555427743701
  - 0.8057681457246817
  - 0.8496151709508541
  train_matthews_corrcoef_samples_oob:
  - 0.756118929360152
  - 0.7401979881654948
  - 0.7560532171929748
  - 0.7734582134211413
  - 0.7669536537215871
  train_matthews_corrcoef_weighted:
  - 0.8124647991123343
  - 0.8004750776862711
  - 0.8062765508868859
  - 0.7949164660290241
  - 0.820199433258107
  train_matthews_corrcoef_weighted_oob:
  - 0.739798558843368
  - 0.735145292611701
  - 0.7557055689004153
  - 0.7683543447424213
  - 0.7541839822376696
  train_ndgc:
  - 0.9763942616961433
  - 0.9796935011522252
  - 0.980844763433587
  - 0.9700041051051705
  - 0.9712182826541962
  train_ndgc_oob:
  - 0.9673271218027469
  - 0.9629122066223272
  - 0.9655292569235473
  - 0.9567981509381217
  - 0.957084738042967
  train_neg_coverage_error:
  - -1.33125
  - -1.3109756097560976
  - -1.2383720930232558
  - -1.3212121212121213
  - -1.3173652694610778
  train_neg_coverage_error_oob:
  - -1.38125
  - -1.4085365853658536
  - -1.313953488372093
  - -1.4181818181818182
  - -1.407185628742515
  train_neg_hamming_loss_macro:
  - -0.04895833333333333
  - -0.05386178861788618
  - -0.04844961240310078
  - -0.05353535353535354
  - -0.048902195608782444
  train_neg_hamming_loss_macro_oob:
  - -0.06354166666666666
  - -0.06808943089430892
  - -0.06007751937984496
  - -0.06060606060606061
  - -0.06387225548902196
  train_neg_hamming_loss_micro:
  - -0.04895833333333333
  - -0.05386178861788618
  - -0.04844961240310078
  - -0.05353535353535353
  - -0.04890219560878244
  train_neg_hamming_loss_micro_oob:
  - -0.06354166666666666
  - -0.06808943089430894
  - -0.060077519379844964
  - -0.06060606060606061
  - -0.06387225548902195
  train_neg_hamming_loss_samples:
  - -0.048958333333333326
  - -0.053861788617886174
  - -0.04844961240310077
  - -0.053535353535353526
  - -0.04890219560878243
  train_neg_hamming_loss_samples_oob:
  - -0.06354166666666666
  - -0.06808943089430894
  - -0.06007751937984496
  - -0.060606060606060594
  - -0.06387225548902194
  train_neg_hamming_loss_weighted:
  - -0.05805348258706467
  - -0.05690050712388313
  - -0.05347685931383837
  - -0.061484848484848496
  - -0.05336125778000649
  train_neg_hamming_loss_weighted_oob:
  - -0.06983830845771144
  - -0.0721444095629075
  - -0.06766635965922173
  - -0.07018181818181818
  - -0.0701454234388366
  train_neg_label_ranking_loss:
  - -0.015156250000000001
  - -0.015091463414634148
  - -0.012354651162790697
  - -0.020303030303030305
  - -0.01961077844311377
  train_neg_label_ranking_loss_oob:
  - -0.024114583333333335
  - -0.032452574525745265
  - -0.02614664082687338
  - -0.037575757575757575
  - -0.036493679308050565
  train_precision_macro:
  - 0.9510416666666667
  - 0.9461382113821136
  - 0.9515503875968992
  - 0.9464646464646463
  - 0.9510978043912175
  train_precision_macro_oob:
  - 0.9364583333333334
  - 0.9319105691056909
  - 0.939922480620155
  - 0.9393939393939394
  - 0.936127744510978
  train_precision_micro:
  - 0.9510416666666667
  - 0.9461382113821138
  - 0.9515503875968992
  - 0.9464646464646465
  - 0.9510978043912176
  train_precision_micro_oob:
  - 0.9364583333333333
  - 0.931910569105691
  - 0.939922480620155
  - 0.9393939393939394
  - 0.936127744510978
  train_precision_samples:
  - 0.9510416666666668
  - 0.946138211382114
  - 0.9515503875968994
  - 0.9464646464646466
  - 0.9510978043912175
  train_precision_samples_oob:
  - 0.9364583333333334
  - 0.9319105691056911
  - 0.9399224806201552
  - 0.9393939393939394
  - 0.9361277445109779
  train_precision_weighted:
  - 0.9419465174129353
  - 0.9430994928761168
  - 0.9465231406861617
  - 0.9385151515151514
  - 0.9466387422199936
  train_precision_weighted_oob:
  - 0.9301616915422886
  - 0.9278555904370924
  - 0.9323336403407781
  - 0.9298181818181819
  - 0.9298545765611635
  train_recall_macro:
  - 0.9510416666666667
  - 0.9461382113821136
  - 0.9515503875968992
  - 0.9464646464646463
  - 0.9510978043912175
  train_recall_macro_oob:
  - 0.9364583333333334
  - 0.9319105691056909
  - 0.939922480620155
  - 0.9393939393939394
  - 0.936127744510978
  train_recall_micro:
  - 0.9510416666666667
  - 0.9461382113821138
  - 0.9515503875968992
  - 0.9464646464646465
  - 0.9510978043912176
  train_recall_micro_oob:
  - 0.9364583333333333
  - 0.931910569105691
  - 0.939922480620155
  - 0.9393939393939394
  - 0.936127744510978
  train_recall_samples:
  - 0.9510416666666668
  - 0.946138211382114
  - 0.9515503875968994
  - 0.9464646464646466
  - 0.9510978043912175
  train_recall_samples_oob:
  - 0.9364583333333334
  - 0.9319105691056911
  - 0.9399224806201552
  - 0.9393939393939394
  - 0.9361277445109779
  train_recall_weighted:
  - 0.9419465174129353
  - 0.9430994928761168
  - 0.9465231406861617
  - 0.9385151515151514
  - 0.9466387422199936
  train_recall_weighted_oob:
  - 0.9301616915422886
  - 0.9278555904370924
  - 0.9323336403407781
  - 0.9298181818181819
  - 0.9298545765611635
  train_roc_auc_macro:
  - 0.9915134503395818
  - 0.9871012135030526
  - 0.9901817687334228
  - 0.9896070788096426
  - 0.9868002844319391
  train_roc_auc_macro_oob:
  - 0.9815851720977804
  - 0.9674324531663899
  - 0.9805163026991722
  - 0.9743735350816857
  - 0.9671163960628227
  train_roc_auc_micro:
  - 0.988820718541679
  - 0.9833411410194728
  - 0.9877519980913754
  - 0.9863354430379747
  - 0.984589727306917
  train_roc_auc_micro_oob:
  - 0.9782707018268342
  - 0.9696449824010533
  - 0.9800190862459739
  - 0.9732911392405064
  - 0.9703508696215096
  train_roc_auc_samples:
  - 0.9848437500000001
  - 0.9849085365853659
  - 0.9876453488372093
  - 0.97969696969697
  - 0.9803892215568863
  train_roc_auc_samples_oob:
  - 0.9758854166666667
  - 0.9675474254742548
  - 0.9738533591731268
  - 0.9624242424242425
  - 0.9635063206919495
  train_roc_auc_weighted:
  - 0.983971691853683
  - 0.9826970457451066
  - 0.9855235920073043
  - 0.9862629912591636
  - 0.9812006392711565
  train_roc_auc_weighted_oob:
  - 0.9708372623588312
  - 0.9667009169762801
  - 0.9780613073615763
  - 0.9724962111703597
  - 0.9665454043854302
start: 2023-12-21 07:44:38.958984
wrapper: null
