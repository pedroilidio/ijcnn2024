active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP6CZmZmZmfk/MDMzMzMzC8BAMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ2b8gMzMzMzMLwODMzMzMzAxAcGZmZmZmEkCQmZmZmZkRwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 02:16:25.946447
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 6
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__6
  params: {}
hash: 49b68a23f86dcdab9ee2805c1cd3afd1fde65e1302dd96c9b171648881d29b69
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/49b68a2_20231222T021424202414_embedding_weak__6_emotions.yml
results:
  fit_time:
  - 101.19499325752258
  - 100.85397720336914
  - 101.09985065460205
  - 102.80529928207397
  - 101.28555250167847
  score_time:
  - 4.911611318588257
  - 5.105961084365845
  - 4.971275806427002
  - 5.212746858596802
  - 5.507241249084473
  test_average_precision_macro:
  - 0.7537668793309095
  - 0.6797627823429275
  - 0.7430179927640946
  - 0.7361693558072616
  - 0.6871677656137356
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6768513717633147
  - 0.6246999164449425
  - 0.6462706643497876
  - 0.6443733799052807
  - 0.6288882345444841
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7789449112978524
  - 0.7197176684881603
  - 0.7560628019323672
  - 0.7908382066276802
  - 0.7549232158988256
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7502966899996247
  - 0.680967453186935
  - 0.7393045723302103
  - 0.7239681718205385
  - 0.681329900124594
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.788515406162465
  - 0.7677595628415301
  - 0.7855072463768117
  - 0.7967836257309941
  - 0.7953929539295393
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.788515406162465
  - 0.76775956284153
  - 0.7855072463768116
  - 0.7967836257309941
  - 0.7953929539295393
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7885154061624651
  - 0.7677595628415301
  - 0.7855072463768116
  - 0.7967836257309941
  - 0.7953929539295393
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7782425187269478
  - 0.7535814503027618
  - 0.7710541989279334
  - 0.7865366541353385
  - 0.7813301105984033
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6557934271583101
  - 0.6294996476456077
  - 0.6523795251125364
  - 0.6670958879848721
  - 0.6684883505292923
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6508670520231213
  - 0.623059866962306
  - 0.6467780429594272
  - 0.6622114216281896
  - 0.6602924634420697
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6825130052020807
  - 0.6572209211553474
  - 0.6804140786749481
  - 0.6928571428571427
  - 0.6922957801006582
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.642118632069995
  - 0.6117882305507469
  - 0.6342193505536402
  - 0.6532448292197455
  - 0.6496155306230471
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7789449112978524
  - 0.7197176684881601
  - 0.7560628019323674
  - 0.79083820662768
  - 0.7549232158988255
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.4977033432510522
  - 0.4411938894261897
  - 0.5061924183687072
  - 0.5311886788374148
  - 0.5097238398799986
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.49104826270012414
  - 0.4383525322146129
  - 0.4888164038275091
  - 0.5206496001438272
  - 0.5105180663496347
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.4962559593971366
  - 0.4230003182904021
  - 0.4746655196332839
  - 0.5284629261507229
  - 0.502861151977044
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.4963529947380644
  - 0.4369589962968455
  - 0.4981246659677422
  - 0.5255358008102249
  - 0.5029795193900161
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8437320514220527
  - 0.8044332733073905
  - 0.8333373501805498
  - 0.8570477016634858
  - 0.8310241169237267
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.697478991596639
  - -2.9754098360655736
  - -2.982608695652174
  - -2.8859649122807016
  - -2.8048780487804876
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.211484593837535
  - -0.23224043715846995
  - -0.21449275362318843
  - -0.20321637426900585
  - -0.20460704607046074
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.211484593837535
  - -0.23224043715846995
  - -0.2144927536231884
  - -0.20321637426900585
  - -0.2046070460704607
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.21148459383753498
  - -0.23224043715846993
  - -0.21449275362318843
  - -0.20321637426900585
  - -0.20460704607046068
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2217574812730522
  - -0.2464185496972382
  - -0.22894580107206675
  - -0.21346334586466162
  - -0.21866988940159673
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1604341736694678
  - -0.21188524590163935
  - -0.19823671497584544
  - -0.1706384015594542
  - -0.17748419150858175
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.788515406162465
  - 0.7677595628415301
  - 0.7855072463768117
  - 0.7967836257309941
  - 0.7953929539295393
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.788515406162465
  - 0.76775956284153
  - 0.7855072463768116
  - 0.7967836257309941
  - 0.7953929539295393
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7885154061624651
  - 0.7677595628415301
  - 0.7855072463768116
  - 0.7967836257309941
  - 0.7953929539295393
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7782425187269478
  - 0.7535814503027618
  - 0.7710541989279334
  - 0.7865366541353385
  - 0.7813301105984033
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.788515406162465
  - 0.7677595628415301
  - 0.7855072463768117
  - 0.7967836257309941
  - 0.7953929539295393
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.788515406162465
  - 0.76775956284153
  - 0.7855072463768116
  - 0.7967836257309941
  - 0.7953929539295393
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7885154061624651
  - 0.7677595628415301
  - 0.7855072463768116
  - 0.7967836257309941
  - 0.7953929539295393
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7782425187269478
  - 0.7535814503027618
  - 0.7710541989279334
  - 0.7865366541353385
  - 0.7813301105984033
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8755766430120168
  - 0.8192744310531994
  - 0.8539233780055883
  - 0.8440406349007742
  - 0.8380088584515833
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8557634943507751
  - 0.8166136724960255
  - 0.8379431695896227
  - 0.8424883540372671
  - 0.8381870242335359
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8395658263305322
  - 0.7881147540983606
  - 0.8017632850241545
  - 0.8293615984405458
  - 0.8225158084914181
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8742562340033835
  - 0.8197301466414804
  - 0.8513466255291811
  - 0.8346909079766204
  - 0.8360891119192827
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8823034706630754
  - 0.8852640010396331
  - 0.8964729887837972
  - 0.9272676682024924
  - 0.892915963295811
  train_average_precision_macro_oob:
  - 0.7196701513667628
  - 0.7356958251043467
  - 0.7353093226510762
  - 0.7443242686724311
  - 0.7391785842243759
  train_average_precision_micro:
  - 0.7244256908474135
  - 0.7323204464276991
  - 0.7482201702617713
  - 0.7490865697327883
  - 0.7393690808459497
  train_average_precision_micro_oob:
  - 0.6345466615203839
  - 0.6450611799947459
  - 0.6525501440485507
  - 0.6469058743890814
  - 0.6515900599196401
  train_average_precision_samples:
  - 0.8297702766057197
  - 0.8295116772823781
  - 0.846001859600186
  - 0.8461609835305033
  - 0.8303191489361702
  train_average_precision_samples_oob:
  - 0.7578117674636662
  - 0.7665546119367774
  - 0.7739655973965597
  - 0.7552713987473904
  - 0.7657328605200945
  train_average_precision_weighted:
  - 0.8599412415092637
  - 0.8629976263913793
  - 0.8759458403938551
  - 0.9081827121508808
  - 0.8735649580030678
  train_average_precision_weighted_oob:
  - 0.7110844154732722
  - 0.7261645576534566
  - 0.7271357752218416
  - 0.7401665284647257
  - 0.7334463807482852
  train_f1_macro:
  - 0.8516174402250352
  - 0.8605803255484785
  - 0.8643654114365412
  - 0.8629088378566457
  - 0.854609929078014
  train_f1_macro_oob:
  - 0.7869198312236287
  - 0.7940552016985137
  - 0.7956764295676431
  - 0.7842727905358386
  - 0.7858156028368795
  train_f1_micro:
  - 0.8516174402250352
  - 0.8605803255484784
  - 0.8643654114365411
  - 0.8629088378566457
  - 0.8546099290780141
  train_f1_micro_oob:
  - 0.7869198312236287
  - 0.7940552016985138
  - 0.795676429567643
  - 0.7842727905358385
  - 0.7858156028368795
  train_f1_samples:
  - 0.851617440225035
  - 0.8605803255484785
  - 0.8643654114365411
  - 0.8629088378566457
  - 0.8546099290780143
  train_f1_samples_oob:
  - 0.7869198312236287
  - 0.7940552016985138
  - 0.7956764295676431
  - 0.7842727905358385
  - 0.7858156028368793
  train_f1_weighted:
  - 0.8354644442224537
  - 0.8445289547717981
  - 0.850266624621713
  - 0.846952077763818
  - 0.8380721387061139
  train_f1_weighted_oob:
  - 0.77247299245073
  - 0.779655696299598
  - 0.784885937374983
  - 0.7712121784638056
  - 0.7725277364199608
  train_jaccard_macro:
  - 0.7508001196232436
  - 0.7637176859031004
  - 0.7680161954044884
  - 0.7687281568164007
  - 0.7551898056789033
  train_jaccard_macro_oob:
  - 0.6563192602499625
  - 0.6658192513339198
  - 0.6656724608584336
  - 0.650992787420905
  - 0.6536472691619623
  train_jaccard_micro:
  - 0.741579914268218
  - 0.7552795031055901
  - 0.7611298741172858
  - 0.758873929008568
  - 0.7461300309597523
  train_jaccard_micro_oob:
  - 0.648695652173913
  - 0.6584507042253521
  - 0.6606832657788072
  - 0.6451058958214081
  - 0.647196261682243
  train_jaccard_samples:
  - 0.7696302993771347
  - 0.781558993023961
  - 0.7889220960350667
  - 0.7856844616761108
  - 0.7747416413373859
  train_jaccard_samples_oob:
  - 0.6823688969258589
  - 0.6917399656253159
  - 0.6918609284718071
  - 0.6768565463763793
  - 0.6794427558257344
  train_jaccard_weighted:
  - 0.7283078456221412
  - 0.7412463720129246
  - 0.747768220542485
  - 0.7466066209924139
  - 0.7322960014381873
  train_jaccard_weighted_oob:
  - 0.637752482814252
  - 0.6471443256038678
  - 0.6512353589832075
  - 0.6341581690886074
  - 0.6367106759023881
  train_label_ranking_average_precision_score:
  - 0.8297702766057189
  - 0.8295116772823771
  - 0.846001859600185
  - 0.846160983530503
  - 0.8303191489361693
  train_label_ranking_average_precision_score_oob:
  - 0.7578117674636655
  - 0.7665546119367763
  - 0.7739655973965589
  - 0.7552713987473897
  - 0.7657328605200938
  train_matthews_corrcoef_macro:
  - 0.6797255664723685
  - 0.7030077321166172
  - 0.7064002901241185
  - 0.704524893993756
  - 0.6903854337463052
  train_matthews_corrcoef_macro_oob:
  - 0.49333197364245535
  - 0.5206360443618986
  - 0.5117435522542437
  - 0.48313841657845114
  - 0.4953198807390366
  train_matthews_corrcoef_micro:
  - 0.650344392826895
  - 0.6743831961878468
  - 0.6786041979046229
  - 0.6729613674271757
  - 0.6610241131037592
  train_matthews_corrcoef_micro_oob:
  - 0.48656551774372214
  - 0.5073155843766065
  - 0.5038772583707385
  - 0.47096752379874884
  - 0.4873441787728067
  train_matthews_corrcoef_samples:
  - 0.6484630716343512
  - 0.6767809567740969
  - 0.6692692661646835
  - 0.6606271441705277
  - 0.6583571894971726
  train_matthews_corrcoef_samples_oob:
  - 0.47789444330636166
  - 0.5037402934381349
  - 0.49296005522640723
  - 0.45606172093884056
  - 0.4845127856735698
  train_matthews_corrcoef_weighted:
  - 0.6614924138982934
  - 0.684109417921108
  - 0.6900697015336187
  - 0.6868964153698067
  - 0.6711365482788365
  train_matthews_corrcoef_weighted_oob:
  - 0.48618331403228376
  - 0.5120101577040036
  - 0.5088167609447132
  - 0.4784807604182823
  - 0.49000192700142475
  train_ndgc:
  - 0.8768738145171534
  - 0.8763431947874403
  - 0.8888281981466855
  - 0.8887229688880736
  - 0.8768799357108942
  train_ndgc_oob:
  - 0.8320299554739117
  - 0.8370083223170324
  - 0.8426567924810949
  - 0.8293377824742714
  - 0.837449525790497
  train_neg_coverage_error:
  - -2.318565400843882
  - -2.3312101910828025
  - -2.274058577405858
  - -2.244258872651357
  - -2.3340425531914892
  train_neg_coverage_error_oob:
  - -2.869198312236287
  - -2.813163481953291
  - -2.774058577405858
  - -2.8183716075156577
  - -2.8617021276595747
  train_neg_hamming_loss_macro:
  - -0.1483825597749648
  - -0.13941967445152156
  - -0.13563458856345886
  - -0.13709116214335423
  - -0.1453900709219858
  train_neg_hamming_loss_macro_oob:
  - -0.2130801687763713
  - -0.20594479830148618
  - -0.20432357043235705
  - -0.21572720946416146
  - -0.21418439716312054
  train_neg_hamming_loss_micro:
  - -0.14838255977496484
  - -0.1394196744515216
  - -0.13563458856345886
  - -0.1370911621433542
  - -0.1453900709219858
  train_neg_hamming_loss_micro_oob:
  - -0.21308016877637131
  - -0.2059447983014862
  - -0.20432357043235705
  - -0.21572720946416143
  - -0.21418439716312057
  train_neg_hamming_loss_samples:
  - -0.14838255977496487
  - -0.13941967445152156
  - -0.13563458856345884
  - -0.13709116214335423
  - -0.1453900709219858
  train_neg_hamming_loss_samples_oob:
  - -0.21308016877637131
  - -0.2059447983014862
  - -0.20432357043235702
  - -0.21572720946416146
  - -0.21418439716312054
  train_neg_hamming_loss_weighted:
  - -0.1645355557775463
  - -0.15547104522820185
  - -0.1497333753782869
  - -0.1530479222361821
  - -0.16192786129388595
  train_neg_hamming_loss_weighted_oob:
  - -0.22752700754927005
  - -0.2203443037004021
  - -0.21511406262501706
  - -0.2287878215361944
  - -0.22747226358003939
  train_neg_label_ranking_loss:
  - -0.09427449601500235
  - -0.09493984430290163
  - -0.08609948860994886
  - -0.08347831129668291
  - -0.09586879432624112
  train_neg_label_ranking_loss_oob:
  - -0.18690225035161745
  - -0.1732248171738618
  - -0.16740469549046955
  - -0.18032938993273026
  - -0.18062056737588653
  train_precision_macro:
  - 0.8516174402250352
  - 0.8605803255484785
  - 0.8643654114365412
  - 0.8629088378566457
  - 0.854609929078014
  train_precision_macro_oob:
  - 0.7869198312236287
  - 0.7940552016985137
  - 0.7956764295676431
  - 0.7842727905358386
  - 0.7858156028368795
  train_precision_micro:
  - 0.8516174402250352
  - 0.8605803255484784
  - 0.8643654114365411
  - 0.8629088378566457
  - 0.8546099290780141
  train_precision_micro_oob:
  - 0.7869198312236287
  - 0.7940552016985138
  - 0.795676429567643
  - 0.7842727905358385
  - 0.7858156028368795
  train_precision_samples:
  - 0.851617440225035
  - 0.8605803255484785
  - 0.8643654114365411
  - 0.8629088378566457
  - 0.8546099290780143
  train_precision_samples_oob:
  - 0.7869198312236287
  - 0.7940552016985138
  - 0.7956764295676431
  - 0.7842727905358385
  - 0.7858156028368793
  train_precision_weighted:
  - 0.8354644442224537
  - 0.8445289547717981
  - 0.850266624621713
  - 0.846952077763818
  - 0.8380721387061139
  train_precision_weighted_oob:
  - 0.77247299245073
  - 0.779655696299598
  - 0.784885937374983
  - 0.7712121784638056
  - 0.7725277364199608
  train_recall_macro:
  - 0.8516174402250352
  - 0.8605803255484785
  - 0.8643654114365412
  - 0.8629088378566457
  - 0.854609929078014
  train_recall_macro_oob:
  - 0.7869198312236287
  - 0.7940552016985137
  - 0.7956764295676431
  - 0.7842727905358386
  - 0.7858156028368795
  train_recall_micro:
  - 0.8516174402250352
  - 0.8605803255484784
  - 0.8643654114365411
  - 0.8629088378566457
  - 0.8546099290780141
  train_recall_micro_oob:
  - 0.7869198312236287
  - 0.7940552016985138
  - 0.795676429567643
  - 0.7842727905358385
  - 0.7858156028368795
  train_recall_samples:
  - 0.851617440225035
  - 0.8605803255484785
  - 0.8643654114365411
  - 0.8629088378566457
  - 0.8546099290780143
  train_recall_samples_oob:
  - 0.7869198312236287
  - 0.7940552016985138
  - 0.7956764295676431
  - 0.7842727905358385
  - 0.7858156028368793
  train_recall_weighted:
  - 0.8354644442224537
  - 0.8445289547717981
  - 0.850266624621713
  - 0.846952077763818
  - 0.8380721387061139
  train_recall_weighted_oob:
  - 0.77247299245073
  - 0.779655696299598
  - 0.784885937374983
  - 0.7712121784638056
  - 0.7725277364199608
  train_roc_auc_macro:
  - 0.9524134144935338
  - 0.9538066571918877
  - 0.9565895669907197
  - 0.9664759591970311
  - 0.9540520620630598
  train_roc_auc_macro_oob:
  - 0.8526460329590911
  - 0.8609699702701527
  - 0.8594156143263646
  - 0.8636151621939194
  - 0.8590462849998107
  train_roc_auc_micro:
  - 0.9217741763587941
  - 0.9244397384282422
  - 0.9309066912366122
  - 0.930705564019191
  - 0.9230054554240267
  train_roc_auc_micro_oob:
  - 0.8396021796701229
  - 0.8466646110167322
  - 0.8489442862087919
  - 0.8433962800427477
  - 0.8423827153865368
  train_roc_auc_samples:
  - 0.9057255039849976
  - 0.9050601556970984
  - 0.9139005113900511
  - 0.9165216887033171
  - 0.9041312056737589
  train_roc_auc_samples_oob:
  - 0.8130977496483827
  - 0.8267751828261384
  - 0.8325953045095305
  - 0.8196706100672697
  - 0.8193794326241135
  train_roc_auc_weighted:
  - 0.9404522733316302
  - 0.9422454269192013
  - 0.9456025999554195
  - 0.9570125694666334
  - 0.9431565137497274
  train_roc_auc_weighted_oob:
  - 0.8478971709261497
  - 0.8559346071816966
  - 0.8550079185809155
  - 0.8617849705229488
  - 0.8555135680780948
start: 2023-12-22 02:14:24.202414
wrapper: null
