active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZmBkAAmpmZmZnpP4CZmZmZmQHAADMzMzMz878AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 17:47:20.212121
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__2
  params: {}
hash: 9a7a245b9e6e039fe61759903b4559ff0deb20028aaae1185fb35fddc6df2b87
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/9a7a245_20231221T174702458083_embedding_proba_weak__2_Gram_positive.yml
results:
  fit_time:
  - 7.739365339279175
  - 8.071921348571777
  - 7.619348764419556
  - 8.168910503387451
  - 7.654226064682007
  score_time:
  - 2.315476655960083
  - 2.2589712142944336
  - 2.3360977172851562
  - 2.419635772705078
  - 2.394120931625366
  test_average_precision_macro:
  - 0.9144956442394636
  - 0.8612959890219021
  - 0.8864568633485375
  - 0.942040442770226
  - 0.9579964931709118
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9820570583621513
  - 0.976498208074122
  - 0.9718111679238927
  - 0.9511759569491268
  - 0.9939685119382269
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9653465346534653
  - 0.959546925566343
  - 0.9654088050314467
  - 0.9484126984126984
  - 0.9831730769230769
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9798020675553327
  - 0.9624269725580828
  - 0.9652530820983272
  - 0.9466287699271945
  - 0.9947520610311309
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9158415841584158
  - 0.9344660194174758
  - 0.9009433962264152
  - 0.8785714285714287
  - 0.939903846153846
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9158415841584159
  - 0.9344660194174758
  - 0.9009433962264151
  - 0.8785714285714286
  - 0.9399038461538461
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9158415841584159
  - 0.9344660194174758
  - 0.9009433962264151
  - 0.8785714285714286
  - 0.9399038461538461
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8913803145020385
  - 0.9324122479462285
  - 0.8817194731221075
  - 0.8556154537286613
  - 0.9336996336996335
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8495018803911052
  - 0.8783351723587828
  - 0.8256528925619834
  - 0.7878961196287064
  - 0.887508234030858
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8447488584474886
  - 0.876993166287016
  - 0.8197424892703863
  - 0.7834394904458599
  - 0.8866213151927438
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8666666666666667
  - 0.8977346278317151
  - 0.8427672955974841
  - 0.8095238095238095
  - 0.905128205128205
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.808817318716908
  - 0.8746047117911359
  - 0.7943140495867769
  - 0.7496107064745745
  - 0.8761548933981383
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9653465346534653
  - 0.959546925566343
  - 0.9654088050314465
  - 0.9484126984126985
  - 0.9831730769230769
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5823344112892711
  - 0.6093175463410466
  - 0.5346235426638029
  - 0.47380607923535667
  - 0.6230774937003936
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7726791144732559
  - 0.8240119026473323
  - 0.728664516687448
  - 0.6642510617037958
  - 0.839771051835638
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6756833359985772
  - 0.7540453074433657
  - 0.6100628930817611
  - 0.5365079365079365
  - 0.7692307692307693
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.7425278552373444
  - 0.8004223326134319
  - 0.6949627930825509
  - 0.6250701021572058
  - 0.8187733218165612
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9744208740099031
  - 0.9697579818488604
  - 0.9740956828005769
  - 0.9616963293966196
  - 0.988173120923581
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.0792079207920793
  - -1.1262135922330097
  - -1.1037735849056605
  - -1.1333333333333333
  - -1.0576923076923077
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08415841584158416
  - -0.06553398058252427
  - -0.09905660377358491
  - -0.12142857142857143
  - -0.06009615384615385
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08415841584158416
  - -0.06553398058252427
  - -0.09905660377358491
  - -0.12142857142857143
  - -0.06009615384615385
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08415841584158416
  - -0.06553398058252427
  - -0.09905660377358491
  - -0.12142857142857143
  - -0.06009615384615385
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.10861968549796154
  - -0.06758775205377146
  - -0.11828052687789249
  - -0.1443845462713387
  - -0.0663003663003663
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.0231023102310231
  - -0.038834951456310676
  - -0.03459119496855345
  - -0.04126984126984127
  - -0.014423076923076924
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9158415841584158
  - 0.9344660194174758
  - 0.9009433962264152
  - 0.8785714285714287
  - 0.939903846153846
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9158415841584159
  - 0.9344660194174758
  - 0.9009433962264151
  - 0.8785714285714286
  - 0.9399038461538461
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9158415841584159
  - 0.9344660194174758
  - 0.9009433962264151
  - 0.8785714285714286
  - 0.9399038461538461
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8913803145020385
  - 0.9324122479462285
  - 0.8817194731221075
  - 0.8556154537286613
  - 0.9336996336996335
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9158415841584158
  - 0.9344660194174758
  - 0.9009433962264152
  - 0.8785714285714287
  - 0.939903846153846
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9158415841584159
  - 0.9344660194174758
  - 0.9009433962264151
  - 0.8785714285714286
  - 0.9399038461538461
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9158415841584159
  - 0.9344660194174758
  - 0.9009433962264151
  - 0.8785714285714286
  - 0.9399038461538461
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8913803145020385
  - 0.9324122479462285
  - 0.8817194731221075
  - 0.8556154537286613
  - 0.9336996336996335
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9924320063929203
  - 0.9874855518540365
  - 0.9831402952254193
  - 0.9816718154808679
  - 0.9973252266621172
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9941566030385665
  - 0.9910402097902098
  - 0.984751394327756
  - 0.9823939430356928
  - 0.9969989281886388
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9768976897689768
  - 0.9611650485436893
  - 0.9654088050314467
  - 0.9587301587301587
  - 0.9855769230769231
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9949155645976165
  - 0.991420556154361
  - 0.9873927172898175
  - 0.9775720631362327
  - 0.9994254785125877
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9250109753556206
  - 0.9453987537933753
  - 0.9442297276740915
  - 0.9320426284151359
  - 0.9332186065949206
  train_average_precision_macro_oob:
  - 0.875783599228259
  - 0.883430922356517
  - 0.8499446544276773
  - 0.8507778728465533
  - 0.8629606415476123
  train_average_precision_micro:
  - 0.9835701065407207
  - 0.9861238831763437
  - 0.9865739707223156
  - 0.9872839268440242
  - 0.9883538036704937
  train_average_precision_micro_oob:
  - 0.9740865018654621
  - 0.9779224900297483
  - 0.9782239070420508
  - 0.9763542679557999
  - 0.9817619654084484
  train_average_precision_samples:
  - 0.970494417862839
  - 0.9721554487179488
  - 0.9685230024213075
  - 0.9700080515297907
  - 0.9704819277108434
  train_average_precision_samples_oob:
  - 0.9663078149920256
  - 0.967147435897436
  - 0.9620661824051654
  - 0.9669887278582932
  - 0.9562248995983936
  train_average_precision_weighted:
  - 0.9776244108511186
  - 0.9842340814527901
  - 0.984588745083862
  - 0.979388854146372
  - 0.9818242446491068
  train_average_precision_weighted_oob:
  - 0.9629973484863
  - 0.9718508297729241
  - 0.9685666086123501
  - 0.9605144047672316
  - 0.9677673822265329
  train_f1_macro:
  - 0.9019138755980861
  - 0.9350961538461539
  - 0.9116222760290557
  - 0.9009661835748792
  - 0.9379518072289156
  train_f1_macro_oob:
  - 0.909688995215311
  - 0.9387019230769231
  - 0.9110169491525424
  - 0.8991545893719807
  - 0.9367469879518072
  train_f1_micro:
  - 0.9019138755980861
  - 0.9350961538461539
  - 0.9116222760290557
  - 0.9009661835748792
  - 0.9379518072289157
  train_f1_micro_oob:
  - 0.909688995215311
  - 0.9387019230769231
  - 0.9110169491525424
  - 0.8991545893719807
  - 0.9367469879518072
  train_f1_samples:
  - 0.9019138755980861
  - 0.9350961538461539
  - 0.9116222760290557
  - 0.9009661835748792
  - 0.9379518072289157
  train_f1_samples_oob:
  - 0.909688995215311
  - 0.9387019230769231
  - 0.9110169491525424
  - 0.8991545893719807
  - 0.9367469879518072
  train_f1_weighted:
  - 0.8816158838036574
  - 0.9245341472370112
  - 0.8903966415245528
  - 0.886652996443425
  - 0.9340692915201477
  train_f1_weighted_oob:
  - 0.8926456716180431
  - 0.930259776023499
  - 0.8893572793097242
  - 0.8881822078569029
  - 0.9327030610480199
  train_jaccard_macro:
  - 0.8236418954800317
  - 0.8788868291780856
  - 0.8415542319234847
  - 0.823022151337881
  - 0.8841393157816344
  train_jaccard_macro_oob:
  - 0.8361270823305282
  - 0.8852478558522011
  - 0.8411685354111622
  - 0.8215238639515768
  - 0.8820538812366097
  train_jaccard_micro:
  - 0.8213507625272332
  - 0.8781038374717833
  - 0.8375973303670745
  - 0.8197802197802198
  - 0.8831537152580828
  train_jaccard_micro_oob:
  - 0.834339001645639
  - 0.8844847112117781
  - 0.8365758754863813
  - 0.8167855183763028
  - 0.8810198300283286
  train_jaccard_samples:
  - 0.8446570972886761
  - 0.8971153846153845
  - 0.8602098466505246
  - 0.8425120772946859
  - 0.902008032128514
  train_jaccard_samples_oob:
  - 0.8580542264752791
  - 0.9038461538461539
  - 0.8592413236481032
  - 0.840257648953301
  - 0.9004016064257028
  train_jaccard_weighted:
  - 0.7890510372635304
  - 0.8600997084153198
  - 0.8061963506318994
  - 0.797828538767062
  - 0.8769977366715822
  train_jaccard_weighted_oob:
  - 0.806709655289172
  - 0.8701466621973271
  - 0.8053969715297566
  - 0.8017436178212998
  - 0.8746127685291789
  train_label_ranking_average_precision_score:
  - 0.9704944178628389
  - 0.9721554487179487
  - 0.9685230024213075
  - 0.9700080515297907
  - 0.9704819277108434
  train_label_ranking_average_precision_score_oob:
  - 0.9663078149920256
  - 0.9671474358974357
  - 0.9620661824051654
  - 0.9669887278582929
  - 0.9562248995983935
  train_matthews_corrcoef_macro:
  - 0.543434774335625
  - 0.6189691252836286
  - 0.5702569882291999
  - 0.5241609712602455
  - 0.6187400764560563
  train_matthews_corrcoef_macro_oob:
  - 0.5589715893876873
  - 0.6251612354316816
  - 0.5687808021970365
  - 0.5040913252823911
  - 0.6153909659650828
  train_matthews_corrcoef_micro:
  - 0.7333949503415785
  - 0.8256485050635517
  - 0.7619587225170383
  - 0.7319797233307616
  - 0.8336793437631042
  train_matthews_corrcoef_micro_oob:
  - 0.7543550575674995
  - 0.8350614541694975
  - 0.7598972743759733
  - 0.7259650189034067
  - 0.8301568566025944
  train_matthews_corrcoef_samples:
  - 0.6186061011224633
  - 0.7493558913643482
  - 0.6577885391444714
  - 0.6111111111111112
  - 0.7612305628976457
  train_matthews_corrcoef_samples_oob:
  - 0.654491268586578
  - 0.768000081422386
  - 0.6559580716768111
  - 0.6070853462157811
  - 0.7580177114920232
  train_matthews_corrcoef_weighted:
  - 0.7021366353914943
  - 0.7995965877714033
  - 0.7312878254202897
  - 0.6989162605277347
  - 0.8098980700149948
  train_matthews_corrcoef_weighted_oob:
  - 0.7239491382145435
  - 0.8101753335495206
  - 0.729148956808308
  - 0.686202176394417
  - 0.8061691904144447
  train_ndgc:
  - 0.9782930309685182
  - 0.9793710141248344
  - 0.976754646432746
  - 0.977869716582317
  - 0.9781164864480267
  train_ndgc_oob:
  - 0.9752295563121788
  - 0.9757092567314255
  - 0.9719582804226606
  - 0.9755159774292401
  - 0.9675172749057009
  train_neg_coverage_error:
  - -1.076555023923445
  - -1.0697115384615385
  - -1.0847457627118644
  - -1.077294685990338
  - -1.074698795180723
  train_neg_coverage_error_oob:
  - -1.0933014354066986
  - -1.09375
  - -1.1065375302663438
  - -1.1014492753623188
  - -1.110843373493976
  train_neg_hamming_loss_macro:
  - -0.09808612440191387
  - -0.06490384615384615
  - -0.08837772397094432
  - -0.09903381642512077
  - -0.06204819277108434
  train_neg_hamming_loss_macro_oob:
  - -0.090311004784689
  - -0.06129807692307693
  - -0.08898305084745763
  - -0.10084541062801933
  - -0.06325301204819278
  train_neg_hamming_loss_micro:
  - -0.09808612440191387
  - -0.06490384615384616
  - -0.08837772397094432
  - -0.09903381642512077
  - -0.06204819277108434
  train_neg_hamming_loss_micro_oob:
  - -0.090311004784689
  - -0.06129807692307692
  - -0.08898305084745763
  - -0.10084541062801933
  - -0.06325301204819277
  train_neg_hamming_loss_samples:
  - -0.09808612440191387
  - -0.06490384615384616
  - -0.08837772397094432
  - -0.09903381642512077
  - -0.06204819277108434
  train_neg_hamming_loss_samples_oob:
  - -0.090311004784689
  - -0.06129807692307692
  - -0.08898305084745763
  - -0.10084541062801933
  - -0.06325301204819277
  train_neg_hamming_loss_weighted:
  - -0.11838411619634272
  - -0.07546585276298881
  - -0.10960335847544725
  - -0.11334700355657502
  - -0.06593070847985243
  train_neg_hamming_loss_weighted_oob:
  - -0.10735432838195681
  - -0.06974022397650083
  - -0.11064272069027586
  - -0.11181779214309712
  - -0.06729693895198018
  train_neg_label_ranking_loss:
  - -0.022727272727272728
  - -0.020833333333333332
  - -0.024818401937046
  - -0.023148148148148147
  - -0.022489959839357428
  train_neg_label_ranking_loss_oob:
  - -0.028110047846889953
  - -0.028445512820512817
  - -0.031880548829701365
  - -0.030998389694041863
  - -0.03453815261044176
  train_precision_macro:
  - 0.9019138755980861
  - 0.9350961538461539
  - 0.9116222760290557
  - 0.9009661835748792
  - 0.9379518072289156
  train_precision_macro_oob:
  - 0.909688995215311
  - 0.9387019230769231
  - 0.9110169491525424
  - 0.8991545893719807
  - 0.9367469879518072
  train_precision_micro:
  - 0.9019138755980861
  - 0.9350961538461539
  - 0.9116222760290557
  - 0.9009661835748792
  - 0.9379518072289157
  train_precision_micro_oob:
  - 0.909688995215311
  - 0.9387019230769231
  - 0.9110169491525424
  - 0.8991545893719807
  - 0.9367469879518072
  train_precision_samples:
  - 0.9019138755980861
  - 0.9350961538461539
  - 0.9116222760290557
  - 0.9009661835748792
  - 0.9379518072289157
  train_precision_samples_oob:
  - 0.909688995215311
  - 0.9387019230769231
  - 0.9110169491525424
  - 0.8991545893719807
  - 0.9367469879518072
  train_precision_weighted:
  - 0.8816158838036574
  - 0.9245341472370112
  - 0.8903966415245528
  - 0.886652996443425
  - 0.9340692915201477
  train_precision_weighted_oob:
  - 0.8926456716180431
  - 0.930259776023499
  - 0.8893572793097242
  - 0.8881822078569029
  - 0.9327030610480199
  train_recall_macro:
  - 0.9019138755980861
  - 0.9350961538461539
  - 0.9116222760290557
  - 0.9009661835748792
  - 0.9379518072289156
  train_recall_macro_oob:
  - 0.909688995215311
  - 0.9387019230769231
  - 0.9110169491525424
  - 0.8991545893719807
  - 0.9367469879518072
  train_recall_micro:
  - 0.9019138755980861
  - 0.9350961538461539
  - 0.9116222760290557
  - 0.9009661835748792
  - 0.9379518072289157
  train_recall_micro_oob:
  - 0.909688995215311
  - 0.9387019230769231
  - 0.9110169491525424
  - 0.8991545893719807
  - 0.9367469879518072
  train_recall_samples:
  - 0.9019138755980861
  - 0.9350961538461539
  - 0.9116222760290557
  - 0.9009661835748792
  - 0.9379518072289157
  train_recall_samples_oob:
  - 0.909688995215311
  - 0.9387019230769231
  - 0.9110169491525424
  - 0.8991545893719807
  - 0.9367469879518072
  train_recall_weighted:
  - 0.8816158838036574
  - 0.9245341472370112
  - 0.8903966415245528
  - 0.886652996443425
  - 0.9340692915201477
  train_recall_weighted_oob:
  - 0.8926456716180431
  - 0.930259776023499
  - 0.8893572793097242
  - 0.8881822078569029
  - 0.9327030610480199
  train_roc_auc_macro:
  - 0.9917143111253597
  - 0.9950639744495171
  - 0.9942726664117774
  - 0.9939202873838365
  - 0.9944292042135527
  train_roc_auc_macro_oob:
  - 0.9873221744565236
  - 0.9860968398037606
  - 0.9863179485575049
  - 0.9832387093097162
  - 0.9895464299137475
  train_roc_auc_micro:
  - 0.993732330050449
  - 0.9948950935004937
  - 0.9946776182293031
  - 0.9955251295331773
  - 0.9956814522031913
  train_roc_auc_micro_oob:
  - 0.9896102120678754
  - 0.9891403322119025
  - 0.9902911678754163
  - 0.9894321830671058
  - 0.9922142862646295
  train_roc_auc_samples:
  - 0.9772727272727273
  - 0.9791666666666667
  - 0.975181598062954
  - 0.9768518518518517
  - 0.9775100401606425
  train_roc_auc_samples_oob:
  - 0.97188995215311
  - 0.9715544871794871
  - 0.9681194511702986
  - 0.969001610305958
  - 0.9654618473895581
  train_roc_auc_weighted:
  - 0.9937578516266357
  - 0.9953925138420057
  - 0.9955500985304726
  - 0.9953856568036341
  - 0.9955353415065943
  train_roc_auc_weighted_oob:
  - 0.9884861162792449
  - 0.9909355629290894
  - 0.9927546034276785
  - 0.991156307887355
  - 0.9920828111994379
start: 2023-12-21 17:47:02.458083
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
