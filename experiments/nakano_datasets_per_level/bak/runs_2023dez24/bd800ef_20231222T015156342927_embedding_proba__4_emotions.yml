active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjPzAzMzMzMwvAoJmZmZmZ+T9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ2b/AmZmZmZn5PwCZmZmZmdm/cGZmZmZmFkCQmZmZmZkZwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 01:52:29.607251
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__4
  params: {}
hash: bd800ef241048a444cf029df2e3aedff02e0d7e547f24da3ace65f6f6f25f2b7
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/bd800ef_20231222T015156342927_embedding_proba__4_emotions.yml
results:
  fit_time:
  - 15.56941294670105
  - 15.285439252853394
  - 16.24133539199829
  - 16.354055643081665
  - 15.771276712417603
  score_time:
  - 4.587250471115112
  - 4.639063596725464
  - 4.901402950286865
  - 4.814075708389282
  - 4.758924245834351
  test_average_precision_macro:
  - 0.7801235860144476
  - 0.7322089660668699
  - 0.750345504547846
  - 0.7535724890819858
  - 0.7123068539604636
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.804783206124572
  - 0.7572928533608546
  - 0.7422410933898399
  - 0.7695353964290946
  - 0.7212631469207453
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8443043884220355
  - 0.8052706552706553
  - 0.81374883286648
  - 0.8144296951819074
  - 0.7806666666666666
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7822953515136811
  - 0.7376116526466717
  - 0.7482766711727589
  - 0.7661209392675716
  - 0.7109901721810096
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8333333333333331
  - 0.8219373219373219
  - 0.8193277310924368
  - 0.8141592920353983
  - 0.8119999999999999
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8333333333333334
  - 0.8219373219373219
  - 0.819327731092437
  - 0.8141592920353983
  - 0.812
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8333333333333334
  - 0.8219373219373218
  - 0.8193277310924371
  - 0.814159292035398
  - 0.812
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.829093799682035
  - 0.8203574203574203
  - 0.8132503001200481
  - 0.8166532582461785
  - 0.8056936936936938
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7172590887563368
  - 0.7006243388634422
  - 0.696475234596405
  - 0.6882341444862425
  - 0.6895183932683494
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7142857142857143
  - 0.6977025392986699
  - 0.693950177935943
  - 0.6865671641791045
  - 0.6835016835016835
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7469387755102039
  - 0.7277981277981278
  - 0.7288515406162462
  - 0.7227981458069953
  - 0.7118095238095237
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7107790113157539
  - 0.6980840083111702
  - 0.6875222324661368
  - 0.6916929303357182
  - 0.6798110704776807
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8443043884220355
  - 0.8052706552706554
  - 0.8137488328664797
  - 0.8144296951819077
  - 0.7806666666666664
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5976624303749215
  - 0.5661006834179944
  - 0.5680370384181713
  - 0.5443296138290237
  - 0.5404893373355705
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.606940270963646
  - 0.5791705984625147
  - 0.5693184940759218
  - 0.5656721010387116
  - 0.548322948707182
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.615953464271524
  - 0.5758984710953802
  - 0.5643173615692513
  - 0.5713235690604327
  - 0.5445599988968639
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5967415109335845
  - 0.5712539292802148
  - 0.5642399072336071
  - 0.5593272827945744
  - 0.535448854872856
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.895253721669953
  - 0.8683012013607285
  - 0.8729439193419986
  - 0.8716459841728559
  - 0.8436238617862366
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.6050420168067228
  - -2.7606837606837606
  - -2.7142857142857144
  - -2.7964601769911503
  - -2.64
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.16666666666666666
  - -0.17806267806267806
  - -0.18067226890756302
  - -0.18584070796460175
  - -0.18799999999999997
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.16666666666666666
  - -0.17806267806267806
  - -0.18067226890756302
  - -0.18584070796460178
  - -0.188
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.16666666666666666
  - -0.1780626780626781
  - -0.180672268907563
  - -0.18584070796460173
  - -0.188
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.17090620031796505
  - -0.17964257964257965
  - -0.18674969987995202
  - -0.18334674175382135
  - -0.19430630630630633
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.13291316526610644
  - -0.1557929724596391
  - -0.1495564892623716
  - -0.15388397246804328
  - -0.1640666666666667
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8333333333333331
  - 0.8219373219373219
  - 0.8193277310924368
  - 0.8141592920353983
  - 0.8119999999999999
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8333333333333334
  - 0.8219373219373219
  - 0.819327731092437
  - 0.8141592920353983
  - 0.812
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8333333333333334
  - 0.8219373219373218
  - 0.8193277310924371
  - 0.814159292035398
  - 0.812
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.829093799682035
  - 0.8203574203574203
  - 0.8132503001200481
  - 0.8166532582461785
  - 0.8056936936936938
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8333333333333331
  - 0.8219373219373219
  - 0.8193277310924368
  - 0.8141592920353983
  - 0.8119999999999999
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8333333333333334
  - 0.8219373219373219
  - 0.819327731092437
  - 0.8141592920353983
  - 0.812
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8333333333333334
  - 0.8219373219373218
  - 0.8193277310924371
  - 0.814159292035398
  - 0.812
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.829093799682035
  - 0.8203574203574203
  - 0.8132503001200481
  - 0.8166532582461785
  - 0.8056936936936938
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.875608049227973
  - 0.8552786821103244
  - 0.8623680494262179
  - 0.8623846247368113
  - 0.8515335057010831
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8909305647110526
  - 0.8704451150509241
  - 0.8681122448979591
  - 0.8770742358078603
  - 0.8685503685503685
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8670868347338936
  - 0.8442070275403608
  - 0.8504435107376285
  - 0.8461160275319568
  - 0.8359333333333334
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8752768351487291
  - 0.8564305939049525
  - 0.8604110475160864
  - 0.8668622103205437
  - 0.8486311145438818
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9875869046690916
  - 0.987782446679682
  - 0.986695627459007
  - 0.9886325829521995
  - 0.9851458957907199
  train_average_precision_macro_oob:
  - 0.9334686341196728
  - 0.9371228147429099
  - 0.92594211485412
  - 0.9409939886777307
  - 0.9312076531120842
  train_average_precision_micro:
  - 0.9870074690940995
  - 0.9868514936982526
  - 0.9856720256565867
  - 0.9878225877576922
  - 0.9854528875184745
  train_average_precision_micro_oob:
  - 0.9408962182835485
  - 0.9430839255340205
  - 0.9328848601717656
  - 0.9457457983775482
  - 0.9376745252105374
  train_average_precision_samples:
  - 0.9824894514767932
  - 0.9811624649859944
  - 0.9853492733239568
  - 0.9866319444444446
  - 0.9807098765432098
  train_average_precision_samples_oob:
  - 0.9443858415377402
  - 0.9371615312791783
  - 0.9306844819503047
  - 0.9428587962962963
  - 0.9373100664767331
  train_average_precision_weighted:
  - 0.9881262785622171
  - 0.988259097944729
  - 0.9873708019976589
  - 0.989109337439425
  - 0.9860003389144474
  train_average_precision_weighted_oob:
  - 0.9372107988249264
  - 0.939970545885832
  - 0.92992672482076
  - 0.943636148420551
  - 0.934700075844711
  train_f1_macro:
  - 0.960267229254571
  - 0.9583333333333334
  - 0.9574542897327708
  - 0.9611111111111111
  - 0.9576210826210826
  train_f1_macro_oob:
  - 0.9145569620253166
  - 0.9121148459383753
  - 0.9092827004219409
  - 0.9184027777777777
  - 0.9205840455840457
  train_f1_micro:
  - 0.960267229254571
  - 0.9583333333333334
  - 0.9574542897327707
  - 0.9611111111111111
  - 0.9576210826210826
  train_f1_micro_oob:
  - 0.9145569620253164
  - 0.9121148459383753
  - 0.9092827004219409
  - 0.9184027777777778
  - 0.9205840455840456
  train_f1_samples:
  - 0.9602672292545711
  - 0.9583333333333334
  - 0.9574542897327708
  - 0.9611111111111111
  - 0.9576210826210827
  train_f1_samples_oob:
  - 0.9145569620253164
  - 0.9121148459383752
  - 0.9092827004219409
  - 0.9184027777777779
  - 0.9205840455840457
  train_f1_weighted:
  - 0.960153727462354
  - 0.9579122189416307
  - 0.9574813372281727
  - 0.9606113926426427
  - 0.9582875113349153
  train_f1_weighted_oob:
  - 0.9143736129763502
  - 0.9122355023090317
  - 0.9097361437272086
  - 0.9180766704204204
  - 0.9212874534544963
  train_jaccard_macro:
  - 0.9237290360064292
  - 0.920199503593825
  - 0.9186344610318565
  - 0.9252987885295298
  - 0.9189317236522668
  train_jaccard_macro_oob:
  - 0.843728666212836
  - 0.8397999302473688
  - 0.8348758734409486
  - 0.8502011873277698
  - 0.8537511671680496
  train_jaccard_micro:
  - 0.9235711870138654
  - 0.92
  - 0.918381112984823
  - 0.9251336898395722
  - 0.9186880765288692
  train_jaccard_micro_oob:
  - 0.8425655976676385
  - 0.8384293530737046
  - 0.8336557059961315
  - 0.8491171749598716
  - 0.8528538436159683
  train_jaccard_samples:
  - 0.9332429174201325
  - 0.9307222889155662
  - 0.9298272051436607
  - 0.934672619047619
  - 0.9295380545380545
  train_jaccard_samples_oob:
  - 0.8630701225637935
  - 0.859143657462985
  - 0.8546513964235483
  - 0.8686507936507937
  - 0.871947496947497
  train_jaccard_weighted:
  - 0.9235091027927343
  - 0.9194014091890214
  - 0.9186596416842806
  - 0.9243613385641144
  - 0.9201492530884389
  train_jaccard_weighted_oob:
  - 0.8433156165857472
  - 0.8398732984538719
  - 0.8355319028561986
  - 0.8495436793410465
  - 0.8549035765874716
  train_label_ranking_average_precision_score:
  - 0.9824894514767932
  - 0.9811624649859945
  - 0.9853492733239568
  - 0.9866319444444444
  - 0.9807098765432095
  train_label_ranking_average_precision_score_oob:
  - 0.9443858415377397
  - 0.937161531279178
  - 0.9306844819503043
  - 0.9428587962962959
  - 0.9373100664767327
  train_matthews_corrcoef_macro:
  - 0.9044487144731975
  - 0.9001899778628593
  - 0.8970706215544287
  - 0.906348650611366
  - 0.8980929799425622
  train_matthews_corrcoef_macro_oob:
  - 0.7927618551736453
  - 0.7869816791620622
  - 0.7777977006463944
  - 0.8008359894692213
  - 0.8087535366197183
  train_matthews_corrcoef_micro:
  - 0.9067057747813965
  - 0.9020137543110647
  - 0.899910067621375
  - 0.9081658759148661
  - 0.9011682030801552
  train_matthews_corrcoef_micro_oob:
  - 0.7984159898581322
  - 0.7921144651060648
  - 0.784848896280038
  - 0.8060153431106825
  - 0.8142962225848636
  train_matthews_corrcoef_samples:
  - 0.9033219975119628
  - 0.8974842507877586
  - 0.8959969001560706
  - 0.9109923204030373
  - 0.9001838760225285
  train_matthews_corrcoef_samples_oob:
  - 0.7973308977584117
  - 0.7871288505889161
  - 0.7816582398366978
  - 0.8041105370425068
  - 0.8164691694742766
  train_matthews_corrcoef_weighted:
  - 0.9058241090536925
  - 0.9008745919653246
  - 0.8990428533369796
  - 0.9068398471237463
  - 0.901113596167574
  train_matthews_corrcoef_weighted_oob:
  - 0.7957848106233966
  - 0.7906481840745111
  - 0.7829620817880389
  - 0.8033842282342474
  - 0.813369072585995
  train_ndgc:
  - 0.9882012350737227
  - 0.988145174181407
  - 0.9902208190250714
  - 0.9915573184738868
  - 0.9874965370777228
  train_ndgc_oob:
  - 0.9626456474925117
  - 0.9573541673829506
  - 0.9522086402988661
  - 0.9624344791222812
  - 0.9582407277068308
  train_neg_coverage_error:
  - -1.9367088607594938
  - -1.953781512605042
  - -1.919831223628692
  - -1.9083333333333334
  - -1.9743589743589745
  train_neg_coverage_error_oob:
  - -2.1054852320675104
  - -2.1281512605042017
  - -2.1371308016877637
  - -2.1041666666666665
  - -2.175213675213675
  train_neg_hamming_loss_macro:
  - -0.039732770745428976
  - -0.041666666666666664
  - -0.04254571026722925
  - -0.03888888888888889
  - -0.04237891737891738
  train_neg_hamming_loss_macro_oob:
  - -0.08544303797468354
  - -0.08788515406162466
  - -0.09071729957805907
  - -0.08159722222222222
  - -0.0794159544159544
  train_neg_hamming_loss_micro:
  - -0.039732770745428976
  - -0.041666666666666664
  - -0.04254571026722925
  - -0.03888888888888889
  - -0.04237891737891738
  train_neg_hamming_loss_micro_oob:
  - -0.08544303797468354
  - -0.08788515406162464
  - -0.09071729957805907
  - -0.08159722222222222
  - -0.07941595441595442
  train_neg_hamming_loss_samples:
  - -0.03973277074542897
  - -0.041666666666666664
  - -0.042545710267229246
  - -0.03888888888888888
  - -0.04237891737891738
  train_neg_hamming_loss_samples_oob:
  - -0.08544303797468354
  - -0.08788515406162464
  - -0.09071729957805907
  - -0.08159722222222222
  - -0.0794159544159544
  train_neg_hamming_loss_weighted:
  - -0.03984627253764608
  - -0.04208778105836929
  - -0.04251866277182733
  - -0.03938860735735736
  - -0.041712488665084604
  train_neg_hamming_loss_weighted_oob:
  - -0.08562638702364965
  - -0.08776449769096827
  - -0.09026385627279152
  - -0.08192332957957958
  - -0.07871254654550365
  train_neg_label_ranking_loss:
  - -0.010958743553680263
  - -0.013223622782446312
  - -0.009136193155180498
  - -0.008611111111111113
  - -0.012939221272554605
  train_neg_label_ranking_loss_oob:
  - -0.03870721987810595
  - -0.04385504201680672
  - -0.04722222222222222
  - -0.03951967592592593
  - -0.04558998100664768
  train_precision_macro:
  - 0.960267229254571
  - 0.9583333333333334
  - 0.9574542897327708
  - 0.9611111111111111
  - 0.9576210826210826
  train_precision_macro_oob:
  - 0.9145569620253166
  - 0.9121148459383753
  - 0.9092827004219409
  - 0.9184027777777777
  - 0.9205840455840457
  train_precision_micro:
  - 0.960267229254571
  - 0.9583333333333334
  - 0.9574542897327707
  - 0.9611111111111111
  - 0.9576210826210826
  train_precision_micro_oob:
  - 0.9145569620253164
  - 0.9121148459383753
  - 0.9092827004219409
  - 0.9184027777777778
  - 0.9205840455840456
  train_precision_samples:
  - 0.9602672292545711
  - 0.9583333333333334
  - 0.9574542897327708
  - 0.9611111111111111
  - 0.9576210826210827
  train_precision_samples_oob:
  - 0.9145569620253164
  - 0.9121148459383752
  - 0.9092827004219409
  - 0.9184027777777779
  - 0.9205840455840457
  train_precision_weighted:
  - 0.960153727462354
  - 0.9579122189416307
  - 0.9574813372281727
  - 0.9606113926426427
  - 0.9582875113349153
  train_precision_weighted_oob:
  - 0.9143736129763502
  - 0.9122355023090317
  - 0.9097361437272086
  - 0.9180766704204204
  - 0.9212874534544963
  train_recall_macro:
  - 0.960267229254571
  - 0.9583333333333334
  - 0.9574542897327708
  - 0.9611111111111111
  - 0.9576210826210826
  train_recall_macro_oob:
  - 0.9145569620253166
  - 0.9121148459383753
  - 0.9092827004219409
  - 0.9184027777777777
  - 0.9205840455840457
  train_recall_micro:
  - 0.960267229254571
  - 0.9583333333333334
  - 0.9574542897327707
  - 0.9611111111111111
  - 0.9576210826210826
  train_recall_micro_oob:
  - 0.9145569620253164
  - 0.9121148459383753
  - 0.9092827004219409
  - 0.9184027777777778
  - 0.9205840455840456
  train_recall_samples:
  - 0.9602672292545711
  - 0.9583333333333334
  - 0.9574542897327708
  - 0.9611111111111111
  - 0.9576210826210827
  train_recall_samples_oob:
  - 0.9145569620253164
  - 0.9121148459383752
  - 0.9092827004219409
  - 0.9184027777777779
  - 0.9205840455840457
  train_recall_weighted:
  - 0.960153727462354
  - 0.9579122189416307
  - 0.9574813372281727
  - 0.9606113926426427
  - 0.9582875113349153
  train_recall_weighted_oob:
  - 0.9143736129763502
  - 0.9122355023090317
  - 0.9097361437272086
  - 0.9180766704204204
  - 0.9212874534544963
  train_roc_auc_macro:
  - 0.9939572916477669
  - 0.9940214273668615
  - 0.9937730013479614
  - 0.9946271077259156
  - 0.9928972055121132
  train_roc_auc_macro_oob:
  - 0.9678386665530659
  - 0.968990310024668
  - 0.965408143339158
  - 0.970131748739909
  - 0.9652861870910779
  train_roc_auc_micro:
  - 0.9934879651000583
  - 0.9933502481139677
  - 0.9929183211746239
  - 0.9939018461232316
  - 0.9925426862067589
  train_roc_auc_micro_oob:
  - 0.969050973375421
  - 0.9696283554896359
  - 0.9667986425339367
  - 0.9709869884945185
  - 0.965972005271033
  train_roc_auc_samples:
  - 0.9890412564463197
  - 0.9867763772175537
  - 0.9908638068448196
  - 0.9913888888888889
  - 0.9870607787274455
  train_roc_auc_samples_oob:
  - 0.961292780121894
  - 0.9561449579831933
  - 0.9527777777777778
  - 0.9604803240740741
  - 0.9544100189933523
  train_roc_auc_weighted:
  - 0.9939228532812829
  - 0.9940146578965782
  - 0.9938033936052713
  - 0.9946290128099712
  - 0.9930455103515377
  train_roc_auc_weighted_oob:
  - 0.968632820928161
  - 0.9693578896271207
  - 0.9663143708675294
  - 0.9707126930461935
  - 0.9662206388277406
start: 2023-12-22 01:51:56.342927
wrapper: null
