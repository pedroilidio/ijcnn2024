active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzA0AAMzMzMzPjv0AzMzMzMwNAgJmZmZmZ+b/AzMzMzMwEwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:26:11.269249
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 0
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__0
  params: {}
hash: 8361c5f48b7181a0fc57a673e93818664285d7d0ae647eaadb33b8a652070354
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/8361c5f_20231221T102606852700_embedding_weak__0_VirusPseAAC.yml
results:
  fit_time:
  - 1.2072949409484863
  - 1.2153208255767822
  - 1.1861205101013184
  - 1.1669886112213135
  - 1.1402173042297363
  score_time:
  - 0.5840091705322266
  - 0.5764329433441162
  - 0.590930700302124
  - 0.6740710735321045
  - 0.631765604019165
  test_average_precision_macro:
  - 0.4723035276846188
  - 0.4402716576890162
  - 0.43666640721765165
  - 0.31410546327787225
  - 0.42785029433707517
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.41388488332592777
  - 0.4357271717549671
  - 0.49019880534227156
  - 0.4813880235204047
  - 0.44586673700451296
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6641025641025641
  - 0.6865079365079365
  - 0.6636752136752136
  - 0.7118217054263566
  - 0.6806186868686868
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.4237700096331744
  - 0.4536475493838174
  - 0.49266170419297906
  - 0.4752310895450024
  - 0.46076309626761225
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.782051282051282
  - 0.7976190476190476
  - 0.7991452991452991
  - 0.7984496124031009
  - 0.8068181818181818
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.782051282051282
  - 0.7976190476190477
  - 0.7991452991452992
  - 0.7984496124031008
  - 0.8068181818181818
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7820512820512819
  - 0.7976190476190477
  - 0.799145299145299
  - 0.798449612403101
  - 0.806818181818182
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6458333333333334
  - 0.6904761904761905
  - 0.6928205128205128
  - 0.6753305973552212
  - 0.7019230769230768
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6746804025567794
  - 0.6871680272564576
  - 0.6877175995156709
  - 0.6922986756296837
  - 0.698925193593363
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6421052631578947
  - 0.6633663366336634
  - 0.6654804270462633
  - 0.6645161290322581
  - 0.6761904761904762
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6495726495726497
  - 0.6683673469387756
  - 0.6733821733821735
  - 0.669435215946844
  - 0.6861471861471863
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.500406721746226
  - 0.5457579829680919
  - 0.5476230484080739
  - 0.5289628553327029
  - 0.5590379681150845
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6641025641025641
  - 0.6865079365079365
  - 0.6636752136752136
  - 0.7118217054263565
  - 0.6806186868686868
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - -0.056085842681642274
  - 0.007231015260621872
  - 0.07483782016005137
  - -0.02079514203937863
  - 0.03888830925029452
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - -0.057892030733555755
  - 0.06625568373916034
  - 0.21861429000000843
  - -0.030962309935683396
  - 0.1408014560071353
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - -0.015384615384615387
  - 0.010296560286516092
  - 0.05807464266839364
  - -0.004651162790697674
  - 0.05909090909090909
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - -0.11514253098545885
  - 0.014462030521243743
  - 0.1526691531265048
  - -0.04159028407875726
  - 0.07547938172929508
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7490484443935965
  - 0.7675161660140701
  - 0.7513550318147362
  - 0.783936648600609
  - 0.7648511523066343
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.3076923076923075
  - -2.2857142857142856
  - -2.3846153846153846
  - -2.186046511627907
  - -2.2045454545454546
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21794871794871798
  - -0.2023809523809524
  - -0.2008547008547009
  - -0.20155038759689922
  - -0.19318181818181815
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.21794871794871795
  - -0.20238095238095238
  - -0.20085470085470086
  - -0.20155038759689922
  - -0.19318181818181818
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.21794871794871795
  - -0.20238095238095238
  - -0.2008547008547009
  - -0.20155038759689917
  - -0.19318181818181815
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3541666666666667
  - -0.30952380952380953
  - -0.3071794871794872
  - -0.32466940264477884
  - -0.298076923076923
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.21566951566951567
  - -0.21428571428571425
  - -0.2153846153846154
  - -0.20406976744186042
  - -0.20277777777777775
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.782051282051282
  - 0.7976190476190476
  - 0.7991452991452991
  - 0.7984496124031009
  - 0.8068181818181818
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.782051282051282
  - 0.7976190476190477
  - 0.7991452991452992
  - 0.7984496124031008
  - 0.8068181818181818
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7820512820512819
  - 0.7976190476190477
  - 0.799145299145299
  - 0.798449612403101
  - 0.806818181818182
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6458333333333334
  - 0.6904761904761905
  - 0.6928205128205128
  - 0.6753305973552212
  - 0.7019230769230768
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.782051282051282
  - 0.7976190476190476
  - 0.7991452991452991
  - 0.7984496124031009
  - 0.8068181818181818
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.782051282051282
  - 0.7976190476190477
  - 0.7991452991452992
  - 0.7984496124031008
  - 0.8068181818181818
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7820512820512819
  - 0.7976190476190477
  - 0.799145299145299
  - 0.798449612403101
  - 0.806818181818182
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6458333333333334
  - 0.6904761904761905
  - 0.6928205128205128
  - 0.6753305973552212
  - 0.7019230769230768
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6793554224500516
  - 0.6460822750152693
  - 0.6546097472568062
  - 0.6038001867413633
  - 0.6674608903775571
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7960349462365591
  - 0.7798263584040581
  - 0.7944565217391304
  - 0.800037889551956
  - 0.7900036284470247
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7843304843304844
  - 0.7857142857142856
  - 0.7846153846153846
  - 0.7959302325581394
  - 0.7972222222222222
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.577380560260995
  - 0.6121214801710158
  - 0.6097500877500879
  - 0.6782072829131653
  - 0.6247587084125545
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9190753071780892
  - 0.9269648989688979
  - 0.9708753645842462
  - 0.9142851229471156
  - 0.935268380604039
  train_average_precision_macro_oob:
  - 0.291271480776123
  - 0.2719191297999115
  - 0.28669823187185217
  - 0.2903966020546252
  - 0.29156122163204606
  train_average_precision_micro:
  - 0.8832068857169485
  - 0.8701907971961034
  - 0.8753655799928602
  - 0.8835265516910193
  - 0.8727712580039046
  train_average_precision_micro_oob:
  - 0.4291039879060094
  - 0.38626742875663034
  - 0.39697066374070594
  - 0.3790077316839572
  - 0.39432902200009573
  train_average_precision_samples:
  - 0.884920634920635
  - 0.8722222222222221
  - 0.8720238095238095
  - 0.8734756097560976
  - 0.8583844580777096
  train_average_precision_samples_oob:
  - 0.6891203703703703
  - 0.636094276094276
  - 0.6496362433862434
  - 0.6402269647696477
  - 0.6667177914110429
  train_average_precision_weighted:
  - 0.9703711729657593
  - 0.9757570301718753
  - 0.9922288389914758
  - 0.9686716639601209
  - 0.9846149921797889
  train_average_precision_weighted_oob:
  - 0.3905925967579238
  - 0.34598518594365313
  - 0.3569373136263534
  - 0.3413929610378537
  - 0.3513377879797083
  train_f1_macro:
  - 0.9226190476190478
  - 0.9191919191919192
  - 0.9136904761904763
  - 0.9217479674796748
  - 0.9222903885480572
  train_f1_macro_oob:
  - 0.7996031746031748
  - 0.7868686868686868
  - 0.7956349206349206
  - 0.7926829268292682
  - 0.7924335378323107
  train_f1_micro:
  - 0.9226190476190477
  - 0.9191919191919192
  - 0.9136904761904762
  - 0.9217479674796748
  - 0.9222903885480572
  train_f1_micro_oob:
  - 0.7996031746031746
  - 0.7868686868686868
  - 0.7956349206349206
  - 0.7926829268292683
  - 0.7924335378323109
  train_f1_samples:
  - 0.9226190476190477
  - 0.9191919191919191
  - 0.9136904761904762
  - 0.9217479674796747
  - 0.9222903885480573
  train_f1_samples_oob:
  - 0.7996031746031745
  - 0.7868686868686867
  - 0.7956349206349206
  - 0.7926829268292683
  - 0.7924335378323107
  train_f1_weighted:
  - 0.9382586367880487
  - 0.9302276496306346
  - 0.9183168316831684
  - 0.9378412813978886
  - 0.9376073619631902
  train_f1_weighted_oob:
  - 0.6884920634920636
  - 0.6591587516960652
  - 0.677540075436115
  - 0.6755854871981555
  - 0.6724233128834356
  train_jaccard_macro:
  - 0.8595745613187181
  - 0.8532534898999643
  - 0.843725148774919
  - 0.8580410975759812
  - 0.859254027860445
  train_jaccard_macro_oob:
  - 0.6904599315250494
  - 0.6786456291778817
  - 0.6873675006346064
  - 0.6831054695461475
  - 0.6834562854474041
  train_jaccard_micro:
  - 0.856353591160221
  - 0.8504672897196262
  - 0.8410958904109589
  - 0.8548539114043355
  - 0.855787476280835
  train_jaccard_micro_oob:
  - 0.6661157024793388
  - 0.6486261448792673
  - 0.6606260296540363
  - 0.6565656565656566
  - 0.6562235393734124
  train_jaccard_samples:
  - 0.8730158730158729
  - 0.866089466089466
  - 0.8562925170068025
  - 0.869773519163763
  - 0.8707274320771254
  train_jaccard_samples_oob:
  - 0.6740362811791384
  - 0.6567099567099568
  - 0.669359410430839
  - 0.6649245063879211
  - 0.6649138182880515
  train_jaccard_weighted:
  - 0.8868216507706181
  - 0.8720076179829567
  - 0.8512894053017191
  - 0.8860893024725027
  - 0.8859712557097481
  train_jaccard_weighted_oob:
  - 0.5434504792930398
  - 0.5143413264228642
  - 0.5323131580824232
  - 0.5306205295580454
  - 0.5269108631742925
  train_label_ranking_average_precision_score:
  - 0.884920634920635
  - 0.8722222222222221
  - 0.8720238095238095
  - 0.8734756097560976
  - 0.8583844580777092
  train_label_ranking_average_precision_score_oob:
  - 0.6891203703703702
  - 0.6360942760942763
  - 0.6496362433862435
  - 0.6402269647696478
  - 0.666717791411043
  train_matthews_corrcoef_macro:
  - 0.30926186434179864
  - 0.30099446717382755
  - 0.28976014008217227
  - 0.30878606946652765
  - 0.3087371969898232
  train_matthews_corrcoef_macro_oob:
  - 0.02372441647150086
  - -0.027677397865638793
  - -0.00104977470162489
  - -0.012366544065010676
  - 0.00195369673659132
  train_matthews_corrcoef_micro:
  - 0.7503500583621178
  - 0.7393043640846316
  - 0.7168281088721482
  - 0.749453115432756
  - 0.7515479731673135
  train_matthews_corrcoef_micro_oob:
  - 0.1230998475094076
  - 0.016766621224260782
  - 0.0709449188529844
  - 0.04202981002119144
  - 0.08229552151576697
  train_matthews_corrcoef_samples:
  - 0.6485536360260146
  - 0.6195089849171919
  - 0.5996952657111392
  - 0.6259827940759504
  - 0.6270795376254964
  train_matthews_corrcoef_samples_oob:
  - 0.04382308131052607
  - 0.007666127661014253
  - 0.031145568643057592
  - 0.015144952646238791
  - 0.03187666805859185
  train_matthews_corrcoef_weighted:
  - 0.6277388681418794
  - 0.6158299283366679
  - 0.5902629788614195
  - 0.6270325558614838
  - 0.6301895309682777
  train_matthews_corrcoef_weighted_oob:
  - 0.04815025897819408
  - -0.057063508249893445
  - -0.002512006956849271
  - -0.025890650420065345
  - 0.0038063020845434986
  train_ndgc:
  - 0.9168615600897774
  - 0.9065609871820739
  - 0.9069795156983945
  - 0.9080328432127284
  - 0.8961809520421528
  train_ndgc_oob:
  - 0.7690863930916395
  - 0.7298803125705735
  - 0.7395378096409964
  - 0.7331623781892482
  - 0.7516672101057783
  train_neg_coverage_error:
  - -1.6011904761904763
  - -1.606060606060606
  - -1.5952380952380953
  - -1.6341463414634145
  - -1.656441717791411
  train_neg_coverage_error_oob:
  - -2.2916666666666665
  - -2.393939393939394
  - -2.3511904761904763
  - -2.3780487804878048
  - -2.3251533742331287
  train_neg_hamming_loss_macro:
  - -0.07738095238095238
  - -0.08080808080808081
  - -0.08630952380952382
  - -0.07825203252032521
  - -0.07770961145194274
  train_neg_hamming_loss_macro_oob:
  - -0.20039682539682543
  - -0.21313131313131314
  - -0.2043650793650794
  - -0.2073170731707317
  - -0.20756646216768918
  train_neg_hamming_loss_micro:
  - -0.07738095238095238
  - -0.08080808080808081
  - -0.08630952380952381
  - -0.0782520325203252
  - -0.07770961145194274
  train_neg_hamming_loss_micro_oob:
  - -0.2003968253968254
  - -0.21313131313131314
  - -0.20436507936507936
  - -0.2073170731707317
  - -0.20756646216768918
  train_neg_hamming_loss_samples:
  - -0.07738095238095238
  - -0.08080808080808081
  - -0.08630952380952381
  - -0.07825203252032521
  - -0.07770961145194273
  train_neg_hamming_loss_samples_oob:
  - -0.20039682539682543
  - -0.21313131313131317
  - -0.20436507936507933
  - -0.2073170731707317
  - -0.20756646216768923
  train_neg_hamming_loss_weighted:
  - -0.061741363211951436
  - -0.06977235036936529
  - -0.08168316831683169
  - -0.0621587186021114
  - -0.06239263803680981
  train_neg_hamming_loss_weighted_oob:
  - -0.3115079365079365
  - -0.3408412483039348
  - -0.32245992456388495
  - -0.3244145128018444
  - -0.3275766871165644
  train_neg_label_ranking_loss:
  - -0.07253637566137565
  - -0.07491582491582491
  - -0.07491732804232805
  - -0.07765921409214092
  - -0.08312883435582823
  train_neg_label_ranking_loss_oob:
  - -0.21463293650793652
  - -0.2336026936026936
  - -0.23010912698412697
  - -0.22892953929539295
  - -0.22031356509884117
  train_precision_macro:
  - 0.9226190476190478
  - 0.9191919191919192
  - 0.9136904761904763
  - 0.9217479674796748
  - 0.9222903885480572
  train_precision_macro_oob:
  - 0.7996031746031748
  - 0.7868686868686868
  - 0.7956349206349206
  - 0.7926829268292682
  - 0.7924335378323107
  train_precision_micro:
  - 0.9226190476190477
  - 0.9191919191919192
  - 0.9136904761904762
  - 0.9217479674796748
  - 0.9222903885480572
  train_precision_micro_oob:
  - 0.7996031746031746
  - 0.7868686868686868
  - 0.7956349206349206
  - 0.7926829268292683
  - 0.7924335378323109
  train_precision_samples:
  - 0.9226190476190477
  - 0.9191919191919191
  - 0.9136904761904762
  - 0.9217479674796747
  - 0.9222903885480573
  train_precision_samples_oob:
  - 0.7996031746031745
  - 0.7868686868686867
  - 0.7956349206349206
  - 0.7926829268292683
  - 0.7924335378323107
  train_precision_weighted:
  - 0.9382586367880487
  - 0.9302276496306346
  - 0.9183168316831684
  - 0.9378412813978886
  - 0.9376073619631902
  train_precision_weighted_oob:
  - 0.6884920634920636
  - 0.6591587516960652
  - 0.677540075436115
  - 0.6755854871981555
  - 0.6724233128834356
  train_recall_macro:
  - 0.9226190476190478
  - 0.9191919191919192
  - 0.9136904761904763
  - 0.9217479674796748
  - 0.9222903885480572
  train_recall_macro_oob:
  - 0.7996031746031748
  - 0.7868686868686868
  - 0.7956349206349206
  - 0.7926829268292682
  - 0.7924335378323107
  train_recall_micro:
  - 0.9226190476190477
  - 0.9191919191919192
  - 0.9136904761904762
  - 0.9217479674796748
  - 0.9222903885480572
  train_recall_micro_oob:
  - 0.7996031746031746
  - 0.7868686868686868
  - 0.7956349206349206
  - 0.7926829268292683
  - 0.7924335378323109
  train_recall_samples:
  - 0.9226190476190477
  - 0.9191919191919191
  - 0.9136904761904762
  - 0.9217479674796747
  - 0.9222903885480573
  train_recall_samples_oob:
  - 0.7996031746031745
  - 0.7868686868686867
  - 0.7956349206349206
  - 0.7926829268292683
  - 0.7924335378323107
  train_recall_weighted:
  - 0.9382586367880487
  - 0.9302276496306346
  - 0.9183168316831684
  - 0.9378412813978886
  - 0.9376073619631902
  train_recall_weighted_oob:
  - 0.6884920634920636
  - 0.6591587516960652
  - 0.677540075436115
  - 0.6755854871981555
  - 0.6724233128834356
  train_roc_auc_macro:
  - 0.9950765829071905
  - 0.9951656723344793
  - 0.9982517620568911
  - 0.9942198617805703
  - 0.9972498007704488
  train_roc_auc_macro_oob:
  - 0.5494309172664494
  - 0.5697285631066668
  - 0.5772700789249184
  - 0.5740848571194584
  - 0.5773117512048328
  train_roc_auc_micro:
  - 0.950736513510877
  - 0.9470455075698819
  - 0.9491437977544653
  - 0.9506045760977997
  - 0.9477313624678664
  train_roc_auc_micro_oob:
  - 0.7678031411569604
  - 0.7681617262231304
  - 0.7706618676756014
  - 0.7668490243545999
  - 0.7693830334190231
  train_roc_auc_samples:
  - 0.9274636243386244
  - 0.9250841750841748
  - 0.925082671957672
  - 0.9223407859078591
  - 0.9168711656441717
  train_roc_auc_samples_oob:
  - 0.7853670634920634
  - 0.7663973063973064
  - 0.769890873015873
  - 0.771070460704607
  - 0.7796864349011587
  train_roc_auc_weighted:
  - 0.9980158396310469
  - 0.9981466524855523
  - 0.9994238093399983
  - 0.9976671342889615
  - 0.9990085004051764
  train_roc_auc_weighted_oob:
  - 0.5658004849699427
  - 0.5320124634620896
  - 0.5552946664608954
  - 0.5204094005187319
  - 0.5409357145355785
start: 2023-12-21 10:26:06.852700
wrapper: null
