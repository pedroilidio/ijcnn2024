active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/gJmZmZmZ6T8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMzI8AAMjMzMzPjv4AzMzMzMwtAgDMzMzMzC0CAMzMzMzMLQA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 16:23:46.553691
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 1
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__1
  params: {}
hash: 0b69d351f105a7fc77a749f62bee7dacc06d8177521b9017cab6f04e9a3b7b09
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/0b69d35_20231222T162209994184_embedding_weak__1_scene.yml
results:
  fit_time:
  - 40.84113311767578
  - 54.473389625549316
  - 55.203720569610596
  - 55.33183550834656
  - 54.67964267730713
  score_time:
  - 8.247781991958618
  - 5.672635078430176
  - 5.375953912734985
  - 5.133656978607178
  - 5.4318578243255615
  test_average_precision_macro:
  - 0.8626991212809917
  - 0.834810605920572
  - 0.8228229503405
  - 0.8398272225452611
  - 0.8313373892679744
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8675033652168254
  - 0.8503616995994838
  - 0.8284111684044776
  - 0.8483109277603335
  - 0.8365584427063616
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8829938900203667
  - 0.8673582295988935
  - 0.8758019525801952
  - 0.8742329149232915
  - 0.8588389121338912
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.8511616002772342
  - 0.8252350478646937
  - 0.8128404499075507
  - 0.8292686374927812
  - 0.8199422005926201
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9083503054989817
  - 0.8990318118948825
  - 0.8929567642956764
  - 0.8964435146443513
  - 0.900278940027894
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9083503054989817
  - 0.8990318118948825
  - 0.8929567642956764
  - 0.8964435146443515
  - 0.900278940027894
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9083503054989817
  - 0.8990318118948825
  - 0.8929567642956765
  - 0.8964435146443516
  - 0.9002789400278941
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9032606254948847
  - 0.8933200638859683
  - 0.8878127978546388
  - 0.8910793354186132
  - 0.8946422513368121
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8353613828874856
  - 0.8208365553932374
  - 0.8100360948073936
  - 0.8160629593388481
  - 0.8224681700302083
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.832089552238806
  - 0.8165829145728644
  - 0.8066141732283465
  - 0.8123222748815165
  - 0.8186429930247305
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8473959848705266
  - 0.8314562339458603
  - 0.8227236501295078
  - 0.8291492329149232
  - 0.8346284120342695
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.8271015144931377
  - 0.8117189778144611
  - 0.8018710410056792
  - 0.807487106672211
  - 0.8134610972287131
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8829938900203667
  - 0.8673582295988933
  - 0.8758019525801949
  - 0.8742329149232915
  - 0.8588389121338912
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6547054757885706
  - 0.6141046458910048
  - 0.5932996456269529
  - 0.6084937850811073
  - 0.6273796370065007
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6519280918439523
  - 0.6190811599567029
  - 0.59525378498038
  - 0.6082008919881894
  - 0.6276733900864363
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5231250049867036
  - 0.4731027308683727
  - 0.4614337623570927
  - 0.4847289274950271
  - 0.49727264484555117
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6382345211420207
  - 0.5938492692124976
  - 0.5768470151704621
  - 0.5907552015937486
  - 0.6085921381871336
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9138522440736707
  - 0.9020899622417603
  - 0.9086133983494338
  - 0.907274944596213
  - 0.8958763200693572
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.3625254582484725
  - -1.441908713692946
  - -1.4581589958158996
  - -1.4205020920502092
  - -1.50418410041841
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.09164969450101833
  - -0.10096818810511755
  - -0.10704323570432357
  - -0.10355648535564854
  - -0.09972105997210601
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.09164969450101833
  - -0.10096818810511757
  - -0.10704323570432357
  - -0.10355648535564854
  - -0.099721059972106
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.09164969450101833
  - -0.10096818810511758
  - -0.10704323570432357
  - -0.10355648535564854
  - -0.09972105997210598
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.09673937450511529
  - -0.10667993611403165
  - -0.11218720214536115
  - -0.10892066458138684
  - -0.10535774866318799
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06023421588594705
  - -0.07261410788381743
  - -0.07191422594142259
  - -0.06757322175732217
  - -0.08200836820083683
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9083503054989817
  - 0.8990318118948825
  - 0.8929567642956764
  - 0.8964435146443513
  - 0.900278940027894
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9083503054989817
  - 0.8990318118948825
  - 0.8929567642956764
  - 0.8964435146443515
  - 0.900278940027894
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9083503054989817
  - 0.8990318118948825
  - 0.8929567642956765
  - 0.8964435146443516
  - 0.9002789400278941
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9032606254948847
  - 0.8933200638859683
  - 0.8878127978546388
  - 0.8910793354186132
  - 0.8946422513368121
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9083503054989817
  - 0.8990318118948825
  - 0.8929567642956764
  - 0.8964435146443513
  - 0.900278940027894
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9083503054989817
  - 0.8990318118948825
  - 0.8929567642956764
  - 0.8964435146443515
  - 0.900278940027894
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9083503054989817
  - 0.8990318118948825
  - 0.8929567642956765
  - 0.8964435146443516
  - 0.9002789400278941
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9032606254948847
  - 0.8933200638859683
  - 0.8878127978546388
  - 0.8910793354186132
  - 0.8946422513368121
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9536054924258308
  - 0.9468129366087549
  - 0.9379981041621254
  - 0.9458271421941115
  - 0.9370320957741476
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9618440300272417
  - 0.9530204621805966
  - 0.9449667296475807
  - 0.9537467145845625
  - 0.9438006243325392
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.939765784114053
  - 0.9273858921161826
  - 0.9280857740585774
  - 0.9324267782426778
  - 0.9179916317991632
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9481069486574278
  - 0.9433448634256059
  - 0.9330974768644865
  - 0.9407362175776808
  - 0.9315948483597835
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9939153667787841
  - 0.9925362450620617
  - 0.9946285446728874
  - 0.9941279010988548
  - 0.9944068755542531
  train_average_precision_macro_oob:
  - 0.8455153804543487
  - 0.8545327024255601
  - 0.8540500967498241
  - 0.8504580110392346
  - 0.851990007516827
  train_average_precision_micro:
  - 0.9935374464530412
  - 0.9924787234701898
  - 0.9935739296131092
  - 0.9935895566061225
  - 0.993778449755718
  train_average_precision_micro_oob:
  - 0.8533184610722512
  - 0.8602394563668322
  - 0.8618949260911345
  - 0.8561098052969102
  - 0.8611248892764802
  train_average_precision_samples:
  - 0.9876043841336117
  - 0.9869264069264069
  - 0.9883359253499222
  - 0.9894591325384482
  - 0.9880335234145498
  train_average_precision_samples_oob:
  - 0.8778053235908142
  - 0.8854632034632033
  - 0.8791169863487126
  - 0.8788966649386556
  - 0.8851218247796785
  train_average_precision_weighted:
  - 0.9937997494041534
  - 0.9924394355047759
  - 0.994586560789873
  - 0.9940699805270893
  - 0.9942979201246639
  train_average_precision_weighted_oob:
  - 0.8362530910096144
  - 0.8449500311229624
  - 0.8441927887771544
  - 0.84142282325545
  - 0.8424059654365528
  train_f1_macro:
  - 0.9536360473208073
  - 0.9548917748917748
  - 0.9562813202004493
  - 0.9550717124589596
  - 0.9548125108000692
  train_f1_macro_oob:
  - 0.8934411969380655
  - 0.8991341991341991
  - 0.8990841541385864
  - 0.8960601347848627
  - 0.8954553309141177
  train_f1_micro:
  - 0.9536360473208072
  - 0.9548917748917749
  - 0.9562813202004493
  - 0.9550717124589597
  - 0.9548125108000691
  train_f1_micro_oob:
  - 0.8934411969380655
  - 0.8991341991341991
  - 0.8990841541385864
  - 0.8960601347848626
  - 0.8954553309141179
  train_f1_samples:
  - 0.9536360473208073
  - 0.9548917748917749
  - 0.9562813202004493
  - 0.9550717124589598
  - 0.9548125108000692
  train_f1_samples_oob:
  - 0.8934411969380655
  - 0.8991341991341992
  - 0.8990841541385866
  - 0.8960601347848628
  - 0.8954553309141179
  train_f1_weighted:
  - 0.9518679611376054
  - 0.952938782687332
  - 0.954394302027742
  - 0.9533046333235662
  - 0.9529037984391722
  train_f1_weighted_oob:
  - 0.8879021413890156
  - 0.8937001683036498
  - 0.8934925711826442
  - 0.8908700911338006
  - 0.8902519861468187
  train_jaccard_macro:
  - 0.9118699554782456
  - 0.9141842853950995
  - 0.9167263125720754
  - 0.9145148377527477
  - 0.9140851661454433
  train_jaccard_macro_oob:
  - 0.811353928527534
  - 0.8202728363355439
  - 0.8206111519783036
  - 0.8152053393673179
  - 0.8143737711726086
  train_jaccard_micro:
  - 0.911380829661651
  - 0.9136774086653964
  - 0.9162251655629139
  - 0.914006945592856
  - 0.9135322807307596
  train_jaccard_micro_oob:
  - 0.8074050782171213
  - 0.8167518678725915
  - 0.8166692826871763
  - 0.8116928856539094
  - 0.8107008760951189
  train_jaccard_samples:
  - 0.9220971269509891
  - 0.9239950525664811
  - 0.9263373571305142
  - 0.9244242020291786
  - 0.9240415710089115
  train_jaccard_samples_oob:
  - 0.8220871856049309
  - 0.8318491032776746
  - 0.831272062998346
  - 0.8258905428423312
  - 0.8253351107161371
  train_jaccard_weighted:
  - 0.9086614323868484
  - 0.9106643183330675
  - 0.9133047359176043
  - 0.9112997972289955
  - 0.9106237225752575
  train_jaccard_weighted_oob:
  - 0.8025941268520896
  - 0.8116311777017937
  - 0.8116998131770491
  - 0.8069212200723632
  - 0.8060766509572732
  train_label_ranking_average_precision_score:
  - 0.9876043841336114
  - 0.9869264069264067
  - 0.988335925349922
  - 0.9894591325384481
  - 0.9880335234145496
  train_label_ranking_average_precision_score_oob:
  - 0.8778053235908141
  - 0.8854632034632033
  - 0.8791169863487126
  - 0.8788966649386551
  - 0.8851218247796784
  train_matthews_corrcoef_macro:
  - 0.8408009449531115
  - 0.8452200743464534
  - 0.8498668410985811
  - 0.8452443532838824
  - 0.8444572542541685
  train_matthews_corrcoef_macro_oob:
  - 0.5914387892831624
  - 0.6197684711328318
  - 0.6167790463903183
  - 0.604522797723079
  - 0.5996655784086842
  train_matthews_corrcoef_micro:
  - 0.8380081383309607
  - 0.84194857101015
  - 0.8466510015773
  - 0.8424835375382237
  - 0.8413086413480649
  train_matthews_corrcoef_micro_oob:
  - 0.5973064292474737
  - 0.6199387450011505
  - 0.6192840490693232
  - 0.6066860493974157
  - 0.6032761554578352
  train_matthews_corrcoef_samples:
  - 0.7749284679909879
  - 0.7789333594310213
  - 0.7856658114611793
  - 0.7788690458011384
  - 0.7771086015846789
  train_matthews_corrcoef_samples_oob:
  - 0.4427410814789256
  - 0.4783995329027829
  - 0.4707915102009792
  - 0.4505471780589629
  - 0.44983604850176395
  train_matthews_corrcoef_weighted:
  - 0.8365411821744039
  - 0.840454813146485
  - 0.8451846597029647
  - 0.8409356680384327
  - 0.839695973983661
  train_matthews_corrcoef_weighted_oob:
  - 0.5724070630357596
  - 0.6015952149799515
  - 0.5977300246487937
  - 0.5876178517783534
  - 0.5826341246583008
  train_ndgc:
  - 0.9909749879171064
  - 0.990463567628562
  - 0.9915620333179281
  - 0.9923386424227738
  - 0.9912384370519115
  train_ndgc_oob:
  - 0.9097965569768723
  - 0.9155429764926644
  - 0.9107214927040945
  - 0.9106936909008819
  - 0.9154015666565707
  train_neg_coverage_error:
  - -1.1096033402922756
  - -1.1044155844155845
  - -1.1005702436495595
  - -1.0990150336962157
  - -1.100051840331778
  train_neg_coverage_error_oob:
  - -1.4457202505219207
  - -1.410909090909091
  - -1.4224987039917056
  - -1.4230171073094868
  - -1.3976153447382063
  train_neg_hamming_loss_macro:
  - -0.046363952679192764
  - -0.045108225108225104
  - -0.04371867979955072
  - -0.04492828754104026
  - -0.04518748919993088
  train_neg_hamming_loss_macro_oob:
  - -0.10655880306193459
  - -0.10086580086580087
  - -0.10091584586141351
  - -0.10393986521513737
  - -0.10454466908588216
  train_neg_hamming_loss_micro:
  - -0.046363952679192764
  - -0.04510822510822511
  - -0.043718679799550714
  - -0.044928287541040265
  - -0.04518748919993088
  train_neg_hamming_loss_micro_oob:
  - -0.10655880306193459
  - -0.10086580086580087
  - -0.10091584586141351
  - -0.10393986521513737
  - -0.10454466908588216
  train_neg_hamming_loss_samples:
  - -0.04636395267919276
  - -0.045108225108225104
  - -0.043718679799550714
  - -0.04492828754104026
  - -0.045187489199930875
  train_neg_hamming_loss_samples_oob:
  - -0.10655880306193456
  - -0.10086580086580084
  - -0.1009158458614135
  - -0.10393986521513737
  - -0.10454466908588214
  train_neg_hamming_loss_weighted:
  - -0.04813203886239465
  - -0.047061217312667984
  - -0.04560569797225803
  - -0.04669536667643369
  - -0.047096201560827874
  train_neg_hamming_loss_weighted_oob:
  - -0.11209785861098437
  - -0.10629983169635007
  - -0.10650742881735577
  - -0.10912990886619935
  - -0.10974801385318127
  train_neg_label_ranking_loss:
  - -0.0058585594989561595
  - -0.005844155844155844
  - -0.005508035251425609
  - -0.004963711767755314
  - -0.005585795749092794
  train_neg_label_ranking_loss_oob:
  - -0.07139874739039667
  - -0.06546753246753247
  - -0.06858475894245723
  - -0.06817003628823225
  - -0.06354328667703474
  train_precision_macro:
  - 0.9536360473208073
  - 0.9548917748917748
  - 0.9562813202004493
  - 0.9550717124589596
  - 0.9548125108000692
  train_precision_macro_oob:
  - 0.8934411969380655
  - 0.8991341991341991
  - 0.8990841541385864
  - 0.8960601347848627
  - 0.8954553309141177
  train_precision_micro:
  - 0.9536360473208072
  - 0.9548917748917749
  - 0.9562813202004493
  - 0.9550717124589597
  - 0.9548125108000691
  train_precision_micro_oob:
  - 0.8934411969380655
  - 0.8991341991341991
  - 0.8990841541385864
  - 0.8960601347848626
  - 0.8954553309141179
  train_precision_samples:
  - 0.9536360473208073
  - 0.9548917748917749
  - 0.9562813202004493
  - 0.9550717124589598
  - 0.9548125108000692
  train_precision_samples_oob:
  - 0.8934411969380655
  - 0.8991341991341992
  - 0.8990841541385866
  - 0.8960601347848628
  - 0.8954553309141179
  train_precision_weighted:
  - 0.9518679611376054
  - 0.952938782687332
  - 0.954394302027742
  - 0.9533046333235662
  - 0.9529037984391722
  train_precision_weighted_oob:
  - 0.8879021413890156
  - 0.8937001683036498
  - 0.8934925711826442
  - 0.8908700911338006
  - 0.8902519861468187
  train_recall_macro:
  - 0.9536360473208073
  - 0.9548917748917748
  - 0.9562813202004493
  - 0.9550717124589596
  - 0.9548125108000692
  train_recall_macro_oob:
  - 0.8934411969380655
  - 0.8991341991341991
  - 0.8990841541385864
  - 0.8960601347848627
  - 0.8954553309141177
  train_recall_micro:
  - 0.9536360473208072
  - 0.9548917748917749
  - 0.9562813202004493
  - 0.9550717124589597
  - 0.9548125108000691
  train_recall_micro_oob:
  - 0.8934411969380655
  - 0.8991341991341991
  - 0.8990841541385864
  - 0.8960601347848626
  - 0.8954553309141179
  train_recall_samples:
  - 0.9536360473208073
  - 0.9548917748917749
  - 0.9562813202004493
  - 0.9550717124589598
  - 0.9548125108000692
  train_recall_samples_oob:
  - 0.8934411969380655
  - 0.8991341991341992
  - 0.8990841541385866
  - 0.8960601347848628
  - 0.8954553309141179
  train_recall_weighted:
  - 0.9518679611376054
  - 0.952938782687332
  - 0.954394302027742
  - 0.9533046333235662
  - 0.9529037984391722
  train_recall_weighted_oob:
  - 0.8879021413890156
  - 0.8937001683036498
  - 0.8934925711826442
  - 0.8908700911338006
  - 0.8902519861468187
  train_roc_auc_macro:
  - 0.9984136845282677
  - 0.9982847473405339
  - 0.9986523455016015
  - 0.9985779832435212
  - 0.9986128674539287
  train_roc_auc_macro_oob:
  - 0.9468713031981385
  - 0.9494688484574869
  - 0.9497207426727022
  - 0.9477085310227699
  - 0.9501012692011801
  train_roc_auc_micro:
  - 0.9984513084609898
  - 0.9983578271280166
  - 0.9985057734303076
  - 0.9984891944810421
  - 0.9985448300284836
  train_roc_auc_micro_oob:
  - 0.951909473324859
  - 0.955277116735894
  - 0.9558537800349692
  - 0.9534474170041802
  - 0.9567161802555386
  train_roc_auc_samples:
  - 0.9941414405010439
  - 0.9941558441558441
  - 0.9944919647485744
  - 0.9950362882322448
  - 0.9944142042509072
  train_roc_auc_samples_oob:
  - 0.9286012526096034
  - 0.9345324675324674
  - 0.9314152410575428
  - 0.9318299637117677
  - 0.9364567133229653
  train_roc_auc_weighted:
  - 0.9983452756600208
  - 0.998224011130273
  - 0.9986163698725672
  - 0.9985397482300695
  - 0.998565445424198
  train_roc_auc_weighted_oob:
  - 0.9427684237154881
  - 0.9450520860488293
  - 0.9453443028437939
  - 0.9435108478495612
  - 0.9458684227210301
start: 2023-12-22 16:22:09.994184
wrapper: null
