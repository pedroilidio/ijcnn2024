active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJPzQzMzMzM/M/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAGEAAAAAAAADwvwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUwA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 00:12:11.497608
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - rf
                      - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: null
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                    - - xt
                      - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: false
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: null
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 7
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: proba_weak__7
  params: {}
hash: 204e2ec1f60e881f5d5e470e8cbca3c7684dbff8e04281bff3571bd0d10bb40f
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/204e2ec_20231222T001027050604_proba_weak__7_CHD_49.yml
results:
  fit_time:
  - 90.03805232048035
  - 90.78224062919617
  - 89.87629580497742
  - 91.76928305625916
  - 90.83246636390686
  score_time:
  - 3.2331833839416504
  - 3.334491491317749
  - 3.3555350303649902
  - 3.3449714183807373
  - 3.4431145191192627
  test_average_precision_macro:
  - 0.5402649719942254
  - 0.5354187230694988
  - 0.47101975395003065
  - 0.5221138934441494
  - 0.5277718313050569
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6703219631060087
  - 0.6476604508373994
  - 0.5874948560606289
  - 0.6498538514783416
  - 0.655485028189078
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7698677248677248
  - 0.7480654761904761
  - 0.7183183183183183
  - 0.7323073073073073
  - 0.7834171455938697
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6610172040341032
  - 0.6474422074159331
  - 0.5812794701983769
  - 0.6399443297675853
  - 0.6479984936409215
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6222222222222221
  - 0.6354166666666666
  - 0.596096096096096
  - 0.6201201201201201
  - 0.6364942528735632
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6222222222222222
  - 0.6354166666666666
  - 0.5960960960960962
  - 0.6201201201201201
  - 0.6364942528735632
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6222222222222223
  - 0.6354166666666667
  - 0.5960960960960962
  - 0.6201201201201202
  - 0.6364942528735632
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.5313492063492063
  - 0.546235014985015
  - 0.4934335744194899
  - 0.5241290241290241
  - 0.5427143199233717
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.47863009471026
  - 0.4924843598670261
  - 0.45757995091077036
  - 0.47940625472176407
  - 0.49514711114704174
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.45161290322580644
  - 0.46564885496183206
  - 0.42459893048128344
  - 0.44940152339499456
  - 0.46680716543730244
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.47768707482993206
  - 0.49406307977736547
  - 0.44581724581724597
  - 0.4757692757692758
  - 0.49396924914166296
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.36950903101867055
  - 0.3823947240014041
  - 0.3338458179381835
  - 0.3628668682499762
  - 0.38239377914675454
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7793915343915346
  - 0.748065476190476
  - 0.718318318318318
  - 0.7503253253253256
  - 0.7834171455938699
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.09735446701700534
  - 0.07818710745425571
  - -0.030957568282435736
  - 0.05366861133323047
  - 0.10924289830940469
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2483554103510534
  - 0.23308932611516409
  - 0.12709441923929268
  - 0.2012733320190885
  - 0.2187844772967721
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.2233093330958956
  - 0.20863347462334866
  - 0.12754780173022695
  - 0.1797752843079885
  - 0.20173003811350543
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.1017530243048918
  - 0.08310604151317437
  - -0.044780501285117257
  - 0.04709432360479419
  - 0.11284154207829104
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8471357568171979
  - 0.8328434474815067
  - 0.8093719336372074
  - 0.8122450380874366
  - 0.8579118414926095
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -4.0476190476190474
  - -3.892857142857143
  - -4.009009009009009
  - -3.8378378378378377
  - -3.689655172413793
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.37777777777777777
  - -0.3645833333333333
  - -0.4039039039039039
  - -0.37987987987987987
  - -0.36350574712643674
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.37777777777777777
  - -0.3645833333333333
  - -0.4039039039039039
  - -0.37987987987987987
  - -0.3635057471264368
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.37777777777777777
  - -0.3645833333333333
  - -0.40390390390390385
  - -0.37987987987987987
  - -0.36350574712643674
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.4686507936507937
  - -0.453764985014985
  - -0.5065664255805101
  - -0.4758709758709759
  - -0.4572856800766283
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.24349206349206345
  - -0.26545138888888886
  - -0.29144144144144146
  - -0.24867367367367368
  - -0.21992337164750958
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6222222222222221
  - 0.6354166666666666
  - 0.596096096096096
  - 0.6201201201201201
  - 0.6364942528735632
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6222222222222222
  - 0.6354166666666666
  - 0.5960960960960962
  - 0.6201201201201201
  - 0.6364942528735632
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6222222222222223
  - 0.6354166666666667
  - 0.5960960960960962
  - 0.6201201201201202
  - 0.6364942528735632
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.5313492063492063
  - 0.546235014985015
  - 0.4934335744194899
  - 0.5241290241290241
  - 0.5427143199233717
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6222222222222221
  - 0.6354166666666666
  - 0.596096096096096
  - 0.6201201201201201
  - 0.6364942528735632
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6222222222222222
  - 0.6354166666666666
  - 0.5960960960960962
  - 0.6201201201201201
  - 0.6364942528735632
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6222222222222223
  - 0.6354166666666667
  - 0.5960960960960962
  - 0.6201201201201202
  - 0.6364942528735632
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.5313492063492063
  - 0.546235014985015
  - 0.4934335744194899
  - 0.5241290241290241
  - 0.5427143199233717
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5739589001010887
  - 0.6008684499358272
  - 0.5895403349214213
  - 0.6370862413823027
  - 0.5781831197839499
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7446393762183235
  - 0.744709953259176
  - 0.700989971241059
  - 0.7476260581523739
  - 0.7509361383442265
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.7345486111111111
  - 0.7085585585585584
  - .nan
  - 0.7800766283524905
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5744435436132379
  - 0.5848129935660399
  - 0.5221304830649
  - 0.5969322510951482
  - 0.6045054590724848
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7985116462875429
  - 0.7929413632864423
  - 0.8127102831978612
  - 0.8043262496311571
  - 0.7958179930469423
  train_average_precision_macro_oob:
  - 0.7137389044440999
  - 0.7251573487478103
  - 0.7335137048040575
  - 0.7197292698779569
  - 0.7163418333184784
  train_average_precision_micro:
  - 0.8573855279990554
  - 0.8505094807753416
  - 0.8618036181282527
  - 0.8599184252651257
  - 0.8565670084318117
  train_average_precision_micro_oob:
  - 0.8543881341197427
  - 0.846800435230539
  - 0.857825442057669
  - 0.8567283698804654
  - 0.8571511811004455
  train_average_precision_samples:
  - 0.8763641975308641
  - 0.8662089290193128
  - 0.8539570820820821
  - 0.8749812312312313
  - 0.8719975955454315
  train_average_precision_samples_oob:
  - 0.8730555555555556
  - 0.863424880862804
  - 0.8530686936936936
  - 0.8734171671671671
  - 0.868504808909137
  train_average_precision_weighted:
  - 0.8592494293022341
  - 0.8548617548235171
  - 0.8688681107440119
  - 0.8606203201568435
  - 0.8587291137419003
  train_average_precision_weighted_oob:
  - 0.8525382447207751
  - 0.8473615322612918
  - 0.861107845047161
  - 0.8540068776231965
  - 0.8555593639468753
  train_f1_macro:
  - 0.7866666666666666
  - 0.7799097065462753
  - 0.7826576576576576
  - 0.7826576576576576
  - 0.7782839787395597
  train_f1_macro_oob:
  - 0.7792592592592592
  - 0.7746425884123401
  - 0.7804054054054056
  - 0.7811561561561563
  - 0.7737281700835233
  train_f1_micro:
  - 0.7866666666666666
  - 0.7799097065462754
  - 0.7826576576576577
  - 0.7826576576576577
  - 0.7782839787395596
  train_f1_micro_oob:
  - 0.7792592592592592
  - 0.7746425884123401
  - 0.7804054054054054
  - 0.7811561561561562
  - 0.7737281700835231
  train_f1_samples:
  - 0.7866666666666666
  - 0.7799097065462754
  - 0.7826576576576577
  - 0.7826576576576577
  - 0.7782839787395596
  train_f1_samples_oob:
  - 0.7792592592592592
  - 0.7746425884123401
  - 0.7804054054054054
  - 0.7811561561561561
  - 0.7737281700835231
  train_f1_weighted:
  - 0.7279584304584304
  - 0.7196904337001012
  - 0.724807342185391
  - 0.7236333191830575
  - 0.7180097806521497
  train_f1_weighted_oob:
  - 0.7221620046620048
  - 0.7154791028959301
  - 0.722916078099005
  - 0.7222634938603526
  - 0.7140712362808035
  train_jaccard_macro:
  - 0.6622356530677427
  - 0.6536580540131097
  - 0.6565213133004498
  - 0.6569436230116504
  - 0.6514468271336352
  train_jaccard_macro_oob:
  - 0.6516229451980434
  - 0.6461369306641881
  - 0.6533403074865578
  - 0.6548538113859511
  - 0.6450992878744175
  train_jaccard_micro:
  - 0.6483516483516484
  - 0.6392229417206291
  - 0.6429232192414431
  - 0.6429232192414431
  - 0.637041640770665
  train_jaccard_micro_oob:
  - 0.6383495145631068
  - 0.6321768498618361
  - 0.6398891966759003
  - 0.6408992916538343
  - 0.6309597523219814
  train_jaccard_samples:
  - 0.6758941798941799
  - 0.6652907664194346
  - 0.6679214929214928
  - 0.6724591474591474
  - 0.6643473458963208
  train_jaccard_samples_oob:
  - 0.6654391534391534
  - 0.6578953025905623
  - 0.6651544401544401
  - 0.6705500955500956
  - 0.6580234495952035
  train_jaccard_weighted:
  - 0.5788843284139622
  - 0.569014904758718
  - 0.5748328003294965
  - 0.5735345919786694
  - 0.5665834084890706
  train_jaccard_weighted_oob:
  - 0.5706071594584183
  - 0.5630247219672079
  - 0.572171371378217
  - 0.5716426420388739
  - 0.5611329139874836
  train_label_ranking_average_precision_score:
  - 0.8808086419753082
  - 0.8729809380486573
  - 0.8607138388388375
  - 0.8772334834834831
  - 0.8788313085294859
  train_label_ranking_average_precision_score_oob:
  - 0.8774999999999992
  - 0.8701968898921485
  - 0.8598254504504492
  - 0.8756694194194187
  - 0.8753385218931913
  train_matthews_corrcoef_macro:
  - 0.46622631789464736
  - 0.45346709577883
  - 0.46423577169362357
  - 0.45980931710803025
  - 0.4503337934171742
  train_matthews_corrcoef_macro_oob:
  - 0.4483735855696522
  - 0.4414869684995277
  - 0.459377260035023
  - 0.45677323475137527
  - 0.44088133853460515
  train_matthews_corrcoef_micro:
  - 0.598125714224895
  - 0.5877148107087001
  - 0.5958932436546293
  - 0.5926248599152402
  - 0.5851286011972027
  train_matthews_corrcoef_micro_oob:
  - 0.5845311531033787
  - 0.5781384547679287
  - 0.5918422505074422
  - 0.5898983949501271
  - 0.5773470504752518
  train_matthews_corrcoef_samples:
  - 0.5411041991510247
  - 0.5245302014170838
  - 0.5235626278184206
  - 0.5516726530906301
  - 0.5307748600830795
  train_matthews_corrcoef_samples_oob:
  - 0.5276679795430943
  - 0.5152710661272266
  - 0.5191816928584649
  - 0.5491997121078458
  - 0.5203667344085512
  train_matthews_corrcoef_weighted:
  - 0.5328207000338551
  - 0.512923082665973
  - 0.5298466070909255
  - 0.5231029307948076
  - 0.5134389155731521
  train_matthews_corrcoef_weighted_oob:
  - 0.5190540804453181
  - 0.5034379945165721
  - 0.5257986000519279
  - 0.5203927504626639
  - 0.505428887212023
  train_ndgc:
  - 0.9217871859426716
  - 0.9151131081745315
  - 0.9058107074113156
  - 0.9199916954616509
  - 0.9185904670788779
  train_ndgc_oob:
  - 0.9205706359097113
  - 0.9128860205449759
  - 0.9052431823191823
  - 0.9197843379598396
  - 0.9162707874230294
  train_neg_coverage_error:
  - -3.2711111111111113
  - -3.36117381489842
  - -3.421171171171171
  - -3.3265765765765765
  - -3.353075170842825
  train_neg_coverage_error_oob:
  - -3.3155555555555556
  - -3.399548532731377
  - -3.436936936936937
  - -3.364864864864865
  - -3.41002277904328
  train_neg_hamming_loss_macro:
  - -0.2133333333333333
  - -0.22009029345372463
  - -0.21734234234234237
  - -0.21734234234234232
  - -0.2217160212604404
  train_neg_hamming_loss_macro_oob:
  - -0.22074074074074077
  - -0.2253574115876599
  - -0.2195945945945946
  - -0.21884384384384384
  - -0.22627182991647685
  train_neg_hamming_loss_micro:
  - -0.21333333333333335
  - -0.2200902934537246
  - -0.21734234234234234
  - -0.21734234234234234
  - -0.2217160212604404
  train_neg_hamming_loss_micro_oob:
  - -0.22074074074074074
  - -0.2253574115876599
  - -0.2195945945945946
  - -0.21884384384384384
  - -0.22627182991647685
  train_neg_hamming_loss_samples:
  - -0.21333333333333335
  - -0.2200902934537246
  - -0.21734234234234234
  - -0.21734234234234234
  - -0.2217160212604404
  train_neg_hamming_loss_samples_oob:
  - -0.22074074074074074
  - -0.22535741158765987
  - -0.2195945945945946
  - -0.2188438438438438
  - -0.22627182991647687
  train_neg_hamming_loss_weighted:
  - -0.2720415695415695
  - -0.2803095662998988
  - -0.27519265781460905
  - -0.27636668081694266
  - -0.28199021934785035
  train_neg_hamming_loss_weighted_oob:
  - -0.2778379953379953
  - -0.28452089710406986
  - -0.27708392190099507
  - -0.2777365061396475
  - -0.28592876371919657
  train_neg_label_ranking_loss:
  - -0.12498765432098766
  - -0.13248683220466514
  - -0.14112237237237238
  - -0.1320508008008008
  - -0.12625284738041
  train_neg_label_ranking_loss_oob:
  - -0.1312716049382716
  - -0.13836844745422625
  - -0.1433933933933934
  - -0.13640515515515514
  - -0.13379524171095925
  train_precision_macro:
  - 0.7866666666666666
  - 0.7799097065462753
  - 0.7826576576576576
  - 0.7826576576576576
  - 0.7782839787395597
  train_precision_macro_oob:
  - 0.7792592592592592
  - 0.7746425884123401
  - 0.7804054054054056
  - 0.7811561561561563
  - 0.7737281700835233
  train_precision_micro:
  - 0.7866666666666666
  - 0.7799097065462754
  - 0.7826576576576577
  - 0.7826576576576577
  - 0.7782839787395596
  train_precision_micro_oob:
  - 0.7792592592592592
  - 0.7746425884123401
  - 0.7804054054054054
  - 0.7811561561561562
  - 0.7737281700835231
  train_precision_samples:
  - 0.7866666666666666
  - 0.7799097065462754
  - 0.7826576576576577
  - 0.7826576576576577
  - 0.7782839787395596
  train_precision_samples_oob:
  - 0.7792592592592592
  - 0.7746425884123401
  - 0.7804054054054054
  - 0.7811561561561561
  - 0.7737281700835231
  train_precision_weighted:
  - 0.7279584304584304
  - 0.7196904337001012
  - 0.724807342185391
  - 0.7236333191830575
  - 0.7180097806521497
  train_precision_weighted_oob:
  - 0.7221620046620048
  - 0.7154791028959301
  - 0.722916078099005
  - 0.7222634938603526
  - 0.7140712362808035
  train_recall_macro:
  - 0.7866666666666666
  - 0.7799097065462753
  - 0.7826576576576576
  - 0.7826576576576576
  - 0.7782839787395597
  train_recall_macro_oob:
  - 0.7792592592592592
  - 0.7746425884123401
  - 0.7804054054054056
  - 0.7811561561561563
  - 0.7737281700835233
  train_recall_micro:
  - 0.7866666666666666
  - 0.7799097065462754
  - 0.7826576576576577
  - 0.7826576576576577
  - 0.7782839787395596
  train_recall_micro_oob:
  - 0.7792592592592592
  - 0.7746425884123401
  - 0.7804054054054054
  - 0.7811561561561562
  - 0.7737281700835231
  train_recall_samples:
  - 0.7866666666666666
  - 0.7799097065462754
  - 0.7826576576576577
  - 0.7826576576576577
  - 0.7782839787395596
  train_recall_samples_oob:
  - 0.7792592592592592
  - 0.7746425884123401
  - 0.7804054054054054
  - 0.7811561561561561
  - 0.7737281700835231
  train_recall_weighted:
  - 0.7279584304584304
  - 0.7196904337001012
  - 0.724807342185391
  - 0.7236333191830575
  - 0.7180097806521497
  train_recall_weighted_oob:
  - 0.7221620046620048
  - 0.7154791028959301
  - 0.722916078099005
  - 0.7222634938603526
  - 0.7140712362808035
  train_roc_auc_macro:
  - 0.8190963400931396
  - 0.8025401001930578
  - 0.8271578487379672
  - 0.8125934155716847
  - 0.8125376165955281
  train_roc_auc_macro_oob:
  - 0.7989350036257372
  - 0.7918911790178546
  - 0.8171922812317028
  - 0.8011307919008335
  - 0.790261096421514
  train_roc_auc_micro:
  - 0.8756311570819926
  - 0.8688309117519415
  - 0.8721480169711233
  - 0.8789269889884503
  - 0.8798537452480406
  train_roc_auc_micro_oob:
  - 0.870547351106477
  - 0.8665253308032539
  - 0.8698924595258015
  - 0.8755026936793383
  - 0.8770339559769089
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8189143027812251
  - 0.8009979924586207
  - 0.818691019557539
  - 0.8112101715394446
  - 0.8148627939250914
  train_roc_auc_weighted_oob:
  - 0.8138849989316447
  - 0.7982223279258835
  - 0.8169261326625246
  - 0.8099454083699962
  - 0.812715576222778
start: 2023-12-22 00:10:27.050604
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
