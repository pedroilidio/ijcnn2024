active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ+T+gmZmZmZn5P0AzMzMzM+M/oJmZmZmZ+T+YmZmZmZkVwA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMz4z/gzMzMzMwMQEBmZmZmZva/kJmZmZmZGcDgzMzMzMwMQA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 04:57:18.894485
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 8
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__8
  params: {}
hash: 9e224814a773cfbfba3fa5d64dd846f1ce60ffb8050912a9b103d241fd536bf1
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/9e22481_20231222T044809812753_embedding_proba_weak__8_emotions.yml
results:
  fit_time:
  - 507.77330255508423
  - 504.22732949256897
  - 522.7666249275208
  - 526.992951631546
  - 523.6482129096985
  score_time:
  - 6.534212350845337
  - 6.618271589279175
  - 7.700707197189331
  - 7.3903772830963135
  - 6.992972135543823
  test_average_precision_macro:
  - 0.6823750718174377
  - 0.6892211713595927
  - 0.7336579918740238
  - 0.6580071617421299
  - 0.7433592480100492
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6753772444022708
  - 0.6904648509247667
  - 0.7470303742522039
  - 0.6831559413977734
  - 0.75066848851181
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.804072504708098
  - 0.7731884057971015
  - 0.7962037037037037
  - 0.7727777777777778
  - 0.8087439613526569
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6782219762417326
  - 0.6905396752546749
  - 0.7354123883558351
  - 0.6666709275163638
  - 0.7449347143775781
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7259887005649718
  - 0.7507246376811594
  - 0.7694444444444445
  - 0.7613333333333333
  - 0.736231884057971
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7259887005649718
  - 0.7507246376811594
  - 0.7694444444444445
  - 0.7613333333333333
  - 0.736231884057971
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7259887005649719
  - 0.7507246376811594
  - 0.7694444444444445
  - 0.7613333333333335
  - 0.736231884057971
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7108582927018031
  - 0.738181818181818
  - 0.7594645550527903
  - 0.7516018099547512
  - 0.7287492817467917
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5755606051940559
  - 0.6057860355042102
  - 0.6296167876907108
  - 0.618656571420905
  - 0.5857538320268421
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5698447893569845
  - 0.6009280742459396
  - 0.6252821670428894
  - 0.6146393972012917
  - 0.5825688073394495
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5833333333333333
  - 0.6222360248447204
  - 0.6448412698412699
  - 0.6359999999999999
  - 0.5999999999999999
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.557784379512314
  - 0.5900837484572047
  - 0.6165020873571496
  - 0.6064496889635955
  - 0.576071010988816
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8040725047080981
  - 0.7731884057971012
  - 0.7962037037037035
  - 0.7727777777777778
  - 0.8087439613526569
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.26288717168145714
  - 0.370300724651915
  - 0.40305627264469646
  - 0.32672133015637067
  - 0.3460416331670974
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.2640431053395209
  - 0.3815846881916283
  - 0.4191278877919428
  - 0.3603207983669257
  - 0.35782609103261703
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.15777710525290584
  - 0.27806183803541046
  - 0.29053701844509755
  - 0.26033828319487884
  - 0.26743154199273167
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.24657305163193963
  - 0.3597944282088552
  - 0.39686473545812834
  - 0.3275682345580712
  - 0.34397296592264576
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8638779831905533
  - 0.8460008215643576
  - 0.8595464856008662
  - 0.8480058655714878
  - 0.8717396424810923
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.694915254237288
  - -2.982608695652174
  - -2.725
  - -2.992
  - -2.8521739130434782
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2740112994350283
  - -0.24927536231884054
  - -0.23055555555555554
  - -0.23866666666666667
  - -0.2637681159420289
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2740112994350282
  - -0.2492753623188406
  - -0.23055555555555557
  - -0.23866666666666667
  - -0.263768115942029
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2740112994350282
  - -0.24927536231884057
  - -0.23055555555555554
  - -0.23866666666666664
  - -0.263768115942029
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2891417072981967
  - -0.2618181818181818
  - -0.24053544494720963
  - -0.24839819004524888
  - -0.2712507182532082
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1525894538606403
  - -0.19185990338164255
  - -0.16115740740740742
  - -0.21180000000000002
  - -0.15533816425120772
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7259887005649718
  - 0.7507246376811594
  - 0.7694444444444445
  - 0.7613333333333333
  - 0.736231884057971
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7259887005649718
  - 0.7507246376811594
  - 0.7694444444444445
  - 0.7613333333333333
  - 0.736231884057971
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7259887005649719
  - 0.7507246376811594
  - 0.7694444444444445
  - 0.7613333333333335
  - 0.736231884057971
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7108582927018031
  - 0.738181818181818
  - 0.7594645550527903
  - 0.7516018099547512
  - 0.7287492817467917
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7259887005649718
  - 0.7507246376811594
  - 0.7694444444444445
  - 0.7613333333333333
  - 0.736231884057971
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7259887005649718
  - 0.7507246376811594
  - 0.7694444444444445
  - 0.7613333333333333
  - 0.736231884057971
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7259887005649719
  - 0.7507246376811594
  - 0.7694444444444445
  - 0.7613333333333335
  - 0.736231884057971
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7108582927018031
  - 0.738181818181818
  - 0.7594645550527903
  - 0.7516018099547512
  - 0.7287492817467917
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8274413347269429
  - 0.8021515374590974
  - 0.8469594096309591
  - 0.7912211637268248
  - 0.8393402158284547
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.844459385009011
  - 0.814100580270793
  - 0.8601093589894724
  - 0.809056616684772
  - 0.8560146906309168
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8474105461393596
  - 0.8081400966183574
  - 0.8388425925925926
  - 0.7882
  - 0.8446618357487924
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8240329071984173
  - 0.8022974974993191
  - 0.843655430619999
  - 0.7917901284227746
  - 0.8368130740286582
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8737827224790484
  - 0.8617087087931763
  - 0.8794219750247966
  - 0.8757768896559702
  - 0.8703317926430381
  train_average_precision_macro_oob:
  - 0.8639107019908562
  - 0.8502511129149831
  - 0.8680880251886142
  - 0.8622188680253569
  - 0.8564102795916645
  train_average_precision_micro:
  - 0.8780620278695046
  - 0.8611413090979784
  - 0.883973653532616
  - 0.883478198550923
  - 0.8746223594227699
  train_average_precision_micro_oob:
  - 0.8695373525939122
  - 0.8502737382116347
  - 0.8742996755179391
  - 0.8713527894368595
  - 0.8619392412222252
  train_average_precision_samples:
  - 0.891046783625731
  - 0.8910739191073919
  - 0.8933579985905568
  - 0.8947412155745489
  - 0.8963737796373781
  train_average_precision_samples_oob:
  - 0.8789824561403509
  - 0.8695722919572292
  - 0.8840556730091614
  - 0.8859271130104462
  - 0.8899000464900046
  train_average_precision_weighted:
  - 0.8749523021876209
  - 0.863450478871676
  - 0.8800719910031386
  - 0.8780208823784671
  - 0.8721444392890564
  train_average_precision_weighted_oob:
  - 0.8659531387432616
  - 0.8526861083785906
  - 0.8696488516586344
  - 0.8653189694748911
  - 0.8589621931605144
  train_f1_macro:
  - 0.830877192982456
  - 0.8305439330543933
  - 0.8322762508809021
  - 0.8237179487179486
  - 0.8253138075313808
  train_f1_macro_oob:
  - 0.8203508771929826
  - 0.8134588563458857
  - 0.8132487667371389
  - 0.8073361823361823
  - 0.8099721059972106
  train_f1_micro:
  - 0.8308771929824561
  - 0.8305439330543933
  - 0.8322762508809021
  - 0.8237179487179487
  - 0.8253138075313807
  train_f1_micro_oob:
  - 0.8203508771929825
  - 0.8134588563458857
  - 0.8132487667371389
  - 0.8073361823361823
  - 0.8099721059972106
  train_f1_samples:
  - 0.8308771929824562
  - 0.8305439330543933
  - 0.832276250880902
  - 0.8237179487179487
  - 0.8253138075313807
  train_f1_samples_oob:
  - 0.8203508771929825
  - 0.8134588563458857
  - 0.8132487667371389
  - 0.8073361823361823
  - 0.8099721059972106
  train_f1_weighted:
  - 0.8258528210289503
  - 0.8245175091409401
  - 0.8256469416113894
  - 0.8181399897859876
  - 0.8202665286214316
  train_f1_weighted_oob:
  - 0.8155088508673258
  - 0.8081344943269628
  - 0.8065908554621488
  - 0.8004340955299243
  - 0.8043256284461836
  train_jaccard_macro:
  - 0.7115393143360853
  - 0.7114502560906866
  - 0.714357495653708
  - 0.7013497337490442
  - 0.7033727084455889
  train_jaccard_macro_oob:
  - 0.6963054339602465
  - 0.6868883692914028
  - 0.6870831227029587
  - 0.6784659080039911
  - 0.6817926558231461
  train_jaccard_micro:
  - 0.7106842737094838
  - 0.7101967799642218
  - 0.7127338563669282
  - 0.7002724795640327
  - 0.7025823686553874
  train_jaccard_micro_oob:
  - 0.6954193932183225
  - 0.6855715545107258
  - 0.6852731591448931
  - 0.6769184831292924
  - 0.6806328743041312
  train_jaccard_samples:
  - 0.7333333333333332
  - 0.7313707909942219
  - 0.7350750025168629
  - 0.7212555962555962
  - 0.72365012950787
  train_jaccard_samples_oob:
  - 0.7180451127819548
  - 0.7062661884837617
  - 0.7069364743783347
  - 0.698056573056573
  - 0.7014843594341502
  train_jaccard_weighted:
  - 0.7043056488286077
  - 0.7028226092076418
  - 0.7049098670096305
  - 0.6934514685092973
  - 0.6962075329797915
  train_jaccard_weighted_oob:
  - 0.6894110269740875
  - 0.6793803940325741
  - 0.6778653299988495
  - 0.6690081121730359
  - 0.6739294675694308
  train_label_ranking_average_precision_score:
  - 0.8910467836257302
  - 0.8910739191073911
  - 0.8933579985905565
  - 0.8947412155745489
  - 0.8963737796373773
  train_label_ranking_average_precision_score_oob:
  - 0.8789824561403501
  - 0.8695722919572286
  - 0.8840556730091605
  - 0.8859271130104459
  - 0.889900046490004
  train_matthews_corrcoef_macro:
  - 0.6014974491331989
  - 0.5998319071609411
  - 0.6079872394248458
  - 0.5878860712976851
  - 0.5800156805480631
  train_matthews_corrcoef_macro_oob:
  - 0.5736635964294787
  - 0.5520433767630808
  - 0.5568885344961078
  - 0.547786017798562
  - 0.5387514204743608
  train_matthews_corrcoef_micro:
  - 0.6057866673249883
  - 0.6020535674041936
  - 0.6098929854968868
  - 0.5918923586127065
  - 0.5864729888271657
  train_matthews_corrcoef_micro_oob:
  - 0.5794321267673407
  - 0.5584679972999592
  - 0.5616209375084797
  - 0.550683607351049
  - 0.5460831681343853
  train_matthews_corrcoef_samples:
  - 0.5049325972306375
  - 0.5098605656885985
  - 0.5182449369094934
  - 0.5049923846515733
  - 0.4896307450959498
  train_matthews_corrcoef_samples_oob:
  - 0.4700452849271413
  - 0.45427170932006145
  - 0.45606465327889717
  - 0.453980544079107
  - 0.4370910483125145
  train_matthews_corrcoef_weighted:
  - 0.6009281451835965
  - 0.597042083531176
  - 0.6043789011580171
  - 0.5867444689268965
  - 0.5810921529883739
  train_matthews_corrcoef_weighted_oob:
  - 0.5741512186793939
  - 0.5520310532779733
  - 0.5548646964544467
  - 0.5453147375580606
  - 0.5396425868314514
  train_ndgc:
  - 0.9272599849826101
  - 0.9279523085437037
  - 0.9293275033021118
  - 0.9326974166742856
  - 0.9308828139342155
  train_ndgc_oob:
  - 0.9193796092665579
  - 0.9129874894338451
  - 0.9239017617427048
  - 0.9271892960667523
  - 0.9275554651759538
  train_neg_coverage_error:
  - -2.389473684210526
  - -2.401673640167364
  - -2.4228329809725158
  - -2.4551282051282053
  - -2.3619246861924688
  train_neg_coverage_error_oob:
  - -2.477894736842105
  - -2.489539748953975
  - -2.482029598308668
  - -2.5235042735042734
  - -2.422594142259414
  train_neg_hamming_loss_macro:
  - -0.16912280701754387
  - -0.1694560669456067
  - -0.16772374911909796
  - -0.1762820512820513
  - -0.17468619246861924
  train_neg_hamming_loss_macro_oob:
  - -0.17964912280701753
  - -0.18654114365411437
  - -0.18675123326286117
  - -0.19266381766381765
  - -0.1900278940027894
  train_neg_hamming_loss_micro:
  - -0.16912280701754387
  - -0.1694560669456067
  - -0.16772374911909796
  - -0.1762820512820513
  - -0.17468619246861924
  train_neg_hamming_loss_micro_oob:
  - -0.17964912280701753
  - -0.18654114365411437
  - -0.18675123326286117
  - -0.19266381766381765
  - -0.1900278940027894
  train_neg_hamming_loss_samples:
  - -0.16912280701754384
  - -0.1694560669456067
  - -0.16772374911909796
  - -0.1762820512820513
  - -0.17468619246861924
  train_neg_hamming_loss_samples_oob:
  - -0.17964912280701753
  - -0.18654114365411434
  - -0.18675123326286117
  - -0.19266381766381765
  - -0.19002789400278938
  train_neg_hamming_loss_weighted:
  - -0.17414717897104967
  - -0.17548249085905987
  - -0.17435305838861068
  - -0.18186001021401244
  - -0.1797334713785685
  train_neg_hamming_loss_weighted_oob:
  - -0.18449114913267423
  - -0.19186550567303706
  - -0.19340914453785116
  - -0.19956590447007586
  - -0.19567437155381623
  train_neg_label_ranking_loss:
  - -0.088
  - -0.09069618781961877
  - -0.09378083157152925
  - -0.08787986704653372
  - -0.08677940492794049
  train_neg_label_ranking_loss_oob:
  - -0.10371345029239767
  - -0.1064911668991167
  - -0.10253699788583509
  - -0.0975130579297246
  - -0.09529869827986982
  train_precision_macro:
  - 0.830877192982456
  - 0.8305439330543933
  - 0.8322762508809021
  - 0.8237179487179486
  - 0.8253138075313808
  train_precision_macro_oob:
  - 0.8203508771929826
  - 0.8134588563458857
  - 0.8132487667371389
  - 0.8073361823361823
  - 0.8099721059972106
  train_precision_micro:
  - 0.8308771929824561
  - 0.8305439330543933
  - 0.8322762508809021
  - 0.8237179487179487
  - 0.8253138075313807
  train_precision_micro_oob:
  - 0.8203508771929825
  - 0.8134588563458857
  - 0.8132487667371389
  - 0.8073361823361823
  - 0.8099721059972106
  train_precision_samples:
  - 0.8308771929824562
  - 0.8305439330543933
  - 0.832276250880902
  - 0.8237179487179487
  - 0.8253138075313807
  train_precision_samples_oob:
  - 0.8203508771929825
  - 0.8134588563458857
  - 0.8132487667371389
  - 0.8073361823361823
  - 0.8099721059972106
  train_precision_weighted:
  - 0.8258528210289503
  - 0.8245175091409401
  - 0.8256469416113894
  - 0.8181399897859876
  - 0.8202665286214316
  train_precision_weighted_oob:
  - 0.8155088508673258
  - 0.8081344943269628
  - 0.8065908554621488
  - 0.8004340955299243
  - 0.8043256284461836
  train_recall_macro:
  - 0.830877192982456
  - 0.8305439330543933
  - 0.8322762508809021
  - 0.8237179487179486
  - 0.8253138075313808
  train_recall_macro_oob:
  - 0.8203508771929826
  - 0.8134588563458857
  - 0.8132487667371389
  - 0.8073361823361823
  - 0.8099721059972106
  train_recall_micro:
  - 0.8308771929824561
  - 0.8305439330543933
  - 0.8322762508809021
  - 0.8237179487179487
  - 0.8253138075313807
  train_recall_micro_oob:
  - 0.8203508771929825
  - 0.8134588563458857
  - 0.8132487667371389
  - 0.8073361823361823
  - 0.8099721059972106
  train_recall_samples:
  - 0.8308771929824562
  - 0.8305439330543933
  - 0.832276250880902
  - 0.8237179487179487
  - 0.8253138075313807
  train_recall_samples_oob:
  - 0.8203508771929825
  - 0.8134588563458857
  - 0.8132487667371389
  - 0.8073361823361823
  - 0.8099721059972106
  train_recall_weighted:
  - 0.8258528210289503
  - 0.8245175091409401
  - 0.8256469416113894
  - 0.8181399897859876
  - 0.8202665286214316
  train_recall_weighted_oob:
  - 0.8155088508673258
  - 0.8081344943269628
  - 0.8065908554621488
  - 0.8004340955299243
  - 0.8043256284461836
  train_roc_auc_macro:
  - 0.9161967197721439
  - 0.9080760800048187
  - 0.9209060242219271
  - 0.9149529489104227
  - 0.9133462529592054
  train_roc_auc_macro_oob:
  - 0.9087638746167852
  - 0.8984958930527099
  - 0.913158576231158
  - 0.9068951226636995
  - 0.905590836562709
  train_roc_auc_micro:
  - 0.9216946428356324
  - 0.91119812994813
  - 0.9247447468618122
  - 0.9237209105789157
  - 0.9196028441395746
  train_roc_auc_micro_oob:
  - 0.91492139464209
  - 0.9018592456092457
  - 0.9178624900825583
  - 0.9156477947705507
  - 0.9126410202068269
  train_roc_auc_samples:
  - 0.9120000000000001
  - 0.9093038121803813
  - 0.9062191684284707
  - 0.9121201329534664
  - 0.9132205950720595
  train_roc_auc_samples_oob:
  - 0.8962865497076024
  - 0.8935088331008834
  - 0.8974630021141649
  - 0.9024869420702754
  - 0.9047013017201302
  train_roc_auc_weighted:
  - 0.9147995401551633
  - 0.9068005937793336
  - 0.9186766465337964
  - 0.9144902359369375
  - 0.9128180456417073
  train_roc_auc_weighted_oob:
  - 0.9078121618951147
  - 0.8976907083468999
  - 0.9115775713671372
  - 0.9067909134858609
  - 0.9053588310904701
start: 2023-12-22 04:48:09.812753
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
