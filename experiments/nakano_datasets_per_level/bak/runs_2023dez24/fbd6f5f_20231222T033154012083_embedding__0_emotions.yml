active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          kJmZmZmZGcDAmZmZmZn5P8CZmZmZmfk/AJmZmZmZ2b/gzMzMzMwMQA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 03:32:03.033214
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 0
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__0
  params: {}
hash: fbd6f5f75b0fa20d38c12868dbefbc65606579d5e1e9d1c5b475cf2628688c80
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/fbd6f5f_20231222T033154012083_embedding__0_emotions.yml
results:
  fit_time:
  - 1.0437586307525635
  - 1.0650062561035156
  - 1.0346930027008057
  - 1.073427438735962
  - 1.0817670822143555
  score_time:
  - 1.156637191772461
  - 1.1199886798858643
  - 1.135040283203125
  - 1.187798261642456
  - 1.1322176456451416
  test_average_precision_macro:
  - 0.7178662913172342
  - 0.7746747619158634
  - 0.7525085602840869
  - 0.6961969970112704
  - 0.7291458129807932
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7086062084453351
  - 0.7764771753789247
  - 0.740972995424949
  - 0.7057856730509142
  - 0.7434543065369386
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7984888888888889
  - 0.8231956315289649
  - 0.8235280151946819
  - 0.7670634920634922
  - 0.8252898550724639
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7161846729432576
  - 0.7782607893961164
  - 0.7459252507615888
  - 0.7006875139455898
  - 0.7368254667205125
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7066666666666666
  - 0.6880341880341881
  - 0.6837606837606839
  - 0.6904761904761906
  - 0.681159420289855
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7066666666666667
  - 0.688034188034188
  - 0.6837606837606838
  - 0.6904761904761905
  - 0.6811594202898551
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7066666666666667
  - 0.6880341880341883
  - 0.6837606837606839
  - 0.6904761904761905
  - 0.6811594202898551
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6937454545454546
  - 0.6741356741356741
  - 0.6702856702856702
  - 0.6788931788931789
  - 0.6676067371719545
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5496896406612702
  - 0.5284142926557506
  - 0.5230050486667069
  - 0.530325408902165
  - 0.5201216853680648
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5463917525773195
  - 0.5244299674267101
  - 0.5194805194805194
  - 0.5272727272727272
  - 0.5164835164835165
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.557142857142857
  - 0.5343915343915343
  - 0.5305250305250305
  - 0.5390156062424971
  - 0.5293995859213251
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.535148952291124
  - 0.5131899394399237
  - 0.5083353866485213
  - 0.5175820432405849
  - 0.5055244018603351
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7984888888888887
  - 0.8231956315289649
  - 0.8235280151946817
  - 0.767063492063492
  - 0.8252898550724637
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.04604218762109021
  - 0.0
  - 0.023769134427076417
  - 0.04849544577365803
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.09633102268753534
  - 0.0
  - 0.055752108825154904
  - 0.07828295628360182
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.016216808513683997
  - 0.0
  - 0.0053147523700308895
  - 0.010999226644063928
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.037331503476559634
  - 0.0
  - 0.022484316349937153
  - 0.04412502056677842
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8589802696945025
  - 0.8811652657473397
  - 0.88098491407387
  - 0.8386919674648491
  - 0.8840187942429321
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.584
  - -2.717948717948718
  - -2.6495726495726495
  - -2.8487394957983194
  - -2.765217391304348
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.29333333333333333
  - -0.31196581196581197
  - -0.3162393162393162
  - -0.3095238095238095
  - -0.31884057971014496
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.29333333333333333
  - -0.31196581196581197
  - -0.3162393162393162
  - -0.30952380952380953
  - -0.3188405797101449
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.29333333333333333
  - -0.311965811965812
  - -0.3162393162393163
  - -0.3095238095238096
  - -0.31884057971014496
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3062545454545454
  - -0.32586432586432584
  - -0.3297143297143297
  - -0.3211068211068211
  - -0.33239326282804543
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.15186666666666668
  - -0.14083570750237417
  - -0.1353988603988604
  - -0.18186274509803918
  - -0.14606280193236718
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7066666666666666
  - 0.6880341880341881
  - 0.6837606837606839
  - 0.6904761904761906
  - 0.681159420289855
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7066666666666667
  - 0.688034188034188
  - 0.6837606837606838
  - 0.6904761904761905
  - 0.6811594202898551
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7066666666666667
  - 0.6880341880341883
  - 0.6837606837606839
  - 0.6904761904761905
  - 0.6811594202898551
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6937454545454546
  - 0.6741356741356741
  - 0.6702856702856702
  - 0.6788931788931789
  - 0.6676067371719545
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7066666666666666
  - 0.6880341880341881
  - 0.6837606837606839
  - 0.6904761904761906
  - 0.681159420289855
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7066666666666667
  - 0.688034188034188
  - 0.6837606837606838
  - 0.6904761904761905
  - 0.6811594202898551
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7066666666666667
  - 0.6880341880341883
  - 0.6837606837606839
  - 0.6904761904761905
  - 0.6811594202898551
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6937454545454546
  - 0.6741356741356741
  - 0.6702856702856702
  - 0.6788931788931789
  - 0.6676067371719545
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8596923479417787
  - 0.858063219170115
  - 0.8581726466428933
  - 0.823751924302417
  - 0.8400632354888163
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8740308747855918
  - 0.8753096846846846
  - 0.8766516516516517
  - 0.8398154251812788
  - 0.8578771078771079
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8481333333333334
  - 0.8591642924976258
  - 0.8646011396011396
  - 0.8181372549019608
  - 0.8539371980676329
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.856786329201102
  - 0.8585788634359718
  - 0.8522801304983213
  - 0.824189758903112
  - 0.8427338731985374
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8930233637736306
  - 0.8803341563753734
  - 0.884930821195181
  - 0.8924801499007814
  - 0.8782701708619415
  train_average_precision_macro_oob:
  - 0.7222234070572314
  - 0.7145321709805059
  - 0.724604147194828
  - 0.7236014173853142
  - 0.7114642921446883
  train_average_precision_micro:
  - 0.8896858731808611
  - 0.8794213499753192
  - 0.886347910048753
  - 0.8916298120142998
  - 0.8779247233449164
  train_average_precision_micro_oob:
  - 0.7264540346421867
  - 0.7218930845318814
  - 0.7349471608734305
  - 0.7358530725343155
  - 0.7242646628326331
  train_average_precision_samples:
  - 0.8932395536562202
  - 0.8937266573295986
  - 0.8863678804855276
  - 0.9055379746835444
  - 0.8851348210134821
  train_average_precision_samples_oob:
  - 0.8052350427350426
  - 0.804014939309057
  - 0.8069736227824462
  - 0.8105836849507735
  - 0.7954265457926546
  train_average_precision_weighted:
  - 0.8941263544063465
  - 0.8828873514697302
  - 0.8875220993951968
  - 0.8948931280607303
  - 0.8799340690179244
  train_average_precision_weighted_oob:
  - 0.7230274414618164
  - 0.717563529451612
  - 0.7287896082294433
  - 0.7276000883016246
  - 0.7125151334925489
  train_f1_macro:
  - 0.7022792022792023
  - 0.7111344537815126
  - 0.7069327731092437
  - 0.7074542897327708
  - 0.710599721059972
  train_f1_macro_oob:
  - 0.6844729344729346
  - 0.6915266106442578
  - 0.6904761904761906
  - 0.6898734177215191
  - 0.6942119944211994
  train_f1_micro:
  - 0.7022792022792023
  - 0.7111344537815126
  - 0.7069327731092437
  - 0.7074542897327707
  - 0.7105997210599722
  train_f1_micro_oob:
  - 0.6844729344729344
  - 0.6915266106442577
  - 0.6904761904761905
  - 0.689873417721519
  - 0.6942119944211994
  train_f1_samples:
  - 0.7022792022792022
  - 0.7111344537815126
  - 0.7069327731092437
  - 0.7074542897327708
  - 0.710599721059972
  train_f1_samples_oob:
  - 0.6844729344729344
  - 0.6915266106442577
  - 0.6904761904761905
  - 0.689873417721519
  - 0.6942119944211994
  train_f1_weighted:
  - 0.6918577231077232
  - 0.6997956067302767
  - 0.697201566856991
  - 0.6944142831290301
  - 0.698881721242574
  train_f1_weighted_oob:
  - 0.6717534842534842
  - 0.6786259650587096
  - 0.677679875561963
  - 0.6763460677581887
  - 0.6811134618472378
  train_jaccard_macro:
  - 0.5435895891880174
  - 0.5547380211982077
  - 0.5488723290607862
  - 0.5510751907030751
  - 0.5542291144239182
  train_jaccard_macro_oob:
  - 0.5236126008197278
  - 0.5319009860040638
  - 0.5306392342969761
  - 0.5302198278267328
  - 0.5351976724957143
  train_jaccard_micro:
  - 0.5411635565312843
  - 0.5517522412387939
  - 0.5467099918765231
  - 0.5473340587595212
  - 0.5511087074094105
  train_jaccard_micro_oob:
  - 0.5203031943692474
  - 0.5284987958255285
  - 0.5272727272727272
  - 0.5265700483091788
  - 0.5316421895861149
  train_jaccard_samples:
  - 0.5553011803011803
  - 0.5659263705482194
  - 0.5607242897158864
  - 0.5612818967249347
  - 0.5646045028890216
  train_jaccard_samples_oob:
  - 0.5315425315425315
  - 0.5404161664665865
  - 0.5384153661464586
  - 0.537823990355636
  - 0.5427375971309026
  train_jaccard_weighted:
  - 0.5318230647264687
  - 0.5417184468588042
  - 0.5376813355835439
  - 0.5362929250858474
  - 0.54082124341083
  train_jaccard_weighted_oob:
  - 0.5097675872705282
  - 0.5177244794446488
  - 0.5165972228306293
  - 0.5153672574204614
  - 0.5207184862631586
  train_label_ranking_average_precision_score:
  - 0.8932395536562191
  - 0.8937266573295976
  - 0.886367880485527
  - 0.9055379746835436
  - 0.8851348210134813
  train_label_ranking_average_precision_score_oob:
  - 0.8052350427350415
  - 0.8040149393090562
  - 0.806973622782445
  - 0.8105836849507724
  - 0.7954265457926538
  train_matthews_corrcoef_macro:
  - 0.15646449875150284
  - 0.18674197297874465
  - 0.15797338421159612
  - 0.17863338358497918
  - 0.18388895170337016
  train_matthews_corrcoef_macro_oob:
  - 0.02171945832497234
  - 0.04503170288300523
  - 0.018751465015433733
  - 0.03171964978381503
  - 0.05231351450893584
  train_matthews_corrcoef_micro:
  - 0.20197899022825544
  - 0.2202877076094314
  - 0.1970121841731249
  - 0.20681606039416295
  - 0.21106747730946104
  train_matthews_corrcoef_micro_oob:
  - 0.03925683620716972
  - 0.05860488943103359
  - 0.03947337546607374
  - 0.04982651791694841
  - 0.08391684378984207
  train_matthews_corrcoef_samples:
  - 0.076128428306501
  - 0.07704166835451287
  - 0.07068934730820732
  - 0.07688367618335179
  - 0.07696297831450039
  train_matthews_corrcoef_samples_oob:
  - 0.002702801418947333
  - 0.008324112731446174
  - 0.0022682124528017517
  - 0.007822830280839202
  - 0.0119020091698786
  train_matthews_corrcoef_weighted:
  - 0.16438927937149825
  - 0.18918333028532722
  - 0.16603176492092914
  - 0.17625394690938462
  - 0.1847219054618765
  train_matthews_corrcoef_weighted_oob:
  - 0.022754667174270223
  - 0.040866475562915956
  - 0.015111225757358562
  - 0.02513355497028817
  - 0.04615949139698746
  train_ndgc:
  - 0.9305923829977065
  - 0.9302760068793536
  - 0.9246806172406931
  - 0.9391077757975769
  - 0.9233999512760414
  train_ndgc_oob:
  - 0.8703568674662939
  - 0.8672412184634455
  - 0.8687286762928854
  - 0.8718547319545742
  - 0.859165147495092
  train_neg_coverage_error:
  - -2.393162393162393
  - -2.369747899159664
  - -2.407563025210084
  - -2.3438818565400843
  - -2.3786610878661087
  train_neg_coverage_error_oob:
  - -2.824786324786325
  - -2.735294117647059
  - -2.7331932773109244
  - -2.7531645569620253
  - -2.717573221757322
  train_neg_hamming_loss_macro:
  - -0.29772079772079774
  - -0.2888655462184874
  - -0.2930672268907563
  - -0.29254571026722925
  - -0.2894002789400279
  train_neg_hamming_loss_macro_oob:
  - -0.3155270655270655
  - -0.30847338935574226
  - -0.3095238095238095
  - -0.310126582278481
  - -0.30578800557880054
  train_neg_hamming_loss_micro:
  - -0.29772079772079774
  - -0.28886554621848737
  - -0.2930672268907563
  - -0.29254571026722925
  - -0.2894002789400279
  train_neg_hamming_loss_micro_oob:
  - -0.31552706552706555
  - -0.3084733893557423
  - -0.30952380952380953
  - -0.310126582278481
  - -0.30578800557880054
  train_neg_hamming_loss_samples:
  - -0.2977207977207977
  - -0.28886554621848737
  - -0.2930672268907563
  - -0.2925457102672293
  - -0.28940027894002784
  train_neg_hamming_loss_samples_oob:
  - -0.3155270655270655
  - -0.30847338935574226
  - -0.3095238095238095
  - -0.310126582278481
  - -0.30578800557880054
  train_neg_hamming_loss_weighted:
  - -0.30814227689227686
  - -0.30020439326972326
  - -0.30279843314300886
  - -0.3055857168709698
  - -0.30111827875742603
  train_neg_hamming_loss_weighted_oob:
  - -0.3282465157465157
  - -0.32137403494129024
  - -0.32232012443803704
  - -0.3236539322418112
  - -0.31888653815276213
  train_neg_label_ranking_loss:
  - -0.08001543209876544
  - -0.08293650793650793
  - -0.09145074696545284
  - -0.07535161744022503
  - -0.08928986517898652
  train_neg_label_ranking_loss_oob:
  - -0.15841642924976257
  - -0.15587068160597572
  - -0.15586484593837535
  - -0.1536333802156587
  - -0.15685727568572755
  train_precision_macro:
  - 0.7022792022792023
  - 0.7111344537815126
  - 0.7069327731092437
  - 0.7074542897327708
  - 0.710599721059972
  train_precision_macro_oob:
  - 0.6844729344729346
  - 0.6915266106442578
  - 0.6904761904761906
  - 0.6898734177215191
  - 0.6942119944211994
  train_precision_micro:
  - 0.7022792022792023
  - 0.7111344537815126
  - 0.7069327731092437
  - 0.7074542897327707
  - 0.7105997210599722
  train_precision_micro_oob:
  - 0.6844729344729344
  - 0.6915266106442577
  - 0.6904761904761905
  - 0.689873417721519
  - 0.6942119944211994
  train_precision_samples:
  - 0.7022792022792022
  - 0.7111344537815126
  - 0.7069327731092437
  - 0.7074542897327708
  - 0.710599721059972
  train_precision_samples_oob:
  - 0.6844729344729344
  - 0.6915266106442577
  - 0.6904761904761905
  - 0.689873417721519
  - 0.6942119944211994
  train_precision_weighted:
  - 0.6918577231077232
  - 0.6997956067302767
  - 0.697201566856991
  - 0.6944142831290301
  - 0.698881721242574
  train_precision_weighted_oob:
  - 0.6717534842534842
  - 0.6786259650587096
  - 0.677679875561963
  - 0.6763460677581887
  - 0.6811134618472378
  train_recall_macro:
  - 0.7022792022792023
  - 0.7111344537815126
  - 0.7069327731092437
  - 0.7074542897327708
  - 0.710599721059972
  train_recall_macro_oob:
  - 0.6844729344729346
  - 0.6915266106442578
  - 0.6904761904761906
  - 0.6898734177215191
  - 0.6942119944211994
  train_recall_micro:
  - 0.7022792022792023
  - 0.7111344537815126
  - 0.7069327731092437
  - 0.7074542897327707
  - 0.7105997210599722
  train_recall_micro_oob:
  - 0.6844729344729344
  - 0.6915266106442577
  - 0.6904761904761905
  - 0.689873417721519
  - 0.6942119944211994
  train_recall_samples:
  - 0.7022792022792022
  - 0.7111344537815126
  - 0.7069327731092437
  - 0.7074542897327708
  - 0.710599721059972
  train_recall_samples_oob:
  - 0.6844729344729344
  - 0.6915266106442577
  - 0.6904761904761905
  - 0.689873417721519
  - 0.6942119944211994
  train_recall_weighted:
  - 0.6918577231077232
  - 0.6997956067302767
  - 0.697201566856991
  - 0.6944142831290301
  - 0.698881721242574
  train_recall_weighted_oob:
  - 0.6717534842534842
  - 0.6786259650587096
  - 0.677679875561963
  - 0.6763460677581887
  - 0.6811134618472378
  train_roc_auc_macro:
  - 0.9303486121730152
  - 0.9272859090179709
  - 0.9250889349808276
  - 0.9322129731713348
  - 0.9238081680164557
  train_roc_auc_macro_oob:
  - 0.8405750637841848
  - 0.8421553865644492
  - 0.8423377199355397
  - 0.8499825546945546
  - 0.8429444071293962
  train_roc_auc_micro:
  - 0.9358776745495495
  - 0.9311942111354288
  - 0.9309931134053695
  - 0.9365726532579196
  - 0.9295482138342145
  train_roc_auc_micro_oob:
  - 0.8620061467717717
  - 0.8601425444878597
  - 0.861091886193581
  - 0.8665485350371342
  - 0.86312876839638
  train_roc_auc_samples:
  - 0.9199845679012346
  - 0.9170634920634921
  - 0.9085492530345471
  - 0.9246483825597749
  - 0.9107101348210135
  train_roc_auc_samples_oob:
  - 0.8415835707502374
  - 0.8441293183940243
  - 0.8441351540616246
  - 0.8463666197843414
  - 0.8431427243142725
  train_roc_auc_weighted:
  - 0.9294753805786674
  - 0.9271356304862627
  - 0.9254121065720954
  - 0.9321418548924553
  - 0.9226725024316225
  train_roc_auc_weighted_oob:
  - 0.8405753321091515
  - 0.8423814131628217
  - 0.8429705830961309
  - 0.8499297867363143
  - 0.8412179405246447
start: 2023-12-22 03:31:54.012083
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
