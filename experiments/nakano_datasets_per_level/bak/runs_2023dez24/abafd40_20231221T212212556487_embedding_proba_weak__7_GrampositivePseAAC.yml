active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz878AMzMzMzPzvwCYmZmZmcm/gGZmZmZmBkAAmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 21:26:28.501891
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 7
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__7
  params: {}
hash: abafd4077b7ae573df25685c11c921e27e10879218861ba23c555707393c230c
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/abafd40_20231221T212212556487_embedding_proba_weak__7_GrampositivePseAAC.yml
results:
  fit_time:
  - 225.21374678611755
  - 227.07065343856812
  - 232.00568437576294
  - 233.51594495773315
  - 235.88552737236023
  score_time:
  - 5.764791250228882
  - 6.026179552078247
  - 6.274758577346802
  - 6.102339029312134
  - 5.962986469268799
  test_average_precision_macro:
  - 0.3743612093108851
  - 0.40658790433784653
  - 0.37294230653160043
  - 0.359213300610533
  - 0.36547881704982205
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.4388671303340452
  - 0.4422037773004876
  - 0.4890914011688493
  - 0.4735057379852985
  - 0.4742974703096935
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6976190476190476
  - 0.6642857142857141
  - 0.7003205128205129
  - 0.7087458745874587
  - 0.6979166666666666
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.44374894172564644
  - 0.4494743204671446
  - 0.4812933220748211
  - 0.45789206199003246
  - 0.4622953546142489
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7476190476190476
  - 0.7523809523809524
  - 0.7524038461538461
  - 0.745049504950495
  - 0.7548076923076923
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7476190476190476
  - 0.7523809523809524
  - 0.7524038461538461
  - 0.745049504950495
  - 0.7548076923076923
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7476190476190476
  - 0.7523809523809524
  - 0.7524038461538461
  - 0.745049504950495
  - 0.7548076923076923
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6675736961451247
  - 0.681451247165533
  - 0.6791789940828402
  - 0.670887281035796
  - 0.6797619047619048
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6196869946869947
  - 0.6227844128154519
  - 0.6231637653395525
  - 0.61443193873294
  - 0.6268191666658375
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.596958174904943
  - 0.6030534351145038
  - 0.603082851637765
  - 0.5936883629191322
  - 0.6061776061776062
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5987301587301586
  - 0.6038095238095237
  - 0.6064102564102563
  - 0.596039603960396
  - 0.6102564102564101
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5077385077385077
  - 0.5232508379468253
  - 0.5211380420900661
  - 0.5115588544746867
  - 0.5200653621966473
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6976190476190476
  - 0.6642857142857144
  - 0.7003205128205127
  - 0.7087458745874589
  - 0.6979166666666669
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - -0.005834500350116708
  - 0.03466876226407682
  - 0.022460379552223513
  - 0.030242918945456693
  - 0.04536115870351023
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.016323403562479726
  - 0.08461621909897774
  - 0.08915208398843485
  - 0.0846041048200115
  - 0.13904102699198204
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0031746031746031755
  - 0.009523809523809525
  - 0.022435897435897436
  - 0.009900990099009901
  - 0.035256410256410256
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - -0.009335200560186732
  - 0.04622501635210243
  - 0.03628215158436106
  - 0.04769075679860479
  - 0.07257785392561636
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7746176204850599
  - 0.7497135455367993
  - 0.776745467240469
  - 0.7845944862354655
  - 0.7753811833703087
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.7904761904761906
  - -1.8857142857142857
  - -1.7788461538461537
  - -1.801980198019802
  - -1.7980769230769231
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2523809523809524
  - -0.24761904761904763
  - -0.24759615384615385
  - -0.25495049504950495
  - -0.2451923076923077
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2523809523809524
  - -0.24761904761904763
  - -0.24759615384615385
  - -0.25495049504950495
  - -0.24519230769230768
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2523809523809524
  - -0.24761904761904763
  - -0.24759615384615385
  - -0.25495049504950495
  - -0.24519230769230768
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3324263038548752
  - -0.3185487528344671
  - -0.32082100591715973
  - -0.3291127189642041
  - -0.3202380952380952
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.26349206349206344
  - -0.2952380952380953
  - -0.2596153846153846
  - -0.2541254125412541
  - -0.2620192307692308
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7476190476190476
  - 0.7523809523809524
  - 0.7524038461538461
  - 0.745049504950495
  - 0.7548076923076923
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7476190476190476
  - 0.7523809523809524
  - 0.7524038461538461
  - 0.745049504950495
  - 0.7548076923076923
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7476190476190476
  - 0.7523809523809524
  - 0.7524038461538461
  - 0.745049504950495
  - 0.7548076923076923
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6675736961451247
  - 0.681451247165533
  - 0.6791789940828402
  - 0.670887281035796
  - 0.6797619047619048
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7476190476190476
  - 0.7523809523809524
  - 0.7524038461538461
  - 0.745049504950495
  - 0.7548076923076923
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7476190476190476
  - 0.7523809523809524
  - 0.7524038461538461
  - 0.745049504950495
  - 0.7548076923076923
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7476190476190476
  - 0.7523809523809524
  - 0.7524038461538461
  - 0.745049504950495
  - 0.7548076923076923
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6675736961451247
  - 0.681451247165533
  - 0.6791789940828402
  - 0.670887281035796
  - 0.6797619047619048
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6395580732292917
  - 0.6541472513540554
  - 0.6135294470610826
  - 0.5921977302933426
  - 0.6792880583554806
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7300075585789871
  - 0.7391383219954649
  - 0.7479967948717948
  - 0.7348397435897436
  - 0.7547389373755934
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7365079365079366
  - 0.7047619047619046
  - 0.7403846153846154
  - 0.745874587458746
  - 0.7379807692307693
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5846268507402961
  - 0.6152487034417727
  - 0.6247470976604041
  - 0.5903801739497616
  - 0.637487745031056
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7515691203197381
  - 0.7591117166493268
  - 0.7496545448811616
  - 0.7879558771861099
  - 0.7953233718616923
  train_average_precision_macro_oob:
  - 0.6663332639106365
  - 0.6593854925462901
  - 0.6356850030235591
  - 0.677789739474513
  - 0.7078688645012458
  train_average_precision_micro:
  - 0.8087602893994105
  - 0.8162664524350882
  - 0.8188526487744865
  - 0.8256835244942916
  - 0.8338259287949862
  train_average_precision_micro_oob:
  - 0.7840456101833553
  - 0.7916879165628428
  - 0.7969224729691519
  - 0.8031197908905077
  - 0.7937783865572017
  train_average_precision_samples:
  - 0.823268921095008
  - 0.8341384863123993
  - 0.8463855421686747
  - 0.851475279106858
  - 0.8552208835341365
  train_average_precision_samples_oob:
  - 0.8152173913043478
  - 0.8190418679549115
  - 0.8263052208835341
  - 0.8462918660287081
  - 0.834738955823293
  train_average_precision_weighted:
  - 0.800782587575676
  - 0.8072739512422334
  - 0.8064066955058372
  - 0.8237649242143299
  - 0.829863565673167
  train_average_precision_weighted_oob:
  - 0.7780901752326701
  - 0.7839009193654212
  - 0.784287193903504
  - 0.8005278144725608
  - 0.7936614331250313
  train_f1_macro:
  - 0.8677536231884058
  - 0.8701690821256038
  - 0.8656626506024097
  - 0.8708133971291867
  - 0.8698795180722891
  train_f1_macro_oob:
  - 0.8520531400966183
  - 0.8520531400966183
  - 0.8524096385542168
  - 0.8492822966507177
  - 0.8493975903614458
  train_f1_micro:
  - 0.8677536231884058
  - 0.8701690821256038
  - 0.8656626506024097
  - 0.8708133971291866
  - 0.8698795180722891
  train_f1_micro_oob:
  - 0.8520531400966184
  - 0.8520531400966184
  - 0.8524096385542169
  - 0.8492822966507177
  - 0.8493975903614458
  train_f1_samples:
  - 0.8677536231884058
  - 0.8701690821256038
  - 0.8656626506024097
  - 0.8708133971291866
  - 0.8698795180722891
  train_f1_samples_oob:
  - 0.8520531400966184
  - 0.8520531400966184
  - 0.8524096385542169
  - 0.8492822966507177
  - 0.8493975903614458
  train_f1_weighted:
  - 0.8337378360261656
  - 0.8355985484131937
  - 0.8294677516749576
  - 0.8367153509723537
  - 0.8363059895082724
  train_f1_weighted_oob:
  - 0.8135820447033262
  - 0.8132757783787533
  - 0.8134514190413203
  - 0.8076417992257711
  - 0.8101919640283624
  train_jaccard_macro:
  - 0.7719412898477778
  - 0.7757995156096344
  - 0.7693218560810893
  - 0.7767012724231244
  - 0.7751420903280821
  train_jaccard_macro_oob:
  - 0.7491188230609901
  - 0.7492309027814121
  - 0.749824936133114
  - 0.745885466573014
  - 0.7454013832000277
  train_jaccard_micro:
  - 0.7664
  - 0.7701763762693746
  - 0.7631439192777483
  - 0.7711864406779662
  - 0.7697228144989339
  train_jaccard_micro_oob:
  - 0.7422409258285113
  - 0.7422409258285113
  - 0.7427821522309711
  - 0.738045738045738
  - 0.7382198952879581
  train_jaccard_samples:
  - 0.7884057971014492
  - 0.7922705314009661
  - 0.7850602409638553
  - 0.793620414673046
  - 0.7918072289156626
  train_jaccard_samples_oob:
  - 0.7632850241545892
  - 0.7636070853462158
  - 0.7641767068273091
  - 0.7591706539074958
  - 0.759036144578313
  train_jaccard_weighted:
  - 0.7169588135677833
  - 0.7197324733050211
  - 0.7110282793538582
  - 0.7212823932132151
  - 0.7207886310328517
  train_jaccard_weighted_oob:
  - 0.688018043743499
  - 0.6874804469220611
  - 0.6877825249696524
  - 0.6801573871317267
  - 0.6834243887097277
  train_label_ranking_average_precision_score:
  - 0.8232689210950075
  - 0.8341384863123987
  - 0.8463855421686747
  - 0.8514752791068577
  - 0.8552208835341362
  train_label_ranking_average_precision_score_oob:
  - 0.8152173913043476
  - 0.819041867954911
  - 0.8263052208835341
  - 0.8462918660287079
  - 0.8347389558232928
  train_matthews_corrcoef_macro:
  - 0.4714787759576162
  - 0.4765029720955525
  - 0.46666248346479644
  - 0.4760884230008212
  - 0.4762929844604623
  train_matthews_corrcoef_macro_oob:
  - 0.43209788235270485
  - 0.42809373783226656
  - 0.4310188300046239
  - 0.4246642500395132
  - 0.42361679670293395
  train_matthews_corrcoef_micro:
  - 0.6360173218654083
  - 0.643261254346373
  - 0.6297038906029561
  - 0.6428440744756638
  - 0.6416077183856528
  train_matthews_corrcoef_micro_oob:
  - 0.5877933352893124
  - 0.5877933352893124
  - 0.5889034501639441
  - 0.5760477831345571
  - 0.5784194475472101
  train_matthews_corrcoef_samples:
  - 0.47659275622405434
  - 0.4862545919728466
  - 0.46821542428134577
  - 0.48564593301435405
  - 0.48369168869293705
  train_matthews_corrcoef_samples_oob:
  - 0.4137908238569046
  - 0.4148117169264948
  - 0.41622180917486473
  - 0.39952153110047844
  - 0.4017639778495635
  train_matthews_corrcoef_weighted:
  - 0.6028847432688027
  - 0.6103844020939901
  - 0.5970400651221154
  - 0.6103935430059378
  - 0.60854536125257
  train_matthews_corrcoef_weighted_oob:
  - 0.5547842486629029
  - 0.5544338830630716
  - 0.5561875899357734
  - 0.5438823370374453
  - 0.5452606673308202
  train_ndgc:
  - 0.8683918215452495
  - 0.8767093089931577
  - 0.885872980863157
  - 0.8893476279844774
  - 0.892169930148577
  train_ndgc_oob:
  - 0.8627863558923896
  - 0.8655136412852412
  - 0.8707283762896916
  - 0.8854089580942023
  - 0.8771328613065716
  train_neg_coverage_error:
  - -1.4734299516908214
  - -1.4371980676328502
  - -1.4072289156626505
  - -1.38755980861244
  - -1.3903614457831326
  train_neg_coverage_error_oob:
  - -1.5
  - -1.5
  - -1.4771084337349398
  - -1.4090909090909092
  - -1.453012048192771
  train_neg_hamming_loss_macro:
  - -0.1322463768115942
  - -0.12983091787439613
  - -0.13433734939759034
  - -0.1291866028708134
  - -0.13012048192771083
  train_neg_hamming_loss_macro_oob:
  - -0.14794685990338163
  - -0.14794685990338163
  - -0.14759036144578314
  - -0.1507177033492823
  - -0.15060240963855423
  train_neg_hamming_loss_micro:
  - -0.1322463768115942
  - -0.12983091787439613
  - -0.13433734939759037
  - -0.1291866028708134
  - -0.13012048192771083
  train_neg_hamming_loss_micro_oob:
  - -0.14794685990338163
  - -0.14794685990338163
  - -0.14759036144578314
  - -0.1507177033492823
  - -0.15060240963855423
  train_neg_hamming_loss_samples:
  - -0.1322463768115942
  - -0.12983091787439613
  - -0.13433734939759037
  - -0.1291866028708134
  - -0.13012048192771083
  train_neg_hamming_loss_samples_oob:
  - -0.14794685990338163
  - -0.14794685990338163
  - -0.14759036144578314
  - -0.1507177033492823
  - -0.15060240963855423
  train_neg_hamming_loss_weighted:
  - -0.16626216397383448
  - -0.16440145158680627
  - -0.17053224832504238
  - -0.16328464902764614
  - -0.1636940104917277
  train_neg_hamming_loss_weighted_oob:
  - -0.18641795529667382
  - -0.1867242216212468
  - -0.1865485809586796
  - -0.19235820077422888
  - -0.18980803597163776
  train_neg_label_ranking_loss:
  - -0.15438808373590981
  - -0.14210950080515297
  - -0.13192771084337349
  - -0.1283891547049442
  - -0.12751004016064257
  train_neg_label_ranking_loss_oob:
  - -0.16243961352657005
  - -0.16243961352657005
  - -0.15522088353413652
  - -0.13556618819776714
  - -0.14779116465863454
  train_precision_macro:
  - 0.8677536231884058
  - 0.8701690821256038
  - 0.8656626506024097
  - 0.8708133971291867
  - 0.8698795180722891
  train_precision_macro_oob:
  - 0.8520531400966183
  - 0.8520531400966183
  - 0.8524096385542168
  - 0.8492822966507177
  - 0.8493975903614458
  train_precision_micro:
  - 0.8677536231884058
  - 0.8701690821256038
  - 0.8656626506024097
  - 0.8708133971291866
  - 0.8698795180722891
  train_precision_micro_oob:
  - 0.8520531400966184
  - 0.8520531400966184
  - 0.8524096385542169
  - 0.8492822966507177
  - 0.8493975903614458
  train_precision_samples:
  - 0.8677536231884058
  - 0.8701690821256038
  - 0.8656626506024097
  - 0.8708133971291866
  - 0.8698795180722891
  train_precision_samples_oob:
  - 0.8520531400966184
  - 0.8520531400966184
  - 0.8524096385542169
  - 0.8492822966507177
  - 0.8493975903614458
  train_precision_weighted:
  - 0.8337378360261656
  - 0.8355985484131937
  - 0.8294677516749576
  - 0.8367153509723537
  - 0.8363059895082724
  train_precision_weighted_oob:
  - 0.8135820447033262
  - 0.8132757783787533
  - 0.8134514190413203
  - 0.8076417992257711
  - 0.8101919640283624
  train_recall_macro:
  - 0.8677536231884058
  - 0.8701690821256038
  - 0.8656626506024097
  - 0.8708133971291867
  - 0.8698795180722891
  train_recall_macro_oob:
  - 0.8520531400966183
  - 0.8520531400966183
  - 0.8524096385542168
  - 0.8492822966507177
  - 0.8493975903614458
  train_recall_micro:
  - 0.8677536231884058
  - 0.8701690821256038
  - 0.8656626506024097
  - 0.8708133971291866
  - 0.8698795180722891
  train_recall_micro_oob:
  - 0.8520531400966184
  - 0.8520531400966184
  - 0.8524096385542169
  - 0.8492822966507177
  - 0.8493975903614458
  train_recall_samples:
  - 0.8677536231884058
  - 0.8701690821256038
  - 0.8656626506024097
  - 0.8708133971291866
  - 0.8698795180722891
  train_recall_samples_oob:
  - 0.8520531400966184
  - 0.8520531400966184
  - 0.8524096385542169
  - 0.8492822966507177
  - 0.8493975903614458
  train_recall_weighted:
  - 0.8337378360261656
  - 0.8355985484131937
  - 0.8294677516749576
  - 0.8367153509723537
  - 0.8363059895082724
  train_recall_weighted_oob:
  - 0.8135820447033262
  - 0.8132757783787533
  - 0.8134514190413203
  - 0.8076417992257711
  - 0.8101919640283624
  train_roc_auc_macro:
  - 0.8493589710001745
  - 0.8611791060055034
  - 0.8528081403706668
  - 0.8911445936934157
  - 0.8842711085376924
  train_roc_auc_macro_oob:
  - 0.8290038722555246
  - 0.8394366110157505
  - 0.8258909849296614
  - 0.8744767548670751
  - 0.846624891772758
  train_roc_auc_micro:
  - 0.8916662157670576
  - 0.8981765619806603
  - 0.8966265945355486
  - 0.9048241261545085
  - 0.9071801154181017
  train_roc_auc_micro_oob:
  - 0.8707129109305796
  - 0.8763304759180959
  - 0.8782508524382715
  - 0.8850662943541705
  - 0.8770793364614875
  train_roc_auc_samples:
  - 0.8456119162640903
  - 0.8578904991948471
  - 0.8680722891566265
  - 0.8716108452950557
  - 0.8724899598393574
  train_roc_auc_samples_oob:
  - 0.8375603864734299
  - 0.8375603864734299
  - 0.8447791164658636
  - 0.864433811802233
  - 0.8522088353413655
  train_roc_auc_weighted:
  - 0.8480962228145326
  - 0.8562730059038501
  - 0.8533370945529811
  - 0.8653872880111867
  - 0.8736050768519185
  train_roc_auc_weighted_oob:
  - 0.8288368890095589
  - 0.8380179710665447
  - 0.8373935777909335
  - 0.8522990136184663
  - 0.837735578431928
start: 2023-12-21 21:22:12.556487
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
