active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMBMCgmZmZmZkRQICZmZmZmfm/gJmZmZmZ+b+AZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:35:40.575847
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - rf
                      - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: null
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                    - - xt
                      - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: false
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: null
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: proba_weak__2
  params: {}
hash: f49e64b443e9283d6ce693cf1b470531caa75e3de606126245591397a494df7a
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f49e64b_20231221T083530024529_proba_weak__2_VirusGO.yml
results:
  fit_time:
  - 6.154607534408569
  - 6.178441047668457
  - 6.1954665184021
  - 6.361379384994507
  - 6.347789287567139
  score_time:
  - 0.927008867263794
  - 0.8865303993225098
  - 0.9637589454650879
  - 0.9629886150360107
  - 0.9123454093933105
  test_average_precision_macro:
  - 0.9416477367258888
  - 0.9569961427057129
  - 0.8263194767096985
  - 0.9008446159073805
  - 0.9358756005755072
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.795321407252233
  - 0.8313923129412244
  - 0.7491716847157396
  - 0.7561795330876739
  - 0.7812224637155845
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.831439393939394
  - 0.8815315315315313
  - 0.8418604651162791
  - 0.8321705426356588
  - 0.8851388888888889
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9280090019684317
  - 0.954699453523457
  - 0.8345428261241549
  - 0.8753645696479057
  - 0.9236842696347342
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8143939393939394
  - 0.7972972972972973
  - 0.8372093023255814
  - 0.8178294573643411
  - 0.8166666666666668
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8143939393939394
  - 0.7972972972972973
  - 0.8372093023255814
  - 0.8178294573643411
  - 0.8166666666666667
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8143939393939396
  - 0.7972972972972973
  - 0.8372093023255816
  - 0.8178294573643412
  - 0.8166666666666668
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7077272727272726
  - 0.6806398234969664
  - 0.7638640429338105
  - 0.7186502507979935
  - 0.7339999999999999
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.709500339297832
  - 0.6880708535903528
  - 0.7367536074616646
  - 0.7118896618834333
  - 0.7060433656178337
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6869009584664537
  - 0.6629213483146067
  - 0.72
  - 0.6918032786885245
  - 0.6901408450704225
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6926406926406927
  - 0.6756756756756759
  - 0.7320044296788484
  - 0.7009966777408638
  - 0.7047619047619047
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.56317154184078
  - 0.5340463367947279
  - 0.6368763322094331
  - 0.5779475368025752
  - 0.5922505862931395
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.831439393939394
  - 0.8815315315315313
  - 0.841860465116279
  - 0.8321705426356588
  - 0.8851388888888888
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.032031106631923656
  - 0.06293790933744675
  - 0.11056519214788924
  - 0.06600983619844496
  - 0.11251591576207105
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.12756866487721477
  - 0.2545228399440285
  - 0.39371699157493445
  - 0.2528210449668659
  - 0.31214723679042466
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.022727272727272728
  - 0.10810810810810811
  - 0.2169726076310396
  - 0.09302325581395349
  - 0.15
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.06534345752912425
  - 0.1310136071922361
  - 0.21687787690547505
  - 0.13201967239688991
  - 0.22136750234534774
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8737881464108516
  - 0.9178321908076635
  - 0.8854640559478099
  - 0.8761657907290985
  - 0.9196378137434525
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.6363636363636365
  - -1.7567567567567568
  - -1.7906976744186047
  - -1.744186046511628
  - -1.675
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.18560606060606058
  - -0.20270270270270271
  - -0.1627906976744186
  - -0.1821705426356589
  - -0.18333333333333335
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1856060606060606
  - -0.20270270270270271
  - -0.16279069767441862
  - -0.1821705426356589
  - -0.18333333333333332
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.18560606060606058
  - -0.20270270270270271
  - -0.16279069767441862
  - -0.18217054263565893
  - -0.18333333333333335
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.29227272727272724
  - -0.31936017650303367
  - -0.23613595706618964
  - -0.28134974920200634
  - -0.26599999999999996
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1
  - -0.07229729729729731
  - -0.10549095607235143
  - -0.10872093023255816
  - -0.07770833333333334
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8143939393939394
  - 0.7972972972972973
  - 0.8372093023255814
  - 0.8178294573643411
  - 0.8166666666666668
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8143939393939394
  - 0.7972972972972973
  - 0.8372093023255814
  - 0.8178294573643411
  - 0.8166666666666667
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8143939393939396
  - 0.7972972972972973
  - 0.8372093023255816
  - 0.8178294573643412
  - 0.8166666666666668
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7077272727272726
  - 0.6806398234969664
  - 0.7638640429338105
  - 0.7186502507979935
  - 0.7339999999999999
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8143939393939394
  - 0.7972972972972973
  - 0.8372093023255814
  - 0.8178294573643411
  - 0.8166666666666668
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8143939393939394
  - 0.7972972972972973
  - 0.8372093023255814
  - 0.8178294573643411
  - 0.8166666666666667
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8143939393939396
  - 0.7972972972972973
  - 0.8372093023255816
  - 0.8178294573643412
  - 0.8166666666666668
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7077272727272726
  - 0.6806398234969664
  - 0.7638640429338105
  - 0.7186502507979935
  - 0.7339999999999999
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9756226727427707
  - 0.9737225193107547
  - 0.9326998491704375
  - 0.9610764610764612
  - 0.9732884208937197
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9297196261682243
  - 0.9339388934764656
  - 0.9091672890216579
  - 0.9178743961352656
  - 0.9181052631578949
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9
  - 0.9277027027027028
  - 0.8945090439276485
  - 0.891279069767442
  - 0.9222916666666666
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9611616616616616
  - 0.9613790970933829
  - 0.9300394477317553
  - 0.932177652765888
  - 0.9574094202898551
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9109888610661173
  - 0.9289687505362991
  - 0.9396711436317539
  - 0.9364624710139159
  - 0.9576278033040421
  train_average_precision_macro_oob:
  - 0.8751217659967668
  - 0.8908639150873198
  - 0.8893206651464879
  - 0.8876834802101841
  - 0.904213922241706
  train_average_precision_micro:
  - 0.7904059362125844
  - 0.8161558473794638
  - 0.8167758525334616
  - 0.8291474134238076
  - 0.8173118021364002
  train_average_precision_micro_oob:
  - 0.7610458121998693
  - 0.79407504596433
  - 0.791469969673981
  - 0.7977549764411611
  - 0.7915198142278819
  train_average_precision_samples:
  - 0.8812883435582821
  - 0.872156862745098
  - 0.8761178861788618
  - 0.8688008130081302
  - 0.8651696606786424
  train_average_precision_samples_oob:
  - 0.8634969325153374
  - 0.8598039215686274
  - 0.8646680216802167
  - 0.8459349593495934
  - 0.833632734530938
  train_average_precision_weighted:
  - 0.8903513686696682
  - 0.9192832909969759
  - 0.9284280769153632
  - 0.9258245884946135
  - 0.9496058152784606
  train_average_precision_weighted_oob:
  - 0.8630365786770772
  - 0.8943261651131815
  - 0.8958190905046254
  - 0.8941275896666607
  - 0.9199325365915965
  train_f1_macro:
  - 0.8036809815950919
  - 0.8313725490196079
  - 0.8363821138211381
  - 0.8252032520325203
  - 0.8263473053892215
  train_f1_macro_oob:
  - 0.7975460122699386
  - 0.8294117647058824
  - 0.8262195121951219
  - 0.8160569105691057
  - 0.8223552894211577
  train_f1_micro:
  - 0.803680981595092
  - 0.8313725490196079
  - 0.8363821138211383
  - 0.8252032520325203
  - 0.8263473053892215
  train_f1_micro_oob:
  - 0.7975460122699386
  - 0.8294117647058824
  - 0.8262195121951219
  - 0.8160569105691057
  - 0.8223552894211577
  train_f1_samples:
  - 0.803680981595092
  - 0.8313725490196078
  - 0.836382113821138
  - 0.8252032520325202
  - 0.8263473053892215
  train_f1_samples_oob:
  - 0.7975460122699386
  - 0.8294117647058824
  - 0.8262195121951219
  - 0.8160569105691056
  - 0.8223552894211575
  train_f1_weighted:
  - 0.6976249772216485
  - 0.7511735728774269
  - 0.760579268292683
  - 0.7395947093799297
  - 0.7383648544495167
  train_f1_weighted_oob:
  - 0.6854157808418879
  - 0.7470298464213271
  - 0.739969512195122
  - 0.7213020264531005
  - 0.7303017726922392
  train_jaccard_macro:
  - 0.6943221161615639
  - 0.7268148627318695
  - 0.7343259661432437
  - 0.7204368990312262
  - 0.720447931229764
  train_jaccard_macro_oob:
  - 0.6877653985428993
  - 0.7250542176315046
  - 0.721621441478386
  - 0.7088935646029967
  - 0.715762184877351
  train_jaccard_micro:
  - 0.6717948717948717
  - 0.7114093959731543
  - 0.7187772925764192
  - 0.7024221453287197
  - 0.7040816326530612
  train_jaccard_micro_oob:
  - 0.6632653061224489
  - 0.7085427135678392
  - 0.7038961038961039
  - 0.6892703862660944
  - 0.6983050847457627
  train_jaccard_samples:
  - 0.6815658778848963
  - 0.7268907563025211
  - 0.7327235772357725
  - 0.7151567944250873
  - 0.7174222982606216
  train_jaccard_samples_oob:
  - 0.6714869997078586
  - 0.7215686274509804
  - 0.7166085946573751
  - 0.701219512195122
  - 0.7114342743085259
  train_jaccard_weighted:
  - 0.5533225357038238
  - 0.6146729909548824
  - 0.6286196776419907
  - 0.6028815933540521
  - 0.5974010547709003
  train_jaccard_weighted_oob:
  - 0.5402740184627192
  - 0.6109168797403639
  - 0.602898369995306
  - 0.5797949244975931
  - 0.587936775009591
  train_label_ranking_average_precision_score:
  - 0.8812883435582822
  - 0.8721568627450981
  - 0.8761178861788614
  - 0.8688008130081304
  - 0.8651696606786428
  train_label_ranking_average_precision_score_oob:
  - 0.8634969325153371
  - 0.8598039215686273
  - 0.8646680216802165
  - 0.8459349593495933
  - 0.8336327345309377
  train_matthews_corrcoef_macro:
  - 0.04631976610265767
  - 0.11638951333770538
  - 0.13421713618992248
  - 0.09033758770359755
  - 0.1159977687696252
  train_matthews_corrcoef_macro_oob:
  - 0.026084778816531696
  - 0.11152829965388218
  - 0.1048568063801187
  - 0.07006406033874725
  - 0.10507820107843235
  train_matthews_corrcoef_micro:
  - 0.1936739134739636
  - 0.34981383818476536
  - 0.4001995952775779
  - 0.33966005425059576
  - 0.33502377786070964
  train_matthews_corrcoef_micro_oob:
  - 0.12191463699429222
  - 0.3431825374349463
  - 0.3426322353929252
  - 0.2780037415214956
  - 0.30723156348463426
  train_matthews_corrcoef_samples:
  - 0.06891077013517592
  - 0.19647058823529412
  - 0.22475392839188665
  - 0.17089749222094958
  - 0.16805335966507395
  train_matthews_corrcoef_samples_oob:
  - 0.03435582822085889
  - 0.16733655056176447
  - 0.1705016930498072
  - 0.1276208666349677
  - 0.15109254809601003
  train_matthews_corrcoef_weighted:
  - 0.09218092065974448
  - 0.23325710126602153
  - 0.2716317143380474
  - 0.1806751754071951
  - 0.23690304655743097
  train_matthews_corrcoef_weighted_oob:
  - 0.05191129249626605
  - 0.2227862406851163
  - 0.2116812399568995
  - 0.1401281206774945
  - 0.21472653999299207
  train_ndgc:
  - 0.9145140187678724
  - 0.9065021178305566
  - 0.9099585624266954
  - 0.9049669743039255
  - 0.9013763881362173
  train_ndgc_oob:
  - 0.9021446599035189
  - 0.8978738298138962
  - 0.9023595695888664
  - 0.888245668177524
  - 0.877044651359434
  train_neg_coverage_error:
  - -1.6503067484662577
  - -1.6176470588235294
  - -1.6280487804878048
  - -1.725609756097561
  - -1.6467065868263473
  train_neg_coverage_error_oob:
  - -1.7361963190184049
  - -1.6705882352941177
  - -1.701219512195122
  - -1.8170731707317074
  - -1.778443113772455
  train_neg_hamming_loss_macro:
  - -0.19631901840490798
  - -0.16862745098039214
  - -0.1636178861788618
  - -0.17479674796747968
  - -0.17365269461077845
  train_neg_hamming_loss_macro_oob:
  - -0.20245398773006137
  - -0.17058823529411762
  - -0.17378048780487806
  - -0.18394308943089432
  - -0.17764471057884235
  train_neg_hamming_loss_micro:
  - -0.19631901840490798
  - -0.16862745098039217
  - -0.16361788617886178
  - -0.17479674796747968
  - -0.17365269461077845
  train_neg_hamming_loss_micro_oob:
  - -0.20245398773006135
  - -0.17058823529411765
  - -0.17378048780487804
  - -0.1839430894308943
  - -0.17764471057884232
  train_neg_hamming_loss_samples:
  - -0.19631901840490798
  - -0.16862745098039217
  - -0.16361788617886178
  - -0.17479674796747965
  - -0.17365269461077845
  train_neg_hamming_loss_samples_oob:
  - -0.20245398773006135
  - -0.17058823529411765
  - -0.17378048780487804
  - -0.1839430894308943
  - -0.1776447105788423
  train_neg_hamming_loss_weighted:
  - -0.30237502277835143
  - -0.24882642712257316
  - -0.2394207317073171
  - -0.2604052906200704
  - -0.2616351455504832
  train_neg_hamming_loss_weighted_oob:
  - -0.31458421915811213
  - -0.25297015357867286
  - -0.26003048780487803
  - -0.2786979735468996
  - -0.2696982273077607
  train_neg_label_ranking_loss:
  - -0.07469325153374233
  - -0.07954248366013073
  - -0.07582994579945798
  - -0.09144647696476965
  - -0.08233532934131736
  train_neg_label_ranking_loss_oob:
  - -0.089093387866394
  - -0.08924836601307191
  - -0.08915989159891599
  - -0.10858739837398373
  - -0.11122754491017964
  train_precision_macro:
  - 0.8036809815950919
  - 0.8313725490196079
  - 0.8363821138211381
  - 0.8252032520325203
  - 0.8263473053892215
  train_precision_macro_oob:
  - 0.7975460122699386
  - 0.8294117647058824
  - 0.8262195121951219
  - 0.8160569105691057
  - 0.8223552894211577
  train_precision_micro:
  - 0.803680981595092
  - 0.8313725490196079
  - 0.8363821138211383
  - 0.8252032520325203
  - 0.8263473053892215
  train_precision_micro_oob:
  - 0.7975460122699386
  - 0.8294117647058824
  - 0.8262195121951219
  - 0.8160569105691057
  - 0.8223552894211577
  train_precision_samples:
  - 0.803680981595092
  - 0.8313725490196078
  - 0.836382113821138
  - 0.8252032520325202
  - 0.8263473053892215
  train_precision_samples_oob:
  - 0.7975460122699386
  - 0.8294117647058824
  - 0.8262195121951219
  - 0.8160569105691056
  - 0.8223552894211575
  train_precision_weighted:
  - 0.6976249772216485
  - 0.7511735728774269
  - 0.760579268292683
  - 0.7395947093799297
  - 0.7383648544495167
  train_precision_weighted_oob:
  - 0.6854157808418879
  - 0.7470298464213271
  - 0.739969512195122
  - 0.7213020264531005
  - 0.7303017726922392
  train_recall_macro:
  - 0.8036809815950919
  - 0.8313725490196079
  - 0.8363821138211381
  - 0.8252032520325203
  - 0.8263473053892215
  train_recall_macro_oob:
  - 0.7975460122699386
  - 0.8294117647058824
  - 0.8262195121951219
  - 0.8160569105691057
  - 0.8223552894211577
  train_recall_micro:
  - 0.803680981595092
  - 0.8313725490196079
  - 0.8363821138211383
  - 0.8252032520325203
  - 0.8263473053892215
  train_recall_micro_oob:
  - 0.7975460122699386
  - 0.8294117647058824
  - 0.8262195121951219
  - 0.8160569105691057
  - 0.8223552894211577
  train_recall_samples:
  - 0.803680981595092
  - 0.8313725490196078
  - 0.836382113821138
  - 0.8252032520325202
  - 0.8263473053892215
  train_recall_samples_oob:
  - 0.7975460122699386
  - 0.8294117647058824
  - 0.8262195121951219
  - 0.8160569105691056
  - 0.8223552894211575
  train_recall_weighted:
  - 0.6976249772216485
  - 0.7511735728774269
  - 0.760579268292683
  - 0.7395947093799297
  - 0.7383648544495167
  train_recall_weighted_oob:
  - 0.6854157808418879
  - 0.7470298464213271
  - 0.739969512195122
  - 0.7213020264531005
  - 0.7303017726922392
  train_roc_auc_macro:
  - 0.9649291518863609
  - 0.9659896747027537
  - 0.9770054131695215
  - 0.9740176442298917
  - 0.9816896708823837
  train_roc_auc_macro_oob:
  - 0.9516771622288457
  - 0.9551605508969678
  - 0.9599876602041828
  - 0.96282956722475
  - 0.9726819881992577
  train_roc_auc_micro:
  - 0.9364314330917628
  - 0.9364640550855888
  - 0.9356058673469388
  - 0.9371946144119758
  - 0.9297431930693069
  train_roc_auc_micro_oob:
  - 0.9225017862611005
  - 0.9251195350043111
  - 0.9211479591836735
  - 0.9236321584923404
  - 0.9173576732673268
  train_roc_auc_samples:
  - 0.9253067484662578
  - 0.9204575163398692
  - 0.9241700542005421
  - 0.9085535230352304
  - 0.9176646706586826
  train_roc_auc_samples_oob:
  - 0.9109066121336059
  - 0.9107516339869282
  - 0.910840108401084
  - 0.8914126016260162
  - 0.8887724550898204
  train_roc_auc_weighted:
  - 0.9539946308946101
  - 0.9592379833089574
  - 0.9648690252007416
  - 0.9674996066902174
  - 0.9747448549308388
  train_roc_auc_weighted_oob:
  - 0.9362377383544157
  - 0.9478398110816124
  - 0.9460578059835768
  - 0.9537545504462503
  - 0.9637102674475034
start: 2023-12-21 08:35:30.024529
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
