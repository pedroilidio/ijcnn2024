active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZEcCgmZmZmZn5P4CZmZmZmdm/oJmZmZmZ+T+gmZmZmZn5Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          kJmZmZmZFcBwZmZmZmYSQCAzMzMzMwPAgDMzMzMz4z/gzMzMzMwEQA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 01:59:33.858011
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 9
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba__9
  params: {}
hash: 5fd47726c1cda90898a67188a39ee196d7bd2dc4b936aa81b2cc141ffdfa0178
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/5fd4772_20231222T015716318423_embedding_proba__9_emotions.yml
results:
  fit_time:
  - 109.42092823982239
  - 108.54653644561768
  - 106.59078097343445
  - 107.21101784706116
  - 110.1480062007904
  score_time:
  - 9.45482063293457
  - 8.89026141166687
  - 8.535438299179077
  - 9.038479566574097
  - 8.724599599838257
  test_average_precision_macro:
  - 0.6819597974282239
  - 0.7051925131556661
  - 0.7605783370683871
  - 0.7170600992706188
  - 0.757823923191531
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6941190122596899
  - 0.7162968087865065
  - 0.7525577024027605
  - 0.7319657228659263
  - 0.7649593466227473
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8037186379928314
  - 0.8166910331384016
  - 0.8356060606060606
  - 0.786487758945386
  - 0.8131944444444446
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6795585650222551
  - 0.7090717531902607
  - 0.7534749479031924
  - 0.725244683257405
  - 0.7622445789480872
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7956989247311829
  - 0.8084795321637426
  - 0.8236914600550964
  - 0.8079096045197739
  - 0.824712643678161
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7956989247311828
  - 0.8084795321637427
  - 0.8236914600550964
  - 0.807909604519774
  - 0.8247126436781609
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7956989247311829
  - 0.8084795321637427
  - 0.8236914600550964
  - 0.8079096045197741
  - 0.8247126436781609
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7898943762489296
  - 0.8049840510366827
  - 0.814719678356042
  - 0.8077041602465331
  - 0.8205721003134796
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6670772309913353
  - 0.6807580854461494
  - 0.7031658252929908
  - 0.6793649920804787
  - 0.7043034679319305
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6607142857142857
  - 0.6785276073619632
  - 0.7002341920374707
  - 0.6777251184834123
  - 0.7017114914425427
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7000802960480379
  - 0.7118212197159566
  - 0.7362849271940181
  - 0.713119084305525
  - 0.732758620689655
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6581441269291424
  - 0.6755614372892752
  - 0.6905792597586616
  - 0.6788436560835343
  - 0.6979201915739591
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8037186379928314
  - 0.8166910331384016
  - 0.8356060606060602
  - 0.786487758945386
  - 0.8131944444444443
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5225678192191424
  - 0.5461852427145495
  - 0.5856749261722702
  - 0.5281023589399516
  - 0.569658162375157
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5284307651959075
  - 0.5556497561122965
  - 0.5890668720814225
  - 0.5441905156164506
  - 0.5822699962650121
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5365652587343566
  - 0.5592053010460256
  - 0.5926269016643578
  - 0.5417524079933559
  - 0.5679660757246197
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5184101265246236
  - 0.5464501768238741
  - 0.5730708422297338
  - 0.5371856461271224
  - 0.5688335279681477
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8655130636945085
  - 0.8780394758865129
  - 0.8865059157874987
  - 0.8503466268226944
  - 0.8690688775918458
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.725806451612903
  - -2.8684210526315788
  - -2.520661157024793
  - -2.788135593220339
  - -2.6982758620689653
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20430107526881722
  - -0.1915204678362573
  - -0.1763085399449036
  - -0.192090395480226
  - -0.1752873563218391
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20430107526881722
  - -0.1915204678362573
  - -0.1763085399449036
  - -0.192090395480226
  - -0.1752873563218391
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2043010752688172
  - -0.19152046783625734
  - -0.17630853994490361
  - -0.19209039548022597
  - -0.17528735632183906
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2101056237510705
  - -0.19501594896331736
  - -0.185280321643958
  - -0.19229583975346687
  - -0.17942789968652034
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1681451612903226
  - -0.16737329434697856
  - -0.1263085399449036
  - -0.18352165725047082
  - -0.15117337164750955
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7956989247311829
  - 0.8084795321637426
  - 0.8236914600550964
  - 0.8079096045197739
  - 0.824712643678161
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7956989247311828
  - 0.8084795321637427
  - 0.8236914600550964
  - 0.807909604519774
  - 0.8247126436781609
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7956989247311829
  - 0.8084795321637427
  - 0.8236914600550964
  - 0.8079096045197741
  - 0.8247126436781609
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7898943762489296
  - 0.8049840510366827
  - 0.814719678356042
  - 0.8077041602465331
  - 0.8205721003134796
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7956989247311829
  - 0.8084795321637426
  - 0.8236914600550964
  - 0.8079096045197739
  - 0.824712643678161
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7956989247311828
  - 0.8084795321637427
  - 0.8236914600550964
  - 0.807909604519774
  - 0.8247126436781609
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7956989247311829
  - 0.8084795321637427
  - 0.8236914600550964
  - 0.8079096045197741
  - 0.8247126436781609
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7898943762489296
  - 0.8049840510366827
  - 0.814719678356042
  - 0.8077041602465331
  - 0.8205721003134796
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8190779061144801
  - 0.8334019189595431
  - 0.8723921348696791
  - 0.8394982631166319
  - 0.8650380591599888
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8413827860730515
  - 0.8504408307210031
  - 0.8862880737880738
  - 0.8520771236959761
  - 0.877253628724217
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8318548387096775
  - 0.8326267056530215
  - 0.8736914600550965
  - 0.8164783427495292
  - 0.8488266283524906
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8144720842286479
  - 0.8354359692668619
  - 0.8676028233690934
  - 0.8423583264453491
  - 0.8659281202315408
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9900418444697637
  - 0.9929919260053311
  - 0.9917799749124062
  - 0.9908661357218627
  - 0.9905934138388282
  train_average_precision_macro_oob:
  - 0.9520797142617705
  - 0.9652903309941093
  - 0.9562465165024822
  - 0.950653676713325
  - 0.9518989756654106
  train_average_precision_micro:
  - 0.9895852901319088
  - 0.9926261853943115
  - 0.9906319375910017
  - 0.9901798903148098
  - 0.9896635971888892
  train_average_precision_micro_oob:
  - 0.9571300408337667
  - 0.9687271106394133
  - 0.9595884449247302
  - 0.955924989901554
  - 0.9556995269025597
  train_average_precision_samples:
  - 0.9909381663113006
  - 0.9921711899791231
  - 0.9901129943502825
  - 0.990701754385965
  - 0.9916142557651991
  train_average_precision_samples_oob:
  - 0.9477611940298507
  - 0.9572141034562747
  - 0.9517419962335215
  - 0.9555906432748538
  - 0.9546820405310971
  train_average_precision_weighted:
  - 0.9904127553237981
  - 0.9933682746761613
  - 0.9920765417651101
  - 0.9912370717417174
  - 0.9910275376474335
  train_average_precision_weighted_oob:
  - 0.9535492813450779
  - 0.967325841593126
  - 0.9585051487730394
  - 0.9511563898615116
  - 0.9535856680111622
  train_f1_macro:
  - 0.9623312011371713
  - 0.9711203897007655
  - 0.961864406779661
  - 0.9652631578947369
  - 0.9650593990216633
  train_f1_macro_oob:
  - 0.9346126510305615
  - 0.9446764091858038
  - 0.9322033898305085
  - 0.9364912280701755
  - 0.9297693920335431
  train_f1_micro:
  - 0.9623312011371713
  - 0.9711203897007655
  - 0.961864406779661
  - 0.9652631578947368
  - 0.9650593990216632
  train_f1_micro_oob:
  - 0.9346126510305615
  - 0.9446764091858038
  - 0.9322033898305084
  - 0.9364912280701755
  - 0.929769392033543
  train_f1_samples:
  - 0.9623312011371714
  - 0.9711203897007654
  - 0.961864406779661
  - 0.9652631578947368
  - 0.9650593990216632
  train_f1_samples_oob:
  - 0.9346126510305615
  - 0.9446764091858038
  - 0.9322033898305084
  - 0.9364912280701755
  - 0.929769392033543
  train_f1_weighted:
  - 0.9621861537792088
  - 0.9708711843367375
  - 0.9616252821670429
  - 0.9655049786628733
  - 0.9645116814928136
  train_f1_weighted_oob:
  - 0.9341364122052516
  - 0.9448386277718218
  - 0.9327198989937636
  - 0.9374513987671883
  - 0.9299960337696187
  train_jaccard_macro:
  - 0.9274426865067431
  - 0.943903031810474
  - 0.926603245167755
  - 0.9329566208990495
  - 0.9325407013055594
  train_jaccard_macro_oob:
  - 0.8775836989673063
  - 0.8957575080270458
  - 0.8737414213004987
  - 0.8812704200084248
  - 0.8695888211269515
  train_jaccard_micro:
  - 0.9273972602739726
  - 0.9438620223199189
  - 0.926530612244898
  - 0.9328585961342828
  - 0.9324780553679946
  train_jaccard_micro_oob:
  - 0.8772515010006671
  - 0.8951533135509396
  - 0.873015873015873
  - 0.8805674694820191
  - 0.8687561214495593
  train_jaccard_samples:
  - 0.9368971469184689
  - 0.9519335918083308
  - 0.9366928974979822
  - 0.9412030075187969
  - 0.9415992812219227
  train_jaccard_samples_oob:
  - 0.8933394253223678
  - 0.9098816979819067
  - 0.8899313962873284
  - 0.8961904761904761
  - 0.8864430468204053
  train_jaccard_weighted:
  - 0.9271696279889052
  - 0.9434297584113784
  - 0.9261532845073788
  - 0.933399576601309
  - 0.9315200710817416
  train_jaccard_weighted_oob:
  - 0.8767135918956319
  - 0.8959973084684811
  - 0.8746033566486112
  - 0.8829494582544991
  - 0.8699181685356331
  train_label_ranking_average_precision_score:
  - 0.9909381663113005
  - 0.9921711899791229
  - 0.9901129943502824
  - 0.9907017543859649
  - 0.9916142557651992
  train_label_ranking_average_precision_score_oob:
  - 0.9477611940298504
  - 0.9572141034562742
  - 0.9517419962335213
  - 0.9555906432748531
  - 0.954682040531097
  train_matthews_corrcoef_macro:
  - 0.9097659968765582
  - 0.9306110745365851
  - 0.9086006303865394
  - 0.9160991753303965
  - 0.9161937776916694
  train_matthews_corrcoef_macro_oob:
  - 0.843298009670664
  - 0.8660145325223931
  - 0.8354844629273458
  - 0.8458255880206971
  - 0.8297888297631907
  train_matthews_corrcoef_micro:
  - 0.9118954007058679
  - 0.9320256553138627
  - 0.9107036272206481
  - 0.9185290570283564
  - 0.9178791485314537
  train_matthews_corrcoef_micro_oob:
  - 0.846751183287163
  - 0.8695586347488597
  - 0.8403602147169854
  - 0.850601443871563
  - 0.8340717581988527
  train_matthews_corrcoef_samples:
  - 0.9092634245021134
  - 0.9338183667191045
  - 0.9104215458493241
  - 0.9189879411364339
  - 0.9225666353515862
  train_matthews_corrcoef_samples_oob:
  - 0.8422601078761818
  - 0.8696906908381518
  - 0.8358529293792812
  - 0.8523941217495565
  - 0.8328352057688874
  train_matthews_corrcoef_weighted:
  - 0.9109702740903672
  - 0.9312646664622815
  - 0.9096144202478613
  - 0.9181153233550833
  - 0.9164950681272148
  train_matthews_corrcoef_weighted_oob:
  - 0.844924475033019
  - 0.8685935264230432
  - 0.8392309560326702
  - 0.8501931332526751
  - 0.8329509045230867
  train_ndgc:
  - 0.9943954990789524
  - 0.9952313912347663
  - 0.9940936539443149
  - 0.9941549499859426
  - 0.9947225806339713
  train_ndgc_oob:
  - 0.9650105172497226
  - 0.9709675213553867
  - 0.9682153061537946
  - 0.9709065834033802
  - 0.969388871138594
  train_neg_coverage_error:
  - -1.9232409381663114
  - -1.8935281837160751
  - -1.9258474576271187
  - -1.9094736842105262
  - -1.90146750524109
  train_neg_coverage_error_oob:
  - -2.106609808102345
  - -2.0250521920668056
  - -2.0889830508474576
  - -2.054736842105263
  - -2.041928721174004
  train_neg_hamming_loss_macro:
  - -0.03766879886282871
  - -0.028879610299234516
  - -0.038135593220338986
  - -0.034736842105263156
  - -0.034940600978336823
  train_neg_hamming_loss_macro_oob:
  - -0.06538734896943853
  - -0.05532359081419624
  - -0.06779661016949153
  - -0.06350877192982456
  - -0.07023060796645703
  train_neg_hamming_loss_micro:
  - -0.037668798862828715
  - -0.028879610299234516
  - -0.038135593220338986
  - -0.034736842105263156
  - -0.03494060097833683
  train_neg_hamming_loss_micro_oob:
  - -0.06538734896943853
  - -0.055323590814196244
  - -0.06779661016949153
  - -0.06350877192982456
  - -0.07023060796645703
  train_neg_hamming_loss_samples:
  - -0.03766879886282871
  - -0.028879610299234512
  - -0.038135593220338986
  - -0.034736842105263156
  - -0.034940600978336823
  train_neg_hamming_loss_samples_oob:
  - -0.06538734896943851
  - -0.055323590814196244
  - -0.06779661016949153
  - -0.06350877192982456
  - -0.07023060796645703
  train_neg_hamming_loss_weighted:
  - -0.03781384622079108
  - -0.02912881566326243
  - -0.03837471783295711
  - -0.0344950213371266
  - -0.03548831850718643
  train_neg_hamming_loss_weighted_oob:
  - -0.06586358779474832
  - -0.055161372228178074
  - -0.06728010100623637
  - -0.06254860123281177
  - -0.07000396623038133
  train_neg_label_ranking_loss:
  - -0.006337360814972755
  - -0.005683136163303178
  - -0.007032721280602637
  - -0.005964912280701754
  - -0.006068017703237829
  train_neg_label_ranking_loss_oob:
  - -0.03600450130300877
  - -0.02849686847599165
  - -0.03306850282485876
  - -0.02976608187134503
  - -0.02944910319124155
  train_precision_macro:
  - 0.9623312011371713
  - 0.9711203897007655
  - 0.961864406779661
  - 0.9652631578947369
  - 0.9650593990216633
  train_precision_macro_oob:
  - 0.9346126510305615
  - 0.9446764091858038
  - 0.9322033898305085
  - 0.9364912280701755
  - 0.9297693920335431
  train_precision_micro:
  - 0.9623312011371713
  - 0.9711203897007655
  - 0.961864406779661
  - 0.9652631578947368
  - 0.9650593990216632
  train_precision_micro_oob:
  - 0.9346126510305615
  - 0.9446764091858038
  - 0.9322033898305084
  - 0.9364912280701755
  - 0.929769392033543
  train_precision_samples:
  - 0.9623312011371714
  - 0.9711203897007654
  - 0.961864406779661
  - 0.9652631578947368
  - 0.9650593990216632
  train_precision_samples_oob:
  - 0.9346126510305615
  - 0.9446764091858038
  - 0.9322033898305084
  - 0.9364912280701755
  - 0.929769392033543
  train_precision_weighted:
  - 0.9621861537792088
  - 0.9708711843367375
  - 0.9616252821670429
  - 0.9655049786628733
  - 0.9645116814928136
  train_precision_weighted_oob:
  - 0.9341364122052516
  - 0.9448386277718218
  - 0.9327198989937636
  - 0.9374513987671883
  - 0.9299960337696187
  train_recall_macro:
  - 0.9623312011371713
  - 0.9711203897007655
  - 0.961864406779661
  - 0.9652631578947369
  - 0.9650593990216633
  train_recall_macro_oob:
  - 0.9346126510305615
  - 0.9446764091858038
  - 0.9322033898305085
  - 0.9364912280701755
  - 0.9297693920335431
  train_recall_micro:
  - 0.9623312011371713
  - 0.9711203897007655
  - 0.961864406779661
  - 0.9652631578947368
  - 0.9650593990216632
  train_recall_micro_oob:
  - 0.9346126510305615
  - 0.9446764091858038
  - 0.9322033898305084
  - 0.9364912280701755
  - 0.929769392033543
  train_recall_samples:
  - 0.9623312011371714
  - 0.9711203897007654
  - 0.961864406779661
  - 0.9652631578947368
  - 0.9650593990216632
  train_recall_samples_oob:
  - 0.9346126510305615
  - 0.9446764091858038
  - 0.9322033898305084
  - 0.9364912280701755
  - 0.929769392033543
  train_recall_weighted:
  - 0.9621861537792088
  - 0.9708711843367375
  - 0.9616252821670429
  - 0.9655049786628733
  - 0.9645116814928136
  train_recall_weighted_oob:
  - 0.9341364122052516
  - 0.9448386277718218
  - 0.9327198989937636
  - 0.9374513987671883
  - 0.9299960337696187
  train_roc_auc_macro:
  - 0.9950783478166739
  - 0.9967496631861436
  - 0.9960105897944559
  - 0.9956054140655466
  - 0.9955714745933856
  train_roc_auc_macro_oob:
  - 0.9763661455284764
  - 0.9822405877569441
  - 0.9775729882591553
  - 0.9759960985953496
  - 0.9758644522005966
  train_roc_auc_micro:
  - 0.9947893926376624
  - 0.9964101185777924
  - 0.9952904493560907
  - 0.9951476706063862
  - 0.9949244457223181
  train_roc_auc_micro_oob:
  - 0.977481537818716
  - 0.9831455322391878
  - 0.9778233524112667
  - 0.9779280427216206
  - 0.9770074025393176
  train_roc_auc_samples:
  - 0.9936626391850274
  - 0.9943168638366968
  - 0.9929672787193974
  - 0.9940350877192982
  - 0.9939319822967622
  train_roc_auc_samples_oob:
  - 0.9639954986969913
  - 0.9715031315240084
  - 0.9669314971751414
  - 0.9702339181286549
  - 0.9705508968087585
  train_roc_auc_weighted:
  - 0.9950024225377954
  - 0.9968002910549945
  - 0.9959119468003774
  - 0.995567930053245
  - 0.995603522693407
  train_roc_auc_weighted_oob:
  - 0.9765423120452067
  - 0.9828928045770668
  - 0.9778584765550481
  - 0.9760820282717905
  - 0.9762472333335099
start: 2023-12-22 01:57:16.318423
wrapper: null
