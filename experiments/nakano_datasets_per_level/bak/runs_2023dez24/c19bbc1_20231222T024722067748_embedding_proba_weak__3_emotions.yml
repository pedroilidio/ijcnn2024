active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ+T9AMzMzMzPjP5iZmZmZmRXAoJmZmZmZ+T+gmZmZmZn5Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wJmZmZmZ+T9AZmZmZmb2v0BmZmZmZva/QGZmZmZm9r/gzMzMzMwEQA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 02:47:54.306054
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__3
  params: {}
hash: c19bbc12aa47cadcf9683c3cf3b742e6863648987cb35b16397288a577c963e9
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c19bbc1_20231222T024722067748_embedding_proba_weak__3_emotions.yml
results:
  fit_time:
  - 17.23300814628601
  - 16.51158881187439
  - 16.725287914276123
  - 18.335084438323975
  - 17.413530588150024
  score_time:
  - 3.696841239929199
  - 3.8244969844818115
  - 3.6960484981536865
  - 3.8690004348754883
  - 3.685333251953125
  test_average_precision_macro:
  - 0.688253306273689
  - 0.6879657000147734
  - 0.7310309293949141
  - 0.6720673614528888
  - 0.7705520278911684
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.64643807182032
  - 0.6518057567680308
  - 0.7044640713453661
  - 0.6648403375911527
  - 0.7644282614251845
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7892924976258309
  - 0.7737731481481481
  - 0.7958333333333333
  - 0.7815972222222222
  - 0.8283045977011494
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6772536132174833
  - 0.6763544853974065
  - 0.7299944930376188
  - 0.6711299019088071
  - 0.7781966186019663
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.792022792022792
  - 0.7763888888888889
  - 0.8013888888888889
  - 0.7944444444444444
  - 0.8362068965517242
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.792022792022792
  - 0.7763888888888889
  - 0.8013888888888889
  - 0.7944444444444444
  - 0.8362068965517241
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7920227920227919
  - 0.7763888888888888
  - 0.8013888888888888
  - 0.7944444444444444
  - 0.8362068965517243
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7837995337995338
  - 0.769683257918552
  - 0.8032163742690058
  - 0.7927651515151515
  - 0.8372697213037317
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6615145090116877
  - 0.6431657035937541
  - 0.6714451132087383
  - 0.660819440129785
  - 0.7199873953752718
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6556603773584906
  - 0.6345062429057888
  - 0.6685979142526072
  - 0.6589861751152074
  - 0.7185185185185186
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6924297924297922
  - 0.6775036075036075
  - 0.7020634920634922
  - 0.7027849927849928
  - 0.7516420361247946
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6501516002109182
  - 0.6330296859279613
  - 0.6738452249910012
  - 0.6581780526608112
  - 0.7214602864661838
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7892924976258304
  - 0.773773148148148
  - 0.7958333333333335
  - 0.781597222222222
  - 0.8283045977011495
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5236583049708831
  - 0.4906986290482546
  - 0.5367648072720518
  - 0.5192331152128994
  - 0.6135427072399442
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5364651923235566
  - 0.5043510849176128
  - 0.5484560694619296
  - 0.534399459622159
  - 0.6252003005481501
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5469222350328953
  - 0.501715685237925
  - 0.5573499395894025
  - 0.5375481385675637
  - 0.6347234529789663
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.517313459001445
  - 0.48666070097005437
  - 0.5490646123071474
  - 0.5267776805518156
  - 0.6257356295947206
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8547151061079367
  - 0.8418251711488194
  - 0.8623605513242246
  - 0.8454994121971932
  - 0.8812630077041399
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.769230769230769
  - -2.775
  - -2.8
  - -2.7666666666666666
  - -2.5517241379310347
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20797720797720798
  - -0.22361111111111112
  - -0.1986111111111111
  - -0.20555555555555557
  - -0.16379310344827586
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20797720797720798
  - -0.22361111111111112
  - -0.1986111111111111
  - -0.20555555555555555
  - -0.16379310344827586
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20797720797720798
  - -0.2236111111111111
  - -0.1986111111111111
  - -0.20555555555555557
  - -0.16379310344827583
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.21620046620046618
  - -0.23031674208144798
  - -0.19678362573099414
  - -0.2072348484848485
  - -0.1627302786962683
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1694681861348528
  - -0.18363425925925927
  - -0.15233796296296295
  - -0.1802314814814815
  - -0.1274904214559387
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.792022792022792
  - 0.7763888888888889
  - 0.8013888888888889
  - 0.7944444444444444
  - 0.8362068965517242
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.792022792022792
  - 0.7763888888888889
  - 0.8013888888888889
  - 0.7944444444444444
  - 0.8362068965517241
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7920227920227919
  - 0.7763888888888888
  - 0.8013888888888888
  - 0.7944444444444444
  - 0.8362068965517243
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7837995337995338
  - 0.769683257918552
  - 0.8032163742690058
  - 0.7927651515151515
  - 0.8372697213037317
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.792022792022792
  - 0.7763888888888889
  - 0.8013888888888889
  - 0.7944444444444444
  - 0.8362068965517242
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.792022792022792
  - 0.7763888888888889
  - 0.8013888888888889
  - 0.7944444444444444
  - 0.8362068965517241
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7920227920227919
  - 0.7763888888888888
  - 0.8013888888888888
  - 0.7944444444444444
  - 0.8362068965517243
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7837995337995338
  - 0.769683257918552
  - 0.8032163742690058
  - 0.7927651515151515
  - 0.8372697213037317
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8325359644755661
  - 0.8292877040169003
  - 0.8448198290100534
  - 0.8337948708697698
  - 0.8825697637000736
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.856346661637118
  - 0.8494999047869495
  - 0.8613607188703466
  - 0.8518272727272727
  - 0.8896451375128036
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8305318138651472
  - 0.8163657407407408
  - 0.8476620370370369
  - 0.8197685185185185
  - 0.8725095785440613
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8233182223497244
  - 0.8226179860515028
  - 0.8450419305407977
  - 0.833664579902626
  - 0.8845346627426709
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8297659998607965
  - 0.8171822858819885
  - 0.8241194920800061
  - 0.8311381431337032
  - 0.8154256674892543
  train_average_precision_macro_oob:
  - 0.8049357028076122
  - 0.7971363789838847
  - 0.8005102414561014
  - 0.8022573961350252
  - 0.791450388615508
  train_average_precision_micro:
  - 0.7875076659407648
  - 0.7703924704289481
  - 0.7688663216129628
  - 0.7741421084876823
  - 0.753832356478302
  train_average_precision_micro_oob:
  - 0.7683799300137866
  - 0.756785365446931
  - 0.7509975052693316
  - 0.752719084000903
  - 0.7349809672220142
  train_average_precision_samples:
  - 0.8699346405228757
  - 0.8668663377965703
  - 0.8663025604886069
  - 0.8657740192623914
  - 0.8613091078499884
  train_average_precision_samples_oob:
  - 0.8564425770308124
  - 0.8504756871035941
  - 0.8449612403100775
  - 0.8484613577636833
  - 0.8475890985324948
  train_average_precision_weighted:
  - 0.819657040084983
  - 0.806214323441568
  - 0.8101744642221673
  - 0.81777497832227
  - 0.7989069549520609
  train_average_precision_weighted_oob:
  - 0.7965399744777915
  - 0.7887565012208779
  - 0.7881415729655353
  - 0.7908107804286623
  - 0.7762569024659666
  train_f1_macro:
  - 0.8967086834733893
  - 0.8879492600422833
  - 0.8932346723044398
  - 0.8907681465821002
  - 0.8923829489867225
  train_f1_macro_oob:
  - 0.8686974789915966
  - 0.8608174770965468
  - 0.8636363636363636
  - 0.8639887244538406
  - 0.8647798742138364
  train_f1_micro:
  - 0.8967086834733894
  - 0.8879492600422833
  - 0.8932346723044398
  - 0.8907681465821
  - 0.8923829489867225
  train_f1_micro_oob:
  - 0.8686974789915967
  - 0.8608174770965469
  - 0.8636363636363636
  - 0.8639887244538408
  - 0.8647798742138365
  train_f1_samples:
  - 0.8967086834733894
  - 0.8879492600422833
  - 0.8932346723044398
  - 0.8907681465821001
  - 0.8923829489867225
  train_f1_samples_oob:
  - 0.8686974789915967
  - 0.860817477096547
  - 0.8636363636363636
  - 0.8639887244538407
  - 0.8647798742138365
  train_f1_weighted:
  - 0.8917239192974488
  - 0.8822383929486524
  - 0.8860561214683836
  - 0.8843970820715007
  - 0.8848162847568581
  train_f1_weighted_oob:
  - 0.8638664925429631
  - 0.8564036315012955
  - 0.8580122044974053
  - 0.8593032779079292
  - 0.858965742489736
  train_jaccard_macro:
  - 0.8148914156651634
  - 0.8008523394390797
  - 0.8096088486507135
  - 0.8052114682464157
  - 0.8090362127190257
  train_jaccard_macro_oob:
  - 0.7699508340861977
  - 0.757777692512462
  - 0.7623745355316606
  - 0.7626444379834587
  - 0.7647772853114169
  train_jaccard_micro:
  - 0.8127578546493177
  - 0.7984790874524715
  - 0.8070678127984718
  - 0.8030495552731893
  - 0.8056782334384858
  train_jaccard_micro_oob:
  - 0.7678737233054782
  - 0.7556449118465821
  - 0.76
  - 0.760545905707196
  - 0.7617728531855956
  train_jaccard_samples:
  - 0.8341836734693876
  - 0.8221785965972012
  - 0.8290748011678244
  - 0.8267391523205475
  - 0.8285913946291303
  train_jaccard_samples_oob:
  - 0.7949079631852741
  - 0.7843149098963053
  - 0.7874660223497432
  - 0.7891271519178497
  - 0.7888190076869321
  train_jaccard_weighted:
  - 0.8066296861362184
  - 0.7915714607742503
  - 0.7981009677539569
  - 0.7949905715623379
  - 0.7967987626293017
  train_jaccard_weighted_oob:
  - 0.7622675664065369
  - 0.7507661668832614
  - 0.7536092044263476
  - 0.7552074118216097
  - 0.7555721068401949
  train_label_ranking_average_precision_score:
  - 0.8699346405228752
  - 0.866866337796569
  - 0.8663025604886057
  - 0.8657740192623903
  - 0.8613091078499868
  train_label_ranking_average_precision_score_oob:
  - 0.8564425770308114
  - 0.8504756871035928
  - 0.8449612403100764
  - 0.8484613577636823
  - 0.8475890985324932
  train_matthews_corrcoef_macro:
  - 0.7745716375524108
  - 0.7595787665117418
  - 0.7675856127889794
  - 0.7634091444530579
  - 0.7688915583467306
  train_matthews_corrcoef_macro_oob:
  - 0.7078046339835445
  - 0.6919739617088373
  - 0.6951087968576282
  - 0.695296001206778
  - 0.6985057487919581
  train_matthews_corrcoef_micro:
  - 0.7726840865440637
  - 0.7588861995010738
  - 0.7660329899873074
  - 0.7621386112046801
  - 0.7645470496402202
  train_matthews_corrcoef_micro_oob:
  - 0.7070089982915717
  - 0.6932385646947988
  - 0.6967091543266422
  - 0.6958367774905583
  - 0.6963179119432111
  train_matthews_corrcoef_samples:
  - 0.7830017186280824
  - 0.7710587377956674
  - 0.775517019429639
  - 0.7773982704114416
  - 0.7758109319437112
  train_matthews_corrcoef_samples_oob:
  - 0.7123151470667279
  - 0.7004532280003472
  - 0.7046270164125605
  - 0.707093529303293
  - 0.7079513264973928
  train_matthews_corrcoef_weighted:
  - 0.7691217465502765
  - 0.7525295010366013
  - 0.7587745242435859
  - 0.7554899865445946
  - 0.7582714191294775
  train_matthews_corrcoef_weighted_oob:
  - 0.7038857145517231
  - 0.6893445403710704
  - 0.6908248478717958
  - 0.6922893066939213
  - 0.6931688890842671
  train_ndgc:
  - 0.9085082249230605
  - 0.9061957651199177
  - 0.9045193018691026
  - 0.9054809623586648
  - 0.90114065598261
  train_ndgc_oob:
  - 0.900844370194363
  - 0.8957291300556117
  - 0.8903188774691186
  - 0.8945178067148428
  - 0.8927260699709795
  train_neg_coverage_error:
  - -2.2605042016806722
  - -2.285412262156448
  - -2.2600422832980973
  - -2.287526427061311
  - -2.2746331236897275
  train_neg_coverage_error_oob:
  - -2.4138655462184873
  - -2.4143763213530653
  - -2.4186046511627906
  - -2.412262156448203
  - -2.4046121593291403
  train_neg_hamming_loss_macro:
  - -0.10329131652661062
  - -0.11205073995771671
  - -0.10676532769556026
  - -0.10923185341789993
  - -0.10761705101327741
  train_neg_hamming_loss_macro_oob:
  - -0.13130252100840337
  - -0.13918252290345315
  - -0.13636363636363638
  - -0.13601127554615924
  - -0.13522012578616352
  train_neg_hamming_loss_micro:
  - -0.10329131652661064
  - -0.11205073995771671
  - -0.10676532769556026
  - -0.10923185341789993
  - -0.10761705101327743
  train_neg_hamming_loss_micro_oob:
  - -0.13130252100840337
  - -0.13918252290345315
  - -0.13636363636363635
  - -0.13601127554615927
  - -0.13522012578616352
  train_neg_hamming_loss_samples:
  - -0.10329131652661065
  - -0.11205073995771671
  - -0.10676532769556026
  - -0.10923185341789993
  - -0.10761705101327741
  train_neg_hamming_loss_samples_oob:
  - -0.13130252100840337
  - -0.13918252290345312
  - -0.13636363636363635
  - -0.13601127554615924
  - -0.13522012578616352
  train_neg_hamming_loss_weighted:
  - -0.10827608070255129
  - -0.11776160705134776
  - -0.11394387853161637
  - -0.11560291792849933
  - -0.11518371524314178
  train_neg_hamming_loss_weighted_oob:
  - -0.13613350745703687
  - -0.14359636849870455
  - -0.14198779550259466
  - -0.14069672209207093
  - -0.14103425751026405
  train_neg_label_ranking_loss:
  - -0.07626050420168067
  - -0.07988019732205778
  - -0.08026779422128259
  - -0.0801092318534179
  - -0.08297228045655718
  train_neg_label_ranking_loss_oob:
  - -0.09908963585434173
  - -0.10015856236786469
  - -0.10654216584449143
  - -0.09960653042048391
  - -0.1027603074772886
  train_precision_macro:
  - 0.8967086834733893
  - 0.8879492600422833
  - 0.8932346723044398
  - 0.8907681465821002
  - 0.8923829489867225
  train_precision_macro_oob:
  - 0.8686974789915966
  - 0.8608174770965468
  - 0.8636363636363636
  - 0.8639887244538406
  - 0.8647798742138364
  train_precision_micro:
  - 0.8967086834733894
  - 0.8879492600422833
  - 0.8932346723044398
  - 0.8907681465821
  - 0.8923829489867225
  train_precision_micro_oob:
  - 0.8686974789915967
  - 0.8608174770965469
  - 0.8636363636363636
  - 0.8639887244538408
  - 0.8647798742138365
  train_precision_samples:
  - 0.8967086834733894
  - 0.8879492600422833
  - 0.8932346723044398
  - 0.8907681465821001
  - 0.8923829489867225
  train_precision_samples_oob:
  - 0.8686974789915967
  - 0.860817477096547
  - 0.8636363636363636
  - 0.8639887244538407
  - 0.8647798742138365
  train_precision_weighted:
  - 0.8917239192974488
  - 0.8822383929486524
  - 0.8860561214683836
  - 0.8843970820715007
  - 0.8848162847568581
  train_precision_weighted_oob:
  - 0.8638664925429631
  - 0.8564036315012955
  - 0.8580122044974053
  - 0.8593032779079292
  - 0.858965742489736
  train_recall_macro:
  - 0.8967086834733893
  - 0.8879492600422833
  - 0.8932346723044398
  - 0.8907681465821002
  - 0.8923829489867225
  train_recall_macro_oob:
  - 0.8686974789915966
  - 0.8608174770965468
  - 0.8636363636363636
  - 0.8639887244538406
  - 0.8647798742138364
  train_recall_micro:
  - 0.8967086834733894
  - 0.8879492600422833
  - 0.8932346723044398
  - 0.8907681465821
  - 0.8923829489867225
  train_recall_micro_oob:
  - 0.8686974789915967
  - 0.8608174770965469
  - 0.8636363636363636
  - 0.8639887244538408
  - 0.8647798742138365
  train_recall_samples:
  - 0.8967086834733894
  - 0.8879492600422833
  - 0.8932346723044398
  - 0.8907681465821001
  - 0.8923829489867225
  train_recall_samples_oob:
  - 0.8686974789915967
  - 0.860817477096547
  - 0.8636363636363636
  - 0.8639887244538407
  - 0.8647798742138365
  train_recall_weighted:
  - 0.8917239192974488
  - 0.8822383929486524
  - 0.8860561214683836
  - 0.8843970820715007
  - 0.8848162847568581
  train_recall_weighted_oob:
  - 0.8638664925429631
  - 0.8564036315012955
  - 0.8580122044974053
  - 0.8593032779079292
  - 0.858965742489736
  train_roc_auc_macro:
  - 0.9407609517937936
  - 0.9338632267992465
  - 0.9353754173280127
  - 0.9361845562292285
  - 0.9328467905198861
  train_roc_auc_macro_oob:
  - 0.9202350564544397
  - 0.9169646607485772
  - 0.9148634730381023
  - 0.9149577821023408
  - 0.9149382618796947
  train_roc_auc_micro:
  - 0.9394392486999193
  - 0.9332033929352563
  - 0.935378459002693
  - 0.9355855855855856
  - 0.9326834652510807
  train_roc_auc_micro_oob:
  - 0.9208355649857173
  - 0.9173273960626095
  - 0.9175817160367722
  - 0.9175568838068837
  - 0.9166412485312118
  train_roc_auc_samples:
  - 0.9237394957983193
  - 0.9201198026779422
  - 0.9197322057787174
  - 0.9198907681465821
  - 0.9170277195434428
  train_roc_auc_samples_oob:
  - 0.9009103641456582
  - 0.8998414376321353
  - 0.8934578341555086
  - 0.9003934695795159
  - 0.8972396925227114
  train_roc_auc_weighted:
  - 0.9348799620377102
  - 0.9272415173996449
  - 0.926436554639121
  - 0.9281211105857375
  - 0.9232573481305619
  train_roc_auc_weighted_oob:
  - 0.9155910827147059
  - 0.9114354287692022
  - 0.9073863436702855
  - 0.9081933758014293
  - 0.9061992631124636
start: 2023-12-22 02:47:22.067748
wrapper: null
