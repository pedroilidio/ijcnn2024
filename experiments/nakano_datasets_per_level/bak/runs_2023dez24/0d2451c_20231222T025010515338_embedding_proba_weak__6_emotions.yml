active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzMBEAwMzMzMzMLwDAzMzMzMwvA0MzMzMzMBECgmZmZmZn5Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMzA8DAmZmZmZn5PwCZmZmZmdm/AJmZmZmZ2b/AmZmZmZn5Pw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 02:52:28.265388
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 6
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__6
  params: {}
hash: 0d2451c069dafd0e1f82a4a4cb9bc966ba9744fc6bfd6c1fe5f2e7728a57a4cb
metaestimator: null
modify_params:
  max_levels: 6
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/0d2451c_20231222T025010515338_embedding_proba_weak__6_emotions.yml
results:
  fit_time:
  - 114.51818990707397
  - 115.16954708099365
  - 114.40909266471863
  - 115.05639719963074
  - 117.59686350822449
  score_time:
  - 6.297957181930542
  - 6.463079452514648
  - 6.149723529815674
  - 6.18125581741333
  - 6.533931732177734
  test_average_precision_macro:
  - 0.6779173490642431
  - 0.7049665340186374
  - 0.6892055829988846
  - 0.7496544007293936
  - 0.7130350756893673
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6322757550803704
  - 0.6729814291684734
  - 0.6665892573048776
  - 0.7575051379216862
  - 0.6869315826285678
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.767309458218549
  - 0.8201566951566951
  - 0.7725957049486462
  - 0.8065826330532212
  - 0.7819563152896486
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6732093136489513
  - 0.6949456054837606
  - 0.6845824488309515
  - 0.7642237371527464
  - 0.7102908172571576
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7865013774104682
  - 0.7948717948717947
  - 0.7829131652661064
  - 0.8095238095238094
  - 0.782051282051282
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7865013774104683
  - 0.7948717948717948
  - 0.7829131652661064
  - 0.8095238095238095
  - 0.782051282051282
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7865013774104682
  - 0.794871794871795
  - 0.7829131652661064
  - 0.8095238095238095
  - 0.7820512820512822
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7795388505226611
  - 0.7923038595684335
  - 0.7800252844500631
  - 0.810214496757607
  - 0.781490505472406
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6509388316112276
  - 0.6683581351018072
  - 0.6465866008656326
  - 0.6846025664425645
  - 0.6451036161226599
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6481271282633371
  - 0.6595744680851063
  - 0.6432681242807825
  - 0.68
  - 0.6421052631578947
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6915852742299023
  - 0.6892958892958893
  - 0.6805958747135216
  - 0.7168103605078394
  - 0.6861730861730861
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6412745257921391
  - 0.6636943416444971
  - 0.6421948667468976
  - 0.6849568824490739
  - 0.6438926218086402
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.767309458218549
  - 0.8201566951566951
  - 0.7725957049486459
  - 0.806582633053221
  - 0.7819563152896487
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5145943424652336
  - 0.5407702016822438
  - 0.505283244979467
  - 0.5726826721349888
  - 0.5090248604023536
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5230974969441557
  - 0.5499330793037942
  - 0.5199471217197137
  - 0.5798746234508917
  - 0.5248385614495603
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5249653732404673
  - 0.5568636213086802
  - 0.5150400515321663
  - 0.5752493882050013
  - 0.5408989463681257
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.5104614807244112
  - 0.5429327199117181
  - 0.507874963986746
  - 0.5821341663143688
  - 0.5163027505987879
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8358681770371628
  - 0.8814584682078456
  - 0.8436251491027817
  - 0.8648281166324653
  - 0.8499563260996461
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.8264462809917354
  - -2.752136752136752
  - -2.899159663865546
  - -2.588235294117647
  - -2.7948717948717947
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.21349862258953167
  - -0.20512820512820515
  - -0.21708683473389356
  - -0.19047619047619047
  - -0.21794871794871795
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.21349862258953167
  - -0.20512820512820512
  - -0.21708683473389356
  - -0.19047619047619047
  - -0.21794871794871795
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.21349862258953167
  - -0.2051282051282051
  - -0.21708683473389354
  - -0.1904761904761905
  - -0.21794871794871792
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.22046114947733875
  - -0.20769614043156645
  - -0.2199747155499368
  - -0.18978550324239282
  - -0.2185094945275941
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.19765840220385675
  - -0.14423076923076922
  - -0.18685807656395892
  - -0.13825863678804853
  - -0.17443019943019944
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7865013774104682
  - 0.7948717948717947
  - 0.7829131652661064
  - 0.8095238095238094
  - 0.782051282051282
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7865013774104683
  - 0.7948717948717948
  - 0.7829131652661064
  - 0.8095238095238095
  - 0.782051282051282
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7865013774104682
  - 0.794871794871795
  - 0.7829131652661064
  - 0.8095238095238095
  - 0.7820512820512822
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7795388505226611
  - 0.7923038595684335
  - 0.7800252844500631
  - 0.810214496757607
  - 0.781490505472406
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7865013774104682
  - 0.7948717948717947
  - 0.7829131652661064
  - 0.8095238095238094
  - 0.782051282051282
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7865013774104683
  - 0.7948717948717948
  - 0.7829131652661064
  - 0.8095238095238095
  - 0.782051282051282
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7865013774104682
  - 0.794871794871795
  - 0.7829131652661064
  - 0.8095238095238095
  - 0.7820512820512822
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7795388505226611
  - 0.7923038595684335
  - 0.7800252844500631
  - 0.810214496757607
  - 0.781490505472406
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8192934556305879
  - 0.8338303832072116
  - 0.8344304697609205
  - 0.8827279801321035
  - 0.8405314059740641
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8320229121072115
  - 0.8626342248892968
  - 0.8504733062527201
  - 0.8904663069046631
  - 0.8535855730425866
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8023415977961432
  - 0.8557692307692307
  - 0.8131419234360412
  - 0.8617413632119513
  - 0.8255698005698006
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8154491927146713
  - 0.8284530067448175
  - 0.831591990411901
  - 0.8872050191445688
  - 0.838707111157144
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8254669097290322
  - 0.8152888840422566
  - 0.8178953965460459
  - 0.8245695615534143
  - 0.8147147348784403
  train_average_precision_macro_oob:
  - 0.8093411128526244
  - 0.7959119075207766
  - 0.8018085455218394
  - 0.8067545869475815
  - 0.8021816331921349
  train_average_precision_micro:
  - 0.7717501919488927
  - 0.7626984553115398
  - 0.7627573581851385
  - 0.7751427659890949
  - 0.7620103933130943
  train_average_precision_micro_oob:
  - 0.763326378120556
  - 0.7485668410152857
  - 0.754223944834665
  - 0.7592664336413566
  - 0.7540495698827714
  train_average_precision_samples:
  - 0.8642537664783428
  - 0.8583333333333333
  - 0.8659165494608533
  - 0.8761134552273793
  - 0.8705648926237161
  train_average_precision_samples_oob:
  - 0.8546727871939737
  - 0.8471463585434174
  - 0.8555789967182373
  - 0.8619198312236288
  - 0.8606325863678804
  train_average_precision_weighted:
  - 0.8133289196062579
  - 0.8044784423904431
  - 0.8052178911274797
  - 0.811524004675802
  - 0.802394010127388
  train_average_precision_weighted_oob:
  - 0.7994023768170969
  - 0.7861695808558974
  - 0.7905422494216049
  - 0.7951951484650709
  - 0.791138949870538
  train_f1_macro:
  - 0.8905367231638418
  - 0.8799019607843137
  - 0.8867791842475388
  - 0.8938115330520394
  - 0.8911064425770308
  train_f1_macro_oob:
  - 0.8732344632768362
  - 0.8634453781512604
  - 0.8684950773558368
  - 0.8730661040787623
  - 0.8757002801120448
  train_f1_micro:
  - 0.8905367231638418
  - 0.8799019607843137
  - 0.8867791842475387
  - 0.8938115330520394
  - 0.8911064425770309
  train_f1_micro_oob:
  - 0.8732344632768362
  - 0.8634453781512605
  - 0.8684950773558369
  - 0.8730661040787623
  - 0.8757002801120448
  train_f1_samples:
  - 0.8905367231638419
  - 0.8799019607843138
  - 0.8867791842475388
  - 0.8938115330520395
  - 0.8911064425770309
  train_f1_samples_oob:
  - 0.8732344632768362
  - 0.8634453781512605
  - 0.8684950773558369
  - 0.8730661040787623
  - 0.8757002801120449
  train_f1_weighted:
  - 0.8850450897027703
  - 0.874362626406495
  - 0.8815910330376878
  - 0.8869112879877357
  - 0.885538544617396
  train_f1_weighted_oob:
  - 0.8682913576480905
  - 0.8587570621468926
  - 0.8639431862759167
  - 0.8667421319170547
  - 0.8702405426657699
  train_jaccard_macro:
  - 0.805423073834579
  - 0.7879176085026294
  - 0.799445444612049
  - 0.8113724514914918
  - 0.8067421050113595
  train_jaccard_macro_oob:
  - 0.7778518818772229
  - 0.7621828326584282
  - 0.7707522135180697
  - 0.7784893399424027
  - 0.7824168242095969
  train_jaccard_micro:
  - 0.8026734563971992
  - 0.7855579868708972
  - 0.7965887555274794
  - 0.8080101716465353
  - 0.8035996210925166
  train_jaccard_micro_oob:
  - 0.7749921654653713
  - 0.7597042513863216
  - 0.7675574891236793
  - 0.7747269890795632
  - 0.7788850825288072
  train_jaccard_samples:
  - 0.8242534301856336
  - 0.8100640256102439
  - 0.8190074341973076
  - 0.830510347598955
  - 0.825250100040016
  train_jaccard_samples_oob:
  - 0.7994552058111379
  - 0.7872749099639855
  - 0.7932388989351014
  - 0.8008338356439622
  - 0.8033913565426171
  train_jaccard_weighted:
  - 0.7963943164359432
  - 0.779035854997796
  - 0.7909246434864328
  - 0.8001283086029529
  - 0.7975713663951048
  train_jaccard_weighted_oob:
  - 0.7698999848303576
  - 0.7547522747233503
  - 0.7633753101749039
  - 0.7683598543869378
  - 0.7735860545984377
  train_label_ranking_average_precision_score:
  - 0.8642537664783417
  - 0.8583333333333325
  - 0.8659165494608521
  - 0.876113455227378
  - 0.8705648926237147
  train_label_ranking_average_precision_score_oob:
  - 0.8546727871939724
  - 0.8471463585434166
  - 0.8555789967182362
  - 0.8619198312236274
  - 0.8606325863678791
  train_matthews_corrcoef_macro:
  - 0.7675729261131994
  - 0.7455460056568343
  - 0.7609477537486647
  - 0.7761260909080842
  - 0.77346568377961
  train_matthews_corrcoef_macro_oob:
  - 0.7258535736210029
  - 0.7063504985687353
  - 0.7157422518599762
  - 0.7256284451177972
  - 0.7347661693821319
  train_matthews_corrcoef_micro:
  - 0.7657406671312045
  - 0.7460453902079687
  - 0.759130440052749
  - 0.772513538345
  - 0.7705291644916866
  train_matthews_corrcoef_micro_oob:
  - 0.7252457448370738
  - 0.7082395221064182
  - 0.714785775161757
  - 0.7227640978159353
  - 0.7330122192760238
  train_matthews_corrcoef_samples:
  - 0.7772067605387747
  - 0.7529840983947417
  - 0.7704494503105446
  - 0.7855715220978763
  - 0.7789192968375397
  train_matthews_corrcoef_samples_oob:
  - 0.7354306659014386
  - 0.7132526867170702
  - 0.7237578072749923
  - 0.737843276583422
  - 0.7421492676929895
  train_matthews_corrcoef_weighted:
  - 0.7606185552704495
  - 0.7387955710170739
  - 0.7544219265746497
  - 0.7658967003790739
  - 0.7662411442986634
  train_matthews_corrcoef_weighted_oob:
  - 0.7209635233162154
  - 0.7021927633885653
  - 0.7117735067182366
  - 0.7177062757080825
  - 0.7285044074231994
  train_ndgc:
  - 0.9049021850577342
  - 0.9001646573866915
  - 0.9060580743683866
  - 0.9138700049138175
  - 0.9100849503546788
  train_ndgc_oob:
  - 0.8993765561583457
  - 0.8929960255800043
  - 0.8994189200068844
  - 0.9051115608804768
  - 0.9037826212307927
  train_neg_coverage_error:
  - -2.3072033898305087
  - -2.3046218487394956
  - -2.278481012658228
  - -2.2742616033755274
  - -2.2794117647058822
  train_neg_coverage_error_oob:
  - -2.4046610169491527
  - -2.418067226890756
  - -2.3628691983122363
  - -2.3987341772151898
  - -2.3739495798319328
  train_neg_hamming_loss_macro:
  - -0.10946327683615818
  - -0.12009803921568625
  - -0.11322081575246133
  - -0.10618846694796062
  - -0.10889355742296919
  train_neg_hamming_loss_macro_oob:
  - -0.12676553672316385
  - -0.13655462184873948
  - -0.13150492264416316
  - -0.1269338959212377
  - -0.12429971988795518
  train_neg_hamming_loss_micro:
  - -0.1094632768361582
  - -0.12009803921568628
  - -0.11322081575246132
  - -0.10618846694796062
  - -0.10889355742296919
  train_neg_hamming_loss_micro_oob:
  - -0.12676553672316385
  - -0.13655462184873948
  - -0.13150492264416316
  - -0.1269338959212377
  - -0.12429971988795518
  train_neg_hamming_loss_samples:
  - -0.10946327683615818
  - -0.12009803921568628
  - -0.1132208157524613
  - -0.10618846694796061
  - -0.10889355742296919
  train_neg_hamming_loss_samples_oob:
  - -0.12676553672316382
  - -0.13655462184873948
  - -0.13150492264416314
  - -0.1269338959212377
  - -0.12429971988795517
  train_neg_hamming_loss_weighted:
  - -0.11495491029722979
  - -0.12563737359350519
  - -0.11840896696231236
  - -0.11308871201226428
  - -0.11446145538260401
  train_neg_hamming_loss_weighted_oob:
  - -0.1317086423519094
  - -0.14124293785310732
  - -0.13605681372408315
  - -0.13325786808294532
  - -0.1297594573342302
  train_neg_label_ranking_loss:
  - -0.081950329566855
  - -0.08614612511671337
  - -0.08018635724331927
  - -0.07641233005157055
  - -0.0779936974789916
  train_neg_label_ranking_loss_oob:
  - -0.09632179849340866
  - -0.1042250233426704
  - -0.09328996718237224
  - -0.0955461790904829
  - -0.09323062558356676
  train_precision_macro:
  - 0.8905367231638418
  - 0.8799019607843137
  - 0.8867791842475388
  - 0.8938115330520394
  - 0.8911064425770308
  train_precision_macro_oob:
  - 0.8732344632768362
  - 0.8634453781512604
  - 0.8684950773558368
  - 0.8730661040787623
  - 0.8757002801120448
  train_precision_micro:
  - 0.8905367231638418
  - 0.8799019607843137
  - 0.8867791842475387
  - 0.8938115330520394
  - 0.8911064425770309
  train_precision_micro_oob:
  - 0.8732344632768362
  - 0.8634453781512605
  - 0.8684950773558369
  - 0.8730661040787623
  - 0.8757002801120448
  train_precision_samples:
  - 0.8905367231638419
  - 0.8799019607843138
  - 0.8867791842475388
  - 0.8938115330520395
  - 0.8911064425770309
  train_precision_samples_oob:
  - 0.8732344632768362
  - 0.8634453781512605
  - 0.8684950773558369
  - 0.8730661040787623
  - 0.8757002801120449
  train_precision_weighted:
  - 0.8850450897027703
  - 0.874362626406495
  - 0.8815910330376878
  - 0.8869112879877357
  - 0.885538544617396
  train_precision_weighted_oob:
  - 0.8682913576480905
  - 0.8587570621468926
  - 0.8639431862759167
  - 0.8667421319170547
  - 0.8702405426657699
  train_recall_macro:
  - 0.8905367231638418
  - 0.8799019607843137
  - 0.8867791842475388
  - 0.8938115330520394
  - 0.8911064425770308
  train_recall_macro_oob:
  - 0.8732344632768362
  - 0.8634453781512604
  - 0.8684950773558368
  - 0.8730661040787623
  - 0.8757002801120448
  train_recall_micro:
  - 0.8905367231638418
  - 0.8799019607843137
  - 0.8867791842475387
  - 0.8938115330520394
  - 0.8911064425770309
  train_recall_micro_oob:
  - 0.8732344632768362
  - 0.8634453781512605
  - 0.8684950773558369
  - 0.8730661040787623
  - 0.8757002801120448
  train_recall_samples:
  - 0.8905367231638419
  - 0.8799019607843138
  - 0.8867791842475388
  - 0.8938115330520395
  - 0.8911064425770309
  train_recall_samples_oob:
  - 0.8732344632768362
  - 0.8634453781512605
  - 0.8684950773558369
  - 0.8730661040787623
  - 0.8757002801120449
  train_recall_weighted:
  - 0.8850450897027703
  - 0.874362626406495
  - 0.8815910330376878
  - 0.8869112879877357
  - 0.885538544617396
  train_recall_weighted_oob:
  - 0.8682913576480905
  - 0.8587570621468926
  - 0.8639431862759167
  - 0.8667421319170547
  - 0.8702405426657699
  train_roc_auc_macro:
  - 0.9347112130918949
  - 0.930280200207858
  - 0.9328913204573913
  - 0.9334131626624634
  - 0.9322144018746771
  train_roc_auc_macro_oob:
  - 0.9237517729853272
  - 0.9163150294749633
  - 0.9215967257983819
  - 0.9190057390784631
  - 0.9200783357123621
  train_roc_auc_micro:
  - 0.9333374630281355
  - 0.9294894615999794
  - 0.9318664604815762
  - 0.9329583802024748
  - 0.9308088792289507
  train_roc_auc_micro_oob:
  - 0.9225855903369774
  - 0.9166387190533929
  - 0.9215684744845952
  - 0.9188593753146586
  - 0.9196147959665685
  train_roc_auc_samples:
  - 0.918049670433145
  - 0.9138538748832867
  - 0.9198136427566808
  - 0.9235876699484294
  - 0.9220063025210085
  train_roc_auc_samples_oob:
  - 0.9036782015065913
  - 0.8957749766573296
  - 0.9067100328176277
  - 0.9044538209095171
  - 0.9069006769374417
  train_roc_auc_weighted:
  - 0.928055168249606
  - 0.9238456081551302
  - 0.9258767901243328
  - 0.9254586469511819
  - 0.9250255616071738
  train_roc_auc_weighted_oob:
  - 0.9178319695606686
  - 0.9105290661102801
  - 0.9148200636173098
  - 0.9115182921401187
  - 0.9132809471236305
start: 2023-12-22 02:50:10.515338
wrapper: null
