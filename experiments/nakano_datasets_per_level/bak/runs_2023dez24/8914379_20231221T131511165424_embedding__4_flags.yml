active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+gmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+YmZmZmZkBwDQzMzMzMxNA0MzMzMzM/D/MzMzMzMwQwA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT/QzMzMzMz8vzAzMzMzM/M/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZm9j80MzMzMzMLQJiZmZmZmfm/mJmZmZmZ+b+YmZmZmZn5vw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpvzQzMzMzM/M/NDMzMzMz8z/MzMzMzMz8vw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wJmZmZmZ6T+QmZmZmZkBwHBmZmZmZgZAcGZmZmZmBkDIzMzMzMwQwA==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 13:15:26.666274
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_level: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding__4
  params: {}
hash: 8914379a94b96b469784b0b1a17616cf607fadb3c3a878d4eed5ef9ff968f183
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/8914379_20231221T131511165424_embedding__4_flags.yml
results:
  fit_time:
  - 8.625750541687012
  - 8.318984746932983
  - 8.915396928787231
  - 8.615845203399658
  - 8.903882503509521
  score_time:
  - 1.9357783794403076
  - 2.1414101123809814
  - 1.911081075668335
  - 1.93214750289917
  - 2.1885910034179688
  test_average_precision_macro:
  - 0.8352945323088748
  - 0.6993885985060103
  - 0.7980062852901734
  - 0.7330037222988582
  - 0.75892807801019
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.8366909683909943
  - 0.7412316943456816
  - 0.8616796441031819
  - 0.8352780071247193
  - 0.7750116229860047
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8496136173767752
  - 0.7942237708091366
  - 0.8669918430335096
  - 0.8612533068783068
  - 0.8016842008121077
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.852235503132513
  - 0.758714604318477
  - 0.8701494375388548
  - 0.8175321897372202
  - 0.8030945534145525
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7706766917293233
  - 0.7317073170731706
  - 0.7698412698412699
  - 0.75
  - 0.7508305647840531
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7706766917293233
  - 0.7317073170731707
  - 0.7698412698412699
  - 0.75
  - 0.7508305647840532
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7706766917293234
  - 0.7317073170731707
  - 0.7698412698412699
  - 0.7500000000000001
  - 0.7508305647840531
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.759919028340081
  - 0.7076866223207687
  - 0.7784391534391534
  - 0.7517094017094017
  - 0.7362126245847176
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.630313229379985
  - 0.5838695120161423
  - 0.633843330754962
  - 0.6097705666117379
  - 0.603403968390241
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6269113149847095
  - 0.5769230769230769
  - 0.6258064516129033
  - 0.6
  - 0.601063829787234
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6586298204719258
  - 0.6089554077358955
  - 0.6604096520763187
  - 0.6326178451178451
  - 0.6362226920366456
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6152721516974038
  - 0.5525771075149635
  - 0.6440556999836726
  - 0.6106357245239233
  - 0.584661060716905
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8496136173767752
  - 0.7942237708091366
  - 0.8669918430335096
  - 0.8612533068783069
  - 0.8016842008121076
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.2257263830123288
  - 0.14261898964943617
  - 0.25852793763769244
  - 0.18630292403111715
  - 0.25270141054360107
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5410241298864746
  - 0.4602609232697659
  - 0.5396825396825397
  - 0.4992586737677807
  - 0.5000225141276265
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.5153241211520416
  - 0.42807952958387996
  - 0.5297571281605716
  - 0.46708794174256213
  - 0.44564680450861516
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.19632764337509143
  - 0.15418295114467293
  - 0.26652317546000587
  - 0.16473988774008197
  - 0.2458739566042425
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9123247215210547
  - 0.8710677587850251
  - 0.9218594565751957
  - 0.9236585814189036
  - 0.8825973161593098
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -4.5
  - -4.585365853658536
  - -4.444444444444445
  - -4.861111111111111
  - -4.674418604651163
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.22932330827067668
  - -0.26829268292682923
  - -0.23015873015873017
  - -0.25
  - -0.24916943521594684
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.22932330827067668
  - -0.2682926829268293
  - -0.23015873015873015
  - -0.25
  - -0.24916943521594684
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.22932330827067668
  - -0.2682926829268293
  - -0.23015873015873012
  - -0.25
  - -0.24916943521594687
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.24008097165991904
  - -0.2923133776792313
  - -0.22156084656084654
  - -0.2482905982905983
  - -0.26378737541528235
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1679824561403509
  - -0.21260162601626012
  - -0.14675925925925926
  - -0.18194444444444446
  - -0.20852713178294574
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7706766917293233
  - 0.7317073170731706
  - 0.7698412698412699
  - 0.75
  - 0.7508305647840531
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7706766917293233
  - 0.7317073170731707
  - 0.7698412698412699
  - 0.75
  - 0.7508305647840532
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7706766917293234
  - 0.7317073170731707
  - 0.7698412698412699
  - 0.7500000000000001
  - 0.7508305647840531
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.759919028340081
  - 0.7076866223207687
  - 0.7784391534391534
  - 0.7517094017094017
  - 0.7362126245847176
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7706766917293233
  - 0.7317073170731706
  - 0.7698412698412699
  - 0.75
  - 0.7508305647840531
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7706766917293233
  - 0.7317073170731707
  - 0.7698412698412699
  - 0.75
  - 0.7508305647840532
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7706766917293234
  - 0.7317073170731707
  - 0.7698412698412699
  - 0.7500000000000001
  - 0.7508305647840531
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.759919028340081
  - 0.7076866223207687
  - 0.7784391534391534
  - 0.7517094017094017
  - 0.7362126245847176
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.790958648939739
  - 0.7043029203771588
  - 0.7784116268261061
  - 0.7352292768959435
  - 0.7743577559822009
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8492081447963801
  - 0.809090909090909
  - 0.8683547493071303
  - 0.833732660781841
  - 0.8062999112688554
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - 0.78739837398374
  - 0.8532407407407407
  - 0.8180555555555554
  - .nan
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.752954612437371
  - 0.660765439876173
  - 0.7558158375435943
  - 0.7158119658119658
  - 0.7620388211311688
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.969822175234989
  - 0.9528456008552706
  - 0.9587611891374664
  - 0.9572181812472926
  - 0.9580018803603912
  train_average_precision_macro_oob:
  - 0.7373692725213681
  - 0.777186701179674
  - 0.7527449055368799
  - 0.7724656958032341
  - 0.7662918172613409
  train_average_precision_micro:
  - 0.9496929474944702
  - 0.9544067818118134
  - 0.9484122523922053
  - 0.9465068948476899
  - 0.9483919448759177
  train_average_precision_micro_oob:
  - 0.8184450944718109
  - 0.8478932926285249
  - 0.8159524769867956
  - 0.8123647658361366
  - 0.8287653931308385
  train_average_precision_samples:
  - 0.9247868335368336
  - 0.931165577342048
  - 0.9229171689772957
  - 0.9176172895318466
  - 0.9300528224534846
  train_average_precision_samples_oob:
  - 0.845124643874644
  - 0.8575438323477539
  - 0.8290117038376531
  - 0.8388384066706851
  - 0.8523654472826658
  train_average_precision_weighted:
  - 0.983531502307787
  - 0.9809215102095774
  - 0.9810102217867404
  - 0.9810460050319636
  - 0.9835560241111758
  train_average_precision_weighted_oob:
  - 0.8142309278031156
  - 0.8513068159437861
  - 0.8154829484766899
  - 0.8240312453745962
  - 0.8308623832002544
  train_f1_macro:
  - 0.8763736263736265
  - 0.8832866479925305
  - 0.8652802893309223
  - 0.8698010849909584
  - 0.880794701986755
  train_f1_macro_oob:
  - 0.7701465201465201
  - 0.7777777777777778
  - 0.7567811934900542
  - 0.7631103074141049
  - 0.7729422894985809
  train_f1_micro:
  - 0.8763736263736264
  - 0.8832866479925303
  - 0.8652802893309223
  - 0.8698010849909584
  - 0.8807947019867549
  train_f1_micro_oob:
  - 0.7701465201465202
  - 0.7777777777777778
  - 0.7567811934900542
  - 0.7631103074141049
  - 0.7729422894985809
  train_f1_samples:
  - 0.8763736263736265
  - 0.8832866479925301
  - 0.8652802893309222
  - 0.8698010849909582
  - 0.8807947019867549
  train_f1_samples_oob:
  - 0.7701465201465201
  - 0.7777777777777777
  - 0.7567811934900541
  - 0.7631103074141048
  - 0.7729422894985809
  train_f1_weighted:
  - 0.8652025058275059
  - 0.8738164467307835
  - 0.8516465213667078
  - 0.856576045262754
  - 0.8638420823851287
  train_f1_weighted_oob:
  - 0.760938714063714
  - 0.7715151966997194
  - 0.7481440944132484
  - 0.7527210395090141
  - 0.7667416707151806
  train_jaccard_macro:
  - 0.7832505451274037
  - 0.7954372683198434
  - 0.768863302663327
  - 0.7752138241338792
  - 0.7927916403673011
  train_jaccard_macro_oob:
  - 0.6291423572993435
  - 0.6387967827017086
  - 0.6105223955353155
  - 0.6193003666211008
  - 0.6329218120492403
  train_jaccard_micro:
  - 0.7799511002444988
  - 0.7909698996655519
  - 0.7625498007968128
  - 0.7696
  - 0.7869822485207101
  train_jaccard_micro_oob:
  - 0.6262099776619509
  - 0.6363636363636364
  - 0.6087272727272727
  - 0.6169590643274854
  - 0.6299151888974557
  train_jaccard_samples:
  - 0.802959077959078
  - 0.8142767544728329
  - 0.7877733026467204
  - 0.7942334739803094
  - 0.808465449193926
  train_jaccard_samples_oob:
  - 0.659965034965035
  - 0.6702789585142526
  - 0.6394482802710652
  - 0.6484059189755392
  - 0.660282653329011
  train_jaccard_weighted:
  - 0.7665777912914984
  - 0.7812776454839095
  - 0.7492410155628526
  - 0.756053488169392
  - 0.7675910657554265
  train_jaccard_weighted_oob:
  - 0.6159459749711411
  - 0.6293787772648506
  - 0.5986028576488817
  - 0.6050264376469234
  - 0.6235117968567653
  train_label_ranking_average_precision_score:
  - 0.9247868335368334
  - 0.931165577342048
  - 0.9229171689772955
  - 0.9176172895318466
  - 0.9300528224534846
  train_label_ranking_average_precision_score_oob:
  - 0.845124643874644
  - 0.8575438323477537
  - 0.8290117038376529
  - 0.838838406670685
  - 0.8523654472826663
  train_matthews_corrcoef_macro:
  - 0.5700748896828522
  - 0.5657289987915898
  - 0.5721441894407147
  - 0.5897223980121634
  - 0.5256550679438621
  train_matthews_corrcoef_macro_oob:
  - 0.2758630013657989
  - 0.25708872993538784
  - 0.18931389244499572
  - 0.23196567385699227
  - 0.23298874038480646
  train_matthews_corrcoef_micro:
  - 0.7539741989590144
  - 0.7669166417988867
  - 0.7309552519471253
  - 0.7399801921032007
  - 0.762992488951892
  train_matthews_corrcoef_micro_oob:
  - 0.5402083954106273
  - 0.5553597870704069
  - 0.5133298239672187
  - 0.5249075467944161
  - 0.5456321819927886
  train_matthews_corrcoef_samples:
  - 0.7397227490595761
  - 0.7517525875470161
  - 0.7159978826790694
  - 0.7226767798237139
  - 0.753838428791969
  train_matthews_corrcoef_samples_oob:
  - 0.5084552919136208
  - 0.533402878024499
  - 0.47476060863168995
  - 0.48969212388738
  - 0.5199923431975783
  train_matthews_corrcoef_weighted:
  - 0.5846669970744128
  - 0.5756104024088423
  - 0.5380693388565744
  - 0.563085209926638
  - 0.4377137622312673
  train_matthews_corrcoef_weighted_oob:
  - 0.2713369811110292
  - 0.23671901244579255
  - 0.19634488589567764
  - 0.21979881775589005
  - 0.2160746705730339
  train_ndgc:
  - 0.9606566712961222
  - 0.9629242040763792
  - 0.9595427286687431
  - 0.9541582003910877
  - 0.9631021998254096
  train_ndgc_oob:
  - 0.910934676937327
  - 0.9171030160543451
  - 0.8977516633196898
  - 0.9046483451450125
  - 0.9136836891649103
  train_neg_coverage_error:
  - -4.0576923076923075
  - -4.0588235294117645
  - -4.0886075949367084
  - -4.006329113924051
  - -4.013245033112582
  train_neg_coverage_error_oob:
  - -4.57051282051282
  - -4.483660130718954
  - -4.594936708860759
  - -4.481012658227848
  - -4.503311258278146
  train_neg_hamming_loss_macro:
  - -0.12362637362637363
  - -0.11671335200746966
  - -0.13471971066907776
  - -0.1301989150090416
  - -0.11920529801324502
  train_neg_hamming_loss_macro_oob:
  - -0.22985347985347987
  - -0.22222222222222218
  - -0.2432188065099458
  - -0.23688969258589512
  - -0.2270577105014191
  train_neg_hamming_loss_micro:
  - -0.12362637362637363
  - -0.11671335200746966
  - -0.13471971066907776
  - -0.1301989150090416
  - -0.11920529801324503
  train_neg_hamming_loss_micro_oob:
  - -0.22985347985347984
  - -0.2222222222222222
  - -0.24321880650994576
  - -0.23688969258589512
  - -0.22705771050141912
  train_neg_hamming_loss_samples:
  - -0.12362637362637362
  - -0.11671335200746963
  - -0.13471971066907779
  - -0.13019891500904157
  - -0.11920529801324503
  train_neg_hamming_loss_samples_oob:
  - -0.22985347985347984
  - -0.2222222222222222
  - -0.24321880650994568
  - -0.2368896925858951
  - -0.22705771050141907
  train_neg_hamming_loss_weighted:
  - -0.13479749417249418
  - -0.12618355326921643
  - -0.1483534786332921
  - -0.14342395473724587
  - -0.13615791761487128
  train_neg_hamming_loss_weighted_oob:
  - -0.23906128593628598
  - -0.22848480330028084
  - -0.2518559055867517
  - -0.2472789604909858
  - -0.23325832928481938
  train_neg_label_ranking_loss:
  - -0.08418803418803418
  - -0.07755991285403051
  - -0.08628691983122362
  - -0.08481012658227848
  - -0.07428256070640177
  train_neg_label_ranking_loss_oob:
  - -0.1778846153846154
  - -0.161437908496732
  - -0.18765822784810127
  - -0.17225738396624474
  - -0.16523178807947023
  train_precision_macro:
  - 0.8763736263736265
  - 0.8832866479925305
  - 0.8652802893309223
  - 0.8698010849909584
  - 0.880794701986755
  train_precision_macro_oob:
  - 0.7701465201465201
  - 0.7777777777777778
  - 0.7567811934900542
  - 0.7631103074141049
  - 0.7729422894985809
  train_precision_micro:
  - 0.8763736263736264
  - 0.8832866479925303
  - 0.8652802893309223
  - 0.8698010849909584
  - 0.8807947019867549
  train_precision_micro_oob:
  - 0.7701465201465202
  - 0.7777777777777778
  - 0.7567811934900542
  - 0.7631103074141049
  - 0.7729422894985809
  train_precision_samples:
  - 0.8763736263736265
  - 0.8832866479925301
  - 0.8652802893309222
  - 0.8698010849909582
  - 0.8807947019867549
  train_precision_samples_oob:
  - 0.7701465201465201
  - 0.7777777777777777
  - 0.7567811934900541
  - 0.7631103074141048
  - 0.7729422894985809
  train_precision_weighted:
  - 0.8652025058275059
  - 0.8738164467307835
  - 0.8516465213667078
  - 0.856576045262754
  - 0.8638420823851287
  train_precision_weighted_oob:
  - 0.760938714063714
  - 0.7715151966997194
  - 0.7481440944132484
  - 0.7527210395090141
  - 0.7667416707151806
  train_recall_macro:
  - 0.8763736263736265
  - 0.8832866479925305
  - 0.8652802893309223
  - 0.8698010849909584
  - 0.880794701986755
  train_recall_macro_oob:
  - 0.7701465201465201
  - 0.7777777777777778
  - 0.7567811934900542
  - 0.7631103074141049
  - 0.7729422894985809
  train_recall_micro:
  - 0.8763736263736264
  - 0.8832866479925303
  - 0.8652802893309223
  - 0.8698010849909584
  - 0.8807947019867549
  train_recall_micro_oob:
  - 0.7701465201465202
  - 0.7777777777777778
  - 0.7567811934900542
  - 0.7631103074141049
  - 0.7729422894985809
  train_recall_samples:
  - 0.8763736263736265
  - 0.8832866479925301
  - 0.8652802893309222
  - 0.8698010849909582
  - 0.8807947019867549
  train_recall_samples_oob:
  - 0.7701465201465201
  - 0.7777777777777777
  - 0.7567811934900541
  - 0.7631103074141048
  - 0.7729422894985809
  train_recall_weighted:
  - 0.8652025058275059
  - 0.8738164467307835
  - 0.8516465213667078
  - 0.856576045262754
  - 0.8638420823851287
  train_recall_weighted_oob:
  - 0.760938714063714
  - 0.7715151966997194
  - 0.7481440944132484
  - 0.7527210395090141
  - 0.7667416707151806
  train_roc_auc_macro:
  - 0.9832356271891285
  - 0.9853978651320914
  - 0.9836004691253437
  - 0.9833701944937713
  - 0.9860192204076013
  train_roc_auc_macro_oob:
  - 0.7864475073533085
  - 0.8184130348075432
  - 0.7835471661883895
  - 0.7877015576232608
  - 0.7899837576496687
  train_roc_auc_micro:
  - 0.9488031914893617
  - 0.9530627550842431
  - 0.9482886222524953
  - 0.9489734062074029
  - 0.9485641220335098
  train_roc_auc_micro_oob:
  - 0.8438473834085536
  - 0.8547458750479645
  - 0.8403074323439261
  - 0.8460568050749712
  - 0.8532746900093838
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.9862872289409659
  - 0.9894501719098305
  - 0.9873651326997688
  - 0.9865784586585254
  - 0.9901574970272549
  train_roc_auc_weighted_oob:
  - 0.7842476679339497
  - 0.8155198350330369
  - 0.7663257292806318
  - 0.7647604201775495
  - 0.7672013530440615
start: 2023-12-21 13:15:11.165424
wrapper: null
