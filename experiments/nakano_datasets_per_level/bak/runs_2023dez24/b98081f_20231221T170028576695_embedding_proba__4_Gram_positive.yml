active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb8AmpmZmZnpPwAzMzMzM/O/ADMzMzMz878AzczMzMz8Pw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 17:00:53.318131
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 4
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__4
  params: {}
hash: b98081f6e4ae5ad5d2d5584788fe6904f2625bddd33ab8cc0c00f0466e4f9542
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/b98081f_20231221T170028576695_embedding_proba__4_Gram_positive.yml
results:
  fit_time:
  - 10.76509404182434
  - 10.787019968032837
  - 11.186525106430054
  - 10.8843514919281
  - 11.374821662902832
  score_time:
  - 3.4972732067108154
  - 3.8053126335144043
  - 3.8405215740203857
  - 3.7220048904418945
  - 3.7082760334014893
  test_average_precision_macro:
  - 0.9022453064744006
  - 0.9563711648861002
  - 0.890973658677887
  - 0.9194179350895937
  - 0.8355760293737488
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9840534310692912
  - 0.9823045545587028
  - 0.9787742230156089
  - 0.9528652319096951
  - 0.9693674365425756
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9831730769230769
  - 0.9789644012944985
  - 0.9714285714285714
  - 0.9547619047619048
  - 0.9493464052287581
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9687864219114218
  - 0.9840094758219973
  - 0.9714990812645915
  - 0.9583400128748242
  - 0.9561785156400439
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.829326923076923
  - 0.8203883495145632
  - 0.8261904761904763
  - 0.8214285714285715
  - 0.8186274509803921
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8293269230769231
  - 0.8203883495145631
  - 0.8261904761904761
  - 0.8214285714285714
  - 0.8186274509803921
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8293269230769231
  - 0.8203883495145631
  - 0.8261904761904761
  - 0.8214285714285714
  - 0.8186274509803921
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7865199704142012
  - 0.7626960418222554
  - 0.7801437556154538
  - 0.7725170068027212
  - 0.7773378582202112
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7178857412123285
  - 0.7088338060591113
  - 0.713373736544735
  - 0.7075257833283608
  - 0.7019972012019495
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7084188911704312
  - 0.6954732510288066
  - 0.7038539553752535
  - 0.696969696969697
  - 0.6929460580912863
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7269230769230769
  - 0.7139158576051775
  - 0.7244444444444444
  - 0.7155555555555554
  - 0.7124183006535943
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.6499505975176553
  - 0.6219953680553014
  - 0.6427076728424636
  - 0.6333707826757168
  - 0.6376390059253267
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9831730769230769
  - 0.9789644012944984
  - 0.9714285714285714
  - 0.9547619047619048
  - 0.9493464052287581
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.3384763315908625
  - 0.3569594134707182
  - 0.3640578301545882
  - 0.35053089348363414
  - 0.3189350491408067
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.5084148303174132
  - 0.4822670987856038
  - 0.49910606084372366
  - 0.476690336566565
  - 0.4816536431817286
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.3173076923076923
  - 0.2912621359223301
  - 0.32063492063492066
  - 0.2920634920634921
  - 0.29411764705882354
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.4622007102986243
  - 0.45143460735643615
  - 0.4684181503728857
  - 0.4474391915568167
  - 0.43494490591667073
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9874282313963106
  - 0.9843960122399454
  - 0.9789102716326548
  - 0.9664582341585244
  - 0.9629843151805063
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.0480769230769231
  - -1.058252427184466
  - -1.0666666666666667
  - -1.1047619047619048
  - -1.1568627450980393
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.17067307692307693
  - -0.17961165048543687
  - -0.1738095238095238
  - -0.17857142857142855
  - -0.18137254901960784
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.17067307692307693
  - -0.1796116504854369
  - -0.1738095238095238
  - -0.17857142857142858
  - -0.18137254901960784
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.17067307692307693
  - -0.1796116504854369
  - -0.1738095238095238
  - -0.17857142857142858
  - -0.18137254901960784
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.21348002958579881
  - -0.23730395817774455
  - -0.21985624438454626
  - -0.2274829931972789
  - -0.22266214177978882
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.016025641025641024
  - -0.016181229773462782
  - -0.01904761904761905
  - -0.034920634920634915
  - -0.04411764705882353
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.829326923076923
  - 0.8203883495145632
  - 0.8261904761904763
  - 0.8214285714285715
  - 0.8186274509803921
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8293269230769231
  - 0.8203883495145631
  - 0.8261904761904761
  - 0.8214285714285714
  - 0.8186274509803921
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8293269230769231
  - 0.8203883495145631
  - 0.8261904761904761
  - 0.8214285714285714
  - 0.8186274509803921
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7865199704142012
  - 0.7626960418222554
  - 0.7801437556154538
  - 0.7725170068027212
  - 0.7773378582202112
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.829326923076923
  - 0.8203883495145632
  - 0.8261904761904763
  - 0.8214285714285715
  - 0.8186274509803921
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8293269230769231
  - 0.8203883495145631
  - 0.8261904761904761
  - 0.8214285714285714
  - 0.8186274509803921
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8293269230769231
  - 0.8203883495145631
  - 0.8261904761904761
  - 0.8214285714285714
  - 0.8186274509803921
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7865199704142012
  - 0.7626960418222554
  - 0.7801437556154538
  - 0.7725170068027212
  - 0.7773378582202112
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9851259680801545
  - 0.9943619029890437
  - 0.992959582650442
  - 0.977443200159253
  - 0.978898669904212
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9901380670611439
  - 0.9945679320679321
  - 0.9941713736329768
  - 0.9840060468631896
  - 0.9871267712550608
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9839743589743589
  - 0.9838187702265372
  - 0.9809523809523809
  - 0.965079365079365
  - 0.9558823529411765
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9845662327244415
  - 0.9950751761269259
  - 0.9957136203849497
  - 0.9823474304889528
  - 0.989309372524243
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8875776548400112
  - 0.931629808799725
  - 0.9544283803043145
  - 0.9637766208679337
  - 0.9540000507975523
  train_average_precision_macro_oob:
  - 0.8480590059936677
  - 0.8509931306384746
  - 0.8757591457873757
  - 0.9188443058046702
  - 0.9122153382472951
  train_average_precision_micro:
  - 0.9847770031129071
  - 0.9879208908887317
  - 0.9886663421216968
  - 0.9903905568538572
  - 0.9899542839084375
  train_average_precision_micro_oob:
  - 0.9752389184453846
  - 0.9790893063537602
  - 0.9791594883895024
  - 0.9793127690524794
  - 0.9813631348047943
  train_average_precision_samples:
  - 0.9734939759036144
  - 0.9747596153846154
  - 0.9732286634460546
  - 0.9838969404186796
  - 0.9798161470823342
  train_average_precision_samples_oob:
  - 0.9630522088353414
  - 0.962540064102564
  - 0.960950080515298
  - 0.9728260869565217
  - 0.9676258992805755
  train_average_precision_weighted:
  - 0.9743157400334149
  - 0.9817286321329171
  - 0.9859942577609092
  - 0.9887469816543317
  - 0.9883889645816553
  train_average_precision_weighted_oob:
  - 0.9622537955091541
  - 0.9654350846459826
  - 0.970234056355457
  - 0.9744135713071607
  - 0.9755602920461869
  train_f1_macro:
  - 0.8373493975903614
  - 0.8461538461538461
  - 0.841183574879227
  - 0.8454106280193237
  - 0.841127098321343
  train_f1_macro_oob:
  - 0.8234939759036145
  - 0.8263221153846154
  - 0.8303140096618357
  - 0.8128019323671498
  - 0.8237410071942446
  train_f1_micro:
  - 0.8373493975903614
  - 0.8461538461538461
  - 0.841183574879227
  - 0.8454106280193237
  - 0.8411270983213429
  train_f1_micro_oob:
  - 0.8234939759036145
  - 0.8263221153846154
  - 0.8303140096618358
  - 0.8128019323671497
  - 0.8237410071942446
  train_f1_samples:
  - 0.8373493975903614
  - 0.8461538461538461
  - 0.841183574879227
  - 0.8454106280193237
  - 0.8411270983213429
  train_f1_samples_oob:
  - 0.8234939759036145
  - 0.8263221153846154
  - 0.8303140096618358
  - 0.8128019323671497
  - 0.8237410071942446
  train_f1_weighted:
  - 0.7965321908157691
  - 0.8046459060033047
  - 0.8010924593658406
  - 0.8031343180084599
  - 0.802470195681164
  train_f1_weighted_oob:
  - 0.7772550823820342
  - 0.7777733155865614
  - 0.7871731600227064
  - 0.7608348935580057
  - 0.7803151273730419
  train_jaccard_macro:
  - 0.7280436153238791
  - 0.7412493196864219
  - 0.7334913541485564
  - 0.7403073569728147
  - 0.733239564117004
  train_jaccard_macro_oob:
  - 0.7095494196276676
  - 0.7144285239290735
  - 0.7186521192949864
  - 0.6963994772938717
  - 0.7095662927243835
  train_jaccard_micro:
  - 0.7202072538860104
  - 0.7333333333333333
  - 0.7258989056800417
  - 0.7322175732217573
  - 0.7258147956544232
  train_jaccard_micro_oob:
  - 0.6999487967229903
  - 0.7040450588837686
  - 0.7098606091894683
  - 0.6846388606307223
  - 0.7003058103975535
  train_jaccard_samples:
  - 0.7410441767068272
  - 0.7544871794871792
  - 0.7468599033816423
  - 0.7539452495974234
  - 0.7464428457234211
  train_jaccard_samples_oob:
  - 0.718875502008032
  - 0.723076923076923
  - 0.7294685990338163
  - 0.7020933977455716
  - 0.7186250999200638
  train_jaccard_weighted:
  - 0.6638533534971296
  - 0.6761346606895627
  - 0.6698530679377018
  - 0.6736545629397529
  - 0.6715427490312526
  train_jaccard_weighted_oob:
  - 0.6381956281722
  - 0.6401184132412152
  - 0.6510597401318969
  - 0.6173406036422379
  - 0.6415077225128156
  train_label_ranking_average_precision_score:
  - 0.9734939759036144
  - 0.9747596153846154
  - 0.9732286634460546
  - 0.9838969404186795
  - 0.9798161470823342
  train_label_ranking_average_precision_score_oob:
  - 0.9630522088353413
  - 0.9625400641025641
  - 0.9609500805152977
  - 0.9728260869565216
  - 0.9676258992805755
  train_matthews_corrcoef_macro:
  - 0.38657991361858396
  - 0.4193813602289974
  - 0.3949561062153051
  - 0.4163539710945957
  - 0.3882681713894199
  train_matthews_corrcoef_macro_oob:
  - 0.35322931262287033
  - 0.3702236635605827
  - 0.3612004626662855
  - 0.32505179221793823
  - 0.3318829936650055
  train_matthews_corrcoef_micro:
  - 0.5404304131485189
  - 0.568042879561286
  - 0.551941462215162
  - 0.5667015362896647
  - 0.5506449118418626
  train_matthews_corrcoef_micro_oob:
  - 0.4932322577381746
  - 0.5018069368319612
  - 0.5156028222887646
  - 0.45347173415329384
  - 0.49141255860803973
  train_matthews_corrcoef_samples:
  - 0.35903614457831323
  - 0.39081093814709045
  - 0.3719806763285024
  - 0.391304347826087
  - 0.36930455635491605
  train_matthews_corrcoef_samples_oob:
  - 0.3036144578313253
  - 0.3125
  - 0.3285024154589372
  - 0.26247987117552335
  - 0.2997601918465228
  train_matthews_corrcoef_weighted:
  - 0.5057440420773762
  - 0.535592673039486
  - 0.517825886186037
  - 0.5341986018919441
  - 0.5144189418618541
  train_matthews_corrcoef_weighted_oob:
  - 0.46022385405515365
  - 0.4708538094177065
  - 0.4789077085022101
  - 0.420786615302742
  - 0.44903403332276987
  train_ndgc:
  - 0.9803590805638662
  - 0.9813582216559299
  - 0.9802851755195152
  - 0.9882057715196281
  - 0.9849694411594873
  train_ndgc_oob:
  - 0.9727244080041006
  - 0.9724489033634739
  - 0.9711345400196384
  - 0.9799004727554851
  - 0.9759525924635352
  train_neg_coverage_error:
  - -1.069879518072289
  - -1.0697115384615385
  - -1.067632850241546
  - -1.0507246376811594
  - -1.0575539568345325
  train_neg_coverage_error_oob:
  - -1.1012048192771084
  - -1.1009615384615385
  - -1.106280193236715
  - -1.0845410628019323
  - -1.0839328537170263
  train_neg_hamming_loss_macro:
  - -0.16265060240963858
  - -0.15384615384615385
  - -0.15881642512077293
  - -0.15458937198067632
  - -0.15887290167865709
  train_neg_hamming_loss_macro_oob:
  - -0.17650602409638555
  - -0.1736778846153846
  - -0.16968599033816426
  - -0.18719806763285024
  - -0.1762589928057554
  train_neg_hamming_loss_micro:
  - -0.16265060240963855
  - -0.15384615384615385
  - -0.15881642512077296
  - -0.15458937198067632
  - -0.15887290167865709
  train_neg_hamming_loss_micro_oob:
  - -0.17650602409638555
  - -0.1736778846153846
  - -0.16968599033816426
  - -0.18719806763285024
  - -0.17625899280575538
  train_neg_hamming_loss_samples:
  - -0.16265060240963855
  - -0.15384615384615385
  - -0.15881642512077296
  - -0.15458937198067632
  - -0.15887290167865709
  train_neg_hamming_loss_samples_oob:
  - -0.17650602409638555
  - -0.1736778846153846
  - -0.16968599033816426
  - -0.18719806763285024
  - -0.17625899280575538
  train_neg_hamming_loss_weighted:
  - -0.20346780918423096
  - -0.19535409399669543
  - -0.19890754063415933
  - -0.19686568199154011
  - -0.1975298043188361
  train_neg_hamming_loss_weighted_oob:
  - -0.22274491761796586
  - -0.2222266844134386
  - -0.21282683997729354
  - -0.2391651064419943
  - -0.21968487262695813
  train_neg_label_ranking_loss:
  - -0.020080321285140562
  - -0.020633012820512817
  - -0.019927536231884056
  - -0.013285024154589372
  - -0.017585931254996
  train_neg_label_ranking_loss_oob:
  - -0.030120481927710843
  - -0.030649038461538457
  - -0.03260869565217391
  - -0.02455716586151369
  - -0.026378896882494004
  train_precision_macro:
  - 0.8373493975903614
  - 0.8461538461538461
  - 0.841183574879227
  - 0.8454106280193237
  - 0.841127098321343
  train_precision_macro_oob:
  - 0.8234939759036145
  - 0.8263221153846154
  - 0.8303140096618357
  - 0.8128019323671498
  - 0.8237410071942446
  train_precision_micro:
  - 0.8373493975903614
  - 0.8461538461538461
  - 0.841183574879227
  - 0.8454106280193237
  - 0.8411270983213429
  train_precision_micro_oob:
  - 0.8234939759036145
  - 0.8263221153846154
  - 0.8303140096618358
  - 0.8128019323671497
  - 0.8237410071942446
  train_precision_samples:
  - 0.8373493975903614
  - 0.8461538461538461
  - 0.841183574879227
  - 0.8454106280193237
  - 0.8411270983213429
  train_precision_samples_oob:
  - 0.8234939759036145
  - 0.8263221153846154
  - 0.8303140096618358
  - 0.8128019323671497
  - 0.8237410071942446
  train_precision_weighted:
  - 0.7965321908157691
  - 0.8046459060033047
  - 0.8010924593658406
  - 0.8031343180084599
  - 0.802470195681164
  train_precision_weighted_oob:
  - 0.7772550823820342
  - 0.7777733155865614
  - 0.7871731600227064
  - 0.7608348935580057
  - 0.7803151273730419
  train_recall_macro:
  - 0.8373493975903614
  - 0.8461538461538461
  - 0.841183574879227
  - 0.8454106280193237
  - 0.841127098321343
  train_recall_macro_oob:
  - 0.8234939759036145
  - 0.8263221153846154
  - 0.8303140096618357
  - 0.8128019323671498
  - 0.8237410071942446
  train_recall_micro:
  - 0.8373493975903614
  - 0.8461538461538461
  - 0.841183574879227
  - 0.8454106280193237
  - 0.8411270983213429
  train_recall_micro_oob:
  - 0.8234939759036145
  - 0.8263221153846154
  - 0.8303140096618358
  - 0.8128019323671497
  - 0.8237410071942446
  train_recall_samples:
  - 0.8373493975903614
  - 0.8461538461538461
  - 0.841183574879227
  - 0.8454106280193237
  - 0.8411270983213429
  train_recall_samples_oob:
  - 0.8234939759036145
  - 0.8263221153846154
  - 0.8303140096618358
  - 0.8128019323671497
  - 0.8237410071942446
  train_recall_weighted:
  - 0.7965321908157691
  - 0.8046459060033047
  - 0.8010924593658406
  - 0.8031343180084599
  - 0.802470195681164
  train_recall_weighted_oob:
  - 0.7772550823820342
  - 0.7777733155865614
  - 0.7871731600227064
  - 0.7608348935580057
  - 0.7803151273730419
  train_roc_auc_macro:
  - 0.9911361058212439
  - 0.9929843358054999
  - 0.995229457895761
  - 0.9934521235222347
  - 0.9944599095369304
  train_roc_auc_macro_oob:
  - 0.9827992652610201
  - 0.9855356057827958
  - 0.9854266174902482
  - 0.9872784888896757
  - 0.9848961160661174
  train_roc_auc_micro:
  - 0.9941266858853914
  - 0.9950752892237207
  - 0.995846422135899
  - 0.9960037411784712
  - 0.9958057137834373
  train_roc_auc_micro_oob:
  - 0.9896553514661169
  - 0.9905090529181163
  - 0.9905199327221031
  - 0.9922181168886381
  - 0.9912388144405739
  train_roc_auc_samples:
  - 0.9799196787148595
  - 0.9793669871794872
  - 0.980072463768116
  - 0.9867149758454107
  - 0.982414068745004
  train_roc_auc_samples_oob:
  - 0.9698795180722891
  - 0.9693509615384616
  - 0.967391304347826
  - 0.9754428341384863
  - 0.973621103117506
  train_roc_auc_weighted:
  - 0.9943406838834122
  - 0.9952189414135263
  - 0.9954059385477252
  - 0.9967624033211185
  - 0.9968335155474711
  train_roc_auc_weighted_oob:
  - 0.9901386803871903
  - 0.9909241049943917
  - 0.9905929412155344
  - 0.9926860454048394
  - 0.9915410447341247
start: 2023-12-21 17:00:28.576695
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
