active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j+gmZmZmZkRQIBmZmZmZvY/ADMzMzMz479gZmZmZmYawA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:25:21.897926
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 3
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__3
  params: {}
hash: d4a79ad4a72f05dd78149f2b6e515e0e2f2d3a2bf4d8e5386cc9a3e8c28c1171
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d4a79ad_20231221T082509720070_embedding__3_VirusGO.yml
results:
  fit_time:
  - 5.794239282608032
  - 6.062862873077393
  - 6.178335428237915
  - 5.973127603530884
  - 6.1110005378723145
  score_time:
  - 1.5428180694580078
  - 1.5183813571929932
  - 1.5985240936279297
  - 1.633410930633545
  - 1.6449062824249268
  test_average_precision_macro:
  - 0.9804947444490418
  - 0.9199516071860843
  - 0.9166716279759214
  - 0.8997592735629979
  - 0.9646069777347727
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9027724235446148
  - 0.9199244856521184
  - 0.8766376818749517
  - 0.8828142603226627
  - 0.9190962035470696
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.94375
  - 0.9175675675675676
  - 0.9354166666666666
  - 0.9404761904761905
  - 0.9451388888888888
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9608074674740815
  - 0.9456369406737054
  - 0.9226351210708796
  - 0.8971755847351822
  - 0.9626929643570511
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7958333333333333
  - 0.7657657657657658
  - 0.7916666666666666
  - 0.8015873015873017
  - 0.8229166666666666
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7958333333333333
  - 0.7657657657657657
  - 0.7916666666666666
  - 0.8015873015873016
  - 0.8229166666666666
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7958333333333334
  - 0.7657657657657657
  - 0.7916666666666667
  - 0.8015873015873017
  - 0.8229166666666666
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6801020408163266
  - 0.6372141372141372
  - 0.675
  - 0.6857142857142857
  - 0.7201797385620915
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6869651681057465
  - 0.6508058487733285
  - 0.6812122532946332
  - 0.6945676044234766
  - 0.7202590002590002
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6608996539792388
  - 0.6204379562043796
  - 0.6551724137931034
  - 0.6688741721854304
  - 0.6991150442477876
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6672619047619048
  - 0.6287001287001288
  - 0.661904761904762
  - 0.6734693877551022
  - 0.7008928571428572
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5332318296861391
  - 0.4907904148523286
  - 0.5301811841857609
  - 0.5393792737056777
  - 0.5797138808903515
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.94375
  - 0.9175675675675676
  - 0.9354166666666666
  - 0.9404761904761905
  - 0.9451388888888889
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9590064311050884
  - 0.9461033358419481
  - 0.9550722437388872
  - 0.9563980294516805
  - 0.9606709252641181
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.375
  - -1.8108108108108107
  - -1.5
  - -1.4047619047619047
  - -1.25
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2041666666666667
  - -0.23423423423423426
  - -0.20833333333333337
  - -0.19841269841269846
  - -0.17708333333333334
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20416666666666666
  - -0.23423423423423423
  - -0.20833333333333334
  - -0.1984126984126984
  - -0.17708333333333334
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20416666666666666
  - -0.23423423423423423
  - -0.20833333333333331
  - -0.19841269841269837
  - -0.17708333333333334
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3198979591836735
  - -0.36278586278586283
  - -0.325
  - -0.3142857142857143
  - -0.2798202614379085
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.02777777777777778
  - -0.06283783783783785
  - -0.045
  - -0.04107142857142857
  - -0.0328125
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7958333333333333
  - 0.7657657657657658
  - 0.7916666666666666
  - 0.8015873015873017
  - 0.8229166666666666
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7958333333333333
  - 0.7657657657657657
  - 0.7916666666666666
  - 0.8015873015873016
  - 0.8229166666666666
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7958333333333334
  - 0.7657657657657657
  - 0.7916666666666667
  - 0.8015873015873017
  - 0.8229166666666666
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6801020408163266
  - 0.6372141372141372
  - 0.675
  - 0.6857142857142857
  - 0.7201797385620915
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7958333333333333
  - 0.7657657657657658
  - 0.7916666666666666
  - 0.8015873015873017
  - 0.8229166666666666
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7958333333333333
  - 0.7657657657657657
  - 0.7916666666666666
  - 0.8015873015873016
  - 0.8229166666666666
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7958333333333334
  - 0.7657657657657657
  - 0.7916666666666667
  - 0.8015873015873017
  - 0.8229166666666666
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6801020408163266
  - 0.6372141372141372
  - 0.675
  - 0.6857142857142857
  - 0.7201797385620915
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9875103234228474
  - 0.9733153069840377
  - 0.9741759022449559
  - 0.9366124871001031
  - 0.9918160057549684
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9768137621540762
  - 0.9625565610859729
  - 0.9617894736842105
  - 0.961980198019802
  - 0.9786961197981302
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9722222222222221
  - 0.9371621621621621
  - 0.9550000000000001
  - 0.9589285714285714
  - 0.9671875
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9748779946761312
  - 0.9717534658324133
  - 0.9689855072463769
  - 0.940821052631579
  - 0.9867205533239688
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9484976637439261
  - 0.9653619513773454
  - 0.9568674630129133
  - 0.9557418211784173
  - 0.9598887166407656
  train_average_precision_macro_oob:
  - 0.8869911995949055
  - 0.9038838259626815
  - 0.8991744600050988
  - 0.8907923858515328
  - 0.918830332467447
  train_average_precision_micro:
  - 0.9376255214440217
  - 0.9261338664963441
  - 0.9280300727663039
  - 0.9460126697074973
  - 0.9363898946091813
  train_average_precision_micro_oob:
  - 0.8664468053454148
  - 0.8531621828023177
  - 0.832014283756602
  - 0.8819242248188924
  - 0.8656029488119414
  train_average_precision_samples:
  - 0.9670658682634731
  - 0.9490196078431371
  - 0.9549900199600797
  - 0.9617171717171717
  - 0.9557651991614254
  train_average_precision_samples_oob:
  - 0.9278443113772457
  - 0.9127941176470589
  - 0.9154690618762474
  - 0.9269696969696969
  - 0.9203354297693919
  train_average_precision_weighted:
  - 0.9524481247583254
  - 0.9574310481444396
  - 0.953343260590667
  - 0.961343124189011
  - 0.9634928184728919
  train_average_precision_weighted_oob:
  - 0.8901600520441193
  - 0.8913121900315412
  - 0.8813595314097218
  - 0.9058561044578238
  - 0.9141416213223145
  train_f1_macro:
  - 0.8003992015968064
  - 0.8058823529411766
  - 0.7984031936127743
  - 0.7959595959595961
  - 0.7914046121593291
  train_f1_macro_oob:
  - 0.7984031936127743
  - 0.8039215686274511
  - 0.7984031936127743
  - 0.7959595959595961
  - 0.789308176100629
  train_f1_micro:
  - 0.8003992015968064
  - 0.8058823529411765
  - 0.7984031936127745
  - 0.795959595959596
  - 0.7914046121593291
  train_f1_micro_oob:
  - 0.7984031936127745
  - 0.803921568627451
  - 0.7984031936127745
  - 0.795959595959596
  - 0.789308176100629
  train_f1_samples:
  - 0.8003992015968061
  - 0.8058823529411765
  - 0.7984031936127741
  - 0.7959595959595959
  - 0.7914046121593289
  train_f1_samples_oob:
  - 0.7984031936127743
  - 0.8039215686274508
  - 0.7984031936127741
  - 0.7959595959595959
  - 0.7893081761006288
  train_f1_weighted:
  - 0.6885932568360815
  - 0.6958823529411765
  - 0.6838204778561688
  - 0.6811881188118811
  - 0.674927250539754
  train_f1_weighted_oob:
  - 0.6845815757647267
  - 0.6919411764705882
  - 0.6838204778561688
  - 0.6811881188118811
  - 0.6706092180606401
  train_jaccard_macro:
  - 0.6915535458251728
  - 0.698638115126923
  - 0.6898652790837426
  - 0.6865718823822763
  - 0.6808991921581132
  train_jaccard_macro_oob:
  - 0.6895027549812784
  - 0.6966032227068973
  - 0.6898652790837426
  - 0.6865718823822763
  - 0.6788420581727072
  train_jaccard_micro:
  - 0.6672212978369384
  - 0.6748768472906403
  - 0.6644518272425249
  - 0.6610738255033557
  - 0.6548135299219427
  train_jaccard_micro_oob:
  - 0.6644518272425249
  - 0.6721311475409836
  - 0.6644518272425249
  - 0.6610738255033557
  - 0.6519480519480519
  train_jaccard_samples:
  - 0.673795266609638
  - 0.6803921568627452
  - 0.6699458226404335
  - 0.6670995670995672
  - 0.661275831087152
  train_jaccard_samples_oob:
  - 0.6703735386370118
  - 0.67703081232493
  - 0.6699458226404335
  - 0.6670995670995672
  - 0.6585804132973945
  train_jaccard_weighted:
  - 0.5437552344848197
  - 0.5514136979590757
  - 0.5383910413766827
  - 0.5361081011957751
  - 0.528538955090525
  train_jaccard_weighted_oob:
  - 0.5396334479611307
  - 0.547323564194824
  - 0.5383910413766827
  - 0.5361081011957751
  - 0.5243018731504351
  train_label_ranking_average_precision_score:
  - 0.9670658682634732
  - 0.9490196078431371
  - 0.9549900199600799
  - 0.9617171717171717
  - 0.9557651991614255
  train_label_ranking_average_precision_score_oob:
  - 0.9278443113772457
  - 0.9127941176470588
  - 0.9154690618762477
  - 0.9269696969696971
  - 0.9203354297693919
  train_matthews_corrcoef_macro:
  - 0.027198853254584446
  - 0.022547080613501597
  - 0.0
  - 0.0
  - 0.021483776743367693
  train_matthews_corrcoef_macro_oob:
  - 0.015608380601572465
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.10871845048046762
  - 0.08974970653535705
  - 0.0
  - 0.0
  - 0.08871478064012833
  train_matthews_corrcoef_micro_oob:
  - 0.06270588937707872
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.017964071856287425
  - 0.011764705882352941
  - 0.0
  - 0.0
  - 0.007955415497278942
  train_matthews_corrcoef_samples_oob:
  - 0.005988023952095809
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.054665675506751006
  - 0.04531963203313821
  - 0.0
  - 0.0
  - 0.04425016702365286
  train_matthews_corrcoef_weighted_oob:
  - 0.0313705383519289
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  train_ndgc:
  - 0.9768255405342049
  - 0.9637693332644622
  - 0.9680018194401052
  - 0.9730721821300218
  - 0.9686308775001956
  train_ndgc_oob:
  - 0.9485470641482832
  - 0.9369658639168624
  - 0.9399648490347154
  - 0.9489740224767805
  - 0.9438792652535558
  train_neg_coverage_error:
  - -1.3353293413173652
  - -1.3294117647058823
  - -1.3712574850299402
  - -1.3636363636363635
  - -1.440251572327044
  train_neg_coverage_error_oob:
  - -1.473053892215569
  - -1.4588235294117646
  - -1.4910179640718564
  - -1.496969696969697
  - -1.5660377358490567
  train_neg_hamming_loss_macro:
  - -0.19960079840319364
  - -0.1941176470588235
  - -0.20159680638722555
  - -0.20404040404040402
  - -0.20859538784067086
  train_neg_hamming_loss_macro_oob:
  - -0.20159680638722555
  - -0.196078431372549
  - -0.20159680638722555
  - -0.20404040404040402
  - -0.21069182389937105
  train_neg_hamming_loss_micro:
  - -0.1996007984031936
  - -0.19411764705882353
  - -0.20159680638722555
  - -0.20404040404040405
  - -0.20859538784067086
  train_neg_hamming_loss_micro_oob:
  - -0.20159680638722555
  - -0.19607843137254902
  - -0.20159680638722555
  - -0.20404040404040405
  - -0.21069182389937108
  train_neg_hamming_loss_samples:
  - -0.1996007984031936
  - -0.19411764705882353
  - -0.20159680638722557
  - -0.20404040404040408
  - -0.2085953878406709
  train_neg_hamming_loss_samples_oob:
  - -0.20159680638722557
  - -0.19607843137254904
  - -0.20159680638722557
  - -0.20404040404040408
  - -0.21069182389937108
  train_neg_hamming_loss_weighted:
  - -0.3114067431639185
  - -0.30411764705882355
  - -0.31617952214383116
  - -0.31881188118811876
  - -0.32507274946024595
  train_neg_hamming_loss_weighted_oob:
  - -0.31541842423527333
  - -0.3080588235294118
  - -0.31617952214383116
  - -0.31881188118811876
  - -0.3293907819393598
  train_neg_label_ranking_loss:
  - -0.021107784431137727
  - -0.02808823529411765
  - -0.028592814371257488
  - -0.024393939393939395
  - -0.03128930817610063
  train_neg_label_ranking_loss_oob:
  - -0.04670658682634731
  - -0.053218954248366014
  - -0.04991683300066533
  - -0.046498316498316504
  - -0.05249825296995108
  train_precision_macro:
  - 0.8003992015968064
  - 0.8058823529411766
  - 0.7984031936127743
  - 0.7959595959595961
  - 0.7914046121593291
  train_precision_macro_oob:
  - 0.7984031936127743
  - 0.8039215686274511
  - 0.7984031936127743
  - 0.7959595959595961
  - 0.789308176100629
  train_precision_micro:
  - 0.8003992015968064
  - 0.8058823529411765
  - 0.7984031936127745
  - 0.795959595959596
  - 0.7914046121593291
  train_precision_micro_oob:
  - 0.7984031936127745
  - 0.803921568627451
  - 0.7984031936127745
  - 0.795959595959596
  - 0.789308176100629
  train_precision_samples:
  - 0.8003992015968061
  - 0.8058823529411765
  - 0.7984031936127741
  - 0.7959595959595959
  - 0.7914046121593289
  train_precision_samples_oob:
  - 0.7984031936127743
  - 0.8039215686274508
  - 0.7984031936127741
  - 0.7959595959595959
  - 0.7893081761006288
  train_precision_weighted:
  - 0.6885932568360815
  - 0.6958823529411765
  - 0.6838204778561688
  - 0.6811881188118811
  - 0.674927250539754
  train_precision_weighted_oob:
  - 0.6845815757647267
  - 0.6919411764705882
  - 0.6838204778561688
  - 0.6811881188118811
  - 0.6706092180606401
  train_recall_macro:
  - 0.8003992015968064
  - 0.8058823529411766
  - 0.7984031936127743
  - 0.7959595959595961
  - 0.7914046121593291
  train_recall_macro_oob:
  - 0.7984031936127743
  - 0.8039215686274511
  - 0.7984031936127743
  - 0.7959595959595961
  - 0.789308176100629
  train_recall_micro:
  - 0.8003992015968064
  - 0.8058823529411765
  - 0.7984031936127745
  - 0.795959595959596
  - 0.7914046121593291
  train_recall_micro_oob:
  - 0.7984031936127745
  - 0.803921568627451
  - 0.7984031936127745
  - 0.795959595959596
  - 0.789308176100629
  train_recall_samples:
  - 0.8003992015968061
  - 0.8058823529411765
  - 0.7984031936127741
  - 0.7959595959595959
  - 0.7914046121593289
  train_recall_samples_oob:
  - 0.7984031936127743
  - 0.8039215686274508
  - 0.7984031936127741
  - 0.7959595959595959
  - 0.7893081761006288
  train_recall_weighted:
  - 0.6885932568360815
  - 0.6958823529411765
  - 0.6838204778561688
  - 0.6811881188118811
  - 0.674927250539754
  train_recall_weighted_oob:
  - 0.6845815757647267
  - 0.6919411764705882
  - 0.6838204778561688
  - 0.6811881188118811
  - 0.6706092180606401
  train_roc_auc_macro:
  - 0.980704181915148
  - 0.9888458735098448
  - 0.9781944345396933
  - 0.9880412199691343
  - 0.9822741391780254
  train_roc_auc_macro_oob:
  - 0.9623596222923482
  - 0.9631215303192294
  - 0.958833952756117
  - 0.9701050485804825
  - 0.9662815329874057
  train_roc_auc_micro:
  - 0.9804866921089785
  - 0.979969512195122
  - 0.9775835396039604
  - 0.9826607026184853
  - 0.9768950731072393
  train_roc_auc_micro_oob:
  - 0.9604986528727412
  - 0.9596707317073171
  - 0.9581559405940593
  - 0.9638324873096445
  - 0.9579526008734548
  train_roc_auc_samples:
  - 0.9788922155688622
  - 0.9719117647058824
  - 0.9714071856287426
  - 0.9756060606060607
  - 0.9687106918238992
  train_roc_auc_samples_oob:
  - 0.9532934131736527
  - 0.946781045751634
  - 0.9500831669993347
  - 0.9535016835016835
  - 0.9475017470300489
  train_roc_auc_weighted:
  - 0.9799618900448644
  - 0.9818190732258039
  - 0.9758108724901693
  - 0.9849121757821924
  - 0.9804619347773144
  train_roc_auc_weighted_oob:
  - 0.9585898858990872
  - 0.9586723764262695
  - 0.9500387168894693
  - 0.9656710339472668
  - 0.9564193323440565
start: 2023-12-21 08:25:09.720070
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
