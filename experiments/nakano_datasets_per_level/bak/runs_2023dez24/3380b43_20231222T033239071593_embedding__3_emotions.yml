active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            YGZmZmZm9r9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QGZmZmZm9r+AMzMzMzPjP0BmZmZmZva/wJmZmZmZ+T+AMzMzMzPjPw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 03:33:03.645328
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 3
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding__3
  params: {}
hash: 3380b43c2c87ef7df2847f489ef0cc09bbcbd5b589aab535ff8114b1f3f85d6d
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/3380b43_20231222T033239071593_embedding__3_emotions.yml
results:
  fit_time:
  - 10.867534875869751
  - 10.458743333816528
  - 10.845103740692139
  - 10.837648630142212
  - 11.337766408920288
  score_time:
  - 2.75482439994812
  - 2.937631130218506
  - 3.2976927757263184
  - 3.253631353378296
  - 3.0575969219207764
  test_average_precision_macro:
  - 0.6533000144727589
  - 0.7119218780641061
  - 0.7532699413898994
  - 0.7372216587408844
  - 0.7214960211888114
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.651076125217887
  - 0.7242449334304242
  - 0.7653403112555398
  - 0.7445137405851612
  - 0.7209413611781348
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7700925925925924
  - 0.7921139359698681
  - 0.8424999999999999
  - 0.8091642924976259
  - 0.8099576271186439
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6543119197239797
  - 0.7181090268950855
  - 0.757463325077467
  - 0.7408878343099072
  - 0.7220622608896341
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6875
  - 0.6892655367231638
  - 0.6944444444444445
  - 0.6851851851851852
  - 0.6892655367231638
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6875
  - 0.6892655367231638
  - 0.6944444444444444
  - 0.6851851851851852
  - 0.6892655367231638
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6875
  - 0.6892655367231639
  - 0.6944444444444444
  - 0.6851851851851852
  - 0.689265536723164
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6754464285714287
  - 0.6752818467673901
  - 0.6815690690690691
  - 0.6717716672467803
  - 0.6767334360554699
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5269143884593862
  - 0.5296145504582465
  - 0.5353657467122419
  - 0.5246089360760327
  - 0.5291349097515272
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5238095238095238
  - 0.5258620689655172
  - 0.5319148936170213
  - 0.5211267605633803
  - 0.5258620689655172
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5347222222222221
  - 0.537126715092817
  - 0.5436507936507937
  - 0.5315425315425315
  - 0.5371267150928168
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5137198804128024
  - 0.5142503919987594
  - 0.5211974873002746
  - 0.5100657324643669
  - 0.5153294722541759
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7700925925925926
  - 0.7921139359698682
  - 0.8424999999999996
  - 0.8091642924976258
  - 0.8099576271186438
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - -0.009606506961737248
  - 0.02699304154486268
  - 0.05027233001077197
  - 0.0
  - 0.0
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - -0.02506217312747989
  - 0.05582884419105413
  - 0.07904801339243366
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - -0.0016666666666666668
  - 0.005359792644353186
  - 0.008997242729446948
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - -0.00874878312586785
  - 0.021252439949348896
  - 0.04397885187488589
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8452644133779826
  - 0.855537848836793
  - 0.8948087752558427
  - 0.8719125794916067
  - 0.8695928107171473
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.0083333333333333
  - -2.8135593220338984
  - -2.566666666666667
  - -2.7435897435897436
  - -2.73728813559322
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.3125
  - -0.3107344632768361
  - -0.3055555555555555
  - -0.31481481481481477
  - -0.3107344632768361
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3125
  - -0.3107344632768362
  - -0.3055555555555556
  - -0.3148148148148148
  - -0.3107344632768362
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.31250000000000006
  - -0.3107344632768362
  - -0.3055555555555555
  - -0.3148148148148148
  - -0.31073446327683624
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.32455357142857144
  - -0.3247181532326099
  - -0.3184309309309309
  - -0.3282283327532196
  - -0.32326656394453
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.20564814814814814
  - -0.17111581920903957
  - -0.11881944444444444
  - -0.15037986704653367
  - -0.1541195856873823
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6875
  - 0.6892655367231638
  - 0.6944444444444445
  - 0.6851851851851852
  - 0.6892655367231638
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6875
  - 0.6892655367231638
  - 0.6944444444444444
  - 0.6851851851851852
  - 0.6892655367231638
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6875
  - 0.6892655367231639
  - 0.6944444444444444
  - 0.6851851851851852
  - 0.689265536723164
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6754464285714287
  - 0.6752818467673901
  - 0.6815690690690691
  - 0.6717716672467803
  - 0.6767334360554699
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6875
  - 0.6892655367231638
  - 0.6944444444444445
  - 0.6851851851851852
  - 0.6892655367231638
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6875
  - 0.6892655367231638
  - 0.6944444444444444
  - 0.6851851851851852
  - 0.6892655367231638
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6875
  - 0.6892655367231639
  - 0.6944444444444444
  - 0.6851851851851852
  - 0.689265536723164
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6754464285714287
  - 0.6752818467673901
  - 0.6815690690690691
  - 0.6717716672467803
  - 0.6767334360554699
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.7914242429710598
  - 0.8384467511765109
  - 0.8616740175694795
  - 0.843940849545362
  - 0.8460951979335719
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8117349510368664
  - 0.8575450398134297
  - 0.8783150620500018
  - 0.8632750397456281
  - 0.8603483606557377
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7943518518518519
  - 0.8288841807909605
  - 0.8811805555555556
  - 0.8496201329534664
  - 0.8458804143126175
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.7910642922160696
  - 0.8401474077260347
  - 0.8625320423762799
  - 0.8452661173320946
  - 0.8425925224004286
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8974160882584893
  - 0.8862363190200758
  - 0.8865017675893752
  - 0.8923775404503748
  - 0.887182871850197
  train_average_precision_macro_oob:
  - 0.7392723421172988
  - 0.7403686120615105
  - 0.7167628026146763
  - 0.7420601334026138
  - 0.7288469942673966
  train_average_precision_micro:
  - 0.9011435304783112
  - 0.888930524051784
  - 0.8884959136181407
  - 0.8960981293124355
  - 0.8936713488290466
  train_average_precision_micro_oob:
  - 0.7501000336488601
  - 0.7464476531312368
  - 0.723839543653843
  - 0.7548593053760959
  - 0.7400810685507632
  train_average_precision_samples:
  - 0.9124853182992718
  - 0.8989532163742691
  - 0.8971106412966877
  - 0.9066526610644258
  - 0.9052923976608186
  train_average_precision_samples_oob:
  - 0.8135482734319942
  - 0.8104795321637427
  - 0.7961533944092083
  - 0.8158555088702146
  - 0.8051520467836256
  train_average_precision_weighted:
  - 0.8982732084256123
  - 0.8875506329192592
  - 0.8890365197106747
  - 0.8946779417388928
  - 0.8896740798238747
  train_average_precision_weighted_oob:
  - 0.7407666243059259
  - 0.7467100440630283
  - 0.7213684865112188
  - 0.7489571630942176
  - 0.7348675467797994
  train_f1_macro:
  - 0.7177589852008456
  - 0.7249122807017544
  - 0.7138830162085975
  - 0.7163865546218487
  - 0.7080701754385964
  train_f1_macro_oob:
  - 0.6895701198026779
  - 0.6905263157894735
  - 0.6881606765327696
  - 0.6894257703081234
  - 0.6884210526315789
  train_f1_micro:
  - 0.7177589852008457
  - 0.7249122807017544
  - 0.7138830162085976
  - 0.7163865546218487
  - 0.7080701754385965
  train_f1_micro_oob:
  - 0.6895701198026779
  - 0.6905263157894737
  - 0.6881606765327696
  - 0.6894257703081232
  - 0.6884210526315789
  train_f1_samples:
  - 0.7177589852008457
  - 0.7249122807017544
  - 0.7138830162085975
  - 0.7163865546218487
  - 0.7080701754385964
  train_f1_samples_oob:
  - 0.6895701198026779
  - 0.6905263157894737
  - 0.6881606765327696
  - 0.6894257703081231
  - 0.6884210526315788
  train_f1_weighted:
  - 0.7086757291955651
  - 0.7170236753100339
  - 0.7035563785261932
  - 0.7063347323145718
  - 0.6980535798956852
  train_f1_weighted_oob:
  - 0.6765064620741775
  - 0.677771316679523
  - 0.6751917304177266
  - 0.6767477002074788
  - 0.6755239449976292
  train_jaccard_macro:
  - 0.5617672013704539
  - 0.5701681085555769
  - 0.55767435833757
  - 0.5604947789389189
  - 0.5503202206642509
  train_jaccard_macro_oob:
  - 0.5296336731586401
  - 0.5306949846985123
  - 0.5279754544630856
  - 0.529342889006884
  - 0.5282257845320413
  train_jaccard_micro:
  - 0.5597691673536686
  - 0.5685195376995047
  - 0.555068493150685
  - 0.55810147299509
  - 0.5480717001629549
  train_jaccard_micro_oob:
  - 0.5262167249260554
  - 0.5273311897106109
  - 0.5245769540692989
  - 0.5260486240983169
  - 0.5248796147672552
  train_jaccard_samples:
  - 0.5743984697473069
  - 0.586516290726817
  - 0.5699184536393839
  - 0.5742296918767507
  - 0.5628070175438598
  train_jaccard_samples_oob:
  - 0.5378032819893285
  - 0.5388471177944861
  - 0.5354877680459076
  - 0.5373649459783914
  - 0.5359899749373433
  train_jaccard_weighted:
  - 0.5511039604908125
  - 0.560798243699371
  - 0.5456519046926295
  - 0.5487943466981309
  - 0.5388553568971193
  train_jaccard_weighted_oob:
  - 0.5153390657216597
  - 0.5167146701750512
  - 0.5137799662124961
  - 0.5154416110443514
  - 0.5141402185627054
  train_label_ranking_average_precision_score:
  - 0.9124853182992712
  - 0.8989532163742683
  - 0.897110641296687
  - 0.9066526610644253
  - 0.9052923976608178
  train_label_ranking_average_precision_score_oob:
  - 0.8135482734319935
  - 0.8104795321637416
  - 0.7961533944092072
  - 0.8158555088702139
  - 0.8051520467836248
  train_matthews_corrcoef_macro:
  - 0.21992263049952285
  - 0.2457689492415059
  - 0.19249854891885496
  - 0.21766954179299716
  - 0.17324527344039808
  train_matthews_corrcoef_macro_oob:
  - 0.020640788381440237
  - 0.04658295371992799
  - 0.013306104294785855
  - 0.0
  - 0.0
  train_matthews_corrcoef_micro:
  - 0.2580562558464336
  - 0.2880630950086967
  - 0.24286777059971
  - 0.2480059711771883
  - 0.2104378379811064
  train_matthews_corrcoef_micro_oob:
  - 0.04836378066520183
  - 0.062365183810178276
  - 0.027867202780207753
  - 0.0
  - 0.0
  train_matthews_corrcoef_samples:
  - 0.11555329123407886
  - 0.1471193441376917
  - 0.10075878565992455
  - 0.10241475796429016
  - 0.08207935080405666
  train_matthews_corrcoef_samples_oob:
  - 0.005565445099436947
  - 0.007431204480283587
  - 0.0009454832885834206
  - 0.0
  - 0.0
  train_matthews_corrcoef_weighted:
  - 0.22789580633598847
  - 0.2553711456028178
  - 0.19855963239480873
  - 0.22224952718077506
  - 0.18104766477845666
  train_matthews_corrcoef_weighted_oob:
  - 0.01947332297525018
  - 0.04247127313877041
  - 0.010632868894704724
  - 0.0
  - 0.0
  train_ndgc:
  - 0.9425220912897696
  - 0.9342101100460949
  - 0.9343502314343872
  - 0.9389659398423605
  - 0.9378806269495352
  train_ndgc_oob:
  - 0.873178510922933
  - 0.8723166728239913
  - 0.8635260001998851
  - 0.8762229486270582
  - 0.8691987579416165
  train_neg_coverage_error:
  - -2.2938689217758985
  - -2.3621052631578947
  - -2.4143763213530653
  - -2.3487394957983194
  - -2.3410526315789473
  train_neg_coverage_error_oob:
  - -2.7420718816067655
  - -2.7326315789473683
  - -2.8858350951374208
  - -2.726890756302521
  - -2.7705263157894735
  train_neg_hamming_loss_macro:
  - -0.28224101479915437
  - -0.27508771929824566
  - -0.2861169837914024
  - -0.2836134453781512
  - -0.2919298245614035
  train_neg_hamming_loss_macro_oob:
  - -0.31042988019732204
  - -0.30947368421052635
  - -0.3118393234672305
  - -0.3105742296918767
  - -0.31157894736842107
  train_neg_hamming_loss_micro:
  - -0.2822410147991543
  - -0.2750877192982456
  - -0.2861169837914024
  - -0.28361344537815125
  - -0.2919298245614035
  train_neg_hamming_loss_micro_oob:
  - -0.31042988019732204
  - -0.3094736842105263
  - -0.3118393234672304
  - -0.31057422969187676
  - -0.31157894736842107
  train_neg_hamming_loss_samples:
  - -0.2822410147991543
  - -0.2750877192982456
  - -0.2861169837914024
  - -0.28361344537815125
  - -0.2919298245614035
  train_neg_hamming_loss_samples_oob:
  - -0.31042988019732204
  - -0.3094736842105263
  - -0.3118393234672304
  - -0.3105742296918767
  - -0.31157894736842107
  train_neg_hamming_loss_weighted:
  - -0.29132427080443496
  - -0.28297632468996614
  - -0.2964436214738068
  - -0.29366526768542817
  - -0.3019464201043148
  train_neg_hamming_loss_weighted_oob:
  - -0.32349353792582247
  - -0.32222868332047705
  - -0.32480826958227343
  - -0.3232522997925213
  - -0.3244760550023708
  train_neg_label_ranking_loss:
  - -0.06829927178764389
  - -0.07935087719298245
  - -0.08594667606295514
  - -0.07870564892623716
  - -0.07635672514619883
  train_neg_label_ranking_loss_oob:
  - -0.15176767676767677
  - -0.1521812865497076
  - -0.17446558609349305
  - -0.15152310924369747
  - -0.1558362573099415
  train_precision_macro:
  - 0.7177589852008456
  - 0.7249122807017544
  - 0.7138830162085975
  - 0.7163865546218487
  - 0.7080701754385964
  train_precision_macro_oob:
  - 0.6895701198026779
  - 0.6905263157894735
  - 0.6881606765327696
  - 0.6894257703081234
  - 0.6884210526315789
  train_precision_micro:
  - 0.7177589852008457
  - 0.7249122807017544
  - 0.7138830162085976
  - 0.7163865546218487
  - 0.7080701754385965
  train_precision_micro_oob:
  - 0.6895701198026779
  - 0.6905263157894737
  - 0.6881606765327696
  - 0.6894257703081232
  - 0.6884210526315789
  train_precision_samples:
  - 0.7177589852008457
  - 0.7249122807017544
  - 0.7138830162085975
  - 0.7163865546218487
  - 0.7080701754385964
  train_precision_samples_oob:
  - 0.6895701198026779
  - 0.6905263157894737
  - 0.6881606765327696
  - 0.6894257703081231
  - 0.6884210526315788
  train_precision_weighted:
  - 0.7086757291955651
  - 0.7170236753100339
  - 0.7035563785261932
  - 0.7063347323145718
  - 0.6980535798956852
  train_precision_weighted_oob:
  - 0.6765064620741775
  - 0.677771316679523
  - 0.6751917304177266
  - 0.6767477002074788
  - 0.6755239449976292
  train_recall_macro:
  - 0.7177589852008456
  - 0.7249122807017544
  - 0.7138830162085975
  - 0.7163865546218487
  - 0.7080701754385964
  train_recall_macro_oob:
  - 0.6895701198026779
  - 0.6905263157894735
  - 0.6881606765327696
  - 0.6894257703081234
  - 0.6884210526315789
  train_recall_micro:
  - 0.7177589852008457
  - 0.7249122807017544
  - 0.7138830162085976
  - 0.7163865546218487
  - 0.7080701754385965
  train_recall_micro_oob:
  - 0.6895701198026779
  - 0.6905263157894737
  - 0.6881606765327696
  - 0.6894257703081232
  - 0.6884210526315789
  train_recall_samples:
  - 0.7177589852008457
  - 0.7249122807017544
  - 0.7138830162085975
  - 0.7163865546218487
  - 0.7080701754385964
  train_recall_samples_oob:
  - 0.6895701198026779
  - 0.6905263157894737
  - 0.6881606765327696
  - 0.6894257703081231
  - 0.6884210526315788
  train_recall_weighted:
  - 0.7086757291955651
  - 0.7170236753100339
  - 0.7035563785261932
  - 0.7063347323145718
  - 0.6980535798956852
  train_recall_weighted_oob:
  - 0.6765064620741775
  - 0.677771316679523
  - 0.6751917304177266
  - 0.6767477002074788
  - 0.6755239449976292
  train_roc_auc_macro:
  - 0.9335103389234284
  - 0.9248881786203924
  - 0.9267810087000151
  - 0.9283134147902006
  - 0.924296169934293
  train_roc_auc_macro_oob:
  - 0.8584012162793523
  - 0.8529331976178569
  - 0.839769945110719
  - 0.8537550626150862
  - 0.842743313549907
  train_roc_auc_micro:
  - 0.9401176146389585
  - 0.9317135897991075
  - 0.9282977694926545
  - 0.9333124535142511
  - 0.9320828856379315
  train_roc_auc_micro_oob:
  - 0.8723189929463637
  - 0.8641025832466585
  - 0.8487272416089997
  - 0.8639326700269053
  - 0.8590522862311853
  train_roc_auc_samples:
  - 0.9317007282123562
  - 0.9206491228070176
  - 0.9140533239370449
  - 0.9212943510737629
  - 0.923643274853801
  train_roc_auc_samples_oob:
  - 0.8482323232323232
  - 0.8478187134502925
  - 0.825534413906507
  - 0.8484768907563025
  - 0.8441637426900584
  train_roc_auc_weighted:
  - 0.9325646190259138
  - 0.9244134921364511
  - 0.9268504860538639
  - 0.9286679257414275
  - 0.9244629847753355
  train_roc_auc_weighted_oob:
  - 0.8570276826535097
  - 0.8549964171716158
  - 0.8407226682583663
  - 0.8558785295175708
  - 0.8441615276044461
start: 2023-12-22 03:32:39.071593
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
