active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz878AMzMzMzPzv4BmZmZmZgZAAJiZmZmZyb8AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 21:17:28.537893
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.ExtraTreesRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.8
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    - - rf
                      - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                        params:
                          estimator:
                            call: deep_forest.tree_embedder.ForestEmbedder
                            params:
                              estimator:
                                call: sklearn.ensemble._forest.RandomForestRegressor
                                params:
                                  bootstrap: true
                                  ccp_alpha: 0.0
                                  criterion: squared_error
                                  max_depth: null
                                  max_features: sqrt
                                  max_leaf_nodes: null
                                  max_samples: 0.5
                                  min_impurity_decrease: 0.0
                                  min_samples_leaf: 5
                                  min_samples_split: 2
                                  min_weight_fraction_leaf: 0.0
                                  monotonic_cst: null
                                  n_estimators: 150
                                  n_jobs: 14
                                  oob_score: false
                                  random_state: 0
                                  verbose: true
                                  warm_start: false
                              max_node_size: 0.95
                              max_pvalue: 1.0
                              method: path
                              node_weights: log_node_size
                          method: predict
                          post_transformer:
                            call: sklearn.pipeline.Pipeline
                            params:
                              memory: null
                              steps:
                              - - densifier
                                - call: nakano_datasets_v2.estimators.Densifier
                                  params: {}
                              - - pca
                                - call: sklearn.decomposition._pca.PCA
                                  params:
                                    copy: true
                                    iterated_power: auto
                                    n_components: 0.8
                                    n_oversamples: 10
                                    power_iteration_normalizer: auto
                                    random_state: 0
                                    svd_solver: auto
                                    tol: 0.0
                                    whiten: false
                              verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba_weak__2
  params: {}
hash: feab7e896f43bc0a3d028b33152ede52f18dc0ed3a6eb8874f50e7bbed36ca75
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/feab7e8_20231221T211708893802_embedding_proba_weak__2_GrampositivePseAAC.yml
results:
  fit_time:
  - 8.229717254638672
  - 8.224827527999878
  - 8.489173173904419
  - 8.969503402709961
  - 9.115372896194458
  score_time:
  - 2.4059059619903564
  - 2.33601713180542
  - 2.4899299144744873
  - 2.62969708442688
  - 2.629591941833496
  test_average_precision_macro:
  - 0.3156850529334074
  - 0.4355263792220665
  - 0.36837239032006996
  - 0.42262751426523415
  - 0.4037925245289639
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.43796403375374343
  - 0.5471667356914368
  - 0.4962813722059466
  - 0.5357602479294022
  - 0.4522325885680419
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.6626984126984127
  - 0.726984126984127
  - 0.6815181518151815
  - 0.7003205128205128
  - 0.7163461538461539
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.42123373253201946
  - 0.5408056217583979
  - 0.4731781535253447
  - 0.5326211213623993
  - 0.44607790107061857
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.75
  - 0.75
  - 0.7425742574257426
  - 0.7475961538461539
  - 0.7451923076923077
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.75
  - 0.75
  - 0.7425742574257426
  - 0.7475961538461539
  - 0.7451923076923077
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.75
  - 0.75
  - 0.7425742574257426
  - 0.7475961538461539
  - 0.7451923076923077
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6713832199546486
  - 0.6782766439909298
  - 0.6597486671744097
  - 0.6720695970695971
  - 0.6715051775147928
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6221001221001221
  - 0.6200865710888332
  - 0.614047305635541
  - 0.6179965844675858
  - 0.6148473596613842
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6
  - 0.6
  - 0.5905511811023622
  - 0.5969289827255279
  - 0.5938697318007663
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5999999999999999
  - 0.5999999999999999
  - 0.5920792079207919
  - 0.5974358974358972
  - 0.5948717948717946
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5115995115995116
  - 0.519653715644667
  - 0.49927777426193715
  - 0.5134611510617555
  - 0.5125234420088438
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.662698412698413
  - 0.726984126984127
  - 0.6815181518151819
  - 0.7003205128205129
  - 0.7163461538461537
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - -0.03703975623342236
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - -0.0401286176952564
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - -0.00641025641025641
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - -0.053786776278567636
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7484665955027853
  - 0.7966723698994029
  - 0.7640831434862216
  - 0.7762893323503568
  - 0.7887248674629578
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.8952380952380952
  - -1.7047619047619047
  - -1.8514851485148516
  - -1.8269230769230769
  - -1.7307692307692308
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.25
  - -0.25
  - -0.25742574257425743
  - -0.25240384615384615
  - -0.2548076923076923
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.25
  - -0.25
  - -0.25742574257425743
  - -0.25240384615384615
  - -0.2548076923076923
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.25
  - -0.25
  - -0.25742574257425743
  - -0.25240384615384615
  - -0.2548076923076923
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.32861678004535144
  - -0.32172335600907026
  - -0.3402513328255902
  - -0.327930402930403
  - -0.3284948224852071
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.2984126984126984
  - -0.2349206349206349
  - -0.2731023102310231
  - -0.2724358974358974
  - -0.2435897435897436
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.75
  - 0.75
  - 0.7425742574257426
  - 0.7475961538461539
  - 0.7451923076923077
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.75
  - 0.75
  - 0.7425742574257426
  - 0.7475961538461539
  - 0.7451923076923077
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.75
  - 0.75
  - 0.7425742574257426
  - 0.7475961538461539
  - 0.7451923076923077
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6713832199546486
  - 0.6782766439909298
  - 0.6597486671744097
  - 0.6720695970695971
  - 0.6715051775147928
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.75
  - 0.75
  - 0.7425742574257426
  - 0.7475961538461539
  - 0.7451923076923077
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.75
  - 0.75
  - 0.7425742574257426
  - 0.7475961538461539
  - 0.7451923076923077
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.75
  - 0.75
  - 0.7425742574257426
  - 0.7475961538461539
  - 0.7451923076923077
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6713832199546486
  - 0.6782766439909298
  - 0.6597486671744097
  - 0.6720695970695971
  - 0.6715051775147928
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5063628840425058
  - 0.7095042931806869
  - 0.6563159701476893
  - 0.6803288314799973
  - 0.7272813011949659
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7180045351473924
  - 0.7826152683295541
  - 0.7431410256410257
  - 0.7721635277905373
  - 0.7598619329388562
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7015873015873016
  - 0.7650793650793651
  - 0.726897689768977
  - 0.7275641025641026
  - 0.7564102564102565
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5675195633809079
  - 0.7000510204081634
  - 0.6130195470389175
  - 0.6782778556958081
  - 0.6647571714502095
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7909868355446596
  - 0.7864281866978495
  - 0.7845289485192083
  - 0.769752587543983
  - 0.7642630099725336
  train_average_precision_macro_oob:
  - 0.7331332520664159
  - 0.6605080701685495
  - 0.7385834152742354
  - 0.6756065076244008
  - 0.6516333971160538
  train_average_precision_micro:
  - 0.8450017804027096
  - 0.8459440913160426
  - 0.8477308639618432
  - 0.8395421699281683
  - 0.8384834821725968
  train_average_precision_micro_oob:
  - 0.82002563942203
  - 0.8178304948378107
  - 0.8284964745637461
  - 0.8164394076234226
  - 0.8119000692353587
  train_average_precision_samples:
  - 0.8486312399355879
  - 0.8552737520128826
  - 0.8464912280701755
  - 0.8419678714859437
  - 0.8475903614457831
  train_average_precision_samples_oob:
  - 0.8377616747181964
  - 0.8309178743961353
  - 0.8333333333333334
  - 0.8313253012048193
  - 0.8267068273092371
  train_average_precision_weighted:
  - 0.8378371987324598
  - 0.8386773650879537
  - 0.8433850902347839
  - 0.8331299279203691
  - 0.8305806315015697
  train_average_precision_weighted_oob:
  - 0.8185389815915137
  - 0.8079512964083414
  - 0.828627182124993
  - 0.8094409596204362
  - 0.8019716923514801
  train_f1_macro:
  - 0.8605072463768115
  - 0.8647342995169082
  - 0.8624401913875598
  - 0.8656626506024095
  - 0.8578313253012049
  train_f1_macro_oob:
  - 0.7964975845410628
  - 0.8128019323671498
  - 0.8080143540669856
  - 0.8102409638554218
  - 0.8030120481927712
  train_f1_micro:
  - 0.8605072463768116
  - 0.8647342995169082
  - 0.8624401913875598
  - 0.8656626506024097
  - 0.8578313253012049
  train_f1_micro_oob:
  - 0.7964975845410628
  - 0.8128019323671497
  - 0.8080143540669856
  - 0.8102409638554217
  - 0.803012048192771
  train_f1_samples:
  - 0.8605072463768116
  - 0.8647342995169082
  - 0.8624401913875598
  - 0.8656626506024097
  - 0.8578313253012049
  train_f1_samples_oob:
  - 0.7964975845410628
  - 0.8128019323671497
  - 0.8080143540669856
  - 0.8102409638554217
  - 0.803012048192771
  train_f1_weighted:
  - 0.823717726463722
  - 0.8279592261285627
  - 0.8270032316634502
  - 0.8297746007955267
  - 0.8192886102884092
  train_f1_weighted_oob:
  - 0.7434470563761181
  - 0.766405473499295
  - 0.7598462961482683
  - 0.7588516746411483
  - 0.7523708197946919
  train_jaccard_macro:
  - 0.761537920921179
  - 0.767990536865126
  - 0.7641337281093034
  - 0.7692116390741253
  - 0.7578583214120951
  train_jaccard_macro_oob:
  - 0.6742422576422976
  - 0.695061350299342
  - 0.6888478086725316
  - 0.6925996901282073
  - 0.6830953491401253
  train_jaccard_micro:
  - 0.7551669316375199
  - 0.7617021276595745
  - 0.7581493165089379
  - 0.7631439192777483
  - 0.7510548523206751
  train_jaccard_micro_oob:
  - 0.6618163572503764
  - 0.6846388606307223
  - 0.6778725539387858
  - 0.6810126582278481
  - 0.6708605938600906
  train_jaccard_samples:
  - 0.7771336553945248
  - 0.7838969404186795
  - 0.7799043062200955
  - 0.7850602409638552
  - 0.7728514056224899
  train_jaccard_samples_oob:
  - 0.6753623188405795
  - 0.7014492753623188
  - 0.6931419457735245
  - 0.6963855421686744
  - 0.6857831325301202
  train_jaccard_weighted:
  - 0.7027506349539572
  - 0.7088324511694167
  - 0.707157873324821
  - 0.7113064191692451
  - 0.6962834391360362
  train_jaccard_weighted_oob:
  - 0.5944537589007524
  - 0.6231363739883314
  - 0.6150604630625224
  - 0.6143009366907343
  - 0.6058545425730978
  train_label_ranking_average_precision_score:
  - 0.8486312399355874
  - 0.8552737520128822
  - 0.846491228070175
  - 0.8419678714859437
  - 0.8475903614457827
  train_label_ranking_average_precision_score_oob:
  - 0.8377616747181962
  - 0.8309178743961347
  - 0.8333333333333329
  - 0.8313253012048192
  - 0.8267068273092366
  train_matthews_corrcoef_macro:
  - 0.4548049238523542
  - 0.4645109072193716
  - 0.4565549120621448
  - 0.46572998938180465
  - 0.4467348086492986
  train_matthews_corrcoef_macro_oob:
  - 0.2567913187756064
  - 0.29581326371264394
  - 0.2912615388233808
  - 0.31407253513957156
  - 0.27378332032246416
  train_matthews_corrcoef_micro:
  - 0.6140193913688415
  - 0.6269015737961275
  - 0.6173463014154983
  - 0.6288848757489727
  - 0.6057789477164324
  train_matthews_corrcoef_micro_oob:
  - 0.38894723941246806
  - 0.45456770836811833
  - 0.43149840810978424
  - 0.44335025551964724
  - 0.4168691567135938
  train_matthews_corrcoef_samples:
  - 0.4486281420472678
  - 0.46553635460765425
  - 0.4511419862899273
  - 0.46682421881341896
  - 0.43790855616281654
  train_matthews_corrcoef_samples_oob:
  - 0.19522069373199497
  - 0.259848672147801
  - 0.23444976076555024
  - 0.24513747182546716
  - 0.22066831390166175
  train_matthews_corrcoef_weighted:
  - 0.5808854722454055
  - 0.5939510142315115
  - 0.5846398989200389
  - 0.5963174754559873
  - 0.5729557504385038
  train_matthews_corrcoef_weighted_oob:
  - 0.34849452921644364
  - 0.40727230454048546
  - 0.3921701921172423
  - 0.4112343604348288
  - 0.37260551110972256
  train_ndgc:
  - 0.8874798089924918
  - 0.8922566186837851
  - 0.8856500097365329
  - 0.882254441306246
  - 0.8866865570122197
  train_ndgc_oob:
  - 0.8791844836028524
  - 0.8739325525852507
  - 0.875787222655554
  - 0.8745176195573412
  - 0.8710330151750835
  train_neg_coverage_error:
  - -1.422705314009662
  - -1.3792270531400965
  - -1.3995215311004785
  - -1.4289156626506023
  - -1.4120481927710844
  train_neg_coverage_error_oob:
  - -1.458937198067633
  - -1.4758454106280192
  - -1.4401913875598087
  - -1.4674698795180723
  - -1.4867469879518072
  train_neg_hamming_loss_macro:
  - -0.13949275362318841
  - -0.13526570048309178
  - -0.1375598086124402
  - -0.13433734939759037
  - -0.14216867469879518
  train_neg_hamming_loss_macro_oob:
  - -0.20350241545893719
  - -0.18719806763285024
  - -0.19198564593301437
  - -0.18975903614457829
  - -0.1969879518072289
  train_neg_hamming_loss_micro:
  - -0.13949275362318841
  - -0.13526570048309178
  - -0.1375598086124402
  - -0.13433734939759037
  - -0.14216867469879518
  train_neg_hamming_loss_micro_oob:
  - -0.20350241545893719
  - -0.18719806763285024
  - -0.19198564593301434
  - -0.1897590361445783
  - -0.19698795180722892
  train_neg_hamming_loss_samples:
  - -0.13949275362318841
  - -0.13526570048309178
  - -0.1375598086124402
  - -0.13433734939759037
  - -0.14216867469879518
  train_neg_hamming_loss_samples_oob:
  - -0.20350241545893719
  - -0.18719806763285024
  - -0.19198564593301434
  - -0.1897590361445783
  - -0.19698795180722892
  train_neg_hamming_loss_weighted:
  - -0.17628227353627812
  - -0.17204077387143749
  - -0.17299676833654978
  - -0.17022539920447338
  - -0.18071138971159098
  train_neg_hamming_loss_weighted_oob:
  - -0.2565529436238818
  - -0.23359452650070495
  - -0.2401537038517317
  - -0.24114832535885167
  - -0.24762918020530814
  train_neg_label_ranking_loss:
  - -0.13687600644122383
  - -0.12318840579710146
  - -0.13237639553429026
  - -0.14036144578313253
  - -0.1335341365461847
  train_neg_label_ranking_loss_oob:
  - -0.14955716586151369
  - -0.1549919484702093
  - -0.145933014354067
  - -0.15261044176706826
  - -0.1582329317269076
  train_precision_macro:
  - 0.8605072463768115
  - 0.8647342995169082
  - 0.8624401913875598
  - 0.8656626506024095
  - 0.8578313253012049
  train_precision_macro_oob:
  - 0.7964975845410628
  - 0.8128019323671498
  - 0.8080143540669856
  - 0.8102409638554218
  - 0.8030120481927712
  train_precision_micro:
  - 0.8605072463768116
  - 0.8647342995169082
  - 0.8624401913875598
  - 0.8656626506024097
  - 0.8578313253012049
  train_precision_micro_oob:
  - 0.7964975845410628
  - 0.8128019323671497
  - 0.8080143540669856
  - 0.8102409638554217
  - 0.803012048192771
  train_precision_samples:
  - 0.8605072463768116
  - 0.8647342995169082
  - 0.8624401913875598
  - 0.8656626506024097
  - 0.8578313253012049
  train_precision_samples_oob:
  - 0.7964975845410628
  - 0.8128019323671497
  - 0.8080143540669856
  - 0.8102409638554217
  - 0.803012048192771
  train_precision_weighted:
  - 0.823717726463722
  - 0.8279592261285627
  - 0.8270032316634502
  - 0.8297746007955267
  - 0.8192886102884092
  train_precision_weighted_oob:
  - 0.7434470563761181
  - 0.766405473499295
  - 0.7598462961482683
  - 0.7588516746411483
  - 0.7523708197946919
  train_recall_macro:
  - 0.8605072463768115
  - 0.8647342995169082
  - 0.8624401913875598
  - 0.8656626506024095
  - 0.8578313253012049
  train_recall_macro_oob:
  - 0.7964975845410628
  - 0.8128019323671498
  - 0.8080143540669856
  - 0.8102409638554218
  - 0.8030120481927712
  train_recall_micro:
  - 0.8605072463768116
  - 0.8647342995169082
  - 0.8624401913875598
  - 0.8656626506024097
  - 0.8578313253012049
  train_recall_micro_oob:
  - 0.7964975845410628
  - 0.8128019323671497
  - 0.8080143540669856
  - 0.8102409638554217
  - 0.803012048192771
  train_recall_samples:
  - 0.8605072463768116
  - 0.8647342995169082
  - 0.8624401913875598
  - 0.8656626506024097
  - 0.8578313253012049
  train_recall_samples_oob:
  - 0.7964975845410628
  - 0.8128019323671497
  - 0.8080143540669856
  - 0.8102409638554217
  - 0.803012048192771
  train_recall_weighted:
  - 0.823717726463722
  - 0.8279592261285627
  - 0.8270032316634502
  - 0.8297746007955267
  - 0.8192886102884092
  train_recall_weighted_oob:
  - 0.7434470563761181
  - 0.766405473499295
  - 0.7598462961482683
  - 0.7588516746411483
  - 0.7523708197946919
  train_roc_auc_macro:
  - 0.8904199786729796
  - 0.8802547629713284
  - 0.8905946974763325
  - 0.8741603188490144
  - 0.8665328269475614
  train_roc_auc_macro_oob:
  - 0.8711711855141931
  - 0.8541562048853987
  - 0.8812260568877957
  - 0.8598448633837872
  - 0.8381987923505967
  train_roc_auc_micro:
  - 0.9129518980296976
  - 0.9160862944554807
  - 0.9195820246206241
  - 0.9113445669509743
  - 0.910940634140994
  train_roc_auc_micro_oob:
  - 0.8926884695951953
  - 0.8913918111477843
  - 0.9064926753357575
  - 0.8906378814845635
  - 0.8872108296681213
  train_roc_auc_samples:
  - 0.8631239935587761
  - 0.8768115942028986
  - 0.8676236044657097
  - 0.8596385542168675
  - 0.8664658634538154
  train_roc_auc_samples_oob:
  - 0.8504428341384863
  - 0.8450080515297907
  - 0.854066985645933
  - 0.8473895582329316
  - 0.8417670682730924
  train_roc_auc_weighted:
  - 0.8851332768421754
  - 0.8862046913182002
  - 0.8954675438636668
  - 0.8800632720401106
  - 0.8751636809281672
  train_roc_auc_weighted_oob:
  - 0.8649569992605763
  - 0.8652955947805354
  - 0.8838116211337851
  - 0.8624888938627627
  - 0.8565477417546736
start: 2023-12-21 21:17:08.893802
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
