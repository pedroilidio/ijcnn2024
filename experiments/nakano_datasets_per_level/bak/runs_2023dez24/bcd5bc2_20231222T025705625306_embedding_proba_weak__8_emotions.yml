active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/QDMzMzMz4z9gZmZmZmb2vw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          4MzMzMzMBECAMzMzMzPjP5CZmZmZmRHAIDMzMzMzA8DgzMzMzMwMQA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 03:06:38.144277
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 8
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__8
  params: {}
hash: bcd5bc273bf82d5edd1a9211cdb1c1faed8e82493a93756b1f212d88dd3e4ef8
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/bcd5bc2_20231222T025705625306_embedding_proba_weak__8_emotions.yml
results:
  fit_time:
  - 537.5978047847748
  - 535.2174036502838
  - 542.9319977760315
  - 550.3582165241241
  - 541.4592943191528
  score_time:
  - 7.611592531204224
  - 7.096728324890137
  - 7.935961008071899
  - 7.237257719039917
  - 7.665605545043945
  test_average_precision_macro:
  - 0.7368359238990204
  - 0.6962381393256472
  - 0.6290205236290854
  - 0.6832538543824266
  - 0.7166354961792996
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7363871156003049
  - 0.6785843243438837
  - 0.6172777510257408
  - 0.6362503337745539
  - 0.6903212026092965
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8252394636015326
  - 0.7989406779661016
  - 0.7703929539295393
  - 0.7614784205693297
  - 0.7968599033816426
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.748512011116088
  - 0.6958103555195828
  - 0.627472644439664
  - 0.6727499290529612
  - 0.7118946258427284
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8204022988505749
  - 0.7895480225988701
  - 0.7655826558265583
  - 0.7823691460055097
  - 0.781159420289855
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8204022988505747
  - 0.78954802259887
  - 0.7655826558265583
  - 0.7823691460055097
  - 0.7811594202898551
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8204022988505748
  - 0.7895480225988701
  - 0.7655826558265583
  - 0.7823691460055097
  - 0.7811594202898552
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8242705570291776
  - 0.7880974194533517
  - 0.7646651354405921
  - 0.7739052391458807
  - 0.7804839661617157
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7038608293651357
  - 0.6556764398871494
  - 0.6231800523641864
  - 0.6484728992113394
  - 0.6443920559886017
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6954933008526187
  - 0.6522753792298717
  - 0.6201975850713501
  - 0.6425339366515838
  - 0.6409036860879905
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7334975369458128
  - 0.6899148873725144
  - 0.6620279449547741
  - 0.682766269543129
  - 0.6797967250141161
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7088540616331328
  - 0.6531803001439616
  - 0.621647624294114
  - 0.6367492656182838
  - 0.6430705630519824
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8252394636015324
  - 0.7989406779661014
  - 0.7703929539295391
  - 0.7614784205693295
  - 0.7968599033816423
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6054972164384823
  - 0.5264259487159743
  - 0.4669555422098099
  - 0.5076961732880764
  - 0.5098882114206392
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.6160929160724326
  - 0.5404322718166343
  - 0.48375327421838116
  - 0.5181231182569879
  - 0.5238399721144317
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.6081020548656599
  - 0.5482109694947321
  - 0.48415784488303815
  - 0.5214577406008826
  - 0.5321896738300528
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.6185383513112479
  - 0.5319090234128415
  - 0.4748685165576985
  - 0.5015148569563916
  - 0.5166535302460603
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8797945174756857
  - 0.8631389748912669
  - 0.8400729057656293
  - 0.8325050319234166
  - 0.861624031726072
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.6379310344827585
  - -2.7796610169491527
  - -2.8292682926829267
  - -2.7768595041322315
  - -2.8260869565217392
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.17959770114942528
  - -0.21045197740112995
  - -0.23441734417344176
  - -0.21763085399449034
  - -0.21884057971014492
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.17959770114942528
  - -0.21045197740112995
  - -0.23441734417344173
  - -0.21763085399449036
  - -0.21884057971014492
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.17959770114942528
  - -0.21045197740112995
  - -0.2344173441734417
  - -0.2176308539944903
  - -0.2188405797101449
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.17572944297082227
  - -0.21190258054664837
  - -0.23533486455940789
  - -0.22609476085411914
  - -0.2195160338382845
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1337883141762452
  - -0.16869114877589453
  - -0.19085365853658537
  - -0.18487144168962352
  - -0.16603864734299514
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8204022988505749
  - 0.7895480225988701
  - 0.7655826558265583
  - 0.7823691460055097
  - 0.781159420289855
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8204022988505747
  - 0.78954802259887
  - 0.7655826558265583
  - 0.7823691460055097
  - 0.7811594202898551
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8204022988505748
  - 0.7895480225988701
  - 0.7655826558265583
  - 0.7823691460055097
  - 0.7811594202898552
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8242705570291776
  - 0.7880974194533517
  - 0.7646651354405921
  - 0.7739052391458807
  - 0.7804839661617157
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8204022988505749
  - 0.7895480225988701
  - 0.7655826558265583
  - 0.7823691460055097
  - 0.781159420289855
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8204022988505747
  - 0.78954802259887
  - 0.7655826558265583
  - 0.7823691460055097
  - 0.7811594202898551
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8204022988505748
  - 0.7895480225988701
  - 0.7655826558265583
  - 0.7823691460055097
  - 0.7811594202898552
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8242705570291776
  - 0.7880974194533517
  - 0.7646651354405921
  - 0.7739052391458807
  - 0.7804839661617157
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8710283879633902
  - 0.835763689357999
  - 0.8035006624761415
  - 0.8312449254208384
  - 0.8408051545357912
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8838199571326506
  - 0.8527416305194082
  - 0.8254952327049503
  - 0.846592894583576
  - 0.8594969560728998
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8662116858237547
  - 0.8313088512241054
  - 0.8091463414634146
  - 0.8151285583103766
  - 0.8339613526570048
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8757773948095265
  - 0.8355088427687649
  - 0.8019629026600289
  - 0.8230866103079351
  - 0.8370398594302534
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.797366340930736
  - 0.7975098932709047
  - 0.8096468563620173
  - 0.823550636949348
  - 0.8092165825870242
  train_average_precision_macro_oob:
  - 0.7859147194204193
  - 0.7876920401524345
  - 0.798492452251768
  - 0.8056548851419381
  - 0.7890417043786618
  train_average_precision_micro:
  - 0.7738843751592116
  - 0.748722949342759
  - 0.7643806986824849
  - 0.7779382850930776
  - 0.7645765628859729
  train_average_precision_micro_oob:
  - 0.7613714643182949
  - 0.7407488608488486
  - 0.7540599794153428
  - 0.7653018345625829
  - 0.751379811546163
  train_average_precision_samples:
  - 0.8686233403214536
  - 0.8551695906432749
  - 0.8723404255319149
  - 0.8675494350282487
  - 0.8669456066945607
  train_average_precision_samples_oob:
  - 0.8585720941066853
  - 0.8471695906432749
  - 0.8647163120567376
  - 0.8617467043314501
  - 0.8573802882380288
  train_average_precision_weighted:
  - 0.7911516295328975
  - 0.7844640035546937
  - 0.7985874824089081
  - 0.8124906006223398
  - 0.799208752865022
  train_average_precision_weighted_oob:
  - 0.7802272266808369
  - 0.7760837306318092
  - 0.7872903581910125
  - 0.7960375006352134
  - 0.780649306885587
  train_f1_macro:
  - 0.8749126484975543
  - 0.8842105263157896
  - 0.8840425531914894
  - 0.8848870056497176
  - 0.8845885634588564
  train_f1_macro_oob:
  - 0.8619846261355694
  - 0.8712280701754386
  - 0.8723404255319148
  - 0.8732344632768362
  - 0.8723849372384936
  train_f1_micro:
  - 0.8749126484975541
  - 0.8842105263157894
  - 0.8840425531914894
  - 0.8848870056497176
  - 0.8845885634588564
  train_f1_micro_oob:
  - 0.8619846261355696
  - 0.8712280701754386
  - 0.8723404255319149
  - 0.8732344632768362
  - 0.8723849372384938
  train_f1_samples:
  - 0.8749126484975542
  - 0.8842105263157894
  - 0.8840425531914894
  - 0.8848870056497176
  - 0.8845885634588563
  train_f1_samples_oob:
  - 0.8619846261355696
  - 0.8712280701754387
  - 0.8723404255319149
  - 0.8732344632768362
  - 0.8723849372384938
  train_f1_weighted:
  - 0.8682057863526031
  - 0.8783319472496138
  - 0.8779997595864888
  - 0.8798248714959968
  - 0.8798545234984174
  train_f1_weighted_oob:
  - 0.8555326294791527
  - 0.8656956160152073
  - 0.867200384661618
  - 0.8689617449792675
  - 0.8684013151377641
  train_jaccard_macro:
  - 0.7808545862607681
  - 0.7950477779899524
  - 0.794752510288295
  - 0.7953548670881457
  - 0.795661542299
  train_jaccard_macro_oob:
  - 0.7607028975995185
  - 0.7745300067641804
  - 0.7766450025059801
  - 0.7772456112635359
  - 0.7768458274159528
  train_jaccard_micro:
  - 0.7776397515527951
  - 0.7924528301886793
  - 0.792183031458532
  - 0.7935402153261558
  - 0.793060331353548
  train_jaccard_micro_oob:
  - 0.7574455019957016
  - 0.7718371153248368
  - 0.7735849056603774
  - 0.7749921654653713
  - 0.7736549165120594
  train_jaccard_samples:
  - 0.7999301187980432
  - 0.8171328320802004
  - 0.8143059777102328
  - 0.817231638418079
  - 0.8164375373580395
  train_jaccard_samples_oob:
  - 0.7815114305680342
  - 0.7988872180451126
  - 0.7980547112462006
  - 0.8000201775625504
  - 0.7983562462641959
  train_jaccard_weighted:
  - 0.7702852414100444
  - 0.785561037065179
  - 0.7850169501802207
  - 0.7871543931443638
  - 0.7878578003097454
  train_jaccard_weighted_oob:
  - 0.7507185141773559
  - 0.7657078024995727
  - 0.7683439778877167
  - 0.7703247483277142
  - 0.7702645002834039
  train_label_ranking_average_precision_score:
  - 0.8686233403214524
  - 0.8551695906432738
  - 0.8723404255319139
  - 0.8675494350282473
  - 0.8669456066945596
  train_label_ranking_average_precision_score_oob:
  - 0.8585720941066839
  - 0.8471695906432737
  - 0.8647163120567363
  - 0.861746704331449
  - 0.8573802882380278
  train_matthews_corrcoef_macro:
  - 0.7413582170901107
  - 0.7570214094144393
  - 0.7576432081190824
  - 0.7551054941507617
  - 0.754204697497988
  train_matthews_corrcoef_macro_oob:
  - 0.7097585210783645
  - 0.7247200340754141
  - 0.7286530012532807
  - 0.7255940424218913
  - 0.7244401109856958
  train_matthews_corrcoef_micro:
  - 0.7409896765171081
  - 0.7565167496815874
  - 0.7569347252431506
  - 0.7554070775349555
  - 0.7538644069642423
  train_matthews_corrcoef_micro_oob:
  - 0.7107514365271467
  - 0.7248430086343002
  - 0.729214548002946
  - 0.7271384147448879
  - 0.7251608415938136
  train_matthews_corrcoef_samples:
  - 0.7465981554778164
  - 0.7676066742937001
  - 0.7704906553798507
  - 0.7618980635263127
  - 0.7621448331997991
  train_matthews_corrcoef_samples_oob:
  - 0.7172331517436727
  - 0.7347446169802996
  - 0.7417403031279709
  - 0.7358100607925565
  - 0.7365031032000614
  train_matthews_corrcoef_weighted:
  - 0.7323326017008158
  - 0.7497509879167098
  - 0.7495733261590528
  - 0.7495751285738274
  - 0.7487533696930218
  train_matthews_corrcoef_weighted_oob:
  - 0.7020622170988012
  - 0.7189127417473492
  - 0.7229042321913635
  - 0.7222923991655559
  - 0.7210689669852215
  train_ndgc:
  - 0.9087764496876628
  - 0.897195921310992
  - 0.9117698265767434
  - 0.9077168037490934
  - 0.9070149457892769
  train_ndgc_oob:
  - 0.9022587641584917
  - 0.8929120975023291
  - 0.9075429189427568
  - 0.904458734188624
  - 0.9008188514738956
  train_neg_coverage_error:
  - -2.2872117400419287
  - -2.309473684210526
  - -2.302127659574468
  - -2.3135593220338984
  - -2.278242677824268
  train_neg_coverage_error_oob:
  - -2.368972746331237
  - -2.4105263157894736
  - -2.382978723404255
  - -2.402542372881356
  - -2.3682008368200838
  train_neg_hamming_loss_macro:
  - -0.12508735150244585
  - -0.11578947368421054
  - -0.11595744680851061
  - -0.1151129943502825
  - -0.11541143654114365
  train_neg_hamming_loss_macro_oob:
  - -0.13801537386443047
  - -0.1287719298245614
  - -0.1276595744680851
  - -0.12676553672316385
  - -0.12761506276150628
  train_neg_hamming_loss_micro:
  - -0.12508735150244585
  - -0.11578947368421053
  - -0.11595744680851064
  - -0.11511299435028248
  - -0.11541143654114365
  train_neg_hamming_loss_micro_oob:
  - -0.13801537386443047
  - -0.1287719298245614
  - -0.1276595744680851
  - -0.12676553672316385
  - -0.12761506276150628
  train_neg_hamming_loss_samples:
  - -0.12508735150244585
  - -0.11578947368421051
  - -0.11595744680851064
  - -0.11511299435028248
  - -0.11541143654114365
  train_neg_hamming_loss_samples_oob:
  - -0.13801537386443047
  - -0.12877192982456137
  - -0.1276595744680851
  - -0.12676553672316382
  - -0.12761506276150628
  train_neg_hamming_loss_weighted:
  - -0.13179421364739694
  - -0.12166805275038613
  - -0.12200024041351124
  - -0.12017512850400322
  - -0.12014547650158261
  train_neg_hamming_loss_weighted_oob:
  - -0.14446737052084735
  - -0.13430438398479266
  - -0.13279961533838203
  - -0.1310382550207326
  - -0.13159868486223603
  train_neg_label_ranking_loss:
  - -0.07990333100395994
  - -0.0887953216374269
  - -0.07881205673758865
  - -0.08228578154425611
  - -0.08076476057647605
  train_neg_label_ranking_loss_oob:
  - -0.09223736314931283
  - -0.10325730994152049
  - -0.09060874704491725
  - -0.09639830508474577
  - -0.09503138075313806
  train_precision_macro:
  - 0.8749126484975543
  - 0.8842105263157896
  - 0.8840425531914894
  - 0.8848870056497176
  - 0.8845885634588564
  train_precision_macro_oob:
  - 0.8619846261355694
  - 0.8712280701754386
  - 0.8723404255319148
  - 0.8732344632768362
  - 0.8723849372384936
  train_precision_micro:
  - 0.8749126484975541
  - 0.8842105263157894
  - 0.8840425531914894
  - 0.8848870056497176
  - 0.8845885634588564
  train_precision_micro_oob:
  - 0.8619846261355696
  - 0.8712280701754386
  - 0.8723404255319149
  - 0.8732344632768362
  - 0.8723849372384938
  train_precision_samples:
  - 0.8749126484975542
  - 0.8842105263157894
  - 0.8840425531914894
  - 0.8848870056497176
  - 0.8845885634588563
  train_precision_samples_oob:
  - 0.8619846261355696
  - 0.8712280701754387
  - 0.8723404255319149
  - 0.8732344632768362
  - 0.8723849372384938
  train_precision_weighted:
  - 0.8682057863526031
  - 0.8783319472496138
  - 0.8779997595864888
  - 0.8798248714959968
  - 0.8798545234984174
  train_precision_weighted_oob:
  - 0.8555326294791527
  - 0.8656956160152073
  - 0.867200384661618
  - 0.8689617449792675
  - 0.8684013151377641
  train_recall_macro:
  - 0.8749126484975543
  - 0.8842105263157896
  - 0.8840425531914894
  - 0.8848870056497176
  - 0.8845885634588564
  train_recall_macro_oob:
  - 0.8619846261355694
  - 0.8712280701754386
  - 0.8723404255319148
  - 0.8732344632768362
  - 0.8723849372384936
  train_recall_micro:
  - 0.8749126484975541
  - 0.8842105263157894
  - 0.8840425531914894
  - 0.8848870056497176
  - 0.8845885634588564
  train_recall_micro_oob:
  - 0.8619846261355696
  - 0.8712280701754386
  - 0.8723404255319149
  - 0.8732344632768362
  - 0.8723849372384938
  train_recall_samples:
  - 0.8749126484975542
  - 0.8842105263157894
  - 0.8840425531914894
  - 0.8848870056497176
  - 0.8845885634588563
  train_recall_samples_oob:
  - 0.8619846261355696
  - 0.8712280701754387
  - 0.8723404255319149
  - 0.8732344632768362
  - 0.8723849372384938
  train_recall_weighted:
  - 0.8682057863526031
  - 0.8783319472496138
  - 0.8779997595864888
  - 0.8798248714959968
  - 0.8798545234984174
  train_recall_weighted_oob:
  - 0.8555326294791527
  - 0.8656956160152073
  - 0.867200384661618
  - 0.8689617449792675
  - 0.8684013151377641
  train_roc_auc_macro:
  - 0.9260708840498174
  - 0.9276781414893046
  - 0.9308362930854691
  - 0.9337655563709353
  - 0.9302606153866217
  train_roc_auc_macro_oob:
  - 0.9152320424950342
  - 0.9168586015103429
  - 0.919522392182022
  - 0.9200416307875572
  - 0.9184710950392004
  train_roc_auc_micro:
  - 0.9260479785366689
  - 0.927702022407856
  - 0.9311300894903575
  - 0.9350104189912561
  - 0.9302480099843667
  train_roc_auc_micro_oob:
  - 0.9148893296990281
  - 0.9174879777300669
  - 0.9207521277682885
  - 0.9227461504797954
  - 0.9193493771437449
  train_roc_auc_samples:
  - 0.9200966689960399
  - 0.911204678362573
  - 0.9211879432624113
  - 0.9177142184557437
  - 0.9192352394235239
  train_roc_auc_samples_oob:
  - 0.9077626368506873
  - 0.896874269005848
  - 0.9093912529550827
  - 0.9036016949152542
  - 0.9049686192468619
  train_roc_auc_weighted:
  - 0.9200909247679987
  - 0.920202314794118
  - 0.9239491853582206
  - 0.9273132569629379
  - 0.924007236988703
  train_roc_auc_weighted_oob:
  - 0.9092262070719931
  - 0.9097677958006981
  - 0.912934177838609
  - 0.9142950229062227
  - 0.9125297624868239
start: 2023-12-22 02:57:05.625306
wrapper: null
