active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZvzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz47+AZmZmZmb2PwAzMzMzM+O/wMzMzMzMBMBAMzMzMzMDQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 08:35:12.576857
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 9
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__9
  params: {}
hash: 498791b2df5abae5ec0a854e388d3b3356c73046c1c8fe336e2464e0610d3a66
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/498791b_20231221T083331405739_embedding_proba__9_VirusGO.yml
results:
  fit_time:
  - 83.42462658882141
  - 82.9930067062378
  - 84.67477989196777
  - 84.98675680160522
  - 84.97753691673279
  score_time:
  - 5.5863120555877686
  - 5.586824655532837
  - 5.9330620765686035
  - 5.859048366546631
  - 5.787763595581055
  test_average_precision_macro:
  - 0.9278452071870974
  - 0.9833916095744741
  - 0.9584041148064474
  - 0.8682555327175736
  - 0.8200483953495374
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9160556107292723
  - 0.9631375827893285
  - 0.882308387022122
  - 0.8817134997118299
  - 0.8570660998805786
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.949206349206349
  - 0.9583333333333333
  - 0.9523809523809523
  - 0.939520202020202
  - 0.9401709401709402
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9246231779915991
  - 0.9661188835319271
  - 0.9144728073884876
  - 0.8909678865620989
  - 0.8458156795618096
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8293650793650795
  - 0.8083333333333332
  - 0.8174603174603176
  - 0.8181818181818182
  - 0.7905982905982906
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8293650793650794
  - 0.8083333333333333
  - 0.8174603174603174
  - 0.8181818181818182
  - 0.7905982905982906
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8293650793650796
  - 0.8083333333333333
  - 0.8174603174603176
  - 0.8181818181818183
  - 0.7905982905982906
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7342857142857143
  - 0.709
  - 0.7161531279178337
  - 0.7281818181818182
  - 0.6837606837606837
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7261032038225909
  - 0.6983848143268433
  - 0.7113706435818635
  - 0.7108441118559973
  - 0.6776862234810999
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7084745762711865
  - 0.6783216783216783
  - 0.6912751677852349
  - 0.6923076923076923
  - 0.6537102473498233
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.717687074829932
  - 0.6869047619047619
  - 0.6989795918367347
  - 0.6991341991341993
  - 0.6642246642246643
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.592114493882468
  - 0.5652132086914695
  - 0.5711990106178102
  - 0.5874327445727473
  - 0.5385901371061506
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.949206349206349
  - 0.9583333333333334
  - 0.9523809523809523
  - 0.9395202020202021
  - 0.9401709401709403
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.11593990537522152
  - 0.08624357432264972
  - 0.09117803410067289
  - 0.04811252243246881
  - 0.030965699808371137
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.33974780562730855
  - 0.25378490826094635
  - 0.2754652404717154
  - 0.18075330073110932
  - 0.16995141943856684
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.14916454914446076
  - 0.0816227766016838
  - 0.11184206181192924
  - 0.045454545454545456
  - 0.06237065466753015
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.24500693416501207
  - 0.17593689161820542
  - 0.1864880644289121
  - 0.09237604307034011
  - 0.06193139961674228
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9627976988084329
  - 0.9690464876785729
  - 0.9648504527210913
  - 0.957651476018717
  - 0.9570685752363446
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.380952380952381
  - -1.35
  - -1.3095238095238095
  - -1.4090909090909092
  - -1.5128205128205128
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.1706349206349206
  - -0.19166666666666668
  - -0.18253968253968256
  - -0.1818181818181818
  - -0.20940170940170943
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.17063492063492064
  - -0.19166666666666668
  - -0.18253968253968253
  - -0.18181818181818182
  - -0.2094017094017094
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.17063492063492064
  - -0.19166666666666665
  - -0.18253968253968256
  - -0.18181818181818182
  - -0.20940170940170938
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.26571428571428574
  - -0.29100000000000004
  - -0.2838468720821662
  - -0.2718181818181818
  - -0.3162393162393162
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.036309523809523805
  - -0.02
  - -0.01904761904761905
  - -0.05189393939393939
  - -0.03974358974358974
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8293650793650795
  - 0.8083333333333332
  - 0.8174603174603176
  - 0.8181818181818182
  - 0.7905982905982906
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8293650793650794
  - 0.8083333333333333
  - 0.8174603174603174
  - 0.8181818181818182
  - 0.7905982905982906
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8293650793650796
  - 0.8083333333333333
  - 0.8174603174603176
  - 0.8181818181818183
  - 0.7905982905982906
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7342857142857143
  - 0.709
  - 0.7161531279178337
  - 0.7281818181818182
  - 0.6837606837606837
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8293650793650795
  - 0.8083333333333332
  - 0.8174603174603176
  - 0.8181818181818182
  - 0.7905982905982906
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8293650793650794
  - 0.8083333333333333
  - 0.8174603174603174
  - 0.8181818181818182
  - 0.7905982905982906
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8293650793650796
  - 0.8083333333333333
  - 0.8174603174603176
  - 0.8181818181818183
  - 0.7905982905982906
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7342857142857143
  - 0.709
  - 0.7161531279178337
  - 0.7281818181818182
  - 0.6837606837606837
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9745678295684747
  - 0.9880647911338448
  - 0.9797476397966594
  - 0.9398732591134552
  - 0.930536191749427
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9782178217821783
  - 0.990842105263158
  - 0.9833187006145742
  - 0.954859813084112
  - 0.9589628201007179
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9636904761904762
  - 0.9800000000000001
  - 0.980952380952381
  - 0.9481060606060606
  - 0.9602564102564103
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9595669590643275
  - 0.9756521739130435
  - 0.9584967320261438
  - 0.9444215644215644
  - 0.9400989941431118
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9549933225309442
  - 0.9535056203577678
  - 0.930084437373087
  - 0.9492639557406729
  - 0.9644731614492442
  train_average_precision_macro_oob:
  - 0.9269472882195148
  - 0.9284166523675177
  - 0.9016897957653435
  - 0.9153158569945584
  - 0.9375935160616881
  train_average_precision_micro:
  - 0.9614331041793245
  - 0.9470092582160347
  - 0.9384784794125776
  - 0.9400074816157922
  - 0.950708772490265
  train_average_precision_micro_oob:
  - 0.936799882393909
  - 0.9122211419287557
  - 0.8957985526760668
  - 0.8866119329653877
  - 0.9131123261604996
  train_average_precision_samples:
  - 0.96010101010101
  - 0.9710578842315368
  - 0.9712121212121212
  - 0.9683026584867075
  - 0.969642857142857
  train_average_precision_samples_oob:
  - 0.9489898989898988
  - 0.9567864271457084
  - 0.9409427609427607
  - 0.941922290388548
  - 0.9512896825396825
  train_average_precision_weighted:
  - 0.9617790240379701
  - 0.9537577269162287
  - 0.939988459376968
  - 0.9478910858680045
  - 0.9606588776213234
  train_average_precision_weighted_oob:
  - 0.9387538323232452
  - 0.9277003590036946
  - 0.9048717567683747
  - 0.9046798115650204
  - 0.9275949846015241
  train_f1_macro:
  - 0.8393939393939394
  - 0.8303393213572855
  - 0.8343434343434343
  - 0.8179959100204498
  - 0.8353174603174603
  train_f1_macro_oob:
  - 0.8222222222222223
  - 0.8153692614770459
  - 0.8121212121212121
  - 0.8057259713701431
  - 0.8154761904761906
  train_f1_micro:
  - 0.8393939393939394
  - 0.8303393213572854
  - 0.8343434343434344
  - 0.8179959100204499
  - 0.8353174603174603
  train_f1_micro_oob:
  - 0.8222222222222222
  - 0.8153692614770459
  - 0.8121212121212121
  - 0.8057259713701431
  - 0.8154761904761905
  train_f1_samples:
  - 0.8393939393939394
  - 0.8303393213572852
  - 0.8343434343434343
  - 0.8179959100204498
  - 0.8353174603174603
  train_f1_samples_oob:
  - 0.8222222222222223
  - 0.8153692614770457
  - 0.8121212121212121
  - 0.805725971370143
  - 0.8154761904761905
  train_f1_weighted:
  - 0.7688868886888689
  - 0.7487994308412876
  - 0.7595658073270014
  - 0.7236834112859138
  - 0.7563965884861407
  train_f1_weighted_oob:
  - 0.7365136513651364
  - 0.7186518053002904
  - 0.7144580129654756
  - 0.6985968535503858
  - 0.7156479507225776
  train_jaccard_macro:
  - 0.7347634570672974
  - 0.7243301426112961
  - 0.7283505471358532
  - 0.7101560517305038
  - 0.7308767694387703
  train_jaccard_macro_oob:
  - 0.7143327594764323
  - 0.7075863791695545
  - 0.7033252051494324
  - 0.6969640170607617
  - 0.7087349142935887
  train_jaccard_micro:
  - 0.7232375979112271
  - 0.7098976109215017
  - 0.7157712305025996
  - 0.6920415224913494
  - 0.717206132879046
  train_jaccard_micro_oob:
  - 0.6981132075471698
  - 0.6882898062342039
  - 0.6836734693877551
  - 0.6746575342465754
  - 0.6884422110552764
  train_jaccard_samples:
  - 0.7373737373737375
  - 0.718848018249216
  - 0.7269841269841271
  - 0.7026000584282792
  - 0.7280328798185941
  train_jaccard_samples_oob:
  - 0.7103896103896105
  - 0.6961790704305675
  - 0.6926406926406927
  - 0.6837569383581654
  - 0.6982709750566894
  train_jaccard_weighted:
  - 0.6330378771662678
  - 0.6084948220122985
  - 0.6214804396488336
  - 0.5802202207038141
  - 0.6181501443907558
  train_jaccard_weighted_oob:
  - 0.5952920465016335
  - 0.5747740486368998
  - 0.5706997168089645
  - 0.5532603055606624
  - 0.5727280581833675
  train_label_ranking_average_precision_score:
  - 0.9601010101010099
  - 0.9710578842315367
  - 0.9712121212121212
  - 0.9683026584867076
  - 0.9696428571428571
  train_label_ranking_average_precision_score_oob:
  - 0.9489898989898988
  - 0.9567864271457086
  - 0.9409427609427607
  - 0.941922290388548
  - 0.9512896825396825
  train_matthews_corrcoef_macro:
  - 0.19165255301047254
  - 0.130144202669759
  - 0.14148844394868998
  - 0.10915597655797883
  - 0.13680219545760622
  train_matthews_corrcoef_macro_oob:
  - 0.111885928223856
  - 0.09036129696534596
  - 0.08325802176176635
  - 0.07219166593264632
  - 0.07686100185346349
  train_matthews_corrcoef_micro:
  - 0.42086873278987347
  - 0.3614584906760113
  - 0.3903865842639756
  - 0.3108755806215947
  - 0.38002865156725507
  train_matthews_corrcoef_micro_oob:
  - 0.321841193851628
  - 0.261442178820215
  - 0.24255435355228544
  - 0.2149371698028294
  - 0.2431552409284553
  train_matthews_corrcoef_samples:
  - 0.23943550213193557
  - 0.1618962873048148
  - 0.19638923907800238
  - 0.1314551455474585
  - 0.18645568643057595
  train_matthews_corrcoef_samples_oob:
  - 0.15128653127374778
  - 0.08748198356687628
  - 0.0846198646070811
  - 0.0678828899636034
  - 0.0918598543573433
  train_matthews_corrcoef_weighted:
  - 0.33590496147238197
  - 0.26469071344217343
  - 0.2869546482286384
  - 0.22323233229109657
  - 0.2789290630645607
  train_matthews_corrcoef_weighted_oob:
  - 0.22512059181012906
  - 0.18469235256290475
  - 0.16859620126205022
  - 0.14762296957787832
  - 0.15529801468408655
  train_ndgc:
  - 0.9716763958703596
  - 0.979416308081912
  - 0.979861807704745
  - 0.9774540276128955
  - 0.9788045144559193
  train_ndgc_oob:
  - 0.9639960372205
  - 0.9690814644376605
  - 0.958309154528093
  - 0.9585453630157139
  - 0.9657185280329275
  train_neg_coverage_error:
  - -1.3454545454545455
  - -1.281437125748503
  - -1.3272727272727274
  - -1.3374233128834356
  - -1.3273809523809523
  train_neg_coverage_error_oob:
  - -1.387878787878788
  - -1.3353293413173652
  - -1.406060606060606
  - -1.4233128834355828
  - -1.375
  train_neg_hamming_loss_macro:
  - -0.1606060606060606
  - -0.16966067864271459
  - -0.16565656565656564
  - -0.18200408997955012
  - -0.16468253968253968
  train_neg_hamming_loss_macro_oob:
  - -0.17777777777777778
  - -0.1846307385229541
  - -0.18787878787878787
  - -0.19427402862985688
  - -0.18452380952380953
  train_neg_hamming_loss_micro:
  - -0.1606060606060606
  - -0.16966067864271456
  - -0.16565656565656567
  - -0.18200408997955012
  - -0.16468253968253968
  train_neg_hamming_loss_micro_oob:
  - -0.17777777777777778
  - -0.18463073852295409
  - -0.18787878787878787
  - -0.19427402862985685
  - -0.18452380952380953
  train_neg_hamming_loss_samples:
  - -0.1606060606060606
  - -0.16966067864271453
  - -0.16565656565656567
  - -0.1820040899795501
  - -0.16468253968253968
  train_neg_hamming_loss_samples_oob:
  - -0.17777777777777778
  - -0.18463073852295406
  - -0.18787878787878787
  - -0.19427402862985685
  - -0.18452380952380953
  train_neg_hamming_loss_weighted:
  - -0.23111311131113113
  - -0.2512005691587123
  - -0.24043419267299865
  - -0.2763165887140861
  - -0.24360341151385928
  train_neg_hamming_loss_weighted_oob:
  - -0.2634863486348635
  - -0.28134819469970945
  - -0.2855419870345244
  - -0.30140314644961425
  - -0.2843520492774224
  train_neg_label_ranking_loss:
  - -0.02227272727272727
  - -0.013622754491017963
  - -0.019309764309764308
  - -0.017859577368779824
  - -0.022172619047619045
  train_neg_label_ranking_loss_oob:
  - -0.028855218855218856
  - -0.023353293413173656
  - -0.034444444444444444
  - -0.033503749147920925
  - -0.030803571428571427
  train_precision_macro:
  - 0.8393939393939394
  - 0.8303393213572855
  - 0.8343434343434343
  - 0.8179959100204498
  - 0.8353174603174603
  train_precision_macro_oob:
  - 0.8222222222222223
  - 0.8153692614770459
  - 0.8121212121212121
  - 0.8057259713701431
  - 0.8154761904761906
  train_precision_micro:
  - 0.8393939393939394
  - 0.8303393213572854
  - 0.8343434343434344
  - 0.8179959100204499
  - 0.8353174603174603
  train_precision_micro_oob:
  - 0.8222222222222222
  - 0.8153692614770459
  - 0.8121212121212121
  - 0.8057259713701431
  - 0.8154761904761905
  train_precision_samples:
  - 0.8393939393939394
  - 0.8303393213572852
  - 0.8343434343434343
  - 0.8179959100204498
  - 0.8353174603174603
  train_precision_samples_oob:
  - 0.8222222222222223
  - 0.8153692614770457
  - 0.8121212121212121
  - 0.805725971370143
  - 0.8154761904761905
  train_precision_weighted:
  - 0.7688868886888689
  - 0.7487994308412876
  - 0.7595658073270014
  - 0.7236834112859138
  - 0.7563965884861407
  train_precision_weighted_oob:
  - 0.7365136513651364
  - 0.7186518053002904
  - 0.7144580129654756
  - 0.6985968535503858
  - 0.7156479507225776
  train_recall_macro:
  - 0.8393939393939394
  - 0.8303393213572855
  - 0.8343434343434343
  - 0.8179959100204498
  - 0.8353174603174603
  train_recall_macro_oob:
  - 0.8222222222222223
  - 0.8153692614770459
  - 0.8121212121212121
  - 0.8057259713701431
  - 0.8154761904761906
  train_recall_micro:
  - 0.8393939393939394
  - 0.8303393213572854
  - 0.8343434343434344
  - 0.8179959100204499
  - 0.8353174603174603
  train_recall_micro_oob:
  - 0.8222222222222222
  - 0.8153692614770459
  - 0.8121212121212121
  - 0.8057259713701431
  - 0.8154761904761905
  train_recall_samples:
  - 0.8393939393939394
  - 0.8303393213572852
  - 0.8343434343434343
  - 0.8179959100204498
  - 0.8353174603174603
  train_recall_samples_oob:
  - 0.8222222222222223
  - 0.8153692614770457
  - 0.8121212121212121
  - 0.805725971370143
  - 0.8154761904761905
  train_recall_weighted:
  - 0.7688868886888689
  - 0.7487994308412876
  - 0.7595658073270014
  - 0.7236834112859138
  - 0.7563965884861407
  train_recall_weighted_oob:
  - 0.7365136513651364
  - 0.7186518053002904
  - 0.7144580129654756
  - 0.6985968535503858
  - 0.7156479507225776
  train_roc_auc_macro:
  - 0.980966027090464
  - 0.9809870952810176
  - 0.9681172634425881
  - 0.9756418362812561
  - 0.9846950484526391
  train_roc_auc_macro_oob:
  - 0.972960837639904
  - 0.9727689823520168
  - 0.9590002226989568
  - 0.9630885604003997
  - 0.9783499843790461
  train_roc_auc_micro:
  - 0.9857421973161783
  - 0.9847741336633663
  - 0.9777664276841396
  - 0.9831070735939572
  - 0.9850129772451252
  train_roc_auc_micro_oob:
  - 0.9794692667236267
  - 0.9767326732673267
  - 0.9681062368764543
  - 0.9718217311421864
  - 0.9769923616120143
  train_roc_auc_samples:
  - 0.9777272727272727
  - 0.986377245508982
  - 0.9806902356902356
  - 0.9821404226312203
  - 0.9778273809523809
  train_roc_auc_samples_oob:
  - 0.9711447811447813
  - 0.9766467065868265
  - 0.9655555555555555
  - 0.9664962508520791
  - 0.9691964285714285
  train_roc_auc_weighted:
  - 0.9803425666558158
  - 0.9771566023483913
  - 0.9698324797856122
  - 0.9727251810310181
  - 0.979803119549919
  train_roc_auc_weighted_oob:
  - 0.972637604887821
  - 0.9661301023839767
  - 0.9548904467367441
  - 0.954987605761234
  - 0.9713268809284044
start: 2023-12-21 08:33:31.405739
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
