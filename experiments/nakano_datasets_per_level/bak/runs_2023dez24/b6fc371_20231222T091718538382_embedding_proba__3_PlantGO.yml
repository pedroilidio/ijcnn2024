active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2T9AMzMzMzPjv0AzMzMzM+O/gJmZmZmZ2T+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP5iZmZmZmem/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjvzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AGZmZmZm9r+AZmZmZmYaQICZmZmZmR3AAGZmZmZm9r8AzczMzMwMQA==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 09:18:02.072125
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 3
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__3
  params: {}
hash: b6fc371e46d71db466d8000ab28afa02c348895784c6b58b421107072a8ab2b4
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/b6fc371_20231222T091718538382_embedding_proba__3_PlantGO.yml
results:
  fit_time:
  - 14.535090446472168
  - 16.90966558456421
  - 17.16226601600647
  - 17.73306131362915
  - 17.76222252845764
  score_time:
  - 5.124548435211182
  - 5.162025213241577
  - 5.516705274581909
  - 5.416191101074219
  - 5.225216865539551
  test_average_precision_macro:
  - 0.7638341979544525
  - 0.7689235549313409
  - 0.7129320728752707
  - 0.7914281999102627
  - 0.7584249899435801
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7654945980592337
  - 0.8401001288606035
  - 0.8042308123927978
  - 0.8416799616921216
  - 0.8126783795594548
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8785673998871967
  - 0.8914462081128749
  - 0.8707365704902651
  - 0.886604624929498
  - 0.8842447916666667
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7939391713017036
  - 0.8658687809132448
  - 0.8153824167810659
  - 0.8525630029834482
  - 0.8272253722762682
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9111675126903553
  - 0.9100529100529101
  - 0.9170771756978655
  - 0.9141285956006769
  - 0.9105902777777776
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9111675126903553
  - 0.91005291005291
  - 0.9170771756978654
  - 0.9141285956006768
  - 0.9105902777777778
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9111675126903553
  - 0.91005291005291
  - 0.9170771756978653
  - 0.9141285956006767
  - 0.9105902777777777
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8373709914114562
  - 0.8349758018004463
  - 0.8514998034182103
  - 0.8439868164649843
  - 0.8331339712918658
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8461763012623013
  - 0.844274485402828
  - 0.8545812515108899
  - 0.8503242359557509
  - 0.8456652110996835
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8368298368298368
  - 0.8349514563106796
  - 0.8468536770280516
  - 0.8418387222438645
  - 0.8358565737051793
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8378981424666702
  - 0.8365951508808649
  - 0.8482109023980943
  - 0.8431193172309922
  - 0.8372023809523809
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7307892704686451
  - 0.7261159578501724
  - 0.7499254989319449
  - 0.7392561982396009
  - 0.7245282062054991
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.878567399887197
  - 0.8914462081128749
  - 0.8707365704902652
  - 0.886604624929498
  - 0.8842447916666666
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.009950412593386136
  - 0.024561434670874977
  - 0.05371675412205821
  - 0.05476167320065529
  - 0.025855622624891272
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.09216295929837427
  - 0.17372993494741237
  - 0.21713541885468227
  - 0.18613932629036586
  - 0.11985986268412946
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.018920166128287955
  - 0.037037037037037035
  - 0.06314375279892522
  - 0.04060913705583756
  - 0.02509469696969697
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.03225631380983942
  - 0.0810178129427914
  - 0.12412632130396262
  - 0.1265781176420085
  - 0.06410477361523971
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.910402549620755
  - 0.9198514703065498
  - 0.9044127072304581
  - 0.9165107628180117
  - 0.9147756667836419
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.5228426395939085
  - -1.5238095238095237
  - -1.4926108374384237
  - -1.4568527918781726
  - -1.53125
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08883248730964466
  - -0.08994708994708994
  - -0.08292282430213466
  - -0.08587140439932318
  - -0.08940972222222222
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08883248730964467
  - -0.08994708994708994
  - -0.08292282430213464
  - -0.08587140439932318
  - -0.08940972222222222
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08883248730964467
  - -0.08994708994708994
  - -0.08292282430213466
  - -0.08587140439932321
  - -0.08940972222222221
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.16262900858854384
  - -0.16502419819955363
  - -0.14850019658178962
  - -0.15601318353501578
  - -0.166866028708134
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.03751730502999538
  - -0.03407621185398964
  - -0.038334079713390055
  - -0.03308721735117674
  - -0.03657758136924804
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9111675126903553
  - 0.9100529100529101
  - 0.9170771756978655
  - 0.9141285956006769
  - 0.9105902777777776
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9111675126903553
  - 0.91005291005291
  - 0.9170771756978654
  - 0.9141285956006768
  - 0.9105902777777778
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9111675126903553
  - 0.91005291005291
  - 0.9170771756978653
  - 0.9141285956006767
  - 0.9105902777777777
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8373709914114562
  - 0.8349758018004463
  - 0.8514998034182103
  - 0.8439868164649843
  - 0.8331339712918658
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9111675126903553
  - 0.9100529100529101
  - 0.9170771756978655
  - 0.9141285956006769
  - 0.9105902777777776
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9111675126903553
  - 0.91005291005291
  - 0.9170771756978654
  - 0.9141285956006768
  - 0.9105902777777778
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9111675126903553
  - 0.91005291005291
  - 0.9170771756978653
  - 0.9141285956006767
  - 0.9105902777777777
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8373709914114562
  - 0.8349758018004463
  - 0.8514998034182103
  - 0.8439868164649843
  - 0.8331339712918658
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9611206222487086
  - 0.9678028006591671
  - 0.9695473467135919
  - 0.9712124927798024
  - 0.9697221775587046
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9673485470510672
  - 0.9744393781953657
  - 0.9712259159998227
  - 0.9754822434473666
  - 0.9730504390722957
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9624826949700045
  - 0.9659237881460103
  - 0.9616659202866099
  - 0.9669127826488233
  - 0.9634224186307518
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9600564948791751
  - 0.9724775832622597
  - 0.9668007796498012
  - 0.9734663431830549
  - 0.9723226632935412
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8773225112105741
  - 0.8718991748020719
  - 0.889486931782364
  - 0.8727106057927133
  - 0.8656834637546584
  train_average_precision_macro_oob:
  - 0.76682034963001
  - 0.7519658128107239
  - 0.7877828476200895
  - 0.765926482484534
  - 0.7750940470041295
  train_average_precision_micro:
  - 0.911891563282998
  - 0.9104977204489086
  - 0.9172410623932533
  - 0.9164402683110408
  - 0.9088816575706589
  train_average_precision_micro_oob:
  - 0.8397662504705965
  - 0.8442381413899732
  - 0.8532773617161644
  - 0.8359054378561898
  - 0.8476031333880073
  train_average_precision_samples:
  - 0.9314193240249579
  - 0.9254149314985818
  - 0.9264255457803846
  - 0.9282701258053372
  - 0.9284548502105755
  train_average_precision_samples_oob:
  - 0.8905997047482322
  - 0.8951732150401351
  - 0.8914839175161755
  - 0.8987206064670854
  - 0.9003968253968252
  train_average_precision_weighted:
  - 0.9198399247085673
  - 0.9149620888216304
  - 0.9274495913103913
  - 0.9209838355987969
  - 0.9151168588451869
  train_average_precision_weighted_oob:
  - 0.8521021689410773
  - 0.8410903580093616
  - 0.8613869018500032
  - 0.8490650697945882
  - 0.8565387567732744
  train_f1_macro:
  - 0.9220017072129748
  - 0.9271229404309252
  - 0.926021505376344
  - 0.9230687153222364
  - 0.9239821882951654
  train_f1_macro_oob:
  - 0.9107981220657276
  - 0.9166666666666666
  - 0.9143010752688171
  - 0.9110115236875801
  - 0.9128498727735369
  train_f1_micro:
  - 0.9220017072129748
  - 0.9271229404309252
  - 0.9260215053763441
  - 0.9230687153222364
  - 0.9239821882951654
  train_f1_micro_oob:
  - 0.9107981220657277
  - 0.9166666666666666
  - 0.9143010752688172
  - 0.91101152368758
  - 0.9128498727735369
  train_f1_samples:
  - 0.9220017072129747
  - 0.9271229404309252
  - 0.9260215053763441
  - 0.9230687153222364
  - 0.9239821882951654
  train_f1_samples_oob:
  - 0.9107981220657276
  - 0.9166666666666665
  - 0.9143010752688171
  - 0.91101152368758
  - 0.9128498727735368
  train_f1_weighted:
  - 0.8642856709407674
  - 0.8778209263630848
  - 0.8756708298214697
  - 0.8659256270063294
  - 0.8687883108055269
  train_f1_weighted_oob:
  - 0.8351745544356184
  - 0.8520113647967612
  - 0.8463964447168799
  - 0.835308056872038
  - 0.8411774613658648
  train_jaccard_macro:
  - 0.8613134181293921
  - 0.8687867886197806
  - 0.8670604396290907
  - 0.8629935976385245
  - 0.8643750296970755
  train_jaccard_macro_oob:
  - 0.8457796272461691
  - 0.8536128743752358
  - 0.8501727747180944
  - 0.846161122222382
  - 0.8485011759414393
  train_jaccard_micro:
  - 0.8552905077699693
  - 0.8641464855286474
  - 0.8622346816179415
  - 0.8571287030615278
  - 0.8587052911616908
  train_jaccard_micro_oob:
  - 0.8362068965517241
  - 0.8461538461538461
  - 0.8421313261364762
  - 0.8365667254556144
  - 0.839672322995904
  train_jaccard_samples:
  - 0.8576747196465506
  - 0.8669786487276981
  - 0.8653356965615028
  - 0.859509504579927
  - 0.8612141039621956
  train_jaccard_samples_oob:
  - 0.8372163048219385
  - 0.8478140364071922
  - 0.8438397731300957
  - 0.8377003278411728
  - 0.8408299080054805
  train_jaccard_weighted:
  - 0.7669201783933581
  - 0.7865398427451495
  - 0.7831366198100881
  - 0.7696670322493432
  - 0.7736361149857632
  train_jaccard_weighted_oob:
  - 0.7274719631251672
  - 0.749630803413874
  - 0.7415871888210898
  - 0.7279850938525324
  - 0.7353698609721906
  train_label_ranking_average_precision_score:
  - 0.9314193240249585
  - 0.9254149314985818
  - 0.9264255457803846
  - 0.9282701258053373
  - 0.9284548502105757
  train_label_ranking_average_precision_score_oob:
  - 0.890599704748233
  - 0.8951732150401356
  - 0.8914839175161762
  - 0.8987206064670856
  - 0.900396825396826
  train_matthews_corrcoef_macro:
  - 0.12094889374741809
  - 0.14328668892193758
  - 0.1406816362682436
  - 0.13077005967863997
  - 0.1558948277064682
  train_matthews_corrcoef_macro_oob:
  - 0.01842073870179494
  - 0.0657701155127271
  - 0.04501965303908257
  - 0.033014228457008264
  - 0.05973247885092717
  train_matthews_corrcoef_micro:
  - 0.35116364820653395
  - 0.41082490872783656
  - 0.41086448326800074
  - 0.36657052247241356
  - 0.37514019966293105
  train_matthews_corrcoef_micro_oob:
  - 0.09296968288895462
  - 0.2435099146527184
  - 0.22012834448232138
  - 0.10797681548871381
  - 0.16041539361493642
  train_matthews_corrcoef_samples:
  - 0.1421833536168751
  - 0.1950971996153113
  - 0.1993741693781094
  - 0.15331882026201335
  - 0.16163511345391787
  train_matthews_corrcoef_samples_oob:
  - 0.012571295541846118
  - 0.07316511118792489
  - 0.06158357771260997
  - 0.019788150389942964
  - 0.03127645136330045
  train_matthews_corrcoef_weighted:
  - 0.2755151583091701
  - 0.3262635835940855
  - 0.32392861348582724
  - 0.291625239750742
  - 0.2980041421248557
  train_matthews_corrcoef_weighted_oob:
  - 0.04942642241537467
  - 0.15953966963226002
  - 0.12255714711343531
  - 0.07011184762578718
  - 0.10648786777007253
  train_ndgc:
  - 0.9493853334322446
  - 0.9450722331599826
  - 0.9455884077651016
  - 0.9472146833326642
  - 0.9475316906249143
  train_ndgc_oob:
  - 0.9190372262234471
  - 0.9228121849643335
  - 0.9198684164723252
  - 0.9254409091735439
  - 0.9264458665481982
  train_neg_coverage_error:
  - -1.3175416133162612
  - -1.332065906210393
  - -1.3406451612903225
  - -1.3316261203585147
  - -1.3447837150127226
  train_neg_coverage_error_oob:
  - -1.496798975672215
  - -1.456273764258555
  - -1.4696774193548388
  - -1.4596670934699103
  - -1.4720101781170483
  train_neg_hamming_loss_macro:
  - -0.07799829278702518
  - -0.0728770595690748
  - -0.07397849462365592
  - -0.07693128467776356
  - -0.07601781170483461
  train_neg_hamming_loss_macro_oob:
  - -0.08920187793427231
  - -0.08333333333333333
  - -0.0856989247311828
  - -0.08898847631241998
  - -0.08715012722646309
  train_neg_hamming_loss_micro:
  - -0.07799829278702518
  - -0.07287705956907478
  - -0.07397849462365591
  - -0.07693128467776356
  - -0.07601781170483461
  train_neg_hamming_loss_micro_oob:
  - -0.0892018779342723
  - -0.08333333333333333
  - -0.08569892473118279
  - -0.08898847631241998
  - -0.0871501272264631
  train_neg_hamming_loss_samples:
  - -0.07799829278702519
  - -0.07287705956907478
  - -0.07397849462365591
  - -0.07693128467776356
  - -0.07601781170483461
  train_neg_hamming_loss_samples_oob:
  - -0.08920187793427228
  - -0.08333333333333333
  - -0.0856989247311828
  - -0.08898847631241998
  - -0.0871501272264631
  train_neg_hamming_loss_weighted:
  - -0.1357143290592326
  - -0.12217907363691517
  - -0.12432917017853039
  - -0.13407437299367075
  - -0.13121168919447299
  train_neg_hamming_loss_weighted_oob:
  - -0.16482544556438153
  - -0.14798863520323885
  - -0.15360355528312003
  - -0.16469194312796206
  - -0.1588225386341352
  train_neg_label_ranking_loss:
  - -0.02023629379583285
  - -0.022082890587326584
  - -0.02177147822309113
  - -0.021335635484163014
  - -0.022287977313422604
  train_neg_label_ranking_loss_oob:
  - -0.035639579749694984
  - -0.032098978803668285
  - -0.03264146844792006
  - -0.031781968209625054
  - -0.03350039838589457
  train_precision_macro:
  - 0.9220017072129748
  - 0.9271229404309252
  - 0.926021505376344
  - 0.9230687153222364
  - 0.9239821882951654
  train_precision_macro_oob:
  - 0.9107981220657276
  - 0.9166666666666666
  - 0.9143010752688171
  - 0.9110115236875801
  - 0.9128498727735369
  train_precision_micro:
  - 0.9220017072129748
  - 0.9271229404309252
  - 0.9260215053763441
  - 0.9230687153222364
  - 0.9239821882951654
  train_precision_micro_oob:
  - 0.9107981220657277
  - 0.9166666666666666
  - 0.9143010752688172
  - 0.91101152368758
  - 0.9128498727735369
  train_precision_samples:
  - 0.9220017072129747
  - 0.9271229404309252
  - 0.9260215053763441
  - 0.9230687153222364
  - 0.9239821882951654
  train_precision_samples_oob:
  - 0.9107981220657276
  - 0.9166666666666665
  - 0.9143010752688171
  - 0.91101152368758
  - 0.9128498727735368
  train_precision_weighted:
  - 0.8642856709407674
  - 0.8778209263630848
  - 0.8756708298214697
  - 0.8659256270063294
  - 0.8687883108055269
  train_precision_weighted_oob:
  - 0.8351745544356184
  - 0.8520113647967612
  - 0.8463964447168799
  - 0.835308056872038
  - 0.8411774613658648
  train_recall_macro:
  - 0.9220017072129748
  - 0.9271229404309252
  - 0.926021505376344
  - 0.9230687153222364
  - 0.9239821882951654
  train_recall_macro_oob:
  - 0.9107981220657276
  - 0.9166666666666666
  - 0.9143010752688171
  - 0.9110115236875801
  - 0.9128498727735369
  train_recall_micro:
  - 0.9220017072129748
  - 0.9271229404309252
  - 0.9260215053763441
  - 0.9230687153222364
  - 0.9239821882951654
  train_recall_micro_oob:
  - 0.9107981220657277
  - 0.9166666666666666
  - 0.9143010752688172
  - 0.91101152368758
  - 0.9128498727735369
  train_recall_samples:
  - 0.9220017072129747
  - 0.9271229404309252
  - 0.9260215053763441
  - 0.9230687153222364
  - 0.9239821882951654
  train_recall_samples_oob:
  - 0.9107981220657276
  - 0.9166666666666665
  - 0.9143010752688171
  - 0.91101152368758
  - 0.9128498727735368
  train_recall_weighted:
  - 0.8642856709407674
  - 0.8778209263630848
  - 0.8756708298214697
  - 0.8659256270063294
  - 0.8687883108055269
  train_recall_weighted_oob:
  - 0.8351745544356184
  - 0.8520113647967612
  - 0.8463964447168799
  - 0.835308056872038
  - 0.8411774613658648
  train_roc_auc_macro:
  - 0.9835791336814849
  - 0.9834866087790788
  - 0.9844121172130209
  - 0.9857852686002198
  - 0.9807533521952639
  train_roc_auc_macro_oob:
  - 0.9718707557574272
  - 0.9741708082547754
  - 0.9752939408494781
  - 0.9737647208906056
  - 0.9671395274187944
  train_roc_auc_micro:
  - 0.9847954160479446
  - 0.9849924216778483
  - 0.985180792727963
  - 0.9860936902581293
  - 0.9827792948992229
  train_roc_auc_micro_oob:
  - 0.9741273240977033
  - 0.9757676417184711
  - 0.9757236960720823
  - 0.9744225600864285
  - 0.9726009519042214
  train_roc_auc_samples:
  - 0.9797637062041671
  - 0.9779171094126734
  - 0.9782285217769089
  - 0.9786643645158369
  - 0.9777120226865773
  train_roc_auc_samples_oob:
  - 0.9643604202503051
  - 0.9679010211963317
  - 0.9673585315520798
  - 0.9682180317903749
  - 0.9664996016141053
  train_roc_auc_weighted:
  - 0.9833444441542775
  - 0.9831586019507687
  - 0.9850094306846982
  - 0.9854770916871709
  - 0.9819509989981329
  train_roc_auc_weighted_oob:
  - 0.9738480927590564
  - 0.9741939446524915
  - 0.97704825025617
  - 0.9745977484583773
  - 0.9716401954945404
start: 2023-12-22 09:17:18.538382
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
