active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz479AMzMzMzPjv4CZmZmZmdk/gJmZmZmZ2T+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz478wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AM3MzMzMBEAANDMzMzPjPwA0MzMzM+M/ADMzMzMzA8AAZmZmZmb2vw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 09:48:06.381071
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.SequentialLevel
            params:
              last_level: null
              memory: null
              steps:
              - - alternating_forests
                - call: deep_forest.cascade.AlternatingLevel
                  params:
                    last_level: null
                    n_jobs: null
                    sparse_threshold: 0.3
                    transformer_weights: null
                    transformers:
                    - - xt_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - xt
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.ExtraTreesRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.8
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    - - rf_embedder
                      - call: sklearn.pipeline.Pipeline
                        params:
                          memory: null
                          steps:
                          - - rf
                            - call: deep_forest.tree_embedder.ForestEmbedder
                              params:
                                estimator:
                                  call: sklearn.ensemble._forest.RandomForestRegressor
                                  params:
                                    bootstrap: true
                                    ccp_alpha: 0.0
                                    criterion: squared_error
                                    max_depth: null
                                    max_features: sqrt
                                    max_leaf_nodes: null
                                    max_samples: 0.5
                                    min_impurity_decrease: 0.0
                                    min_samples_leaf: 5
                                    min_samples_split: 2
                                    min_weight_fraction_leaf: 0.0
                                    monotonic_cst: null
                                    n_estimators: 150
                                    n_jobs: 14
                                    oob_score: false
                                    random_state: 0
                                    verbose: true
                                    warm_start: false
                                max_node_size: 0.95
                                max_pvalue: 1.0
                                method: path
                                node_weights: log_node_size
                          - - densifier
                            - call: nakano_datasets_v2.estimators.Densifier
                              params: {}
                          - - pca
                            - call: sklearn.decomposition._pca.PCA
                              params:
                                copy: true
                                iterated_power: auto
                                n_components: 0.8
                                n_oversamples: 10
                                power_iteration_normalizer: auto
                                random_state: 0
                                svd_solver: auto
                                tol: 0.0
                                whiten: false
                          verbose: false
                    verbose: false
                    verbose_feature_names_out: true
              - - weak_label_imputer
                - call: deep_forest.weak_labels.SCARImputer
                  params:
                    estimator:
                      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                      params:
                        estimators:
                        - - rf
                          - call: sklearn.ensemble._forest.RandomForestClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                        - - xt
                          - call: sklearn.ensemble._forest.ExtraTreesClassifier
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              class_weight: null
                              criterion: gini
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: true
                              random_state: 0
                              verbose: true
                              warm_start: false
                    last_level: null
                    threshold: 0.05
                    verbose: true
              verbose: false
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_weak__2
  params: {}
hash: 6e842327a2d515996f32fae0df7326310c4ac9604575ea659a5ee92ca3c4c68d
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/6e84232_20231222T094729373926_embedding_weak__2_PlantGO.yml
results:
  fit_time:
  - 12.783589363098145
  - 13.064503908157349
  - 15.638956308364868
  - 13.574602127075195
  - 14.530701160430908
  score_time:
  - 4.009297132492065
  - 3.885305404663086
  - 3.915894031524658
  - 4.039946794509888
  - 3.7149853706359863
  test_average_precision_macro:
  - 0.7372105962137613
  - 0.7263231452647104
  - 0.7724198441617594
  - 0.7458512134194066
  - 0.7772767047612623
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7324255886193792
  - 0.7664412567238124
  - 0.7982989525467091
  - 0.8200581975321433
  - 0.776352954839354
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8377066370589685
  - 0.8354965404965405
  - 0.8674299774299773
  - 0.8750623114259477
  - 0.8418620578519056
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7855813499188757
  - 0.8067497784786538
  - 0.8559497994527618
  - 0.8461353357833951
  - 0.8436683043438229
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9119170984455959
  - 0.9158119658119658
  - 0.9153846153846154
  - 0.9120370370370372
  - 0.9141285956006769
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9119170984455959
  - 0.9158119658119658
  - 0.9153846153846154
  - 0.9120370370370371
  - 0.9141285956006768
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9119170984455957
  - 0.9158119658119657
  - 0.9153846153846154
  - 0.9120370370370371
  - 0.9141285956006767
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.8410323773382958
  - 0.8505738705738705
  - 0.8491086691086691
  - 0.8363395863395864
  - 0.8488411071736423
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8467119245721423
  - 0.8522836874935611
  - 0.8518081667785181
  - 0.8478376355455972
  - 0.8496052226682614
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8380952380952381
  - 0.844698462751281
  - 0.8439716312056738
  - 0.8382978723404255
  - 0.8418387222438645
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8398451289643
  - 0.8462665539588615
  - 0.845680473372781
  - 0.8389388389388388
  - 0.8431416299436602
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.7341340591161739
  - 0.7469979066019333
  - 0.7452400603956826
  - 0.7290325383893865
  - 0.7453147311320047
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8377066370589686
  - 0.8354965404965403
  - 0.8674299774299772
  - 0.8750623114259477
  - 0.8418620578519056
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.028117971385620597
  - 0.03465427771685422
  - 0.05981386253137124
  - 0.009338083851397625
  - 0.02857509441635009
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.19625796534027545
  - 0.23804202650934722
  - 0.22769233260286062
  - 0.06590035768383312
  - 0.19696043829433002
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.046632124352331605
  - 0.06666666666666667
  - 0.0662004662004662
  - 0.005050505050505051
  - 0.04568527918781726
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.09187844171076026
  - 0.11287393313489659
  - 0.1138285035337947
  - 0.03041547311598083
  - 0.09219511594709179
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8795754841555964
  - 0.8776213881361499
  - 0.9017017256427926
  - 0.9059852999647448
  - 0.8824752560313783
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.849740932642487
  - -1.7743589743589743
  - -1.6051282051282052
  - -1.5606060606060606
  - -1.7411167512690355
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.08808290155440414
  - -0.08418803418803418
  - -0.08461538461538463
  - -0.08796296296296297
  - -0.08587140439932317
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.08808290155440414
  - -0.0841880341880342
  - -0.08461538461538462
  - -0.08796296296296297
  - -0.08587140439932318
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.08808290155440414
  - -0.0841880341880342
  - -0.08461538461538462
  - -0.08796296296296299
  - -0.08587140439932318
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.15896762266170422
  - -0.14942612942612943
  - -0.1508913308913309
  - -0.1636604136604137
  - -0.1511588928263576
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.06297168576961323
  - -0.060139860139860134
  - -0.04504877838211171
  - -0.044719926538108364
  - -0.05777572681125981
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9119170984455959
  - 0.9158119658119658
  - 0.9153846153846154
  - 0.9120370370370372
  - 0.9141285956006769
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9119170984455959
  - 0.9158119658119658
  - 0.9153846153846154
  - 0.9120370370370371
  - 0.9141285956006768
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9119170984455957
  - 0.9158119658119657
  - 0.9153846153846154
  - 0.9120370370370371
  - 0.9141285956006767
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.8410323773382958
  - 0.8505738705738705
  - 0.8491086691086691
  - 0.8363395863395864
  - 0.8488411071736423
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9119170984455959
  - 0.9158119658119658
  - 0.9153846153846154
  - 0.9120370370370372
  - 0.9141285956006769
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9119170984455959
  - 0.9158119658119658
  - 0.9153846153846154
  - 0.9120370370370371
  - 0.9141285956006768
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9119170984455957
  - 0.9158119658119657
  - 0.9153846153846154
  - 0.9120370370370371
  - 0.9141285956006767
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.8410323773382958
  - 0.8505738705738705
  - 0.8491086691086691
  - 0.8363395863395864
  - 0.8488411071736423
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9454661115482111
  - 0.9678270756742099
  - 0.9651437222851347
  - 0.9722949003204571
  - 0.9793631192283133
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.945713590466559
  - 0.9554527162977867
  - 0.9627967806841048
  - 0.9688563514048278
  - 0.9607561198007997
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9370283142303868
  - 0.9398601398601399
  - 0.9549512216178884
  - 0.9552800734618916
  - 0.9422242731887402
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9521051285794182
  - 0.9675206020465648
  - 0.9696391802769488
  - 0.9757720608341742
  - 0.9766626444034712
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8639840636561074
  - 0.8573351953952374
  - 0.8626488870167869
  - 0.8646732170840735
  - 0.8506502754225415
  train_average_precision_macro_oob:
  - 0.6880805638282972
  - 0.6773537012635397
  - 0.679091817617527
  - 0.7139498629878244
  - 0.6776872579205607
  train_average_precision_micro:
  - 0.8794422731340811
  - 0.8803728101377702
  - 0.8824729222164728
  - 0.8940632918117666
  - 0.8840605651136377
  train_average_precision_micro_oob:
  - 0.7344622195605447
  - 0.748547572406232
  - 0.7475116220622386
  - 0.7673638761132623
  - 0.7625367641748084
  train_average_precision_samples:
  - 0.9058452128197352
  - 0.9169535161872325
  - 0.9108511220580185
  - 0.9215706053206053
  - 0.9155941618489634
  train_average_precision_samples_oob:
  - 0.8149342836922454
  - 0.831654600189083
  - 0.830306808276157
  - 0.8480016742516742
  - 0.8325353406019218
  train_average_precision_weighted:
  - 0.9077047809844092
  - 0.9034278995147997
  - 0.9054174249321448
  - 0.9120373421032241
  - 0.9080008526810289
  train_average_precision_weighted_oob:
  - 0.7749010855155323
  - 0.775548374982239
  - 0.7787225391881833
  - 0.7987342422248151
  - 0.7986847278238952
  train_f1_macro:
  - 0.9150743099787686
  - 0.9152830991911451
  - 0.9152830991911453
  - 0.912179487179487
  - 0.9158130601792572
  train_f1_macro_oob:
  - 0.9142250530785563
  - 0.9143252447850151
  - 0.9140059599829716
  - 0.9108974358974358
  - 0.9154929577464789
  train_f1_micro:
  - 0.9150743099787686
  - 0.9152830991911451
  - 0.9152830991911451
  - 0.9121794871794872
  - 0.9158130601792573
  train_f1_micro_oob:
  - 0.9142250530785563
  - 0.9143252447850149
  - 0.9140059599829715
  - 0.9108974358974359
  - 0.9154929577464789
  train_f1_samples:
  - 0.9150743099787685
  - 0.9152830991911451
  - 0.9152830991911451
  - 0.9121794871794872
  - 0.9158130601792573
  train_f1_samples_oob:
  - 0.9142250530785561
  - 0.9143252447850149
  - 0.9140059599829714
  - 0.9108974358974359
  - 0.9154929577464789
  train_f1_weighted:
  - 0.8479749459128253
  - 0.8502422030273489
  - 0.8489257672281544
  - 0.8402215141860112
  - 0.8511914797314025
  train_f1_weighted_oob:
  - 0.8461866650528768
  - 0.8472889130714064
  - 0.845969454457518
  - 0.8366317705962676
  - 0.8499854947652051
  train_jaccard_macro:
  - 0.8513644209239347
  - 0.8514010293756509
  - 0.8516484345699853
  - 0.8473956238292856
  - 0.8522047457704961
  train_jaccard_macro_oob:
  - 0.8501281315536487
  - 0.8501273325994859
  - 0.849749423301791
  - 0.8457181537134834
  - 0.8517972330007191
  train_jaccard_micro:
  - 0.8434442270058709
  - 0.8437990580847724
  - 0.8437990580847724
  - 0.8385385975250442
  - 0.844700324771184
  train_jaccard_micro_oob:
  - 0.8420023464998044
  - 0.8421723360454857
  - 0.8416307330458643
  - 0.8363743378457916
  - 0.8441558441558441
  train_jaccard_samples:
  - 0.844860362567369
  - 0.8454352799180385
  - 0.8454408937167556
  - 0.8397689489997181
  - 0.8464465112352435
  train_jaccard_samples_oob:
  - 0.8432925036746692
  - 0.8436669333221057
  - 0.8430830982555119
  - 0.8374020850943927
  - 0.8458555528978063
  train_jaccard_weighted:
  - 0.7440194590391943
  - 0.7466785001251831
  - 0.7449935063289712
  - 0.7339213030497257
  - 0.7477666051742843
  train_jaccard_weighted_oob:
  - 0.7414703400248099
  - 0.7427787305794962
  - 0.7410439183006672
  - 0.7293165325672786
  - 0.7461947880201647
  train_label_ranking_average_precision_score:
  - 0.905845212819735
  - 0.9169535161872325
  - 0.9108511220580192
  - 0.9215706053206056
  - 0.9155941618489633
  train_label_ranking_average_precision_score_oob:
  - 0.814934283692246
  - 0.8316546001890831
  - 0.8303068082761572
  - 0.8480016742516745
  - 0.832535340601922
  train_matthews_corrcoef_macro:
  - 0.04542001909514256
  - 0.039831880184230166
  - 0.060968240455055445
  - 0.03909000178269487
  - 0.03485721393402027
  train_matthews_corrcoef_macro_oob:
  - 0.027437571606809635
  - 0.029819837544716468
  - 0.02836753185047568
  - 0.015460017631839537
  - 0.04034848749120965
  train_matthews_corrcoef_micro:
  - 0.21319537349899637
  - 0.22994087688590212
  - 0.22965869720449106
  - 0.1575521050981075
  - 0.24149348739160567
  train_matthews_corrcoef_micro_oob:
  - 0.1916637903087716
  - 0.20758339979915902
  - 0.1993078667595827
  - 0.10888742669265442
  - 0.23462208744858357
  train_matthews_corrcoef_samples:
  - 0.0546612623045744
  - 0.06374085684430511
  - 0.06490189248809938
  - 0.029487179487179487
  - 0.07147014317308811
  train_matthews_corrcoef_samples_oob:
  - 0.044470179502026634
  - 0.0522466039707419
  - 0.049576221990015094
  - 0.014102564102564103
  - 0.06762891397974626
  train_matthews_corrcoef_weighted:
  - 0.1214622701473226
  - 0.11899600811133448
  - 0.11557451103732559
  - 0.10162228442836149
  - 0.1136270746034255
  train_matthews_corrcoef_weighted_oob:
  - 0.0891558146273529
  - 0.09697622908033236
  - 0.09225322784036352
  - 0.05027707509147343
  - 0.12096483296783847
  train_ndgc:
  - 0.9292675222158236
  - 0.9385164191212653
  - 0.933909637080377
  - 0.9424679184063781
  - 0.9373771150111111
  train_ndgc_oob:
  - 0.86133144808444
  - 0.8747135503357139
  - 0.8735362937740098
  - 0.8870737727185981
  - 0.8748094844501022
  train_neg_coverage_error:
  - -1.4789808917197451
  - -1.4291187739463602
  - -1.434227330779055
  - -1.4141025641025642
  - -1.4673495518565942
  train_neg_coverage_error_oob:
  - -1.913375796178344
  - -1.8199233716475096
  - -1.8403575989782885
  - -1.7397435897435898
  - -1.88348271446863
  train_neg_hamming_loss_macro:
  - -0.08492569002123142
  - -0.08471690080885484
  - -0.08471690080885481
  - -0.08782051282051284
  - -0.08418693982074264
  train_neg_hamming_loss_macro_oob:
  - -0.08577494692144373
  - -0.08567475521498509
  - -0.08599404001702854
  - -0.08910256410256412
  - -0.08450704225352114
  train_neg_hamming_loss_micro:
  - -0.08492569002123142
  - -0.08471690080885483
  - -0.08471690080885483
  - -0.08782051282051281
  - -0.08418693982074264
  train_neg_hamming_loss_micro_oob:
  - -0.08577494692144373
  - -0.0856747552149851
  - -0.08599404001702853
  - -0.0891025641025641
  - -0.08450704225352113
  train_neg_hamming_loss_samples:
  - -0.08492569002123143
  - -0.08471690080885483
  - -0.08471690080885484
  - -0.08782051282051281
  - -0.08418693982074264
  train_neg_hamming_loss_samples_oob:
  - -0.08577494692144373
  - -0.08567475521498512
  - -0.08599404001702854
  - -0.0891025641025641
  - -0.08450704225352113
  train_neg_hamming_loss_weighted:
  - -0.15202505408717493
  - -0.14975779697265107
  - -0.15107423277184553
  - -0.15977848581398876
  - -0.14880852026859748
  train_neg_hamming_loss_weighted_oob:
  - -0.15381333494712318
  - -0.15271108692859356
  - -0.15403054554248194
  - -0.16336822940373233
  - -0.15001450523479495
  train_neg_label_ranking_loss:
  - -0.03611722318728688
  - -0.0295619025504083
  - -0.03067628176185009
  - -0.02687753604420271
  - -0.03265993265993266
  train_neg_label_ranking_loss_oob:
  - -0.07386240322546056
  - -0.06388985641859204
  - -0.06588425764670976
  - -0.05607096607096607
  - -0.06925744857883141
  train_precision_macro:
  - 0.9150743099787686
  - 0.9152830991911451
  - 0.9152830991911453
  - 0.912179487179487
  - 0.9158130601792572
  train_precision_macro_oob:
  - 0.9142250530785563
  - 0.9143252447850151
  - 0.9140059599829716
  - 0.9108974358974358
  - 0.9154929577464789
  train_precision_micro:
  - 0.9150743099787686
  - 0.9152830991911451
  - 0.9152830991911451
  - 0.9121794871794872
  - 0.9158130601792573
  train_precision_micro_oob:
  - 0.9142250530785563
  - 0.9143252447850149
  - 0.9140059599829715
  - 0.9108974358974359
  - 0.9154929577464789
  train_precision_samples:
  - 0.9150743099787685
  - 0.9152830991911451
  - 0.9152830991911451
  - 0.9121794871794872
  - 0.9158130601792573
  train_precision_samples_oob:
  - 0.9142250530785561
  - 0.9143252447850149
  - 0.9140059599829714
  - 0.9108974358974359
  - 0.9154929577464789
  train_precision_weighted:
  - 0.8479749459128253
  - 0.8502422030273489
  - 0.8489257672281544
  - 0.8402215141860112
  - 0.8511914797314025
  train_precision_weighted_oob:
  - 0.8461866650528768
  - 0.8472889130714064
  - 0.845969454457518
  - 0.8366317705962676
  - 0.8499854947652051
  train_recall_macro:
  - 0.9150743099787686
  - 0.9152830991911451
  - 0.9152830991911453
  - 0.912179487179487
  - 0.9158130601792572
  train_recall_macro_oob:
  - 0.9142250530785563
  - 0.9143252447850151
  - 0.9140059599829716
  - 0.9108974358974358
  - 0.9154929577464789
  train_recall_micro:
  - 0.9150743099787686
  - 0.9152830991911451
  - 0.9152830991911451
  - 0.9121794871794872
  - 0.9158130601792573
  train_recall_micro_oob:
  - 0.9142250530785563
  - 0.9143252447850149
  - 0.9140059599829715
  - 0.9108974358974359
  - 0.9154929577464789
  train_recall_samples:
  - 0.9150743099787685
  - 0.9152830991911451
  - 0.9152830991911451
  - 0.9121794871794872
  - 0.9158130601792573
  train_recall_samples_oob:
  - 0.9142250530785561
  - 0.9143252447850149
  - 0.9140059599829714
  - 0.9108974358974359
  - 0.9154929577464789
  train_recall_weighted:
  - 0.8479749459128253
  - 0.8502422030273489
  - 0.8489257672281544
  - 0.8402215141860112
  - 0.8511914797314025
  train_recall_weighted_oob:
  - 0.8461866650528768
  - 0.8472889130714064
  - 0.845969454457518
  - 0.8366317705962676
  - 0.8499854947652051
  train_roc_auc_macro:
  - 0.9823578862065832
  - 0.9802894227447744
  - 0.9797284871563819
  - 0.9793124034942938
  - 0.9722914892196033
  train_roc_auc_macro_oob:
  - 0.957449584657528
  - 0.9512458410346687
  - 0.9537949407576812
  - 0.9560577970372964
  - 0.941353170551686
  train_roc_auc_micro:
  - 0.9753174585153758
  - 0.9773500313814987
  - 0.9772345391625188
  - 0.9782750245824459
  - 0.9726781713411796
  train_roc_auc_micro_oob:
  - 0.9465884943475243
  - 0.9508428025650483
  - 0.9490169321695998
  - 0.9555781478560287
  - 0.9455632983108221
  train_roc_auc_samples:
  - 0.9638827768127132
  - 0.9704380974495918
  - 0.9693237182381498
  - 0.9731224639557974
  - 0.9673400673400675
  train_roc_auc_samples_oob:
  - 0.9261375967745393
  - 0.936110143581408
  - 0.9341157423532903
  - 0.9439290339290339
  - 0.9307425514211686
  train_roc_auc_weighted:
  - 0.9822446120841909
  - 0.9795383519866648
  - 0.9800460395064775
  - 0.9816404561939481
  - 0.9781786270803897
  train_roc_auc_weighted_oob:
  - 0.9588315794519123
  - 0.9563587154172928
  - 0.9573701267429275
  - 0.9603461402865355
  - 0.9579536999656497
start: 2023-12-22 09:47:29.373926
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
