active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMDMCAZmZmZmb2PwCamZmZmdk/QDMzMzMzA0AAMzMzMzPjvw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 10:40:56.610679
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 8
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__8
  params: {}
hash: d5abf2f5b1e5a42f00abdf3325e464dbeb82420866c6cc46640cec07752e28f0
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/d5abf2f_20231221T103329372586_embedding_weak__8_VirusPseAAC.yml
results:
  fit_time:
  - 414.42624068260193
  - 414.7886414527893
  - 426.95650362968445
  - 428.3563199043274
  - 438.29498052597046
  score_time:
  - 3.3486740589141846
  - 3.264721632003784
  - 3.026309013366699
  - 3.2768547534942627
  - 3.0896167755126953
  test_average_precision_macro:
  - 0.4852956517171869
  - 0.4076776208935362
  - 0.3786291585077173
  - 0.35865720600127754
  - 0.496667301083199
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.46951561506073075
  - 0.43244423432149426
  - 0.46729550951564136
  - 0.4868369255288983
  - 0.4763772552350442
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.695925925925926
  - 0.6410416666666666
  - 0.7392276422764228
  - 0.6804843304843304
  - 0.6956349206349207
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.5351444993159756
  - 0.442333753656277
  - 0.45979295981159907
  - 0.4736891820059138
  - 0.4756005839811057
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8074074074074075
  - 0.7958333333333334
  - 0.7967479674796748
  - 0.7905982905982906
  - 0.7857142857142857
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8074074074074075
  - 0.7958333333333333
  - 0.7967479674796748
  - 0.7905982905982906
  - 0.7857142857142857
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.8074074074074076
  - 0.7958333333333334
  - 0.7967479674796747
  - 0.7905982905982906
  - 0.7857142857142857
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7037037037037036
  - 0.6688775510204081
  - 0.6829268292682927
  - 0.6837606837606837
  - 0.6507936507936508
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6998860945571407
  - 0.6890992261233969
  - 0.6874215065661611
  - 0.6772166270581766
  - 0.6791311181832725
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6770186335403726
  - 0.6608996539792388
  - 0.6621621621621622
  - 0.6537102473498233
  - 0.6470588235294118
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.707936507936508
  - 0.6726190476190477
  - 0.6800232288037167
  - 0.6611721611721614
  - 0.660997732426304
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5608271184509915
  - 0.5227793006200965
  - 0.5388615073495567
  - 0.5376509442603044
  - 0.5048878587933429
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.6959259259259258
  - 0.6410416666666666
  - 0.7392276422764227
  - 0.6804843304843304
  - 0.6956349206349205
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.08857567551029848
  - 0.016923773708769595
  - 0.029305043940821392
  - 0.053267785683106285
  - -0.012475532225939475
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3619852339852548
  - 0.13628392289790453
  - 0.1669907889681623
  - 0.18550051742743928
  - 0.10578414683167825
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.36763147756116815
  - 0.06790569415042094
  - 0.11707317073170731
  - 0.07037385106669194
  - 0.06943399442897233
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.17715135102059695
  - 0.034524179531819625
  - 0.059782289639275635
  - 0.10653557136621258
  - -0.027246617911638
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.7739219114164493
  - 0.7327719437341716
  - 0.8057163242331808
  - 0.7648286606722964
  - 0.7726145761273158
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.2444444444444445
  - -2.25
  - -2.1707317073170733
  - -2.358974358974359
  - -2.261904761904762
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.19259259259259257
  - -0.2041666666666667
  - -0.20325203252032523
  - -0.20940170940170943
  - -0.21428571428571427
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.1925925925925926
  - -0.20416666666666666
  - -0.2032520325203252
  - -0.2094017094017094
  - -0.21428571428571427
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.1925925925925926
  - -0.20416666666666666
  - -0.20325203252032517
  - -0.20940170940170938
  - -0.21428571428571427
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.29629629629629634
  - -0.3311224489795918
  - -0.3170731707317074
  - -0.3162393162393162
  - -0.34920634920634913
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.21722222222222218
  - -0.21374999999999997
  - -0.18990514905149053
  - -0.2082621082621083
  - -0.20773809523809522
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.8074074074074075
  - 0.7958333333333334
  - 0.7967479674796748
  - 0.7905982905982906
  - 0.7857142857142857
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8074074074074075
  - 0.7958333333333333
  - 0.7967479674796748
  - 0.7905982905982906
  - 0.7857142857142857
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.8074074074074076
  - 0.7958333333333334
  - 0.7967479674796747
  - 0.7905982905982906
  - 0.7857142857142857
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7037037037037036
  - 0.6688775510204081
  - 0.6829268292682927
  - 0.6837606837606837
  - 0.6507936507936508
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.8074074074074075
  - 0.7958333333333334
  - 0.7967479674796748
  - 0.7905982905982906
  - 0.7857142857142857
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8074074074074075
  - 0.7958333333333333
  - 0.7967479674796748
  - 0.7905982905982906
  - 0.7857142857142857
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.8074074074074076
  - 0.7958333333333334
  - 0.7967479674796747
  - 0.7905982905982906
  - 0.7857142857142857
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7037037037037036
  - 0.6688775510204081
  - 0.6829268292682927
  - 0.6837606837606837
  - 0.6507936507936508
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.6496841997389456
  - 0.6397509931517285
  - 0.645600828689064
  - 0.6272608552020317
  - 0.7060086578491046
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7778673113080848
  - 0.7821348434661823
  - 0.7952040816326531
  - 0.7892424729454623
  - 0.8094820017559263
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.7827777777777777
  - 0.7862499999999999
  - 0.8100948509485095
  - 0.7917378917378918
  - 0.7922619047619047
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6496298134144544
  - 0.5447554313100531
  - 0.6436109791109792
  - 0.6017186973069326
  - 0.646859059413239
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8415124403972009
  - 0.956615941387409
  - 0.9012902900540097
  - 0.973258949661592
  - 0.9269176530709395
  train_average_precision_macro_oob:
  - 0.3745017700469091
  - 0.4018122930592185
  - 0.4486329233365367
  - 0.46028716946163256
  - 0.3827181374472199
  train_average_precision_micro:
  - 0.6693344263406236
  - 0.8923412662427026
  - 0.8870716698631707
  - 0.9111506838137451
  - 0.8393724785144978
  train_average_precision_micro_oob:
  - 0.5099962732803104
  - 0.5848486140612332
  - 0.6246031882647808
  - 0.6522105239079014
  - 0.569100991910899
  train_average_precision_samples:
  - 0.813991769547325
  - 0.8907185628742516
  - 0.895281124497992
  - 0.8953373015873015
  - 0.8752525252525254
  train_average_precision_samples_oob:
  - 0.7030178326474622
  - 0.7417997338656022
  - 0.7248828647925034
  - 0.7450396825396824
  - 0.738013468013468
  train_average_precision_weighted:
  - 0.8289908357886304
  - 0.9792205843100954
  - 0.9474045920591299
  - 0.9897351872752727
  - 0.935981199259007
  train_average_precision_weighted_oob:
  - 0.5132861183606158
  - 0.5479322207001043
  - 0.6165390539576969
  - 0.6350915777434162
  - 0.5387266751115751
  train_f1_macro:
  - 0.8919753086419752
  - 0.9241516966067865
  - 0.9236947791164658
  - 0.9246031746031748
  - 0.9181818181818183
  train_f1_macro_oob:
  - 0.8209876543209876
  - 0.8213572854291417
  - 0.8423694779116464
  - 0.8422619047619048
  - 0.8333333333333335
  train_f1_micro:
  - 0.8919753086419753
  - 0.9241516966067864
  - 0.9236947791164659
  - 0.9246031746031746
  - 0.9181818181818182
  train_f1_micro_oob:
  - 0.8209876543209876
  - 0.8213572854291418
  - 0.8423694779116466
  - 0.8422619047619048
  - 0.8333333333333334
  train_f1_samples:
  - 0.8919753086419753
  - 0.9241516966067863
  - 0.9236947791164659
  - 0.9246031746031746
  - 0.9181818181818182
  train_f1_samples_oob:
  - 0.8209876543209876
  - 0.8213572854291417
  - 0.8423694779116465
  - 0.8422619047619048
  - 0.8333333333333334
  train_f1_weighted:
  - 0.8750998095940052
  - 0.9418011268104186
  - 0.9395801025885722
  - 0.939498933901919
  - 0.9298959746720941
  train_f1_weighted_oob:
  - 0.7298998832995516
  - 0.7334886876493318
  - 0.7746033639508529
  - 0.7717069414830608
  - 0.7577265189205487
  train_jaccard_macro:
  - 0.8095441761635987
  - 0.8626181751171423
  - 0.8618012968927419
  - 0.8628939484134341
  - 0.8512985139625627
  train_jaccard_macro_oob:
  - 0.714626681423821
  - 0.7135815624029586
  - 0.739047565109827
  - 0.7395463719120693
  - 0.7270993390975676
  train_jaccard_micro:
  - 0.8050139275766016
  - 0.8589981447124304
  - 0.8582089552238806
  - 0.8597785977859779
  - 0.8487394957983193
  train_jaccard_micro_oob:
  - 0.6963350785340314
  - 0.6968670618120237
  - 0.7276669557675629
  - 0.7275064267352185
  - 0.7142857142857143
  train_jaccard_samples:
  - 0.832304526748971
  - 0.8738237810094095
  - 0.8734939759036144
  - 0.8752834467120181
  - 0.8666666666666665
  train_jaccard_samples_oob:
  - 0.7261904761904762
  - 0.7097234103222126
  - 0.7422547332185887
  - 0.7413548752834468
  - 0.7318903318903319
  train_jaccard_weighted:
  - 0.7834911200838824
  - 0.8936902994625907
  - 0.8895273990713265
  - 0.8887844505757834
  - 0.8712249018960652
  train_jaccard_weighted_oob:
  - 0.5898463405862454
  - 0.5916866955757033
  - 0.640283403423912
  - 0.6372115077759299
  - 0.6191901504138291
  train_label_ranking_average_precision_score:
  - 0.8139917695473248
  - 0.8907185628742516
  - 0.895281124497992
  - 0.8953373015873015
  - 0.8752525252525252
  train_label_ranking_average_precision_score_oob:
  - 0.7030178326474622
  - 0.7417997338656022
  - 0.7248828647925033
  - 0.7450396825396823
  - 0.7380134680134678
  train_matthews_corrcoef_macro:
  - 0.25913285893055643
  - 0.31289167218433306
  - 0.310935670640713
  - 0.30897665121054874
  - 0.30012114964177167
  train_matthews_corrcoef_macro_oob:
  - 0.12322185064460962
  - 0.09648524635291526
  - 0.14570047302664949
  - 0.14055221110542512
  - 0.12407508206425903
  train_matthews_corrcoef_micro:
  - 0.6542911616855253
  - 0.7552147686828502
  - 0.7528410988435945
  - 0.7527423538509488
  - 0.7325099860050979
  train_matthews_corrcoef_micro_oob:
  - 0.42849569743958765
  - 0.30308033843678855
  - 0.42345578208876394
  - 0.4111907423352003
  - 0.3778992584453549
  train_matthews_corrcoef_samples:
  - 0.6073518540530282
  - 0.6374920852003346
  - 0.6419986079267271
  - 0.6478075125090673
  - 0.6452496733747675
  train_matthews_corrcoef_samples_oob:
  - 0.4284732922445134
  - 0.1633197743696748
  - 0.2688956625295426
  - 0.2486414816418852
  - 0.2597127378467804
  train_matthews_corrcoef_weighted:
  - 0.5282508965911419
  - 0.6336117586925815
  - 0.6329176262964279
  - 0.6319640632014553
  - 0.6092079124102945
  train_matthews_corrcoef_weighted_oob:
  - 0.25086861608324523
  - 0.1950484778815036
  - 0.2978186787578308
  - 0.2891030058554835
  - 0.25192121393607414
  train_ndgc:
  - 0.8623814127458461
  - 0.9204407556822213
  - 0.9250266697161843
  - 0.9236983297002916
  - 0.9091127390982975
  train_ndgc_oob:
  - 0.7789167928143435
  - 0.8079975676743643
  - 0.7955841716498905
  - 0.8097748184722071
  - 0.8055111862363256
  train_neg_coverage_error:
  - -1.7345679012345678
  - -1.5568862275449102
  - -1.5843373493975903
  - -1.494047619047619
  - -1.606060606060606
  train_neg_coverage_error_oob:
  - -2.246913580246914
  - -2.2215568862275448
  - -2.2349397590361444
  - -2.1488095238095237
  - -2.193939393939394
  train_neg_hamming_loss_macro:
  - -0.10802469135802469
  - -0.07584830339321358
  - -0.07630522088353414
  - -0.07539682539682539
  - -0.0818181818181818
  train_neg_hamming_loss_macro_oob:
  - -0.17901234567901236
  - -0.1786427145708583
  - -0.1576305220883534
  - -0.1577380952380952
  - -0.16666666666666666
  train_neg_hamming_loss_micro:
  - -0.10802469135802469
  - -0.07584830339321358
  - -0.07630522088353414
  - -0.07539682539682539
  - -0.08181818181818182
  train_neg_hamming_loss_micro_oob:
  - -0.17901234567901234
  - -0.17864271457085829
  - -0.1576305220883534
  - -0.15773809523809523
  - -0.16666666666666666
  train_neg_hamming_loss_samples:
  - -0.10802469135802469
  - -0.07584830339321358
  - -0.07630522088353413
  - -0.07539682539682539
  - -0.08181818181818182
  train_neg_hamming_loss_samples_oob:
  - -0.17901234567901234
  - -0.17864271457085829
  - -0.1576305220883534
  - -0.15773809523809523
  - -0.16666666666666666
  train_neg_hamming_loss_weighted:
  - -0.1249001904059947
  - -0.05819887318958143
  - -0.060419897411427885
  - -0.06050106609808102
  - -0.07010402532790593
  train_neg_hamming_loss_weighted_oob:
  - -0.27010011670044837
  - -0.2665113123506681
  - -0.22539663604914706
  - -0.22829305851693912
  - -0.2422734810794512
  train_neg_label_ranking_loss:
  - -0.10030864197530864
  - -0.06563539587491683
  - -0.06678380187416333
  - -0.05788690476190477
  - -0.07506734006734006
  train_neg_label_ranking_loss_oob:
  - -0.2028292181069959
  - -0.19765469061876248
  - -0.20103748326639892
  - -0.18994708994708998
  - -0.1936026936026936
  train_precision_macro:
  - 0.8919753086419752
  - 0.9241516966067865
  - 0.9236947791164658
  - 0.9246031746031748
  - 0.9181818181818183
  train_precision_macro_oob:
  - 0.8209876543209876
  - 0.8213572854291417
  - 0.8423694779116464
  - 0.8422619047619048
  - 0.8333333333333335
  train_precision_micro:
  - 0.8919753086419753
  - 0.9241516966067864
  - 0.9236947791164659
  - 0.9246031746031746
  - 0.9181818181818182
  train_precision_micro_oob:
  - 0.8209876543209876
  - 0.8213572854291418
  - 0.8423694779116466
  - 0.8422619047619048
  - 0.8333333333333334
  train_precision_samples:
  - 0.8919753086419753
  - 0.9241516966067863
  - 0.9236947791164659
  - 0.9246031746031746
  - 0.9181818181818182
  train_precision_samples_oob:
  - 0.8209876543209876
  - 0.8213572854291417
  - 0.8423694779116465
  - 0.8422619047619048
  - 0.8333333333333334
  train_precision_weighted:
  - 0.8750998095940052
  - 0.9418011268104186
  - 0.9395801025885722
  - 0.939498933901919
  - 0.9298959746720941
  train_precision_weighted_oob:
  - 0.7298998832995516
  - 0.7334886876493318
  - 0.7746033639508529
  - 0.7717069414830608
  - 0.7577265189205487
  train_recall_macro:
  - 0.8919753086419752
  - 0.9241516966067865
  - 0.9236947791164658
  - 0.9246031746031748
  - 0.9181818181818183
  train_recall_macro_oob:
  - 0.8209876543209876
  - 0.8213572854291417
  - 0.8423694779116464
  - 0.8422619047619048
  - 0.8333333333333335
  train_recall_micro:
  - 0.8919753086419753
  - 0.9241516966067864
  - 0.9236947791164659
  - 0.9246031746031746
  - 0.9181818181818182
  train_recall_micro_oob:
  - 0.8209876543209876
  - 0.8213572854291418
  - 0.8423694779116466
  - 0.8422619047619048
  - 0.8333333333333334
  train_recall_samples:
  - 0.8919753086419753
  - 0.9241516966067863
  - 0.9236947791164659
  - 0.9246031746031746
  - 0.9181818181818182
  train_recall_samples_oob:
  - 0.8209876543209876
  - 0.8213572854291417
  - 0.8423694779116465
  - 0.8422619047619048
  - 0.8333333333333334
  train_recall_weighted:
  - 0.8750998095940052
  - 0.9418011268104186
  - 0.9395801025885722
  - 0.939498933901919
  - 0.9298959746720941
  train_recall_weighted_oob:
  - 0.7298998832995516
  - 0.7334886876493318
  - 0.7746033639508529
  - 0.7717069414830608
  - 0.7577265189205487
  train_roc_auc_macro:
  - 0.9581827231166721
  - 0.9963734525936269
  - 0.9924082341269841
  - 0.9974481746444827
  - 0.9886864909148706
  train_roc_auc_macro_oob:
  - 0.6954633450680588
  - 0.6961599840410045
  - 0.7469448606704435
  - 0.7775877144132209
  - 0.6686226683448142
  train_roc_auc_micro:
  - 0.9230436662343278
  - 0.9603260232926627
  - 0.9623787315759283
  - 0.966326977257455
  - 0.950368562762865
  train_roc_auc_micro_oob:
  - 0.8081899194042756
  - 0.8167475354044772
  - 0.8302740853430431
  - 0.8354263379508899
  - 0.8088202838784531
  train_roc_auc_samples:
  - 0.8996913580246914
  - 0.9343646041250832
  - 0.9332161981258367
  - 0.942113095238095
  - 0.9249326599326598
  train_roc_auc_samples_oob:
  - 0.797170781893004
  - 0.8023453093812376
  - 0.7989625167336012
  - 0.8100529100529101
  - 0.8063973063973063
  train_roc_auc_weighted:
  - 0.9213592878367692
  - 0.996260772875725
  - 0.9919771039603961
  - 0.9970790004440673
  - 0.9818916262636579
  train_roc_auc_weighted_oob:
  - 0.709897847129219
  - 0.7376627913512557
  - 0.7778431606649872
  - 0.7991951705870851
  - 0.7145195917655681
start: 2023-12-21 10:33:29.372586
wrapper: null
