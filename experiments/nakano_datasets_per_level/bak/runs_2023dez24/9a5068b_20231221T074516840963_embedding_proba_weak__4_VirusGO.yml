active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMBMBAMzMzMzMLQIBmZmZmZvY/gGZmZmZm9j/AzMzMzMwMwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 07:45:50.699503
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 4
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__4
  params: {}
hash: 9a5068b0b04d83ddd96e0436261ee590d1dff45e6360e98a97118ebe1e9c7bf1
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/9a5068b_20231221T074516840963_embedding_proba_weak__4_VirusGO.yml
results:
  fit_time:
  - 24.445268154144287
  - 24.80981707572937
  - 24.414214372634888
  - 24.884683847427368
  - 24.283535718917847
  score_time:
  - 3.0009546279907227
  - 2.804715633392334
  - 2.7074906826019287
  - 2.9530234336853027
  - 2.7642276287078857
  test_average_precision_macro:
  - 0.9804431845783603
  - 0.9177301914918014
  - 0.9584797861978704
  - 0.9035136298154445
  - 0.9116518582682912
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9032701340212901
  - 0.9229543233775763
  - 0.9404326607833364
  - 0.9236674259593761
  - 0.8699535401839161
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9564393939393938
  - 0.9206140350877193
  - 0.9708333333333332
  - 0.9375
  - 0.884074074074074
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9643877697169447
  - 0.9390619405657
  - 0.9621876527325444
  - 0.9404118705680352
  - 0.9046832665435834
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9507575757575757
  - 0.9342105263157895
  - 0.9333333333333332
  - 0.9416666666666668
  - 0.925925925925926
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9507575757575758
  - 0.9342105263157895
  - 0.9333333333333333
  - 0.9416666666666667
  - 0.9259259259259259
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9507575757575758
  - 0.9342105263157895
  - 0.9333333333333332
  - 0.9416666666666667
  - 0.9259259259259258
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9540998217468806
  - 0.9360902255639099
  - 0.9280000000000002
  - 0.9357843137254902
  - 0.8932461873638344
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9077688697022647
  - 0.8783030576280719
  - 0.8752307124400147
  - 0.8906920268236206
  - 0.8665042772962028
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9061371841155235
  - 0.8765432098765432
  - 0.875
  - 0.889763779527559
  - 0.8620689655172413
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9188311688311689
  - 0.8978696741854637
  - 0.8922619047619047
  - 0.9071428571428573
  - 0.8835978835978835
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.914909135614365
  - 0.8809796583234716
  - 0.8657807308970099
  - 0.8805018010917047
  - 0.8098906452212993
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9564393939393938
  - 0.9206140350877193
  - 0.9708333333333332
  - 0.9375
  - 0.884074074074074
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6156680406457026
  - 0.6066700295825258
  - 0.5914670263520537
  - 0.6285652861401838
  - 0.7586664004942446
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8367095374390237
  - 0.7993597439393155
  - 0.789279114463815
  - 0.8197076980262973
  - 0.7661638206568334
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.8074959574576069
  - 0.7626615481601103
  - 0.7540569415042094
  - 0.8005504461313475
  - 0.7909028907945005
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.8063579679387868
  - 0.8010943858049807
  - 0.7536249357021793
  - 0.782504625837172
  - 0.7364621112873614
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9678685378257192
  - 0.9427214046605511
  - 0.9795395074072776
  - 0.956157482703101
  - 0.915283708038109
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.25
  - -1.5789473684210527
  - -1.325
  - -1.55
  - -1.4222222222222223
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.04924242424242423
  - -0.06578947368421052
  - -0.06666666666666667
  - -0.05833333333333334
  - -0.07407407407407407
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.04924242424242424
  - -0.06578947368421052
  - -0.06666666666666667
  - -0.058333333333333334
  - -0.07407407407407407
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.04924242424242424
  - -0.06578947368421051
  - -0.06666666666666667
  - -0.05833333333333333
  - -0.07407407407407407
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.04590017825311943
  - -0.06390977443609021
  - -0.07200000000000001
  - -0.0642156862745098
  - -0.10675381263616557
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.01931818181818182
  - -0.053289473684210525
  - -0.013125000000000001
  - -0.049375
  - -0.05493827160493828
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9507575757575757
  - 0.9342105263157895
  - 0.9333333333333332
  - 0.9416666666666668
  - 0.925925925925926
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9507575757575758
  - 0.9342105263157895
  - 0.9333333333333333
  - 0.9416666666666667
  - 0.9259259259259259
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9507575757575758
  - 0.9342105263157895
  - 0.9333333333333332
  - 0.9416666666666667
  - 0.9259259259259258
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9540998217468806
  - 0.9360902255639099
  - 0.9280000000000002
  - 0.9357843137254902
  - 0.8932461873638344
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9507575757575757
  - 0.9342105263157895
  - 0.9333333333333332
  - 0.9416666666666668
  - 0.925925925925926
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9507575757575758
  - 0.9342105263157895
  - 0.9333333333333333
  - 0.9416666666666667
  - 0.9259259259259259
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9507575757575758
  - 0.9342105263157895
  - 0.9333333333333332
  - 0.9416666666666667
  - 0.9259259259259258
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9540998217468806
  - 0.9360902255639099
  - 0.9280000000000002
  - 0.9357843137254902
  - 0.8932461873638344
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9906419024066083
  - 0.9725796568627452
  - 0.9859779056550156
  - 0.9658705732924484
  - 0.9726910501703125
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9847187701371629
  - 0.9720670391061453
  - 0.9826315789473684
  - 0.9662309368191722
  - 0.9668278270212194
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9806818181818183
  - 0.9467105263157896
  - 0.9868750000000001
  - 0.9506250000000002
  - 0.9450617283950618
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9820408643938056
  - 0.9690501200480193
  - 0.9800468883205457
  - 0.9747103386809268
  - 0.9584170186878535
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9436834015424047
  - 0.9634597537499349
  - 0.9768951302930282
  - 0.9748268331993505
  - 0.9651724219998044
  train_average_precision_macro_oob:
  - 0.9029209400700801
  - 0.924737841676699
  - 0.9337898852595513
  - 0.9428703399937285
  - 0.9348910280940008
  train_average_precision_micro:
  - 0.9208935053165777
  - 0.9307451099952262
  - 0.9511757642783547
  - 0.9491425805751513
  - 0.9540265655185866
  train_average_precision_micro_oob:
  - 0.8964557678053076
  - 0.9038273576918855
  - 0.9268410458557028
  - 0.9311054748032989
  - 0.9318151301624285
  train_average_precision_samples:
  - 0.9529652351738241
  - 0.9457593688362917
  - 0.9670658682634731
  - 0.9630738522954092
  - 0.9501028806584362
  train_average_precision_samples_oob:
  - 0.9416155419222905
  - 0.9238987508218276
  - 0.9542914171656687
  - 0.949500998003992
  - 0.9291152263374485
  train_average_precision_weighted:
  - 0.9362151114964806
  - 0.95916424591492
  - 0.9726225722233328
  - 0.9701270817337281
  - 0.9687986601290995
  train_average_precision_weighted_oob:
  - 0.9137347057246674
  - 0.9329506007398646
  - 0.9448648428742955
  - 0.9509644641821018
  - 0.9485444581344081
  train_f1_macro:
  - 0.9437627811860941
  - 0.9368836291913215
  - 0.9530938123752494
  - 0.9510978043912175
  - 0.9506172839506172
  train_f1_macro_oob:
  - 0.9355828220858896
  - 0.92603550295858
  - 0.9451097804391217
  - 0.9401197604790418
  - 0.9300411522633745
  train_f1_micro:
  - 0.943762781186094
  - 0.9368836291913215
  - 0.9530938123752495
  - 0.9510978043912176
  - 0.9506172839506173
  train_f1_micro_oob:
  - 0.9355828220858896
  - 0.9260355029585798
  - 0.9451097804391217
  - 0.9401197604790419
  - 0.9300411522633745
  train_f1_samples:
  - 0.9437627811860941
  - 0.9368836291913215
  - 0.9530938123752495
  - 0.9510978043912176
  - 0.9506172839506173
  train_f1_samples_oob:
  - 0.9355828220858896
  - 0.9260355029585798
  - 0.9451097804391219
  - 0.9401197604790419
  - 0.9300411522633746
  train_f1_weighted:
  - 0.935842261087202
  - 0.9324336141312269
  - 0.944032726625956
  - 0.9397026841838712
  - 0.9422946993427921
  train_f1_weighted_oob:
  - 0.9235723224368954
  - 0.9166350890488822
  - 0.9332720697219423
  - 0.9263562427384039
  - 0.9270929304096801
  train_jaccard_macro:
  - 0.8938414722189042
  - 0.8815857128022113
  - 0.9108571267873113
  - 0.9073012410491291
  - 0.9071988795518208
  train_jaccard_macro_oob:
  - 0.8795782177482234
  - 0.8627861456854052
  - 0.8964469147850651
  - 0.8878293842116244
  - 0.86992753428033
  train_jaccard_micro:
  - 0.89351403678606
  - 0.8812615955473099
  - 0.9103908484270734
  - 0.9067554709800191
  - 0.9058823529411765
  train_jaccard_micro_oob:
  - 0.8789625360230547
  - 0.8622589531680441
  - 0.8959318826868495
  - 0.8870056497175142
  - 0.8692307692307693
  train_jaccard_samples:
  - 0.9095822378030967
  - 0.8989856297548604
  - 0.9234388366124894
  - 0.9198745366410035
  - 0.920487948265726
  train_jaccard_samples_oob:
  - 0.8965819456617002
  - 0.8834883065652296
  - 0.9133162246934702
  - 0.9034787567721698
  - 0.8903586125808348
  train_jaccard_weighted:
  - 0.8797118637231321
  - 0.8736248451815019
  - 0.894463476064199
  - 0.8868085184646806
  - 0.8917538358627032
  train_jaccard_weighted_oob:
  - 0.8585372067741556
  - 0.8464209488077409
  - 0.8753607573804449
  - 0.8635499679349401
  - 0.864818654335187
  train_label_ranking_average_precision_score:
  - 0.952965235173824
  - 0.9457593688362917
  - 0.9670658682634728
  - 0.9630738522954091
  - 0.9501028806584362
  train_label_ranking_average_precision_score_oob:
  - 0.9416155419222904
  - 0.9238987508218277
  - 0.9542914171656683
  - 0.949500998003992
  - 0.9291152263374487
  train_matthews_corrcoef_macro:
  - 0.6330608156418776
  - 0.6085780318749617
  - 0.6762484676650001
  - 0.6730892702606331
  - 0.8125795297850192
  train_matthews_corrcoef_macro_oob:
  - 0.5997295266497976
  - 0.5560527097397343
  - 0.6459890574599636
  - 0.6186178881940115
  - 0.5752779735686183
  train_matthews_corrcoef_micro:
  - 0.8227811036717864
  - 0.7995928785544955
  - 0.8503509180823929
  - 0.8432656269944732
  - 0.8470808058968804
  train_matthews_corrcoef_micro_oob:
  - 0.7955619006857224
  - 0.762661234327413
  - 0.8241964313827994
  - 0.8064302616404381
  - 0.779319887876555
  train_matthews_corrcoef_samples:
  - 0.8091230076732645
  - 0.8049304919851759
  - 0.8340787626179141
  - 0.829319306803434
  - 0.857646129345023
  train_matthews_corrcoef_samples_oob:
  - 0.7690546712923799
  - 0.7553457456648522
  - 0.8086699992068271
  - 0.778938502239854
  - 0.760765060257356
  train_matthews_corrcoef_weighted:
  - 0.7922168132541958
  - 0.7741001026549066
  - 0.8206726549116967
  - 0.8118699467174696
  - 0.8356773316287998
  train_matthews_corrcoef_weighted_oob:
  - 0.7575838303776079
  - 0.7265920990036795
  - 0.7909843809592346
  - 0.7681341422085112
  - 0.7505479559450858
  train_ndgc:
  - 0.9656727740348099
  - 0.9601454641803241
  - 0.9766191103688201
  - 0.973928395055764
  - 0.9635684479709341
  train_ndgc_oob:
  - 0.958061800113289
  - 0.9445630192879169
  - 0.9671857363824501
  - 0.9640290301503632
  - 0.9489890161338548
  train_neg_coverage_error:
  - -1.3496932515337423
  - -1.3254437869822486
  - -1.2994011976047903
  - -1.3053892215568863
  - -1.3641975308641976
  train_neg_coverage_error_oob:
  - -1.4355828220858895
  - -1.4023668639053255
  - -1.347305389221557
  - -1.3652694610778444
  - -1.4567901234567902
  train_neg_hamming_loss_macro:
  - -0.05623721881390592
  - -0.0631163708086785
  - -0.046906187624750496
  - -0.04890219560878243
  - -0.04938271604938271
  train_neg_hamming_loss_macro_oob:
  - -0.06441717791411043
  - -0.07396449704142012
  - -0.054890219560878244
  - -0.05988023952095808
  - -0.0699588477366255
  train_neg_hamming_loss_micro:
  - -0.05623721881390593
  - -0.0631163708086785
  - -0.046906187624750496
  - -0.04890219560878244
  - -0.04938271604938271
  train_neg_hamming_loss_micro_oob:
  - -0.06441717791411043
  - -0.07396449704142012
  - -0.054890219560878244
  - -0.059880239520958084
  - -0.06995884773662552
  train_neg_hamming_loss_samples:
  - -0.05623721881390593
  - -0.0631163708086785
  - -0.046906187624750496
  - -0.04890219560878243
  - -0.04938271604938271
  train_neg_hamming_loss_samples_oob:
  - -0.06441717791411043
  - -0.07396449704142012
  - -0.05489021956087825
  - -0.059880239520958084
  - -0.0699588477366255
  train_neg_hamming_loss_weighted:
  - -0.06415773891279797
  - -0.06756638586877314
  - -0.05596727337404398
  - -0.06029731581612894
  - -0.05770530065720778
  train_neg_hamming_loss_weighted_oob:
  - -0.07642767756310473
  - -0.08336491095111785
  - -0.06672793027805775
  - -0.07364375726159621
  - -0.07290706959031999
  train_neg_label_ranking_loss:
  - -0.023006134969325152
  - -0.02559171597633136
  - -0.016167664670658683
  - -0.018113772455089824
  - -0.024691358024691357
  train_neg_label_ranking_loss_oob:
  - -0.03742331288343558
  - -0.04043392504930967
  - -0.02619760479041916
  - -0.02917498336660013
  - -0.040740740740740744
  train_precision_macro:
  - 0.9437627811860941
  - 0.9368836291913215
  - 0.9530938123752494
  - 0.9510978043912175
  - 0.9506172839506172
  train_precision_macro_oob:
  - 0.9355828220858896
  - 0.92603550295858
  - 0.9451097804391217
  - 0.9401197604790418
  - 0.9300411522633745
  train_precision_micro:
  - 0.943762781186094
  - 0.9368836291913215
  - 0.9530938123752495
  - 0.9510978043912176
  - 0.9506172839506173
  train_precision_micro_oob:
  - 0.9355828220858896
  - 0.9260355029585798
  - 0.9451097804391217
  - 0.9401197604790419
  - 0.9300411522633745
  train_precision_samples:
  - 0.9437627811860941
  - 0.9368836291913215
  - 0.9530938123752495
  - 0.9510978043912176
  - 0.9506172839506173
  train_precision_samples_oob:
  - 0.9355828220858896
  - 0.9260355029585798
  - 0.9451097804391219
  - 0.9401197604790419
  - 0.9300411522633746
  train_precision_weighted:
  - 0.935842261087202
  - 0.9324336141312269
  - 0.944032726625956
  - 0.9397026841838712
  - 0.9422946993427921
  train_precision_weighted_oob:
  - 0.9235723224368954
  - 0.9166350890488822
  - 0.9332720697219423
  - 0.9263562427384039
  - 0.9270929304096801
  train_recall_macro:
  - 0.9437627811860941
  - 0.9368836291913215
  - 0.9530938123752494
  - 0.9510978043912175
  - 0.9506172839506172
  train_recall_macro_oob:
  - 0.9355828220858896
  - 0.92603550295858
  - 0.9451097804391217
  - 0.9401197604790418
  - 0.9300411522633745
  train_recall_micro:
  - 0.943762781186094
  - 0.9368836291913215
  - 0.9530938123752495
  - 0.9510978043912176
  - 0.9506172839506173
  train_recall_micro_oob:
  - 0.9355828220858896
  - 0.9260355029585798
  - 0.9451097804391217
  - 0.9401197604790419
  - 0.9300411522633745
  train_recall_samples:
  - 0.9437627811860941
  - 0.9368836291913215
  - 0.9530938123752495
  - 0.9510978043912176
  - 0.9506172839506173
  train_recall_samples_oob:
  - 0.9355828220858896
  - 0.9260355029585798
  - 0.9451097804391219
  - 0.9401197604790419
  - 0.9300411522633746
  train_recall_weighted:
  - 0.935842261087202
  - 0.9324336141312269
  - 0.944032726625956
  - 0.9397026841838712
  - 0.9422946993427921
  train_recall_weighted_oob:
  - 0.9235723224368954
  - 0.9166350890488822
  - 0.9332720697219423
  - 0.9263562427384039
  - 0.9270929304096801
  train_roc_auc_macro:
  - 0.985344062985206
  - 0.9877354820060127
  - 0.9914035017452213
  - 0.9915930929987923
  - 0.9895250422668994
  train_roc_auc_macro_oob:
  - 0.9651404374383169
  - 0.9709751629194905
  - 0.9762983689457864
  - 0.9809752830962295
  - 0.9771732820317446
  train_roc_auc_micro:
  - 0.9842038200247156
  - 0.9840007774868951
  - 0.9881930693069307
  - 0.9887050390991361
  - 0.9874976608526757
  train_roc_auc_micro_oob:
  - 0.9695025515921039
  - 0.9726300316461464
  - 0.9777227722772278
  - 0.9799690685151023
  - 0.9769053564860521
  train_roc_auc_samples:
  - 0.9769938650306749
  - 0.9744082840236687
  - 0.9838323353293413
  - 0.9818862275449103
  - 0.9753086419753086
  train_roc_auc_samples_oob:
  - 0.9625766871165644
  - 0.9595660749506905
  - 0.9738023952095808
  - 0.9708250166333999
  - 0.9592592592592593
  train_roc_auc_weighted:
  - 0.9779996138108402
  - 0.982084095945765
  - 0.9863729380501763
  - 0.9855868821473527
  - 0.9871279899172036
  train_roc_auc_weighted_oob:
  - 0.9602814100124819
  - 0.9675843286819489
  - 0.9739070211383806
  - 0.9760264439877706
  - 0.9762227617693401
start: 2023-12-21 07:45:16.840963
wrapper: null
