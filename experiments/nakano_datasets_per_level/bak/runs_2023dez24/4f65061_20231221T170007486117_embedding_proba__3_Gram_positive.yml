active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz878AmJmZmZnJvwDNzMzMzPw/AJqZmZmZ6T8AMzMzMzPzvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 17:00:26.994464
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 3
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__3
  params: {}
hash: 4f65061820cf761c7e2ace6c8ceec43cf2e90052194462d31cf68ca436ebd9b1
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/4f65061_20231221T170007486117_embedding_proba__3_Gram_positive.yml
results:
  fit_time:
  - 7.230146884918213
  - 7.161730766296387
  - 7.36096715927124
  - 7.310858488082886
  - 7.758598327636719
  score_time:
  - 2.983243465423584
  - 2.9307141304016113
  - 2.9917211532592773
  - 2.837069034576416
  - 2.973557472229004
  test_average_precision_macro:
  - 0.8678525952580979
  - 0.8553052605310899
  - 0.882330969430733
  - 0.9331873726763433
  - 0.9336187551295637
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9801770823166607
  - 0.9704387922285733
  - 0.9735502286190574
  - 0.9876011855231212
  - 0.9745309817046752
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.969047619047619
  - 0.9575320512820512
  - 0.9566993464052287
  - 0.9757281553398058
  - 0.957936507936508
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.965113950441456
  - 0.9571553767592342
  - 0.9655357532635241
  - 0.9819584061771562
  - 0.9747313950927882
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7976190476190477
  - 0.8125
  - 0.8284313725490197
  - 0.8155339805825244
  - 0.7904761904761906
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7976190476190477
  - 0.8125
  - 0.8284313725490197
  - 0.8155339805825242
  - 0.7904761904761904
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7976190476190477
  - 0.8125
  - 0.8284313725490197
  - 0.8155339805825242
  - 0.7904761904761904
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.741329739442947
  - 0.7598002958579883
  - 0.7785633484162896
  - 0.7701643017176997
  - 0.7337868480725623
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6767792433187003
  - 0.696059527214036
  - 0.717485119047619
  - 0.6984381822073197
  - 0.6676417143110401
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6633663366336634
  - 0.6842105263157895
  - 0.7071129707112971
  - 0.6885245901639344
  - 0.6535433070866141
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6774603174603174
  - 0.7012820512820512
  - 0.7281045751633985
  - 0.7061488673139155
  - 0.6647619047619046
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5937093992839139
  - 0.6152517786533276
  - 0.6401499542124541
  - 0.6289059329056476
  - 0.5838154753990414
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.969047619047619
  - 0.9575320512820513
  - 0.9566993464052287
  - 0.9757281553398058
  - 0.9579365079365079
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.28518356463513417
  - 0.31224765656533543
  - 0.37148433721532187
  - 0.3226547783544213
  - 0.23801755490080517
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3948526807852983
  - 0.4431333960293278
  - 0.5154941956358634
  - 0.46469937897582003
  - 0.35573988880409846
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.2
  - 0.25641025641025644
  - 0.3333333333333333
  - 0.27184466019417475
  - 0.1619047619047619
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.366300277135785
  - 0.41314766417438553
  - 0.48301554530293084
  - 0.42691461920759655
  - 0.3136795608913507
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.977003098342197
  - 0.9684255296105975
  - 0.968302996296292
  - 0.9820839686199736
  - 0.9687262388524013
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.0857142857142856
  - -1.1057692307692308
  - -1.1274509803921569
  - -1.058252427184466
  - -1.1047619047619048
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.20238095238095238
  - -0.1875
  - -0.17156862745098037
  - -0.18446601941747573
  - -0.2095238095238095
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.20238095238095238
  - -0.1875
  - -0.1715686274509804
  - -0.18446601941747573
  - -0.20952380952380953
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.20238095238095238
  - -0.1875
  - -0.1715686274509804
  - -0.18446601941747573
  - -0.20952380952380953
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.25867026055705306
  - -0.24019970414201183
  - -0.2214366515837104
  - -0.2298356982823002
  - -0.26621315192743766
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.025396825396825397
  - -0.03525641025641025
  - -0.035130718954248366
  - -0.016181229773462782
  - -0.03492063492063492
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7976190476190477
  - 0.8125
  - 0.8284313725490197
  - 0.8155339805825244
  - 0.7904761904761906
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7976190476190477
  - 0.8125
  - 0.8284313725490197
  - 0.8155339805825242
  - 0.7904761904761904
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7976190476190477
  - 0.8125
  - 0.8284313725490197
  - 0.8155339805825242
  - 0.7904761904761904
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.741329739442947
  - 0.7598002958579883
  - 0.7785633484162896
  - 0.7701643017176997
  - 0.7337868480725623
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7976190476190477
  - 0.8125
  - 0.8284313725490197
  - 0.8155339805825244
  - 0.7904761904761906
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7976190476190477
  - 0.8125
  - 0.8284313725490197
  - 0.8155339805825242
  - 0.7904761904761904
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7976190476190477
  - 0.8125
  - 0.8284313725490197
  - 0.8155339805825242
  - 0.7904761904761904
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.741329739442947
  - 0.7598002958579883
  - 0.7785633484162896
  - 0.7701643017176997
  - 0.7337868480725623
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9858997955067615
  - 0.9862619834783151
  - 0.9838140784036307
  - 0.9940348497765378
  - 0.9818477129269995
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9922184833553659
  - 0.9909085305719921
  - 0.9860197368421053
  - 0.9957854645354645
  - 0.9871806500377929
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9746031746031746
  - 0.9647435897435899
  - 0.9648692810457516
  - 0.9838187702265373
  - 0.9650793650793652
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9917008968417057
  - 0.9877983136148593
  - 0.9836167691219356
  - 0.9962670180061485
  - 0.9888194231365691
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9477364153139003
  - 0.9407676125436566
  - 0.9438715298952393
  - 0.9121343456117237
  - 0.8956278767881203
  train_average_precision_macro_oob:
  - 0.8830349026085953
  - 0.8814777725124746
  - 0.9023786918769154
  - 0.8139317894349605
  - 0.8179811081080087
  train_average_precision_micro:
  - 0.9877203596497247
  - 0.9894331451592158
  - 0.9865118860620099
  - 0.9835201558645835
  - 0.9815266165800925
  train_average_precision_micro_oob:
  - 0.975895458408397
  - 0.9806160685759047
  - 0.9754677315648971
  - 0.9713107261840593
  - 0.970398141414552
  train_average_precision_samples:
  - 0.9696054750402575
  - 0.9753012048192771
  - 0.9746203037569943
  - 0.96875
  - 0.9732286634460546
  train_average_precision_samples_oob:
  - 0.960950080515298
  - 0.9682730923694779
  - 0.9608313349320543
  - 0.9631410256410257
  - 0.9651771336553946
  train_average_precision_weighted:
  - 0.9827327553365847
  - 0.9843596055310655
  - 0.9801751647154142
  - 0.9767292612394084
  - 0.9763350812306046
  train_average_precision_weighted_oob:
  - 0.964317213504452
  - 0.9699719358757787
  - 0.9636296184072752
  - 0.9547529866399892
  - 0.9575595073174046
  train_f1_macro:
  - 0.8291062801932367
  - 0.8391566265060242
  - 0.8441247002398082
  - 0.8407451923076923
  - 0.8200483091787439
  train_f1_macro_oob:
  - 0.8140096618357487
  - 0.8186746987951808
  - 0.8201438848920862
  - 0.8227163461538461
  - 0.8115942028985508
  train_f1_micro:
  - 0.8291062801932367
  - 0.8391566265060241
  - 0.8441247002398081
  - 0.8407451923076923
  - 0.8200483091787439
  train_f1_micro_oob:
  - 0.8140096618357487
  - 0.8186746987951807
  - 0.8201438848920863
  - 0.8227163461538461
  - 0.8115942028985508
  train_f1_samples:
  - 0.8291062801932367
  - 0.8391566265060241
  - 0.8441247002398081
  - 0.8407451923076923
  - 0.8200483091787439
  train_f1_samples_oob:
  - 0.8140096618357487
  - 0.8186746987951807
  - 0.8201438848920863
  - 0.8227163461538461
  - 0.8115942028985508
  train_f1_weighted:
  - 0.782492846302668
  - 0.7964746815423986
  - 0.8053032514322671
  - 0.8023682761152929
  - 0.7713924138409264
  train_f1_weighted_oob:
  - 0.7627752870167634
  - 0.7698076314805762
  - 0.7742197649994563
  - 0.7762587203965486
  - 0.7592053255668816
  train_jaccard_macro:
  - 0.7177735525700606
  - 0.7311402456063242
  - 0.7374684878878011
  - 0.7326608268413914
  - 0.7054333938311782
  train_jaccard_macro_oob:
  - 0.6976747227866766
  - 0.7034309259208925
  - 0.7048080721283646
  - 0.7085771584896506
  - 0.6946434228894557
  train_jaccard_micro:
  - 0.7080969571944301
  - 0.7228853139595226
  - 0.7302904564315352
  - 0.7252462415759461
  - 0.6949846468781986
  train_jaccard_micro_oob:
  - 0.6863543788187373
  - 0.6930137684854666
  - 0.6951219512195121
  - 0.698825931597754
  - 0.6829268292682927
  train_jaccard_samples:
  - 0.7275362318840578
  - 0.7439357429718874
  - 0.7512390087929656
  - 0.7461538461538461
  - 0.7133655394524958
  train_jaccard_samples_oob:
  - 0.7033816425120771
  - 0.711164658634538
  - 0.713189448441247
  - 0.7173076923076922
  - 0.6998389694041866
  train_jaccard_weighted:
  - 0.6457480784047408
  - 0.6645067886912683
  - 0.6759167061723289
  - 0.6713509110191563
  - 0.6305700109604357
  train_jaccard_weighted_oob:
  - 0.6197760494071837
  - 0.6287980273897793
  - 0.6338996998625304
  - 0.636508729158175
  - 0.6151346175663098
  train_label_ranking_average_precision_score:
  - 0.9696054750402575
  - 0.975301204819277
  - 0.9746203037569943
  - 0.96875
  - 0.9732286634460546
  train_label_ranking_average_precision_score_oob:
  - 0.9609500805152977
  - 0.9682730923694776
  - 0.9608313349320543
  - 0.9631410256410255
  - 0.9651771336553946
  train_matthews_corrcoef_macro:
  - 0.3686041339856888
  - 0.3984101520376466
  - 0.40504062188934775
  - 0.38529466500223425
  - 0.34535865966057855
  train_matthews_corrcoef_macro_oob:
  - 0.3250470312860988
  - 0.3424223693204087
  - 0.33582060385275686
  - 0.34475271802614144
  - 0.324079600412868
  train_matthews_corrcoef_micro:
  - 0.5114612063804251
  - 0.5463865529915364
  - 0.5604387425461157
  - 0.5504901481254988
  - 0.4810244997689727
  train_matthews_corrcoef_micro_oob:
  - 0.45754700596912545
  - 0.4760775431754897
  - 0.4775312649386686
  - 0.48913433163463316
  - 0.4500484445121202
  train_matthews_corrcoef_samples:
  - 0.32367149758454106
  - 0.36626506024096384
  - 0.381294964028777
  - 0.3701923076923077
  - 0.2898550724637681
  train_matthews_corrcoef_samples_oob:
  - 0.2632850241545894
  - 0.28433734939759037
  - 0.2869704236610712
  - 0.2980769230769231
  - 0.2560386473429952
  train_matthews_corrcoef_weighted:
  - 0.47865103788942215
  - 0.5134477366684342
  - 0.5268985147259357
  - 0.5129509243200925
  - 0.4492186188118695
  train_matthews_corrcoef_weighted_oob:
  - 0.4251826208869079
  - 0.4442407078726055
  - 0.44298781695342093
  - 0.4548168520731954
  - 0.4198956826724848
  train_ndgc:
  - 0.9776107534439461
  - 0.981673790028061
  - 0.9811906052009308
  - 0.9769867474635591
  - 0.9800573773704748
  train_ndgc_oob:
  - 0.9711345400196384
  - 0.9764940245996792
  - 0.9709747157375926
  - 0.9727329574697497
  - 0.9740462269056267
  train_neg_coverage_error:
  - -1.0748792270531402
  - -1.0674698795180724
  - -1.0623501199040768
  - -1.0817307692307692
  - -1.0917874396135265
  train_neg_coverage_error_oob:
  - -1.106280193236715
  - -1.091566265060241
  - -1.0935251798561152
  - -1.1033653846153846
  - -1.1207729468599035
  train_neg_hamming_loss_macro:
  - -0.1708937198067633
  - -0.1608433734939759
  - -0.15587529976019185
  - -0.15925480769230768
  - -0.17995169082125603
  train_neg_hamming_loss_macro_oob:
  - -0.1859903381642512
  - -0.1813253012048193
  - -0.1798561151079137
  - -0.17728365384615383
  - -0.18840579710144928
  train_neg_hamming_loss_micro:
  - -0.1708937198067633
  - -0.1608433734939759
  - -0.15587529976019185
  - -0.15925480769230768
  - -0.17995169082125603
  train_neg_hamming_loss_micro_oob:
  - -0.1859903381642512
  - -0.18132530120481927
  - -0.17985611510791366
  - -0.17728365384615385
  - -0.18840579710144928
  train_neg_hamming_loss_samples:
  - -0.1708937198067633
  - -0.1608433734939759
  - -0.15587529976019185
  - -0.15925480769230768
  - -0.17995169082125603
  train_neg_hamming_loss_samples_oob:
  - -0.1859903381642512
  - -0.18132530120481927
  - -0.17985611510791366
  - -0.17728365384615385
  - -0.18840579710144928
  train_neg_hamming_loss_weighted:
  - -0.217507153697332
  - -0.20352531845760127
  - -0.19469674856773297
  - -0.19763172388470718
  - -0.22860758615907356
  train_neg_hamming_loss_weighted_oob:
  - -0.2372247129832366
  - -0.2301923685194238
  - -0.22578023500054373
  - -0.22374127960345142
  - -0.24079467443311836
  train_neg_label_ranking_loss:
  - -0.022342995169082124
  - -0.01927710843373494
  - -0.019184652278177457
  - -0.024439102564102567
  - -0.027173913043478257
  train_neg_label_ranking_loss_oob:
  - -0.03260869565217391
  - -0.02710843373493976
  - -0.029576338928856912
  - -0.03165064102564102
  - -0.03663446054750402
  train_precision_macro:
  - 0.8291062801932367
  - 0.8391566265060242
  - 0.8441247002398082
  - 0.8407451923076923
  - 0.8200483091787439
  train_precision_macro_oob:
  - 0.8140096618357487
  - 0.8186746987951808
  - 0.8201438848920862
  - 0.8227163461538461
  - 0.8115942028985508
  train_precision_micro:
  - 0.8291062801932367
  - 0.8391566265060241
  - 0.8441247002398081
  - 0.8407451923076923
  - 0.8200483091787439
  train_precision_micro_oob:
  - 0.8140096618357487
  - 0.8186746987951807
  - 0.8201438848920863
  - 0.8227163461538461
  - 0.8115942028985508
  train_precision_samples:
  - 0.8291062801932367
  - 0.8391566265060241
  - 0.8441247002398081
  - 0.8407451923076923
  - 0.8200483091787439
  train_precision_samples_oob:
  - 0.8140096618357487
  - 0.8186746987951807
  - 0.8201438848920863
  - 0.8227163461538461
  - 0.8115942028985508
  train_precision_weighted:
  - 0.782492846302668
  - 0.7964746815423986
  - 0.8053032514322671
  - 0.8023682761152929
  - 0.7713924138409264
  train_precision_weighted_oob:
  - 0.7627752870167634
  - 0.7698076314805762
  - 0.7742197649994563
  - 0.7762587203965486
  - 0.7592053255668816
  train_recall_macro:
  - 0.8291062801932367
  - 0.8391566265060242
  - 0.8441247002398082
  - 0.8407451923076923
  - 0.8200483091787439
  train_recall_macro_oob:
  - 0.8140096618357487
  - 0.8186746987951808
  - 0.8201438848920862
  - 0.8227163461538461
  - 0.8115942028985508
  train_recall_micro:
  - 0.8291062801932367
  - 0.8391566265060241
  - 0.8441247002398081
  - 0.8407451923076923
  - 0.8200483091787439
  train_recall_micro_oob:
  - 0.8140096618357487
  - 0.8186746987951807
  - 0.8201438848920863
  - 0.8227163461538461
  - 0.8115942028985508
  train_recall_samples:
  - 0.8291062801932367
  - 0.8391566265060241
  - 0.8441247002398081
  - 0.8407451923076923
  - 0.8200483091787439
  train_recall_samples_oob:
  - 0.8140096618357487
  - 0.8186746987951807
  - 0.8201438848920863
  - 0.8227163461538461
  - 0.8115942028985508
  train_recall_weighted:
  - 0.782492846302668
  - 0.7964746815423986
  - 0.8053032514322671
  - 0.8023682761152929
  - 0.7713924138409264
  train_recall_weighted_oob:
  - 0.7627752870167634
  - 0.7698076314805762
  - 0.7742197649994563
  - 0.7762587203965486
  - 0.7592053255668816
  train_roc_auc_macro:
  - 0.9943303148507361
  - 0.9946013505474642
  - 0.9930712014575827
  - 0.9894472426607953
  - 0.9787321812767174
  train_roc_auc_macro_oob:
  - 0.9849176304540732
  - 0.9905356592607063
  - 0.9871358968400299
  - 0.9788529674024922
  - 0.9664451846882929
  train_roc_auc_micro:
  - 0.9954457741313003
  - 0.9957863682956427
  - 0.9948350088185107
  - 0.9936624780745895
  - 0.9905098515123173
  train_roc_auc_micro_oob:
  - 0.9892328268136096
  - 0.9923939236007608
  - 0.9914031463834552
  - 0.9880840785576674
  - 0.9842835720524693
  train_roc_auc_samples:
  - 0.9776570048309179
  - 0.980722891566265
  - 0.9808153477218226
  - 0.9755608974358974
  - 0.9728260869565217
  train_roc_auc_samples_oob:
  - 0.967391304347826
  - 0.9728915662650602
  - 0.970423661071143
  - 0.9683493589743589
  - 0.963365539452496
  train_roc_auc_weighted:
  - 0.9949750128254053
  - 0.995644993440655
  - 0.9940163972604658
  - 0.9938738041109241
  - 0.9931677315734463
  train_roc_auc_weighted_oob:
  - 0.9883159023098905
  - 0.9919331803927639
  - 0.9899859997188399
  - 0.9887911654762592
  - 0.9868827482818839
start: 2023-12-21 17:00:07.486117
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
