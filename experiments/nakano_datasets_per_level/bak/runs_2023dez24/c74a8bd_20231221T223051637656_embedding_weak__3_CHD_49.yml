active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjP4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJPzQzMzMzM/M/NDMzMzMz8z/MzMzMzMz8vw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAADwPwAAAAAAAAAAAAAAAAAA8D8AAAAAAAAAwA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 22:31:19.747788
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              monotonic_cst: null
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 3
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_weak__3
  params: {}
hash: c74a8bdcaaad594ca8e22706f0ce3803e820ac4c0402fcf1c58a50ad9fbb3c3d
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/c74a8bd_20231221T223051637656_embedding_weak__3_CHD_49.yml
results:
  fit_time:
  - 14.833635568618774
  - 14.839102506637573
  - 16.402451515197754
  - 14.37747049331665
  - 15.258632898330688
  score_time:
  - 2.7738144397735596
  - 2.6487526893615723
  - 2.958721876144409
  - 2.625664234161377
  - 2.6982855796813965
  test_average_precision_macro:
  - 0.5281035214707891
  - 0.5501049271467039
  - 0.5324272815027258
  - 0.5851957348043292
  - 0.523216061385016
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6765123167122453
  - 0.7020263186494986
  - 0.6920105851675996
  - 0.6993798350818486
  - 0.666182467891714
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7522397397397398
  - 0.7804797979797979
  - 0.7806556556556556
  - 0.7824999999999999
  - 0.7669616519174041
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6513899518573811
  - 0.6744196408080988
  - 0.6610412652733617
  - 0.6920242596626968
  - 0.6298372544874692
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6936936936936937
  - 0.6969696969696969
  - 0.6936936936936937
  - 0.6954545454545454
  - 0.6917404129793511
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6936936936936937
  - 0.696969696969697
  - 0.6936936936936937
  - 0.6954545454545454
  - 0.6917404129793511
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6936936936936937
  - 0.6969696969696968
  - 0.6936936936936937
  - 0.6954545454545452
  - 0.691740412979351
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6517986517986518
  - 0.6547997457088367
  - 0.6457088667614983
  - 0.6509853782581055
  - 0.6474875218176808
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5524510845103296
  - 0.5576783858257092
  - 0.5547028693809046
  - 0.5571591674968029
  - 0.54961756595355
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5310344827586206
  - 0.5348837209302325
  - 0.5310344827586206
  - 0.5331010452961672
  - 0.5287485907553551
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5641355641355643
  - 0.5712121212121213
  - 0.5635856635856636
  - 0.5654624163715073
  - 0.5600965406275141
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.49225581818139763
  - 0.4961908957578473
  - 0.48485200507040194
  - 0.4915110675037737
  - 0.4876561197690341
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7702577577577583
  - 0.7895707070707072
  - 0.7806556556556556
  - 0.7825
  - 0.7669616519174042
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.05413596694259017
  - 0.06105602670156671
  - 0.05093116854107573
  - 0.030543827021340116
  - 0.07531390099235562
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.4021119006022015
  - 0.40355932580740955
  - 0.40094816130133154
  - 0.39824812625988193
  - 0.3998072482077562
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.40234238791755933
  - 0.4168707259370891
  - 0.4145350432842531
  - 0.40322072044770846
  - 0.41609138862319067
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.046152446396540835
  - 0.051156516080632854
  - 0.04237082790280583
  - 0.023476343896734156
  - 0.05981238058375328
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.82825525408924
  - 0.8514659851861768
  - 0.8564619468027781
  - 0.8578839797347597
  - 0.8507634783396717
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.8378378378378377
  - -3.809090909090909
  - -3.7837837837837838
  - -3.8454545454545452
  - -3.8849557522123894
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.30630630630630634
  - -0.30303030303030304
  - -0.30630630630630623
  - -0.3045454545454545
  - -0.30825958702064893
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.3063063063063063
  - -0.30303030303030304
  - -0.3063063063063063
  - -0.30454545454545456
  - -0.308259587020649
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.3063063063063063
  - -0.303030303030303
  - -0.3063063063063063
  - -0.3045454545454545
  - -0.308259587020649
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.34820134820134824
  - -0.34520025429116336
  - -0.3542911332385017
  - -0.34901462174189446
  - -0.35251247818231923
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.22655155155155157
  - -0.2049242424242424
  - -0.22117117117117113
  - -0.21020202020202022
  - -0.22763028515240907
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6936936936936937
  - 0.6969696969696969
  - 0.6936936936936937
  - 0.6954545454545454
  - 0.6917404129793511
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6936936936936937
  - 0.696969696969697
  - 0.6936936936936937
  - 0.6954545454545454
  - 0.6917404129793511
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6936936936936937
  - 0.6969696969696968
  - 0.6936936936936937
  - 0.6954545454545452
  - 0.691740412979351
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6517986517986518
  - 0.6547997457088367
  - 0.6457088667614983
  - 0.6509853782581055
  - 0.6474875218176808
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6936936936936937
  - 0.6969696969696969
  - 0.6936936936936937
  - 0.6954545454545454
  - 0.6917404129793511
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6936936936936937
  - 0.696969696969697
  - 0.6936936936936937
  - 0.6954545454545454
  - 0.6917404129793511
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6936936936936937
  - 0.6969696969696968
  - 0.6936936936936937
  - 0.6954545454545452
  - 0.691740412979351
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6517986517986518
  - 0.6547997457088367
  - 0.6457088667614983
  - 0.6509853782581055
  - 0.6474875218176808
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5943235854164166
  - 0.5977369530070037
  - 0.5766644380365497
  - 0.6917168661598824
  - 0.5934612257498851
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7737486198012513
  - 0.787311618862421
  - 0.7865358935396234
  - 0.7978104782917618
  - 0.7703453981017782
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - 0.778828828828829
  - 0.7897979797979799
  - 0.772369714847591
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.6031293362087851
  - 0.6194634360588481
  - 0.6084603266616014
  - 0.6236350349194026
  - 0.5899576598138115
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8650019584744237
  - 0.866806900865397
  - 0.879819611631185
  - 0.8619029541562876
  - 0.8688852049434207
  train_average_precision_macro_oob:
  - 0.589936688870503
  - 0.600808131857636
  - 0.5978383977935429
  - 0.5941730825669885
  - 0.6103830628478085
  train_average_precision_micro:
  - 0.737091857660396
  - 0.7397810198216983
  - 0.7598874516894738
  - 0.7011253130933062
  - 0.747059754438532
  train_average_precision_micro_oob:
  - 0.6960434579803807
  - 0.6985484462613453
  - 0.7091024066353795
  - 0.6715744105094319
  - 0.7075725345978131
  train_average_precision_samples:
  - 0.809862987987988
  - 0.8018726591760299
  - 0.8087399899899899
  - 0.787365792759051
  - 0.8071298391151331
  train_average_precision_samples_oob:
  - 0.7830893393393392
  - 0.7831772784019975
  - 0.7812468718718718
  - 0.7692041198501873
  - 0.7828651332327802
  train_average_precision_weighted:
  - 0.8204096788365027
  - 0.8211309625498782
  - 0.8377705854903428
  - 0.8157365259490211
  - 0.8245017221403887
  train_average_precision_weighted_oob:
  - 0.7093859427905247
  - 0.716181377946985
  - 0.7139864006796415
  - 0.7049097545567353
  - 0.7293384656812102
  train_f1_macro:
  - 0.783033033033033
  - 0.7827715355805243
  - 0.783033033033033
  - 0.7827715355805243
  - 0.7956259426847662
  train_f1_macro_oob:
  - 0.706081081081081
  - 0.700374531835206
  - 0.7023273273273274
  - 0.7003745318352061
  - 0.7111613876319759
  train_f1_micro:
  - 0.7830330330330331
  - 0.7827715355805244
  - 0.7830330330330331
  - 0.7827715355805244
  - 0.7956259426847662
  train_f1_micro_oob:
  - 0.706081081081081
  - 0.700374531835206
  - 0.7023273273273273
  - 0.700374531835206
  - 0.7111613876319759
  train_f1_samples:
  - 0.7830330330330331
  - 0.7827715355805243
  - 0.7830330330330331
  - 0.7827715355805243
  - 0.7956259426847662
  train_f1_samples_oob:
  - 0.706081081081081
  - 0.7003745318352059
  - 0.7023273273273273
  - 0.7003745318352059
  - 0.711161387631976
  train_f1_weighted:
  - 0.7248223354244296
  - 0.7226856481753828
  - 0.7276993645781789
  - 0.7250740239621938
  - 0.7383958226941089
  train_f1_weighted_oob:
  - 0.659363552033709
  - 0.6546894915387179
  - 0.6573729352718017
  - 0.6546267427495736
  - 0.6642597277150311
  train_jaccard_macro:
  - 0.6781995437767622
  - 0.679561903507189
  - 0.6754886874973626
  - 0.6783945139506263
  - 0.6936255702599525
  train_jaccard_macro_oob:
  - 0.5680522743653734
  - 0.5609271870208749
  - 0.5633068620557582
  - 0.5611799548238502
  - 0.5742420264264917
  train_jaccard_micro:
  - 0.6434299814929056
  - 0.6430769230769231
  - 0.6434299814929056
  - 0.6430769230769231
  - 0.6606136505948653
  train_jaccard_micro_oob:
  - 0.5456919060052219
  - 0.5389048991354467
  - 0.5412207115996529
  - 0.5389048991354467
  - 0.5517846693973084
  train_jaccard_samples:
  - 0.6767706017706017
  - 0.6748100588550027
  - 0.6794508794508795
  - 0.6773899508730968
  - 0.6950872656755009
  train_jaccard_samples_oob:
  - 0.5778645528645527
  - 0.5716445352400409
  - 0.5742619242619242
  - 0.5713760396906464
  - 0.5864272981920041
  train_jaccard_weighted:
  - 0.5942184187721947
  - 0.5933211274299465
  - 0.5956507344954186
  - 0.595418550030698
  - 0.6096994922516817
  train_jaccard_weighted_oob:
  - 0.5010194975180876
  - 0.49540441208413016
  - 0.4989387436285315
  - 0.49583675103595504
  - 0.5067086428774674
  train_label_ranking_average_precision_score:
  - 0.81211524024024
  - 0.8063670411985018
  - 0.8154967467467467
  - 0.7941073657927591
  - 0.8139171694318751
  train_label_ranking_average_precision_score_oob:
  - 0.7853415915915909
  - 0.787671660424469
  - 0.7880036286286283
  - 0.7759456928838945
  - 0.7896524635495219
  train_matthews_corrcoef_macro:
  - 0.30529086027256896
  - 0.28766331646157267
  - 0.3245148153024162
  - 0.31025583548450913
  - 0.3540919456973434
  train_matthews_corrcoef_macro_oob:
  - 0.10512843938766142
  - 0.08642534015095933
  - 0.09267104243322077
  - 0.09514852270141405
  - 0.11621612989105834
  train_matthews_corrcoef_micro:
  - 0.6073966895128258
  - 0.6098429882422671
  - 0.6036052998848518
  - 0.6082590535951505
  - 0.6308858088680722
  train_matthews_corrcoef_micro_oob:
  - 0.4229018295439224
  - 0.40941185163154176
  - 0.4148781003091482
  - 0.4098801549127109
  - 0.433755003664681
  train_matthews_corrcoef_samples:
  - 0.6227860911482639
  - 0.6265593443620191
  - 0.6207836582909206
  - 0.6239756979881431
  - 0.6468342924572565
  train_matthews_corrcoef_samples_oob:
  - 0.4345038048338619
  - 0.41878413307483314
  - 0.4267321497886381
  - 0.421947621889546
  - 0.4428125066713637
  train_matthews_corrcoef_weighted:
  - 0.26483692875877257
  - 0.23480497066462064
  - 0.29038449728243754
  - 0.27001163280507473
  - 0.3203449640242434
  train_matthews_corrcoef_weighted_oob:
  - 0.08590567688171927
  - 0.07099252970528844
  - 0.07440298948435359
  - 0.07635570459226215
  - 0.0956194511862752
  train_ndgc:
  - 0.874093351925849
  - 0.868403237675841
  - 0.8714261579331775
  - 0.8546256532702053
  - 0.8698469623751734
  train_ndgc_oob:
  - 0.856993775189081
  - 0.8565102289616704
  - 0.8546453176248742
  - 0.8439600266255894
  - 0.8549081866298104
  train_neg_coverage_error:
  - -3.52027027027027
  - -3.550561797752809
  - -3.518018018018018
  - -3.5438202247191013
  - -3.490950226244344
  train_neg_coverage_error_oob:
  - -3.7545045045045047
  - -3.743820224719101
  - -3.777027027027027
  - -3.755056179775281
  - -3.730769230769231
  train_neg_hamming_loss_macro:
  - -0.21696696696696696
  - -0.21722846441947566
  - -0.21696696696696696
  - -0.21722846441947566
  - -0.2043740573152338
  train_neg_hamming_loss_macro_oob:
  - -0.2939189189189189
  - -0.299625468164794
  - -0.29767267267267267
  - -0.299625468164794
  - -0.28883861236802416
  train_neg_hamming_loss_micro:
  - -0.21696696696696696
  - -0.21722846441947566
  - -0.21696696696696696
  - -0.21722846441947566
  - -0.20437405731523378
  train_neg_hamming_loss_micro_oob:
  - -0.2939189189189189
  - -0.299625468164794
  - -0.29767267267267267
  - -0.299625468164794
  - -0.2888386123680241
  train_neg_hamming_loss_samples:
  - -0.216966966966967
  - -0.21722846441947566
  - -0.21696696696696696
  - -0.21722846441947563
  - -0.2043740573152338
  train_neg_hamming_loss_samples_oob:
  - -0.2939189189189189
  - -0.29962546816479396
  - -0.29767267267267267
  - -0.29962546816479396
  - -0.2888386123680241
  train_neg_hamming_loss_weighted:
  - -0.2751776645755703
  - -0.27731435182461717
  - -0.2723006354218211
  - -0.2749259760378062
  - -0.2616041773058911
  train_neg_hamming_loss_weighted_oob:
  - -0.3406364479662909
  - -0.34531050846128203
  - -0.3426270647281981
  - -0.3453732572504265
  - -0.3357402722849689
  train_neg_label_ranking_loss:
  - -0.16652902902902905
  - -0.17325218476903873
  - -0.15944069069069067
  - -0.1768664169787765
  - -0.15886752136752136
  train_neg_label_ranking_loss_oob:
  - -0.20594344344344345
  - -0.20377028714107367
  - -0.20577452452452455
  - -0.21127965043695382
  - -0.19871166415284064
  train_precision_macro:
  - 0.783033033033033
  - 0.7827715355805243
  - 0.783033033033033
  - 0.7827715355805243
  - 0.7956259426847662
  train_precision_macro_oob:
  - 0.706081081081081
  - 0.700374531835206
  - 0.7023273273273274
  - 0.7003745318352061
  - 0.7111613876319759
  train_precision_micro:
  - 0.7830330330330331
  - 0.7827715355805244
  - 0.7830330330330331
  - 0.7827715355805244
  - 0.7956259426847662
  train_precision_micro_oob:
  - 0.706081081081081
  - 0.700374531835206
  - 0.7023273273273273
  - 0.700374531835206
  - 0.7111613876319759
  train_precision_samples:
  - 0.7830330330330331
  - 0.7827715355805243
  - 0.7830330330330331
  - 0.7827715355805243
  - 0.7956259426847662
  train_precision_samples_oob:
  - 0.706081081081081
  - 0.7003745318352059
  - 0.7023273273273273
  - 0.7003745318352059
  - 0.711161387631976
  train_precision_weighted:
  - 0.7248223354244296
  - 0.7226856481753828
  - 0.7276993645781789
  - 0.7250740239621938
  - 0.7383958226941089
  train_precision_weighted_oob:
  - 0.659363552033709
  - 0.6546894915387179
  - 0.6573729352718017
  - 0.6546267427495736
  - 0.6642597277150311
  train_recall_macro:
  - 0.783033033033033
  - 0.7827715355805243
  - 0.783033033033033
  - 0.7827715355805243
  - 0.7956259426847662
  train_recall_macro_oob:
  - 0.706081081081081
  - 0.700374531835206
  - 0.7023273273273274
  - 0.7003745318352061
  - 0.7111613876319759
  train_recall_micro:
  - 0.7830330330330331
  - 0.7827715355805244
  - 0.7830330330330331
  - 0.7827715355805244
  - 0.7956259426847662
  train_recall_micro_oob:
  - 0.706081081081081
  - 0.700374531835206
  - 0.7023273273273273
  - 0.700374531835206
  - 0.7111613876319759
  train_recall_samples:
  - 0.7830330330330331
  - 0.7827715355805243
  - 0.7830330330330331
  - 0.7827715355805243
  - 0.7956259426847662
  train_recall_samples_oob:
  - 0.706081081081081
  - 0.7003745318352059
  - 0.7023273273273273
  - 0.7003745318352059
  - 0.711161387631976
  train_recall_weighted:
  - 0.7248223354244296
  - 0.7226856481753828
  - 0.7276993645781789
  - 0.7250740239621938
  - 0.7383958226941089
  train_recall_weighted_oob:
  - 0.659363552033709
  - 0.6546894915387179
  - 0.6573729352718017
  - 0.6546267427495736
  - 0.6642597277150311
  train_roc_auc_macro:
  - 0.840265923801605
  - 0.8385633865542182
  - 0.8529430120902818
  - 0.8384027442959455
  - 0.8454681332836865
  train_roc_auc_macro_oob:
  - 0.6340966918852629
  - 0.6463300691860027
  - 0.6626676313568834
  - 0.646159114617653
  - 0.6766593828132311
  train_roc_auc_micro:
  - 0.8417940502222315
  - 0.8401944684924858
  - 0.8518019263229462
  - 0.8300748237622129
  - 0.8491173112969891
  train_roc_auc_micro_oob:
  - 0.7982241030841075
  - 0.8002798733927894
  - 0.8025855187273097
  - 0.7896855661366937
  - 0.804065661441094
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.7724060020712672
  - 0.7681657190943931
  - 0.7853730145563576
  - 0.7696089230632761
  - 0.7773384303711233
  train_roc_auc_weighted_oob:
  - 0.6683361893296714
  - 0.6695603767805418
  - 0.6703593572934922
  - 0.6611792821902367
  - 0.6807102410044137
start: 2023-12-21 22:30:51.637656
wrapper: null
