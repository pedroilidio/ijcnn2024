active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+gmZmZmZn5PzAzMzMzMwvAQDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMz4z9wZmZmZmYaQJCZmZmZmRXAAJmZmZmZ2b9AZmZmZmb2vw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-22 03:41:53.973485
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 4
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__4
  params: {}
hash: e5d5c59066581e54304ed48d493d29078942647b78c06c1ebd114532c00d1b42
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/e5d5c59_20231222T034120630927_embedding_proba__4_emotions.yml
results:
  fit_time:
  - 15.457662105560303
  - 16.039014101028442
  - 15.097332239151001
  - 15.586995601654053
  - 16.453500747680664
  score_time:
  - 4.684203863143921
  - 4.471019983291626
  - 4.7103111743927
  - 4.903323650360107
  - 4.765878438949585
  test_average_precision_macro:
  - 0.7451916475092659
  - 0.728049797969409
  - 0.6818788912186721
  - 0.7751682826099034
  - 0.7056660720085315
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7398705683515562
  - 0.7390601187505808
  - 0.668008004624898
  - 0.7752047837021091
  - 0.6995723781655808
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8268126177024483
  - 0.7814980158730158
  - 0.7915994623655913
  - 0.8211718020541551
  - 0.8055092592592593
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.7478723215284238
  - 0.7343878741406002
  - 0.6829764629803651
  - 0.7749946841375454
  - 0.7041145319950889
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7245762711864407
  - 0.7247023809523809
  - 0.7298387096774194
  - 0.742296918767507
  - 0.7486111111111112
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7245762711864406
  - 0.7247023809523809
  - 0.7298387096774194
  - 0.742296918767507
  - 0.7486111111111111
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7245762711864405
  - 0.7247023809523808
  - 0.7298387096774194
  - 0.7422969187675069
  - 0.7486111111111112
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.712631336758954
  - 0.7128652597402596
  - 0.7198924731182794
  - 0.7330696984676224
  - 0.7381975867269984
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5713971265932304
  - 0.5720864767193758
  - 0.5772258545069677
  - 0.5930282387431792
  - 0.6015174316121549
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5681063122923588
  - 0.5682613768961493
  - 0.5746031746031746
  - 0.5902004454342984
  - 0.5982241953385128
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5881759483454397
  - 0.585671768707483
  - 0.5940860215053763
  - 0.6042416966786712
  - 0.6136904761904761
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5572962930332043
  - 0.5577520777964068
  - 0.5653171145449579
  - 0.5817082600521487
  - 0.5885800552475072
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8268126177024483
  - 0.781498015873016
  - 0.7915994623655914
  - 0.8211718020541552
  - 0.805509259259259
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.266357802742962
  - 0.30592812228235355
  - 0.25033619513358335
  - 0.328076400873514
  - 0.3341540230181795
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.27237597211874787
  - 0.3205657362243032
  - 0.25623672709234635
  - 0.3374974328993111
  - 0.344109337702511
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.16114367884787445
  - 0.20013730549104472
  - 0.1573388268315117
  - 0.19087832365420782
  - 0.21744321782906642
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.2599103657091831
  - 0.29982402401647046
  - 0.24639005183014875
  - 0.32504685689880136
  - 0.3271855921394822
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8802044120298012
  - 0.8518055492912523
  - 0.8590815321448799
  - 0.8770326467403139
  - 0.8668203793186869
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -2.635593220338983
  - -2.9642857142857144
  - -2.814516129032258
  - -2.6638655462184873
  - -2.691666666666667
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2754237288135593
  - -0.27529761904761907
  - -0.2701612903225806
  - -0.257703081232493
  - -0.2513888888888889
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2754237288135593
  - -0.27529761904761907
  - -0.2701612903225806
  - -0.25770308123249297
  - -0.2513888888888889
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.27542372881355925
  - -0.275297619047619
  - -0.2701612903225806
  - -0.257703081232493
  - -0.2513888888888889
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.2873686632410461
  - -0.28713474025974023
  - -0.2801075268817204
  - -0.2669303015323777
  - -0.26180241327300147
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.1408662900188324
  - -0.18276289682539684
  - -0.17381272401433692
  - -0.13856209150326795
  - -0.15421296296296297
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7245762711864407
  - 0.7247023809523809
  - 0.7298387096774194
  - 0.742296918767507
  - 0.7486111111111112
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7245762711864406
  - 0.7247023809523809
  - 0.7298387096774194
  - 0.742296918767507
  - 0.7486111111111111
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7245762711864405
  - 0.7247023809523808
  - 0.7298387096774194
  - 0.7422969187675069
  - 0.7486111111111112
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.712631336758954
  - 0.7128652597402596
  - 0.7198924731182794
  - 0.7330696984676224
  - 0.7381975867269984
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7245762711864407
  - 0.7247023809523809
  - 0.7298387096774194
  - 0.742296918767507
  - 0.7486111111111112
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7245762711864406
  - 0.7247023809523809
  - 0.7298387096774194
  - 0.742296918767507
  - 0.7486111111111111
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7245762711864405
  - 0.7247023809523808
  - 0.7298387096774194
  - 0.7422969187675069
  - 0.7486111111111112
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.712631336758954
  - 0.7128652597402596
  - 0.7198924731182794
  - 0.7330696984676224
  - 0.7381975867269984
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.8507314947373638
  - 0.8323292123376945
  - 0.8280455139241997
  - 0.8711898483177798
  - 0.8236866052661828
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.8718630083529226
  - 0.8498592115848752
  - 0.8400513808606295
  - 0.8845098345158003
  - 0.8444490791537828
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8591337099811677
  - 0.8172371031746033
  - 0.8261872759856631
  - 0.861437908496732
  - 0.845787037037037
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.8526363238767276
  - 0.834962096603771
  - 0.826801441045802
  - 0.8694947869498928
  - 0.822754026709032
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8870870402221994
  - 0.8849027761231025
  - 0.8936276262882382
  - 0.8910478683442503
  - 0.8818993405612517
  train_average_precision_macro_oob:
  - 0.8677269077570764
  - 0.8679189864520819
  - 0.8766461251939623
  - 0.8747404252576052
  - 0.8675885518183569
  train_average_precision_micro:
  - 0.8909662856222669
  - 0.8904308978909427
  - 0.8969824291091794
  - 0.8950478743995061
  - 0.8837254223258828
  train_average_precision_micro_oob:
  - 0.8750704155626963
  - 0.8752653918904348
  - 0.8800548152727827
  - 0.8817635364358014
  - 0.8682319257814656
  train_average_precision_samples:
  - 0.8977426900584796
  - 0.907957957957958
  - 0.9144693200663349
  - 0.896993670886076
  - 0.9049741602067184
  train_average_precision_samples_oob:
  - 0.8846432748538012
  - 0.896101871101871
  - 0.8949478796493722
  - 0.8889767932489452
  - 0.8859055673009161
  train_average_precision_weighted:
  - 0.8871771831207969
  - 0.8867966193964556
  - 0.8944981143873996
  - 0.8929215990802915
  - 0.8822409274502883
  train_average_precision_weighted_oob:
  - 0.8692286068528833
  - 0.8706315657982904
  - 0.8779841187226793
  - 0.8768016495320222
  - 0.8681747751588225
  train_f1_macro:
  - 0.8108771929824562
  - 0.8187803187803189
  - 0.8152096659559347
  - 0.8185654008438817
  - 0.8128964059196617
  train_f1_macro_oob:
  - 0.7919298245614034
  - 0.7931392931392932
  - 0.7803837953091685
  - 0.7936005625879045
  - 0.7882311486962649
  train_f1_micro:
  - 0.8108771929824561
  - 0.8187803187803188
  - 0.8152096659559346
  - 0.8185654008438819
  - 0.8128964059196617
  train_f1_micro_oob:
  - 0.7919298245614035
  - 0.7931392931392931
  - 0.7803837953091685
  - 0.7936005625879043
  - 0.788231148696265
  train_f1_samples:
  - 0.8108771929824561
  - 0.8187803187803188
  - 0.8152096659559347
  - 0.8185654008438819
  - 0.8128964059196617
  train_f1_samples_oob:
  - 0.7919298245614035
  - 0.7931392931392931
  - 0.7803837953091685
  - 0.7936005625879043
  - 0.7882311486962651
  train_f1_weighted:
  - 0.8056037500741708
  - 0.8132901612631342
  - 0.8097153771669078
  - 0.8126239778516688
  - 0.8081734997652251
  train_f1_weighted_oob:
  - 0.7867726814217052
  - 0.7884123728718324
  - 0.7753780845006484
  - 0.7876262374000447
  - 0.7842074026757175
  train_jaccard_macro:
  - 0.6828867023641934
  - 0.6941262385043406
  - 0.688958961746417
  - 0.6938599017979543
  - 0.6855552866222051
  train_jaccard_macro_oob:
  - 0.6566272862417469
  - 0.6584082220199382
  - 0.6406494592073461
  - 0.6589549891932809
  - 0.6514451974931407
  train_jaccard_micro:
  - 0.6819120684567719
  - 0.6931651510706952
  - 0.6880623875224955
  - 0.6928571428571428
  - 0.684772929652716
  train_jaccard_micro_oob:
  - 0.6555329654371188
  - 0.657192075796727
  - 0.6398601398601399
  - 0.657825706791023
  - 0.650479790636813
  train_jaccard_samples:
  - 0.7038095238095237
  - 0.7152757152757152
  - 0.7082952584018682
  - 0.7139340968454891
  - 0.7051746702909494
  train_jaccard_samples_oob:
  - 0.6780451127819549
  - 0.6788931788931789
  - 0.6595085795512233
  - 0.6780188868796463
  - 0.670139937581798
  train_jaccard_weighted:
  - 0.6755872250648784
  - 0.6864509800712425
  - 0.6814075259496668
  - 0.6856171956322553
  - 0.6790059401388714
  train_jaccard_weighted_oob:
  - 0.6496622851070422
  - 0.651940039603557
  - 0.6340949251185054
  - 0.6509616071015014
  - 0.6459634535058789
  train_label_ranking_average_precision_score:
  - 0.897742690058479
  - 0.907957957957957
  - 0.9144693200663347
  - 0.8969936708860756
  - 0.9049741602067177
  train_label_ranking_average_precision_score_oob:
  - 0.8846432748538003
  - 0.8961018711018701
  - 0.8949478796493717
  - 0.8889767932489445
  - 0.8859055673009153
  train_matthews_corrcoef_macro:
  - 0.548329751664466
  - 0.5655300970910458
  - 0.562450512956587
  - 0.5705495042239993
  - 0.5533043838716806
  train_matthews_corrcoef_macro_oob:
  - 0.49415621637878154
  - 0.48886569500119975
  - 0.46168176431068964
  - 0.5010542150799924
  - 0.47997655145746654
  train_matthews_corrcoef_micro:
  - 0.5548100369213926
  - 0.5702923313115315
  - 0.56910505343336
  - 0.5753187120513743
  - 0.5611956056601195
  train_matthews_corrcoef_micro_oob:
  - 0.5045353268779865
  - 0.5017385977924446
  - 0.4755671804013364
  - 0.5095119823813024
  - 0.49532160620384186
  train_matthews_corrcoef_samples:
  - 0.44431812210618715
  - 0.46707663677710515
  - 0.4487836193840192
  - 0.4811720535024397
  - 0.447018458160247
  train_matthews_corrcoef_samples_oob:
  - 0.38288732912044926
  - 0.3861405739099897
  - 0.33983311462033033
  - 0.3983697949203631
  - 0.37294917324692617
  train_matthews_corrcoef_weighted:
  - 0.5492657355889555
  - 0.5651407583913464
  - 0.5636339207035803
  - 0.5702237681647018
  - 0.5552960920481517
  train_matthews_corrcoef_weighted_oob:
  - 0.4971163747776872
  - 0.4923740836424785
  - 0.46731971008160056
  - 0.5031349192211221
  - 0.48553908561920395
  train_ndgc:
  - 0.9329627630828584
  - 0.9390461967984045
  - 0.9432571570443694
  - 0.931786374132037
  - 0.9360845782567437
  train_ndgc_oob:
  - 0.9244696106888827
  - 0.9309777340699087
  - 0.9301787228936144
  - 0.9260491127042012
  - 0.9231218114732418
  train_neg_coverage_error:
  - -2.3810526315789473
  - -2.3035343035343034
  - -2.3091684434968016
  - -2.3628691983122363
  - -2.3276955602536997
  train_neg_coverage_error_oob:
  - -2.4505263157894737
  - -2.3846153846153846
  - -2.375266524520256
  - -2.4071729957805905
  - -2.427061310782241
  train_neg_hamming_loss_macro:
  - -0.18912280701754383
  - -0.1812196812196812
  - -0.1847903340440654
  - -0.18143459915611815
  - -0.18710359408033828
  train_neg_hamming_loss_macro_oob:
  - -0.2080701754385965
  - -0.2068607068607069
  - -0.21961620469083157
  - -0.20639943741209565
  - -0.21176885130373505
  train_neg_hamming_loss_micro:
  - -0.18912280701754386
  - -0.1812196812196812
  - -0.1847903340440654
  - -0.18143459915611815
  - -0.18710359408033828
  train_neg_hamming_loss_micro_oob:
  - -0.2080701754385965
  - -0.20686070686070687
  - -0.21961620469083157
  - -0.20639943741209563
  - -0.21176885130373502
  train_neg_hamming_loss_samples:
  - -0.1891228070175439
  - -0.18121968121968124
  - -0.18479033404406536
  - -0.18143459915611815
  - -0.18710359408033828
  train_neg_hamming_loss_samples_oob:
  - -0.2080701754385965
  - -0.20686070686070687
  - -0.21961620469083157
  - -0.20639943741209563
  - -0.21176885130373502
  train_neg_hamming_loss_weighted:
  - -0.19439624992582924
  - -0.18670983873686575
  - -0.19028462283309225
  - -0.18737602214833102
  - -0.1918265002347748
  train_neg_hamming_loss_weighted_oob:
  - -0.2132273185782947
  - -0.21158762712816767
  - -0.22462191549935165
  - -0.21237376259995527
  - -0.2157925973242824
  train_neg_label_ranking_loss:
  - -0.08374269005847955
  - -0.07834372834372835
  - -0.0708836768538261
  - -0.080631739334271
  - -0.07869978858350951
  train_neg_label_ranking_loss_oob:
  - -0.09527485380116958
  - -0.09133171633171633
  - -0.08178156834873253
  - -0.08871308016877637
  - -0.09494362226920366
  train_precision_macro:
  - 0.8108771929824562
  - 0.8187803187803189
  - 0.8152096659559347
  - 0.8185654008438817
  - 0.8128964059196617
  train_precision_macro_oob:
  - 0.7919298245614034
  - 0.7931392931392932
  - 0.7803837953091685
  - 0.7936005625879045
  - 0.7882311486962649
  train_precision_micro:
  - 0.8108771929824561
  - 0.8187803187803188
  - 0.8152096659559346
  - 0.8185654008438819
  - 0.8128964059196617
  train_precision_micro_oob:
  - 0.7919298245614035
  - 0.7931392931392931
  - 0.7803837953091685
  - 0.7936005625879043
  - 0.788231148696265
  train_precision_samples:
  - 0.8108771929824561
  - 0.8187803187803188
  - 0.8152096659559347
  - 0.8185654008438819
  - 0.8128964059196617
  train_precision_samples_oob:
  - 0.7919298245614035
  - 0.7931392931392931
  - 0.7803837953091685
  - 0.7936005625879043
  - 0.7882311486962651
  train_precision_weighted:
  - 0.8056037500741708
  - 0.8132901612631342
  - 0.8097153771669078
  - 0.8126239778516688
  - 0.8081734997652251
  train_precision_weighted_oob:
  - 0.7867726814217052
  - 0.7884123728718324
  - 0.7753780845006484
  - 0.7876262374000447
  - 0.7842074026757175
  train_recall_macro:
  - 0.8108771929824562
  - 0.8187803187803189
  - 0.8152096659559347
  - 0.8185654008438817
  - 0.8128964059196617
  train_recall_macro_oob:
  - 0.7919298245614034
  - 0.7931392931392932
  - 0.7803837953091685
  - 0.7936005625879045
  - 0.7882311486962649
  train_recall_micro:
  - 0.8108771929824561
  - 0.8187803187803188
  - 0.8152096659559346
  - 0.8185654008438819
  - 0.8128964059196617
  train_recall_micro_oob:
  - 0.7919298245614035
  - 0.7931392931392931
  - 0.7803837953091685
  - 0.7936005625879043
  - 0.788231148696265
  train_recall_samples:
  - 0.8108771929824561
  - 0.8187803187803188
  - 0.8152096659559347
  - 0.8185654008438819
  - 0.8128964059196617
  train_recall_samples_oob:
  - 0.7919298245614035
  - 0.7931392931392931
  - 0.7803837953091685
  - 0.7936005625879043
  - 0.7882311486962651
  train_recall_weighted:
  - 0.8056037500741708
  - 0.8132901612631342
  - 0.8097153771669078
  - 0.8126239778516688
  - 0.8081734997652251
  train_recall_weighted_oob:
  - 0.7867726814217052
  - 0.7884123728718324
  - 0.7753780845006484
  - 0.7876262374000447
  - 0.7842074026757175
  train_roc_auc_macro:
  - 0.9272496691493957
  - 0.9252228050524489
  - 0.9311594505646449
  - 0.9288219178329019
  - 0.920539804059669
  train_roc_auc_macro_oob:
  - 0.9167671023131542
  - 0.9150575279278633
  - 0.9212794389985383
  - 0.9170899162664566
  - 0.912624929174822
  train_roc_auc_micro:
  - 0.9331511198433706
  - 0.9310712739766794
  - 0.9366719196186908
  - 0.9335130330286043
  - 0.9262858869819022
  train_roc_auc_micro_oob:
  - 0.9239872247629628
  - 0.9220769192616041
  - 0.927528029591695
  - 0.9246580511435549
  - 0.9182109368363693
  train_roc_auc_samples:
  - 0.9162573099415204
  - 0.9216562716562716
  - 0.9291163231461739
  - 0.9193682606657291
  - 0.9213002114164904
  train_roc_auc_samples_oob:
  - 0.9047251461988305
  - 0.9086682836682837
  - 0.9182184316512676
  - 0.9112869198312237
  - 0.9050563777307964
  train_roc_auc_weighted:
  - 0.9250503117519223
  - 0.924541561046657
  - 0.929940950260007
  - 0.9282973026719635
  - 0.9185902211629982
  train_roc_auc_weighted_oob:
  - 0.915422375462252
  - 0.9147576650388939
  - 0.9198727635153227
  - 0.9164264097723345
  - 0.9105471442887177
start: 2023-12-22 03:41:20.630927
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
