active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8gMzMzMzPzv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 23:05:22.928503
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    keep_original_features: true
    level:
      call: deep_forest.cascade.SequentialLevel
      params:
        last_level: null
        memory: null
        steps:
        - - alternating_forests
          - call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
        - - weak_label_imputer
          - call: deep_forest.weak_labels.SCARImputer
            params:
              estimator:
                call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
                params:
                  estimators:
                  - - rf
                    - call: sklearn.ensemble._forest.RandomForestClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
                  - - xt
                    - call: sklearn.ensemble._forest.ExtraTreesClassifier
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        class_weight: null
                        criterion: gini
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: true
                        random_state: 0
                        verbose: true
                        warm_start: false
              last_level: null
              threshold: 0.05
              verbose: true
        verbose: false
    max_levels: 1
    memory:
      call: joblib.memory.Memory
      params: {}
    verbose: 10
    warm_start: false
  name: embedding_proba_weak__1
  params: {}
hash: 66c7691a62b45be81c12f543455bf45bbb9e706998088ce55153ad477a02b2b2
metaestimator: null
modify_params:
  max_levels: 1
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/66c7691_20231221T230508952713_embedding_proba_weak__1_CHD_49.yml
results:
  fit_time:
  - 4.639320135116577
  - 4.885230302810669
  - 4.648110389709473
  - 4.243015766143799
  - 4.289067268371582
  score_time:
  - 1.7996735572814941
  - 1.9568769931793213
  - 1.8332626819610596
  - 1.8306474685668945
  - 1.7857542037963867
  test_average_precision_macro:
  - 0.5225138747990096
  - 0.4856743740700515
  - 0.5801365714180226
  - 0.5455689285835452
  - 0.5277601811847586
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.6888289210380886
  - 0.6606452318039537
  - 0.7028528894705991
  - 0.702982864987973
  - 0.6843510348322973
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.8000875875875876
  - 0.8014908256880734
  - 0.8038913913913913
  - 0.7974599599599599
  - 0.7943092428711898
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.6436025500592583
  - 0.6007757188019062
  - 0.6973681723792593
  - 0.6694842744485372
  - 0.6428364759088585
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.6831831831831833
  - 0.6819571865443425
  - 0.7702702702702702
  - 0.7267267267267267
  - 0.7168141592920354
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.6831831831831832
  - 0.6819571865443425
  - 0.7702702702702703
  - 0.7267267267267268
  - 0.7168141592920354
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.6831831831831832
  - 0.6819571865443426
  - 0.7702702702702702
  - 0.7267267267267268
  - 0.7168141592920353
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.6423801423801424
  - 0.6418832823649337
  - 0.7299494616567788
  - 0.6884961884961885
  - 0.6713243285204161
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.5415816065256857
  - 0.5408997454737949
  - 0.6383900820873982
  - 0.5868000774424442
  - 0.5773716733043058
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.5188141391106044
  - 0.5174013921113689
  - 0.6263736263736264
  - 0.5707547169811321
  - 0.5586206896551724
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.5581373581373582
  - 0.5570634258707654
  - 0.6718224718224717
  - 0.6097929097929097
  - 0.599256790407233
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.48282627148872714
  - 0.48163792280111195
  - 0.5774683704214614
  - 0.5286305700691086
  - 0.5106929586550095
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8090965965965966
  - 0.8106651376146786
  - 0.8129004004004003
  - 0.7974599599599598
  - 0.79430924287119
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.07820175770221739
  - 0.061153930302147885
  - 0.2625948631708537
  - 0.1693908187161011
  - 0.1569647100117655
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.37452120898775826
  - 0.3640425171434582
  - 0.5445384447841606
  - 0.46113748425954054
  - 0.4452273241758928
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.39405715999706714
  - 0.39129055758404224
  - 0.561318143465287
  - 0.481450404155054
  - 0.46153434149465494
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.06917850370213703
  - 0.059575252758570736
  - 0.26285013917134725
  - 0.17726991720709123
  - 0.1553016403435046
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.870173480667841
  - 0.8707235870716261
  - 0.8666381462013276
  - 0.8656114408184269
  - 0.8642447493438661
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -3.6126126126126126
  - -3.688073394495413
  - -3.5315315315315314
  - -3.6036036036036037
  - -3.672566371681416
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.3168168168168169
  - -0.3180428134556575
  - -0.22972972972972974
  - -0.2732732732732733
  - -0.2831858407079646
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.31681681681681684
  - -0.3180428134556575
  - -0.22972972972972974
  - -0.2732732732732733
  - -0.2831858407079646
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.31681681681681684
  - -0.31804281345565755
  - -0.22972972972972977
  - -0.2732732732732733
  - -0.2831858407079646
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.3576198576198576
  - -0.3581167176350662
  - -0.2700505383432213
  - -0.31150381150381157
  - -0.32867567147958393
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.20092592592592592
  - -0.20254841997961262
  - -0.173998998998999
  - -0.1891141141141141
  - -0.20521140609636182
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.6831831831831833
  - 0.6819571865443425
  - 0.7702702702702702
  - 0.7267267267267267
  - 0.7168141592920354
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.6831831831831832
  - 0.6819571865443425
  - 0.7702702702702703
  - 0.7267267267267268
  - 0.7168141592920354
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.6831831831831832
  - 0.6819571865443426
  - 0.7702702702702702
  - 0.7267267267267268
  - 0.7168141592920353
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.6423801423801424
  - 0.6418832823649337
  - 0.7299494616567788
  - 0.6884961884961885
  - 0.6713243285204161
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.6831831831831833
  - 0.6819571865443425
  - 0.7702702702702702
  - 0.7267267267267267
  - 0.7168141592920354
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.6831831831831832
  - 0.6819571865443425
  - 0.7702702702702703
  - 0.7267267267267268
  - 0.7168141592920354
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.6831831831831832
  - 0.6819571865443426
  - 0.7702702702702702
  - 0.7267267267267268
  - 0.7168141592920353
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.6423801423801424
  - 0.6418832823649337
  - 0.7299494616567788
  - 0.6884961884961885
  - 0.6713243285204161
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.5825332635341888
  - 0.5498389018917452
  - 0.661104464529437
  - 0.5801118466598622
  - 0.5670900781538906
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.7771899153478101
  - 0.7662037037037037
  - 0.8211136954942863
  - 0.8039013617960987
  - 0.7961608856747467
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - 0.8108858858858858
  - 0.7947885939036382
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5912925243800289
  - 0.5324030186331689
  - 0.6518502862703885
  - 0.6273057290964801
  - 0.6214300779399808
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.8882886866738265
  - 0.8746858005526151
  - 0.8791827904379456
  - 0.8803308371938114
  - 0.8885269297762043
  train_average_precision_macro_oob:
  - 0.7373384169422805
  - 0.7104847251302293
  - 0.7911052423562596
  - 0.7481243056236705
  - 0.7279350423818572
  train_average_precision_micro:
  - 0.855439385181116
  - 0.8409130171410929
  - 0.8408066858374749
  - 0.8436210613315562
  - 0.8472117415369667
  train_average_precision_micro_oob:
  - 0.8090063474159517
  - 0.7978771373822323
  - 0.8030895001813105
  - 0.8029628716105705
  - 0.7978243528047226
  train_average_precision_samples:
  - 0.8852571321321322
  - 0.8803624813153961
  - 0.8818693693693694
  - 0.8714182932932933
  - 0.872407616892911
  train_average_precision_samples_oob:
  - 0.8534534534534535
  - 0.8429029646238168
  - 0.8454266766766766
  - 0.835157032032032
  - 0.8370852187028658
  train_average_precision_weighted:
  - 0.8714134123030808
  - 0.8573275688455425
  - 0.861147586084828
  - 0.8653098779997878
  - 0.8694030220788741
  train_average_precision_weighted_oob:
  - 0.812201172540298
  - 0.7951489306260374
  - 0.808692393654408
  - 0.8049817229008349
  - 0.8003637601436423
  train_f1_macro:
  - 0.8682432432432431
  - 0.8561285500747383
  - 0.8596096096096096
  - 0.8566066066066066
  - 0.8533182503770739
  train_f1_macro_oob:
  - 0.7942942942942942
  - 0.796711509715994
  - 0.7972972972972974
  - 0.7815315315315315
  - 0.7846907993966817
  train_f1_micro:
  - 0.8682432432432432
  - 0.8561285500747384
  - 0.8596096096096096
  - 0.8566066066066066
  - 0.8533182503770739
  train_f1_micro_oob:
  - 0.7942942942942943
  - 0.796711509715994
  - 0.7972972972972973
  - 0.7815315315315315
  - 0.7846907993966817
  train_f1_samples:
  - 0.8682432432432432
  - 0.8561285500747385
  - 0.8596096096096097
  - 0.8566066066066067
  - 0.853318250377074
  train_f1_samples_oob:
  - 0.7942942942942944
  - 0.7967115097159941
  - 0.7972972972972973
  - 0.7815315315315315
  - 0.7846907993966818
  train_f1_weighted:
  - 0.8326297501690172
  - 0.8208629935087334
  - 0.8241787639167553
  - 0.8218637485653192
  - 0.8167223565705538
  train_f1_weighted_oob:
  - 0.7544534062858671
  - 0.7570576844679985
  - 0.7575612730634566
  - 0.7413604704180621
  - 0.7454090347828487
  train_jaccard_macro:
  - 0.7735170905996106
  - 0.7544489964412384
  - 0.7598935863989068
  - 0.7551283010005082
  - 0.7506996148908848
  train_jaccard_macro_oob:
  - 0.6686843847808173
  - 0.6716742997130652
  - 0.6723261573074484
  - 0.6519395066823725
  - 0.6560371607016814
  train_jaccard_micro:
  - 0.7671641791044777
  - 0.7484482195360993
  - 0.7537853851217906
  - 0.7491792514773473
  - 0.7441631042420257
  train_jaccard_micro_oob:
  - 0.6587795765877957
  - 0.662111801242236
  - 0.6629213483146067
  - 0.6414048059149723
  - 0.6456717344089358
  train_jaccard_samples:
  - 0.7997757497757498
  - 0.78240541222604
  - 0.7832904332904334
  - 0.7803742053742053
  - 0.777387318563789
  train_jaccard_samples_oob:
  - 0.6991575991575991
  - 0.7014675907052589
  - 0.6994237744237743
  - 0.678960453960454
  - 0.6863979158096805
  train_jaccard_weighted:
  - 0.717385676156684
  - 0.6992660865047778
  - 0.7043706164039085
  - 0.7006513843722894
  - 0.6934904549897829
  train_jaccard_weighted_oob:
  - 0.6078151654506319
  - 0.6112257092154546
  - 0.6117639419846229
  - 0.5912020080970878
  - 0.5963534284195606
  train_label_ranking_average_precision_score:
  - 0.8897616366366358
  - 0.8848467862481307
  - 0.886373873873873
  - 0.8781750500500491
  - 0.8791949472096526
  train_label_ranking_average_precision_score_oob:
  - 0.8579579579579574
  - 0.8473872695565515
  - 0.8499311811811808
  - 0.841913788788788
  - 0.8438725490196075
  train_matthews_corrcoef_macro:
  - 0.5028190090386063
  - 0.45899188044843836
  - 0.4683240698671452
  - 0.46095168375890366
  - 0.45312361189209094
  train_matthews_corrcoef_macro_oob:
  - 0.3255534062403207
  - 0.33157283072073923
  - 0.33300982388243544
  - 0.29515302284374495
  - 0.30190202921532844
  train_matthews_corrcoef_micro:
  - 0.7434579619268756
  - 0.7193214938624525
  - 0.7267346539745797
  - 0.7213491873346453
  - 0.715079653427023
  train_matthews_corrcoef_micro_oob:
  - 0.5968230018343325
  - 0.6006477582255378
  - 0.6026261366642107
  - 0.571041395825945
  - 0.5783249728835658
  train_matthews_corrcoef_samples:
  - 0.7440993019197988
  - 0.723784171784988
  - 0.728158940014687
  - 0.7248070119948743
  - 0.7170138566394011
  train_matthews_corrcoef_samples_oob:
  - 0.6059207512298308
  - 0.6134418561730206
  - 0.6169502639210037
  - 0.5789574320020056
  - 0.589577438642033
  train_matthews_corrcoef_weighted:
  - 0.5287729697922491
  - 0.47018534284290103
  - 0.47996737424694513
  - 0.47344268264681455
  - 0.46051329102117866
  train_matthews_corrcoef_weighted_oob:
  - 0.32913479665634915
  - 0.33369579951966577
  - 0.3354450993761041
  - 0.29462768274861384
  - 0.3034452970180726
  train_ndgc:
  - 0.9231177187796423
  - 0.9197056084274543
  - 0.921772801273954
  - 0.9131681480168895
  - 0.9134831940339545
  train_ndgc_oob:
  - 0.9031933745973035
  - 0.8956195343097189
  - 0.898734453212743
  - 0.8913018408313925
  - 0.8918073488808185
  train_neg_coverage_error:
  - -3.081081081081081
  - -3.0829596412556053
  - -3.0923423423423424
  - -3.105855855855856
  - -3.1289592760180995
  train_neg_coverage_error_oob:
  - -3.328828828828829
  - -3.336322869955157
  - -3.3468468468468466
  - -3.3873873873873874
  - -3.4049773755656108
  train_neg_hamming_loss_macro:
  - -0.13175675675675677
  - -0.14387144992526157
  - -0.1403903903903904
  - -0.14339339339339338
  - -0.1466817496229261
  train_neg_hamming_loss_macro_oob:
  - -0.2057057057057057
  - -0.20328849028400597
  - -0.20270270270270274
  - -0.21846846846846849
  - -0.2153092006033183
  train_neg_hamming_loss_micro:
  - -0.13175675675675674
  - -0.14387144992526157
  - -0.1403903903903904
  - -0.14339339339339338
  - -0.1466817496229261
  train_neg_hamming_loss_micro_oob:
  - -0.2057057057057057
  - -0.20328849028400597
  - -0.20270270270270271
  - -0.21846846846846846
  - -0.21530920060331826
  train_neg_hamming_loss_samples:
  - -0.13175675675675674
  - -0.1438714499252616
  - -0.1403903903903904
  - -0.14339339339339338
  - -0.14668174962292613
  train_neg_hamming_loss_samples_oob:
  - -0.20570570570570565
  - -0.203288490284006
  - -0.20270270270270271
  - -0.21846846846846846
  - -0.21530920060331823
  train_neg_hamming_loss_weighted:
  - -0.16737024983098278
  - -0.1791370064912666
  - -0.17582123608324482
  - -0.17813625143468076
  - -0.18327764342944608
  train_neg_hamming_loss_weighted_oob:
  - -0.245546593714133
  - -0.2429423155320016
  - -0.2424387269365435
  - -0.2586395295819379
  - -0.25459096521715113
  train_neg_label_ranking_loss:
  - -0.09236111111111113
  - -0.0995640259093174
  - -0.09583958958958959
  - -0.10343468468468468
  - -0.10187908496732027
  train_neg_label_ranking_loss_oob:
  - -0.13128753753753752
  - -0.14249501743896362
  - -0.13623623623623624
  - -0.14837962962962964
  - -0.14609728506787328
  train_precision_macro:
  - 0.8682432432432431
  - 0.8561285500747383
  - 0.8596096096096096
  - 0.8566066066066066
  - 0.8533182503770739
  train_precision_macro_oob:
  - 0.7942942942942942
  - 0.796711509715994
  - 0.7972972972972974
  - 0.7815315315315315
  - 0.7846907993966817
  train_precision_micro:
  - 0.8682432432432432
  - 0.8561285500747384
  - 0.8596096096096096
  - 0.8566066066066066
  - 0.8533182503770739
  train_precision_micro_oob:
  - 0.7942942942942943
  - 0.796711509715994
  - 0.7972972972972973
  - 0.7815315315315315
  - 0.7846907993966817
  train_precision_samples:
  - 0.8682432432432432
  - 0.8561285500747385
  - 0.8596096096096097
  - 0.8566066066066067
  - 0.853318250377074
  train_precision_samples_oob:
  - 0.7942942942942944
  - 0.7967115097159941
  - 0.7972972972972973
  - 0.7815315315315315
  - 0.7846907993966818
  train_precision_weighted:
  - 0.8326297501690172
  - 0.8208629935087334
  - 0.8241787639167553
  - 0.8218637485653192
  - 0.8167223565705538
  train_precision_weighted_oob:
  - 0.7544534062858671
  - 0.7570576844679985
  - 0.7575612730634566
  - 0.7413604704180621
  - 0.7454090347828487
  train_recall_macro:
  - 0.8682432432432431
  - 0.8561285500747383
  - 0.8596096096096096
  - 0.8566066066066066
  - 0.8533182503770739
  train_recall_macro_oob:
  - 0.7942942942942942
  - 0.796711509715994
  - 0.7972972972972974
  - 0.7815315315315315
  - 0.7846907993966817
  train_recall_micro:
  - 0.8682432432432432
  - 0.8561285500747384
  - 0.8596096096096096
  - 0.8566066066066066
  - 0.8533182503770739
  train_recall_micro_oob:
  - 0.7942942942942943
  - 0.796711509715994
  - 0.7972972972972973
  - 0.7815315315315315
  - 0.7846907993966817
  train_recall_samples:
  - 0.8682432432432432
  - 0.8561285500747385
  - 0.8596096096096097
  - 0.8566066066066067
  - 0.853318250377074
  train_recall_samples_oob:
  - 0.7942942942942944
  - 0.7967115097159941
  - 0.7972972972972973
  - 0.7815315315315315
  - 0.7846907993966818
  train_recall_weighted:
  - 0.8326297501690172
  - 0.8208629935087334
  - 0.8241787639167553
  - 0.8218637485653192
  - 0.8167223565705538
  train_recall_weighted_oob:
  - 0.7544534062858671
  - 0.7570576844679985
  - 0.7575612730634566
  - 0.7413604704180621
  - 0.7454090347828487
  train_roc_auc_macro:
  - 0.907087052031272
  - 0.8951049750090672
  - 0.9051590117351097
  - 0.9046089208034234
  - 0.9058415335310771
  train_roc_auc_macro_oob:
  - 0.8336086588584538
  - 0.8120267159967755
  - 0.8429559099737339
  - 0.8194564992230808
  - 0.8205352363289148
  train_roc_auc_micro:
  - 0.9167623767840021
  - 0.9079597377165914
  - 0.9093059959580395
  - 0.9101132540980025
  - 0.9122141539245816
  train_roc_auc_micro_oob:
  - 0.8709028596918421
  - 0.8631456663440997
  - 0.8645684502847484
  - 0.8602620790191926
  - 0.8625274079137545
  train_roc_auc_samples:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_roc_auc_weighted:
  - 0.8714184224777853
  - 0.8562597716271305
  - 0.8717307786668871
  - 0.8710233432228539
  - 0.8724573107093114
  train_roc_auc_weighted_oob:
  - 0.8083867060086738
  - 0.7886295425720466
  - 0.8131213851320781
  - 0.7958989039518388
  - 0.7977400812704498
start: 2023-12-21 23:05:08.952713
wrapper: null
