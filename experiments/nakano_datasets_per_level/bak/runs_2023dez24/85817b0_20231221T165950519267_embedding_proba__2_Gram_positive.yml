active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ6T8AmJmZmZnJvwCamZmZmek/gJmZmZmZAcAAmpmZmZnpPw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-21 17:00:06.220248
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    monotonic_cst: null
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_level: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            monotonic_cst: null
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 2
          memory:
            call: joblib.memory.Memory
            params: {}
          verbose: 10
          warm_start: false
    verbose: false
  name: embedding_proba__2
  params: {}
hash: 85817b006b29dfdb7643a5d52131a0f8a99d921198c355aede63031b8515be5c
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/85817b0_20231221T165950519267_embedding_proba__2_Gram_positive.yml
results:
  fit_time:
  - 4.542006969451904
  - 4.640039682388306
  - 5.019540786743164
  - 4.561087369918823
  - 4.671431303024292
  score_time:
  - 2.1768059730529785
  - 2.457782745361328
  - 2.3797264099121094
  - 2.495790958404541
  - 2.4159491062164307
  test_average_precision_macro:
  - 0.8352940454427364
  - 0.8361459389093866
  - 0.8918890364221307
  - 0.9478341034317692
  - 0.8962219226593688
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9716474393388034
  - 0.9704827390910549
  - 0.9704631004153058
  - 0.9881942209054192
  - 0.9603103699392926
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.970873786407767
  - 0.9551282051282051
  - 0.9635922330097088
  - 0.9669811320754716
  - 0.9530744336569579
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9519226710805146
  - 0.9580798535551699
  - 0.964402247754616
  - 0.9841726704002526
  - 0.9572521510224881
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.7888349514563108
  - 0.8221153846153846
  - 0.796116504854369
  - 0.8301886792452831
  - 0.7839805825242719
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.7888349514563107
  - 0.8221153846153846
  - 0.7961165048543689
  - 0.8301886792452831
  - 0.7839805825242718
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.7888349514563107
  - 0.8221153846153846
  - 0.7961165048543689
  - 0.8301886792452831
  - 0.7839805825242718
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.7297423450336071
  - 0.7760073260073259
  - 0.7436519790888723
  - 0.7893378426486294
  - 0.7211538461538461
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.6657969578529594
  - 0.7074422740092541
  - 0.6735917343556176
  - 0.7181860465116279
  - 0.6604737310349496
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.6513026052104208
  - 0.6979591836734694
  - 0.6612903225806451
  - 0.7096774193548387
  - 0.6447105788423154
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.6647249190938508
  - 0.7166666666666667
  - 0.6750809061488671
  - 0.7283018867924527
  - 0.6569579288025887
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.5771392349254794
  - 0.6366770710297677
  - 0.5951766811743714
  - 0.6541930937279774
  - 0.5674680004280886
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.970873786407767
  - 0.9551282051282051
  - 0.9635922330097088
  - 0.9669811320754716
  - 0.9530744336569579
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.21033688406444362
  - 0.34799663223115995
  - 0.2662992601795702
  - 0.36290629012401276
  - 0.22491281171884972
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.3517497489428545
  - 0.4883554369276
  - 0.3887144210071207
  - 0.5114083119567588
  - 0.328921500454338
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.17152103559870552
  - 0.2980769230769231
  - 0.1941747572815534
  - 0.32075471698113206
  - 0.1521035598705502
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.3032018965174004
  - 0.4542641591191008
  - 0.3538685569740503
  - 0.47581067449483555
  - 0.2982662202233917
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9785007623439683
  - 0.9665000181154239
  - 0.9734202664637929
  - 0.9756274365566058
  - 0.9652088182038854
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.0679611650485437
  - -1.1346153846153846
  - -1.1262135922330097
  - -1.0660377358490567
  - -1.116504854368932
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.2111650485436893
  - -0.17788461538461542
  - -0.20388349514563106
  - -0.16981132075471697
  - -0.21601941747572814
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.2111650485436893
  - -0.1778846153846154
  - -0.20388349514563106
  - -0.16981132075471697
  - -0.21601941747572814
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.2111650485436893
  - -0.1778846153846154
  - -0.20388349514563106
  - -0.16981132075471697
  - -0.21601941747572814
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.27025765496639287
  - -0.223992673992674
  - -0.2563480209111277
  - -0.2106621573513706
  - -0.27884615384615385
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.019417475728155338
  - -0.041666666666666664
  - -0.037216828478964396
  - -0.0220125786163522
  - -0.03559870550161812
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.7888349514563108
  - 0.8221153846153846
  - 0.796116504854369
  - 0.8301886792452831
  - 0.7839805825242719
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.7888349514563107
  - 0.8221153846153846
  - 0.7961165048543689
  - 0.8301886792452831
  - 0.7839805825242718
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.7888349514563107
  - 0.8221153846153846
  - 0.7961165048543689
  - 0.8301886792452831
  - 0.7839805825242718
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.7297423450336071
  - 0.7760073260073259
  - 0.7436519790888723
  - 0.7893378426486294
  - 0.7211538461538461
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.7888349514563108
  - 0.8221153846153846
  - 0.796116504854369
  - 0.8301886792452831
  - 0.7839805825242719
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.7888349514563107
  - 0.8221153846153846
  - 0.7961165048543689
  - 0.8301886792452831
  - 0.7839805825242718
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.7888349514563107
  - 0.8221153846153846
  - 0.7961165048543689
  - 0.8301886792452831
  - 0.7839805825242718
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.7297423450336071
  - 0.7760073260073259
  - 0.7436519790888723
  - 0.7893378426486294
  - 0.7211538461538461
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9884070618286742
  - 0.9831315534628999
  - 0.9793677181017335
  - 0.994531159359936
  - 0.9846400599215659
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9930382117882117
  - 0.9870770173020977
  - 0.9867007992007991
  - 0.995995016019936
  - 0.9854520479520479
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9805825242718448
  - 0.9583333333333333
  - 0.9627831715210355
  - 0.9779874213836477
  - 0.9644012944983819
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9914482138011398
  - 0.9881574834702465
  - 0.9901988108509846
  - 0.9966691118332748
  - 0.9822605393560362
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9212094080754811
  - 0.9439054081095488
  - 0.9334729075710789
  - 0.9402068211961234
  - 0.8911593079751343
  train_average_precision_macro_oob:
  - 0.892100884307437
  - 0.895591347670097
  - 0.8653301887195314
  - 0.860474774219244
  - 0.8559033584449526
  train_average_precision_micro:
  - 0.9908821625297147
  - 0.9886002136330293
  - 0.9870420488681705
  - 0.9856482581330972
  - 0.9887188702511793
  train_average_precision_micro_oob:
  - 0.9824670523321652
  - 0.9812701706729704
  - 0.9757294963052815
  - 0.9742214774528715
  - 0.9756318150583819
  train_average_precision_samples:
  - 0.9767628205128206
  - 0.970883534136546
  - 0.9753605769230769
  - 0.9642857142857143
  - 0.970352564102564
  train_average_precision_samples_oob:
  - 0.9685496794871794
  - 0.9656626506024096
  - 0.9611378205128206
  - 0.9580306698950767
  - 0.9597355769230769
  train_average_precision_weighted:
  - 0.982871742481115
  - 0.9846730935953166
  - 0.9817979318216019
  - 0.9815842035341678
  - 0.975195516339307
  train_average_precision_weighted_oob:
  - 0.9724119742389074
  - 0.9726460275509651
  - 0.9625060713871236
  - 0.9639243762094281
  - 0.957782274488331
  train_f1_macro:
  - 0.8179086538461539
  - 0.8403614457831325
  - 0.811298076923077
  - 0.8286924939467312
  - 0.8155048076923077
  train_f1_macro_oob:
  - 0.8070913461538463
  - 0.813855421686747
  - 0.7896634615384616
  - 0.8159806295399515
  - 0.8058894230769231
  train_f1_micro:
  - 0.8179086538461539
  - 0.8403614457831325
  - 0.8112980769230769
  - 0.8286924939467313
  - 0.8155048076923077
  train_f1_micro_oob:
  - 0.8070913461538461
  - 0.813855421686747
  - 0.7896634615384616
  - 0.8159806295399515
  - 0.8058894230769231
  train_f1_samples:
  - 0.8179086538461539
  - 0.8403614457831325
  - 0.8112980769230769
  - 0.8286924939467313
  - 0.8155048076923077
  train_f1_samples_oob:
  - 0.8070913461538461
  - 0.813855421686747
  - 0.7896634615384616
  - 0.8159806295399515
  - 0.8058894230769231
  train_f1_weighted:
  - 0.7694487791444832
  - 0.8015679944659019
  - 0.7624093537727189
  - 0.7819603881059802
  - 0.7680890857352671
  train_f1_weighted_oob:
  - 0.7544577290251514
  - 0.7629561307430679
  - 0.7311708279787038
  - 0.7663699548835509
  - 0.7549109601615567
  train_jaccard_macro:
  - 0.7024994936731552
  - 0.7321595601764754
  - 0.6933585260749513
  - 0.717087501913209
  - 0.6987237685649986
  train_jaccard_macro_oob:
  - 0.6884805810410374
  - 0.6973407893614945
  - 0.6666116630393613
  - 0.6999057490123266
  - 0.6863656179302134
  train_jaccard_micro:
  - 0.6919166243009659
  - 0.7246753246753247
  - 0.6825075834175935
  - 0.7074935400516796
  - 0.6884830035514967
  train_jaccard_micro_oob:
  - 0.6765743073047858
  - 0.686135093956323
  - 0.6524329692154915
  - 0.689161554192229
  - 0.6748867639657775
  train_jaccard_samples:
  - 0.7096153846153844
  - 0.7455421686746986
  - 0.6990384615384614
  - 0.7271993543179982
  - 0.7057692307692307
  train_jaccard_samples_oob:
  - 0.6923076923076922
  - 0.7031325301204817
  - 0.6647435897435897
  - 0.7068603712671508
  - 0.690705128205128
  train_jaccard_weighted:
  - 0.6282926980318544
  - 0.6702989520990303
  - 0.6182633011586357
  - 0.6447882740672833
  - 0.6259917104905265
  train_jaccard_weighted_oob:
  - 0.6091645993167099
  - 0.6197812519686776
  - 0.5797002109599718
  - 0.6239542000853954
  - 0.6091784831470103
  train_label_ranking_average_precision_score:
  - 0.9767628205128206
  - 0.970883534136546
  - 0.9753605769230769
  - 0.9642857142857143
  - 0.970352564102564
  train_label_ranking_average_precision_score_oob:
  - 0.9685496794871794
  - 0.9656626506024095
  - 0.9611378205128204
  - 0.9580306698950766
  - 0.9597355769230768
  train_matthews_corrcoef_macro:
  - 0.3397202289002647
  - 0.38748917424075185
  - 0.29952606648285995
  - 0.3697071866313639
  - 0.31967952238753394
  train_matthews_corrcoef_macro_oob:
  - 0.30963608818867283
  - 0.3253489192632733
  - 0.24126189241947882
  - 0.3295338752678347
  - 0.28915152140011735
  train_matthews_corrcoef_micro:
  - 0.4718687108662076
  - 0.549239478714306
  - 0.44735186904416685
  - 0.5113072664046161
  - 0.4630637848009001
  train_matthews_corrcoef_micro_oob:
  - 0.431215956823468
  - 0.4569619163944623
  - 0.3570636205563893
  - 0.4663214182273334
  - 0.42533493598784594
  train_matthews_corrcoef_samples:
  - 0.27884615384615385
  - 0.3686746987951807
  - 0.25240384615384615
  - 0.324455205811138
  - 0.2692307692307692
  train_matthews_corrcoef_samples_oob:
  - 0.23557692307692307
  - 0.26265060240963856
  - 0.1674679487179487
  - 0.2736077481840194
  - 0.23237179487179485
  train_matthews_corrcoef_weighted:
  - 0.4397508612917565
  - 0.513101453416075
  - 0.4060706755043545
  - 0.4791772502421237
  - 0.4256763052885839
  train_matthews_corrcoef_weighted_oob:
  - 0.4013893398329446
  - 0.42530277047512116
  - 0.32318358996463664
  - 0.433160080087575
  - 0.3875704184158135
  train_ndgc:
  - 0.9827531236050929
  - 0.9785540293306559
  - 0.9817178434174166
  - 0.9735423502270907
  - 0.9781242042709715
  train_ndgc_oob:
  - 0.9767556383048017
  - 0.9746701042324951
  - 0.971162661542937
  - 0.9689416760082808
  - 0.970219485287921
  train_neg_coverage_error:
  - -1.0625
  - -1.072289156626506
  - -1.0649038461538463
  - -1.089588377723971
  - -1.0769230769230769
  train_neg_coverage_error_oob:
  - -1.0841346153846154
  - -1.091566265060241
  - -1.0985576923076923
  - -1.11864406779661
  - -1.1105769230769231
  train_neg_hamming_loss_macro:
  - -0.18209134615384615
  - -0.15963855421686746
  - -0.18870192307692307
  - -0.17130750605326878
  - -0.1844951923076923
  train_neg_hamming_loss_macro_oob:
  - -0.19290865384615383
  - -0.186144578313253
  - -0.21033653846153846
  - -0.18401937046004846
  - -0.19411057692307693
  train_neg_hamming_loss_micro:
  - -0.18209134615384615
  - -0.15963855421686746
  - -0.18870192307692307
  - -0.17130750605326878
  - -0.18449519230769232
  train_neg_hamming_loss_micro_oob:
  - -0.19290865384615385
  - -0.186144578313253
  - -0.21033653846153846
  - -0.18401937046004843
  - -0.19411057692307693
  train_neg_hamming_loss_samples:
  - -0.18209134615384615
  - -0.15963855421686746
  - -0.18870192307692307
  - -0.17130750605326878
  - -0.18449519230769232
  train_neg_hamming_loss_samples_oob:
  - -0.19290865384615385
  - -0.186144578313253
  - -0.21033653846153846
  - -0.18401937046004843
  - -0.19411057692307693
  train_neg_hamming_loss_weighted:
  - -0.2305512208555168
  - -0.1984320055340981
  - -0.23759064622728107
  - -0.21803961189401988
  - -0.2319109142647329
  train_neg_hamming_loss_weighted_oob:
  - -0.24554227097484857
  - -0.23704386925693202
  - -0.26882917202129614
  - -0.23363004511644925
  - -0.2450890398384432
  train_neg_label_ranking_loss:
  - -0.018429487179487176
  - -0.0214859437751004
  - -0.019230769230769232
  - -0.026634382566585957
  - -0.023036858974358972
  train_neg_label_ranking_loss_oob:
  - -0.025440705128205125
  - -0.027710843373493974
  - -0.030448717948717945
  - -0.035916061339790153
  - -0.034054487179487176
  train_precision_macro:
  - 0.8179086538461539
  - 0.8403614457831325
  - 0.811298076923077
  - 0.8286924939467312
  - 0.8155048076923077
  train_precision_macro_oob:
  - 0.8070913461538463
  - 0.813855421686747
  - 0.7896634615384616
  - 0.8159806295399515
  - 0.8058894230769231
  train_precision_micro:
  - 0.8179086538461539
  - 0.8403614457831325
  - 0.8112980769230769
  - 0.8286924939467313
  - 0.8155048076923077
  train_precision_micro_oob:
  - 0.8070913461538461
  - 0.813855421686747
  - 0.7896634615384616
  - 0.8159806295399515
  - 0.8058894230769231
  train_precision_samples:
  - 0.8179086538461539
  - 0.8403614457831325
  - 0.8112980769230769
  - 0.8286924939467313
  - 0.8155048076923077
  train_precision_samples_oob:
  - 0.8070913461538461
  - 0.813855421686747
  - 0.7896634615384616
  - 0.8159806295399515
  - 0.8058894230769231
  train_precision_weighted:
  - 0.7694487791444832
  - 0.8015679944659019
  - 0.7624093537727189
  - 0.7819603881059802
  - 0.7680890857352671
  train_precision_weighted_oob:
  - 0.7544577290251514
  - 0.7629561307430679
  - 0.7311708279787038
  - 0.7663699548835509
  - 0.7549109601615567
  train_recall_macro:
  - 0.8179086538461539
  - 0.8403614457831325
  - 0.811298076923077
  - 0.8286924939467312
  - 0.8155048076923077
  train_recall_macro_oob:
  - 0.8070913461538463
  - 0.813855421686747
  - 0.7896634615384616
  - 0.8159806295399515
  - 0.8058894230769231
  train_recall_micro:
  - 0.8179086538461539
  - 0.8403614457831325
  - 0.8112980769230769
  - 0.8286924939467313
  - 0.8155048076923077
  train_recall_micro_oob:
  - 0.8070913461538461
  - 0.813855421686747
  - 0.7896634615384616
  - 0.8159806295399515
  - 0.8058894230769231
  train_recall_samples:
  - 0.8179086538461539
  - 0.8403614457831325
  - 0.8112980769230769
  - 0.8286924939467313
  - 0.8155048076923077
  train_recall_samples_oob:
  - 0.8070913461538461
  - 0.813855421686747
  - 0.7896634615384616
  - 0.8159806295399515
  - 0.8058894230769231
  train_recall_weighted:
  - 0.7694487791444832
  - 0.8015679944659019
  - 0.7624093537727189
  - 0.7819603881059802
  - 0.7680890857352671
  train_recall_weighted_oob:
  - 0.7544577290251514
  - 0.7629561307430679
  - 0.7311708279787038
  - 0.7663699548835509
  - 0.7549109601615567
  train_roc_auc_macro:
  - 0.9947266827804616
  - 0.9944998769707909
  - 0.9926704087557657
  - 0.9934667222851994
  - 0.9933732576426837
  train_roc_auc_macro_oob:
  - 0.9901923337845506
  - 0.9880173238415536
  - 0.987845817180859
  - 0.9841741519298733
  - 0.9862268710531061
  train_roc_auc_micro:
  - 0.9963098216254038
  - 0.9954792008567753
  - 0.9953206621234341
  - 0.9946193652365557
  - 0.9961411277568507
  train_roc_auc_micro_oob:
  - 0.9925602170016582
  - 0.9919388391928439
  - 0.9914042806069145
  - 0.9893513529257565
  - 0.9908291878732113
  train_roc_auc_samples:
  - 0.9815705128205129
  - 0.9785140562248995
  - 0.9807692307692307
  - 0.9733656174334141
  - 0.976963141025641
  train_roc_auc_samples_oob:
  - 0.9745592948717948
  - 0.9722891566265061
  - 0.969551282051282
  - 0.9640839386602099
  - 0.9659455128205128
  train_roc_auc_weighted:
  - 0.9963400757933892
  - 0.9954214155788335
  - 0.9952376333109793
  - 0.9938388158543652
  - 0.996215751128172
  train_roc_auc_weighted_oob:
  - 0.9918481316076738
  - 0.9913547115867201
  - 0.9901120676555335
  - 0.9883956510825895
  - 0.9903475179467683
start: 2023-12-21 16:59:50.519267
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
