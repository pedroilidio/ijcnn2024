active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjvzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz479oZmZmZmb2P2hmZmZmZvY/zMzMzMzMBMCgmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMzC0AAnJmZmZnZPwCcmZmZmdk/QGZmZmZmFsAAZ2ZmZmb2Pw==
      n_labels: 8
      n_samples: 1392
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_negative
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_negative.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 15:38:45.058029
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 4
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_weak__4
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 987505bbbcc575c882ee2aa7dbc7ada6afac0f463a7691b613ea351197166781
metaestimator: null
modify_params:
  max_levels: 4
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/987505b_20231212T153744721573_embedding_weak__4_Gram_negative.yml
results:
  fit_time:
  - 27.38120436668396
  - 27.884920835494995
  - 26.86915397644043
  - 26.135583639144897
  - 30.987639904022217
  score_time:
  - 6.067740440368652
  - 6.096437692642212
  - 5.904163122177124
  - 6.131677150726318
  - 5.922344207763672
  test_average_precision_macro:
  - 0.7701131618591774
  - 0.7582278809348544
  - 0.7554142527198365
  - 0.745014075496722
  - 0.7808204235849161
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9439405091956417
  - 0.9488756230441805
  - 0.9330333220889102
  - 0.9430444821123806
  - 0.9449594552310346
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9737662337662337
  - 0.983363309352518
  - 0.974220623501199
  - 0.9732142857142856
  - 0.9783393501805054
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9656973972945646
  - 0.9774623976653871
  - 0.9688753557231519
  - 0.9506096453656366
  - 0.9725972181439656
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.975
  - 0.9716726618705036
  - 0.9676258992805755
  - 0.9709507042253522
  - 0.9715703971119134
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.975
  - 0.9716726618705036
  - 0.9676258992805755
  - 0.9709507042253521
  - 0.9715703971119134
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.975
  - 0.9716726618705036
  - 0.9676258992805755
  - 0.9709507042253521
  - 0.9715703971119134
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9776194939081537
  - 0.9793134350650968
  - 0.9704195406561348
  - 0.9783342914630642
  - 0.9660327266862679
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9519200346578169
  - 0.945788510596784
  - 0.938000350446172
  - 0.9443100170853266
  - 0.945215017381998
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9512195121951219
  - 0.944905990380411
  - 0.9372822299651568
  - 0.9435414884516681
  - 0.9447125932426503
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9573333333333333
  - 0.9513552794128332
  - 0.944756921735339
  - 0.9512732963437189
  - 0.9510629763337343
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.9564582854115626
  - 0.9595422882840949
  - 0.9426736728991724
  - 0.957760729529787
  - 0.9347533706420942
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9737662337662337
  - 0.983363309352518
  - 0.9742206235011992
  - 0.9732142857142858
  - 0.9783393501805054
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.7744912223164251
  - 0.7451519830355513
  - 0.6955040287010857
  - 0.7427272241095837
  - 0.7353613354291403
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.893015172010132
  - 0.8792016521239034
  - 0.859875562613881
  - 0.8739471430534991
  - 0.8763333102159766
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.9108535999360854
  - 0.9003911492587372
  - 0.8729711372915069
  - 0.8870333100530036
  - 0.8861070124318189
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.9214994697744552
  - 0.9326360960630363
  - 0.900350766134215
  - 0.9113167915280984
  - 0.897319568815704
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9807909649105854
  - 0.9880600358197487
  - 0.9820025087832048
  - 0.9800402785077961
  - 0.9844576587735722
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.16
  - -1.10431654676259
  - -1.1330935251798562
  - -1.119718309859155
  - -1.111913357400722
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.025
  - -0.028327338129496404
  - -0.03237410071942446
  - -0.029049295774647887
  - -0.028429602888086644
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.025
  - -0.028327338129496404
  - -0.03237410071942446
  - -0.029049295774647887
  - -0.028429602888086644
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.025
  - -0.028327338129496404
  - -0.03237410071942446
  - -0.029049295774647887
  - -0.028429602888086644
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.0223805060918463
  - -0.02068656493490329
  - -0.029580459343865113
  - -0.0216657085369359
  - -0.03396727331373206
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.013246753246753245
  - -0.007750942103460089
  - -0.010191846522781774
  - -0.011946680080482896
  - -0.007907856283307547
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.975
  - 0.9716726618705036
  - 0.9676258992805755
  - 0.9709507042253522
  - 0.9715703971119134
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.975
  - 0.9716726618705036
  - 0.9676258992805755
  - 0.9709507042253521
  - 0.9715703971119134
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.975
  - 0.9716726618705036
  - 0.9676258992805755
  - 0.9709507042253521
  - 0.9715703971119134
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9776194939081537
  - 0.9793134350650968
  - 0.9704195406561348
  - 0.9783342914630642
  - 0.9660327266862679
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.975
  - 0.9716726618705036
  - 0.9676258992805755
  - 0.9709507042253522
  - 0.9715703971119134
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.975
  - 0.9716726618705036
  - 0.9676258992805755
  - 0.9709507042253521
  - 0.9715703971119134
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.975
  - 0.9716726618705036
  - 0.9676258992805755
  - 0.9709507042253521
  - 0.9715703971119134
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9776194939081537
  - 0.9793134350650968
  - 0.9704195406561348
  - 0.9783342914630642
  - 0.9660327266862679
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9866946632607246
  - 0.9865450385414147
  - 0.9814399088142515
  - 0.9840004369564843
  - 0.9859293154788266
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9899265371661456
  - 0.9914120687034504
  - 0.9893405012951042
  - 0.9905740354787009
  - 0.9910402999062793
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9867532467532468
  - 0.9922490578965398
  - 0.9898081534772183
  - 0.9880533199195172
  - 0.9920921437166926
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9930775376537453
  - 0.9933491299999075
  - 0.9887164739450435
  - 0.9919956810038296
  - 0.9903764936050895
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7614870401143721
  - 0.7686342732652441
  - 0.7676217042489565
  - 0.7596324042552265
  - 0.7634647534390084
  train_average_precision_macro_oob:
  - 0.7524443125511686
  - 0.7550713096515134
  - 0.7553626384805517
  - 0.7522720703041982
  - 0.751285566089599
  train_average_precision_micro:
  - 0.9458438549134407
  - 0.9562383420303355
  - 0.9517319955346684
  - 0.9494756598795046
  - 0.9436091135620168
  train_average_precision_micro_oob:
  - 0.9385212881802302
  - 0.9483890531195541
  - 0.9455221608785815
  - 0.9404127039843185
  - 0.9350457238175551
  train_average_precision_samples:
  - 0.9856759176365264
  - 0.9812238180730103
  - 0.9843656493117895
  - 0.9854843561973526
  - 0.9818385650224215
  train_average_precision_samples_oob:
  - 0.9810163277486462
  - 0.974867487389929
  - 0.9791613234162605
  - 0.9771843304108647
  - 0.9749124492846466
  train_average_precision_weighted:
  - 0.9778072463730456
  - 0.9736783491827384
  - 0.9753198346763468
  - 0.9785007223409435
  - 0.9705827880853168
  train_average_precision_weighted_oob:
  - 0.9692184170635234
  - 0.9649138587515571
  - 0.9670397328535334
  - 0.9705315184865343
  - 0.9626779219567824
  train_f1_macro:
  - 0.9732542524619516
  - 0.9720601436265709
  - 0.972733393177738
  - 0.9733754512635379
  - 0.9734304932735427
  train_f1_macro_oob:
  - 0.9717994628469113
  - 0.9710502692998205
  - 0.9710502692998205
  - 0.9716832129963899
  - 0.9711883408071749
  train_f1_micro:
  - 0.9732542524619516
  - 0.9720601436265709
  - 0.9727333931777379
  - 0.9733754512635379
  - 0.9734304932735426
  train_f1_micro_oob:
  - 0.9717994628469113
  - 0.9710502692998204
  - 0.9710502692998204
  - 0.9716832129963899
  - 0.9711883408071749
  train_f1_samples:
  - 0.9732542524619516
  - 0.9720601436265709
  - 0.9727333931777379
  - 0.9733754512635379
  - 0.9734304932735426
  train_f1_samples_oob:
  - 0.9717994628469113
  - 0.9710502692998204
  - 0.9710502692998204
  - 0.9716832129963899
  - 0.9711883408071749
  train_f1_weighted:
  - 0.9819681012522047
  - 0.9804851858176454
  - 0.9828618981206801
  - 0.9811952813833984
  - 0.9834338613137282
  train_f1_weighted_oob:
  - 0.9754446497938608
  - 0.9733638555180696
  - 0.9764788374261256
  - 0.9740247736691998
  - 0.9760695933332051
  train_jaccard_macro:
  - 0.9489123750579324
  - 0.9464404430146461
  - 0.947924133122239
  - 0.949183270430441
  - 0.9491361810361781
  train_jaccard_macro_oob:
  - 0.9459474967734762
  - 0.9442521796110497
  - 0.9444928614419084
  - 0.9456184346202912
  - 0.9446534653538734
  train_jaccard_micro:
  - 0.9479019073569482
  - 0.9456391223665539
  - 0.9469142545057345
  - 0.9481318681318681
  - 0.9482363219394998
  train_jaccard_micro_oob:
  - 0.9451458424031345
  - 0.9437295528898583
  - 0.9437295528898583
  - 0.9449259462424575
  - 0.9439904108096328
  train_jaccard_samples:
  - 0.9538229203403777
  - 0.9521679995647679
  - 0.9530964945686671
  - 0.9540677533457317
  - 0.9545119354984827
  train_jaccard_samples_oob:
  - 0.9515440890552798
  - 0.9507716301253107
  - 0.9504524599677202
  - 0.9514604529044962
  - 0.9512723649046521
  train_jaccard_weighted:
  - 0.9647192874151884
  - 0.9618523950297464
  - 0.966429528939311
  - 0.9632110819015797
  - 0.9675387102586271
  train_jaccard_weighted_oob:
  - 0.9522521975037528
  - 0.9482586890279455
  - 0.9541572613432888
  - 0.9494916039142374
  - 0.953370598325838
  train_label_ranking_average_precision_score:
  - 0.9856759176365266
  - 0.9812238180730103
  - 0.9843656493117895
  - 0.9854843561973526
  - 0.9818385650224217
  train_label_ranking_average_precision_score_oob:
  - 0.9810163277486467
  - 0.9748674873899292
  - 0.9791613234162609
  - 0.9771843304108649
  - 0.9749124492846466
  train_matthews_corrcoef_macro:
  - 0.7574479978740432
  - 0.7527128483806669
  - 0.7547099446736028
  - 0.7707450280652286
  - 0.7624702600781502
  train_matthews_corrcoef_macro_oob:
  - 0.7331249079136167
  - 0.7364013010767637
  - 0.7470450254052478
  - 0.7404304176209427
  - 0.7436494902782637
  train_matthews_corrcoef_micro:
  - 0.888115356887021
  - 0.8834812389322282
  - 0.8862950142111315
  - 0.8881456747749925
  - 0.8896546782555119
  train_matthews_corrcoef_micro_oob:
  - 0.8793419968140213
  - 0.8752245608845092
  - 0.8764034646056484
  - 0.8775034485488014
  - 0.8766128291434591
  train_matthews_corrcoef_samples:
  - 0.9120147784905623
  - 0.9090189717381766
  - 0.9111905215732837
  - 0.9095134220265648
  - 0.914599160574799
  train_matthews_corrcoef_samples_oob:
  - 0.898641073403085
  - 0.8912666524108915
  - 0.8944256616836744
  - 0.8903369684013306
  - 0.8943566085871333
  train_matthews_corrcoef_weighted:
  - 0.9383523656104391
  - 0.9306715442603225
  - 0.937290530967146
  - 0.9384288339829826
  - 0.9384337782778922
  train_matthews_corrcoef_weighted_oob:
  - 0.9205583374802312
  - 0.9107417422855051
  - 0.9193404880965439
  - 0.9150644055291139
  - 0.9175662651017149
  train_ndgc:
  - 0.989728748368249
  - 0.9863553206493738
  - 0.9886502579891996
  - 0.9896069552829642
  - 0.9868614150189436
  train_ndgc_oob:
  - 0.9863622349118693
  - 0.9818059211592507
  - 0.9848454739747053
  - 0.9836813756834801
  - 0.9818757697286892
  train_neg_coverage_error:
  - -1.080572963294539
  - -1.0978456014362656
  - -1.0879712746858168
  - -1.0875451263537905
  - -1.0932735426008968
  train_neg_coverage_error_oob:
  - -1.1065353625783347
  - -1.137342908438061
  - -1.1149012567324954
  - -1.1308664259927799
  - -1.1309417040358745
  train_neg_hamming_loss_macro:
  - -0.026745747538048342
  - -0.027939856373429085
  - -0.02726660682226212
  - -0.026624548736462094
  - -0.0265695067264574
  train_neg_hamming_loss_macro_oob:
  - -0.028200537153088633
  - -0.028949730700179532
  - -0.028949730700179532
  - -0.028316787003610108
  - -0.028811659192825113
  train_neg_hamming_loss_micro:
  - -0.026745747538048342
  - -0.027939856373429085
  - -0.02726660682226212
  - -0.026624548736462094
  - -0.026569506726457397
  train_neg_hamming_loss_micro_oob:
  - -0.02820053715308863
  - -0.028949730700179532
  - -0.028949730700179532
  - -0.028316787003610108
  - -0.028811659192825113
  train_neg_hamming_loss_samples:
  - -0.026745747538048342
  - -0.027939856373429085
  - -0.02726660682226212
  - -0.026624548736462094
  - -0.026569506726457397
  train_neg_hamming_loss_samples_oob:
  - -0.02820053715308863
  - -0.028949730700179532
  - -0.028949730700179532
  - -0.028316787003610108
  - -0.028811659192825113
  train_neg_hamming_loss_weighted:
  - -0.018031898747795483
  - -0.019514814182354668
  - -0.01713810187931978
  - -0.018804718616601525
  - -0.016566138686271867
  train_neg_hamming_loss_weighted_oob:
  - -0.02455535020613922
  - -0.026636144481930524
  - -0.02352116257387445
  - -0.02597522633080025
  - -0.023930406666794975
  train_neg_label_ranking_loss:
  - -0.004891929914311292
  - -0.006753868513294007
  - -0.005653158929640077
  - -0.005006876396768094
  - -0.00643818065342729
  train_neg_label_ranking_loss_oob:
  - -0.00814255872447457
  - -0.011594853381208855
  - -0.009019406685474908
  - -0.010121196493037648
  - -0.010965193252188766
  train_precision_macro:
  - 0.9732542524619516
  - 0.9720601436265709
  - 0.972733393177738
  - 0.9733754512635379
  - 0.9734304932735427
  train_precision_macro_oob:
  - 0.9717994628469113
  - 0.9710502692998205
  - 0.9710502692998205
  - 0.9716832129963899
  - 0.9711883408071749
  train_precision_micro:
  - 0.9732542524619516
  - 0.9720601436265709
  - 0.9727333931777379
  - 0.9733754512635379
  - 0.9734304932735426
  train_precision_micro_oob:
  - 0.9717994628469113
  - 0.9710502692998204
  - 0.9710502692998204
  - 0.9716832129963899
  - 0.9711883408071749
  train_precision_samples:
  - 0.9732542524619516
  - 0.9720601436265709
  - 0.9727333931777379
  - 0.9733754512635379
  - 0.9734304932735426
  train_precision_samples_oob:
  - 0.9717994628469113
  - 0.9710502692998204
  - 0.9710502692998204
  - 0.9716832129963899
  - 0.9711883408071749
  train_precision_weighted:
  - 0.9819681012522047
  - 0.9804851858176454
  - 0.9828618981206801
  - 0.9811952813833984
  - 0.9834338613137282
  train_precision_weighted_oob:
  - 0.9754446497938608
  - 0.9733638555180696
  - 0.9764788374261256
  - 0.9740247736691998
  - 0.9760695933332051
  train_recall_macro:
  - 0.9732542524619516
  - 0.9720601436265709
  - 0.972733393177738
  - 0.9733754512635379
  - 0.9734304932735427
  train_recall_macro_oob:
  - 0.9717994628469113
  - 0.9710502692998205
  - 0.9710502692998205
  - 0.9716832129963899
  - 0.9711883408071749
  train_recall_micro:
  - 0.9732542524619516
  - 0.9720601436265709
  - 0.9727333931777379
  - 0.9733754512635379
  - 0.9734304932735426
  train_recall_micro_oob:
  - 0.9717994628469113
  - 0.9710502692998204
  - 0.9710502692998204
  - 0.9716832129963899
  - 0.9711883408071749
  train_recall_samples:
  - 0.9732542524619516
  - 0.9720601436265709
  - 0.9727333931777379
  - 0.9733754512635379
  - 0.9734304932735426
  train_recall_samples_oob:
  - 0.9717994628469113
  - 0.9710502692998204
  - 0.9710502692998204
  - 0.9716832129963899
  - 0.9711883408071749
  train_recall_weighted:
  - 0.9819681012522047
  - 0.9804851858176454
  - 0.9828618981206801
  - 0.9811952813833984
  - 0.9834338613137282
  train_recall_weighted_oob:
  - 0.9754446497938608
  - 0.9733638555180696
  - 0.9764788374261256
  - 0.9740247736691998
  - 0.9760695933332051
  train_roc_auc_macro:
  - 0.9894208091661407
  - 0.9901431385990069
  - 0.9893832089720791
  - 0.9887268467812024
  - 0.9893817614094478
  train_roc_auc_macro_oob:
  - 0.9850741032481998
  - 0.9858275202100832
  - 0.9851822777083263
  - 0.9855695770768187
  - 0.9847066167668995
  train_roc_auc_micro:
  - 0.9937751395498726
  - 0.9945728869497583
  - 0.9940496972107713
  - 0.9938265694003524
  - 0.9936167445618638
  train_roc_auc_micro_oob:
  - 0.9903215597994746
  - 0.9909525066065233
  - 0.9908534440301132
  - 0.9906597119643019
  - 0.9899926670596016
  train_roc_auc_samples:
  - 0.9951080700856887
  - 0.9932461314867059
  - 0.99434684107036
  - 0.9949931236032319
  - 0.9935618193465726
  train_roc_auc_samples_oob:
  - 0.9918574412755254
  - 0.9884051466187913
  - 0.9909805933145251
  - 0.9898788035069623
  - 0.9890348067478113
  train_roc_auc_weighted:
  - 0.9975099874986822
  - 0.9970302466052305
  - 0.997186812858575
  - 0.9971209422144699
  - 0.9963381791275288
  train_roc_auc_weighted_oob:
  - 0.9920347638621551
  - 0.9914460986648337
  - 0.992377112696574
  - 0.9921720255008153
  - 0.9910551048556282
start: 2023-12-12 15:37:44.721573
wrapper: null
