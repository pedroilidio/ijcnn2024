active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ+b+YmZmZmZn5v2hmZmZmZvY/oJmZmZmZ2T9oZmZmZmb2Pw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADIzMzMz478AmZmZmZn5v4AzMzMzMwNAgDMzMzMzA0CAzMzMzMwEwA==
      n_labels: 8
      n_samples: 1392
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_negative
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_negative.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 15:48:31.429783
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      monotonic_cst: null
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba_weak__2
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: afa5a35d537aac5db6d719ff6808efd610860485cf2ab2a54b35d46ac4f23363
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/afa5a35_20231212T154756170086_embedding_proba_weak__2_Gram_negative.yml
results:
  fit_time:
  - 10.142077684402466
  - 9.959283113479614
  - 10.459741592407227
  - 11.840106010437012
  - 11.856556415557861
  score_time:
  - 4.07543420791626
  - 4.42162299156189
  - 4.02962064743042
  - 4.366398811340332
  - 4.480832099914551
  test_average_precision_macro:
  - 0.7680501434866889
  - 0.7674073289680264
  - 0.7582210090208389
  - 0.7980942934376877
  - 0.7665968469571169
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9443227751607899
  - 0.938560723282291
  - 0.941142406984062
  - 0.947765100585367
  - 0.9538303431629757
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9772145417306707
  - 0.9691666666666667
  - 0.9821859903381642
  - 0.9739475500345065
  - 0.9743475682087782
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9687840130005639
  - 0.9685484432209671
  - 0.9743660396006446
  - 0.9737577539082015
  - 0.9723138021481387
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9713261648745519
  - 0.9691964285714286
  - 0.9682971014492754
  - 0.9701086956521738
  - 0.9706405693950177
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9713261648745519
  - 0.9691964285714286
  - 0.9682971014492754
  - 0.970108695652174
  - 0.9706405693950177
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9713261648745519
  - 0.9691964285714286
  - 0.9682971014492754
  - 0.970108695652174
  - 0.9706405693950177
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9809986743261158
  - 0.9736912915851271
  - 0.972438780609695
  - 0.971163390907286
  - 0.9737881948705363
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.945196717146427
  - 0.9414098812370655
  - 0.9397228616027579
  - 0.9428745979860024
  - 0.9437459743600971
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9442508710801394
  - 0.9402338674750974
  - 0.9385425812115891
  - 0.941952506596306
  - 0.9429559204840103
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9510517359979724
  - 0.9476911976911976
  - 0.9462450592885374
  - 0.9486312399355876
  - 0.9499766346741435
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.96283632570222
  - 0.9490137938908847
  - 0.9466956804712021
  - 0.9441976351340209
  - 0.9490783576126287
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9772145417306709
  - 0.9691666666666667
  - 0.9821859903381642
  - 0.9739475500345067
  - 0.9743475682087782
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.7608369564812643
  - 0.7631304220657182
  - 0.7532938071552794
  - 0.7496532408321753
  - 0.7196887655837186
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8806012801504929
  - 0.872043641296732
  - 0.8688783534986613
  - 0.8726764670531991
  - 0.8752347513852333
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.9044437626241691
  - 0.8990308089464148
  - 0.8993532588561758
  - 0.8938766534497413
  - 0.9000558725333945
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.9295563086471103
  - 0.9173359444687358
  - 0.9188278590490417
  - 0.911557807746809
  - 0.9170059204916523
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9832247546566496
  - 0.9777054670001081
  - 0.9870462568993734
  - 0.9814898882176859
  - 0.9813554069565197
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.125448028673835
  - -1.1571428571428573
  - -1.1014492753623188
  - -1.1521739130434783
  - -1.1209964412811388
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.02867383512544803
  - -0.03080357142857143
  - -0.03170289855072464
  - -0.029891304347826088
  - -0.029359430604982202
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.02867383512544803
  - -0.03080357142857143
  - -0.03170289855072464
  - -0.029891304347826088
  - -0.029359430604982206
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.02867383512544803
  - -0.03080357142857143
  - -0.03170289855072464
  - -0.029891304347826088
  - -0.029359430604982206
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.019001325673884226
  - -0.0263087084148728
  - -0.027561219390304845
  - -0.028836609092713916
  - -0.02621180512946374
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.010838026967059225
  - -0.014838435374149661
  - -0.006815044858523118
  - -0.011732229123533472
  - -0.011226910693102863
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9713261648745519
  - 0.9691964285714286
  - 0.9682971014492754
  - 0.9701086956521738
  - 0.9706405693950177
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9713261648745519
  - 0.9691964285714286
  - 0.9682971014492754
  - 0.970108695652174
  - 0.9706405693950177
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9713261648745519
  - 0.9691964285714286
  - 0.9682971014492754
  - 0.970108695652174
  - 0.9706405693950177
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9809986743261158
  - 0.9736912915851271
  - 0.972438780609695
  - 0.971163390907286
  - 0.9737881948705363
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9713261648745519
  - 0.9691964285714286
  - 0.9682971014492754
  - 0.9701086956521738
  - 0.9706405693950177
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9713261648745519
  - 0.9691964285714286
  - 0.9682971014492754
  - 0.970108695652174
  - 0.9706405693950177
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9713261648745519
  - 0.9691964285714286
  - 0.9682971014492754
  - 0.970108695652174
  - 0.9706405693950177
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9809986743261158
  - 0.9736912915851271
  - 0.972438780609695
  - 0.971163390907286
  - 0.9737881948705363
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9837023318599727
  - 0.9849661078813269
  - 0.984006509792196
  - 0.9889197966141949
  - 0.984295848601558
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.989810761191922
  - 0.9891529070912211
  - 0.9908525403617273
  - 0.9905911287785625
  - 0.9904274241837202
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9891619730329408
  - 0.9851615646258503
  - 0.9931849551414768
  - 0.9882677708764668
  - 0.9887730893068971
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9937630510042827
  - 0.9916703586722142
  - 0.9928337894550349
  - 0.9917651725969876
  - 0.9909812978175996
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7651463073998049
  - 0.7679795410816467
  - 0.7749620012297329
  - 0.7738290689334348
  - 0.7633782949178731
  train_average_precision_macro_oob:
  - 0.7563145597517128
  - 0.7561417125041047
  - 0.766547549564965
  - 0.7633174280148504
  - 0.7558627547835588
  train_average_precision_micro:
  - 0.9453328422467734
  - 0.951459216591713
  - 0.9600638082178821
  - 0.9560991991559407
  - 0.9565464174133856
  train_average_precision_micro_oob:
  - 0.9379453674482924
  - 0.9420913370643845
  - 0.9529800437177953
  - 0.9484468702898048
  - 0.9499896685101414
  train_average_precision_samples:
  - 0.981057202755316
  - 0.9820893285371702
  - 0.9816606929510155
  - 0.9840203106332137
  - 0.9833483348334834
  train_average_precision_samples_oob:
  - 0.9763487785051129
  - 0.9755566974991434
  - 0.9772124082607953
  - 0.9806238265915685
  - 0.9787364450730788
  train_average_precision_weighted:
  - 0.9785526575715534
  - 0.9799598617146107
  - 0.977652967988247
  - 0.9781174459471241
  - 0.976316152770919
  train_average_precision_weighted_oob:
  - 0.9715849060084614
  - 0.9713739257597129
  - 0.9706328256082043
  - 0.9721092721507538
  - 0.9705484769420131
  train_f1_macro:
  - 0.9697888589398023
  - 0.9720098920863309
  - 0.9722222222222222
  - 0.9727822580645161
  - 0.9717596759675967
  train_f1_macro_oob:
  - 0.9688903863432166
  - 0.9715602517985612
  - 0.9727822580645162
  - 0.971886200716846
  - 0.9706345634563456
  train_f1_micro:
  - 0.9697888589398024
  - 0.9720098920863309
  - 0.9722222222222222
  - 0.9727822580645161
  - 0.9717596759675967
  train_f1_micro_oob:
  - 0.9688903863432166
  - 0.9715602517985612
  - 0.9727822580645161
  - 0.9718862007168458
  - 0.9706345634563457
  train_f1_samples:
  - 0.9697888589398024
  - 0.9720098920863309
  - 0.9722222222222222
  - 0.9727822580645161
  - 0.9717596759675967
  train_f1_samples_oob:
  - 0.9688903863432166
  - 0.9715602517985612
  - 0.9727822580645161
  - 0.9718862007168458
  - 0.9706345634563457
  train_f1_weighted:
  - 0.9778500260896681
  - 0.9821573153848056
  - 0.9814379338116405
  - 0.9835422594193796
  - 0.9819071100935136
  train_f1_weighted_oob:
  - 0.9731538858167919
  - 0.9777876152686097
  - 0.9770859846179384
  - 0.977946519848748
  - 0.9760889468020558
  train_jaccard_macro:
  - 0.9425085676394314
  - 0.9468627117832464
  - 0.9468753883455516
  - 0.9482600905589722
  - 0.9461321197581782
  train_jaccard_macro_oob:
  - 0.9407065220066133
  - 0.9458952661108858
  - 0.9476761834503076
  - 0.9462765102515187
  - 0.9437096849617584
  train_jaccard_micro:
  - 0.9413496129946582
  - 0.9455440131219246
  - 0.9459459459459459
  - 0.9470068694798822
  - 0.945070576649524
  train_jaccard_micro_oob:
  - 0.9396579893257815
  - 0.9446934091157504
  - 0.9470068694798822
  - 0.9453099466172785
  - 0.9429445841075528
  train_jaccard_samples:
  - 0.9484803107444617
  - 0.9519329990553013
  - 0.9522066543571921
  - 0.9530646971507186
  - 0.9516678940621337
  train_jaccard_samples_oob:
  - 0.9472024830515396
  - 0.9512535426204493
  - 0.9533724340175953
  - 0.9519496035625069
  - 0.9497477020429315
  train_jaccard_weighted:
  - 0.9568349615534986
  - 0.9650905796227746
  - 0.9636614224283895
  - 0.9677642559131023
  - 0.9645968905487039
  train_jaccard_weighted_oob:
  - 0.9479306282914539
  - 0.9567488490562739
  - 0.9553152411822274
  - 0.9570039340024238
  - 0.9534256982789863
  train_label_ranking_average_precision_score:
  - 0.9810572027553165
  - 0.9820893285371703
  - 0.9816606929510159
  - 0.9840203106332142
  - 0.9833483348334836
  train_label_ranking_average_precision_score_oob:
  - 0.976348778505113
  - 0.9755566974991439
  - 0.9772124082607955
  - 0.9806238265915689
  - 0.9787364450730789
  train_matthews_corrcoef_macro:
  - 0.7553741333803471
  - 0.7663328738753352
  - 0.7623162743850525
  - 0.776737780033202
  - 0.7639846938426534
  train_matthews_corrcoef_macro_oob:
  - 0.7501773034574387
  - 0.7627408915921121
  - 0.7639104154784995
  - 0.771560137076423
  - 0.7542939636366419
  train_matthews_corrcoef_micro:
  - 0.874535455718491
  - 0.8850407946045726
  - 0.8848705545202489
  - 0.8879289575267089
  - 0.8837024076537823
  train_matthews_corrcoef_micro_oob:
  - 0.8692573769356845
  - 0.8810550301089137
  - 0.884944496151339
  - 0.8816964712451806
  - 0.8760155022890352
  train_matthews_corrcoef_samples:
  - 0.9035943490423513
  - 0.9115118684172435
  - 0.9122545761882074
  - 0.9138650037779539
  - 0.912358560251625
  train_matthews_corrcoef_samples_oob:
  - 0.8959599645864609
  - 0.905407935508753
  - 0.9078481143357994
  - 0.9052264235860082
  - 0.8977348323800209
  train_matthews_corrcoef_weighted:
  - 0.9282110692909558
  - 0.9388211280986934
  - 0.9349311129493911
  - 0.9434411601199303
  - 0.9368165782809106
  train_matthews_corrcoef_weighted_oob:
  - 0.9169920498866851
  - 0.9291729915325265
  - 0.9248434478635472
  - 0.928309029079279
  - 0.919492948861252
  train_ndgc:
  - 0.9863619488571337
  - 0.9869140403814628
  - 0.9867378523799263
  - 0.9884686470900286
  - 0.987962651247829
  train_ndgc_oob:
  - 0.9830811703232886
  - 0.9821789631922373
  - 0.9836598501437731
  - 0.9859911395641291
  - 0.9847032410837059
  train_neg_coverage_error:
  - -1.0970350404312668
  - -1.0953237410071943
  - -1.093189964157706
  - -1.0833333333333333
  - -1.0963096309630964
  train_neg_coverage_error_oob:
  - -1.123989218328841
  - -1.1223021582733812
  - -1.1281362007168458
  - -1.1084229390681004
  - -1.126012601260126
  train_neg_hamming_loss_macro:
  - -0.030211141060197663
  - -0.027990107913669064
  - -0.02777777777777778
  - -0.02721774193548387
  - -0.02824032403240324
  train_neg_hamming_loss_macro_oob:
  - -0.03110961365678347
  - -0.028439748201438846
  - -0.027217741935483868
  - -0.02811379928315412
  - -0.029365436543654366
  train_neg_hamming_loss_micro:
  - -0.030211141060197663
  - -0.027990107913669064
  - -0.027777777777777776
  - -0.02721774193548387
  - -0.02824032403240324
  train_neg_hamming_loss_micro_oob:
  - -0.03110961365678347
  - -0.02843974820143885
  - -0.02721774193548387
  - -0.028113799283154123
  - -0.029365436543654366
  train_neg_hamming_loss_samples:
  - -0.030211141060197663
  - -0.027990107913669064
  - -0.027777777777777776
  - -0.02721774193548387
  - -0.02824032403240324
  train_neg_hamming_loss_samples_oob:
  - -0.03110961365678347
  - -0.02843974820143885
  - -0.02721774193548387
  - -0.028113799283154123
  - -0.029365436543654366
  train_neg_hamming_loss_weighted:
  - -0.02214997391033182
  - -0.017842684615194445
  - -0.018562066188359556
  - -0.01645774058062053
  - -0.018092889906486363
  train_neg_hamming_loss_weighted_oob:
  - -0.026846114183208133
  - -0.022212384731390145
  - -0.02291401538206164
  - -0.022053480151252015
  - -0.02391105319794415
  train_neg_label_ranking_loss:
  - -0.006727848372053223
  - -0.006637547105173003
  - -0.006432411674347159
  - -0.005333674688513397
  - -0.006204191847756203
  train_neg_label_ranking_loss_oob:
  - -0.009990159585846918
  - -0.010116906474820143
  - -0.01051800648574842
  - -0.00849121010411333
  - -0.009858128670009859
  train_precision_macro:
  - 0.9697888589398023
  - 0.9720098920863309
  - 0.9722222222222222
  - 0.9727822580645161
  - 0.9717596759675967
  train_precision_macro_oob:
  - 0.9688903863432166
  - 0.9715602517985612
  - 0.9727822580645162
  - 0.971886200716846
  - 0.9706345634563456
  train_precision_micro:
  - 0.9697888589398024
  - 0.9720098920863309
  - 0.9722222222222222
  - 0.9727822580645161
  - 0.9717596759675967
  train_precision_micro_oob:
  - 0.9688903863432166
  - 0.9715602517985612
  - 0.9727822580645161
  - 0.9718862007168458
  - 0.9706345634563457
  train_precision_samples:
  - 0.9697888589398024
  - 0.9720098920863309
  - 0.9722222222222222
  - 0.9727822580645161
  - 0.9717596759675967
  train_precision_samples_oob:
  - 0.9688903863432166
  - 0.9715602517985612
  - 0.9727822580645161
  - 0.9718862007168458
  - 0.9706345634563457
  train_precision_weighted:
  - 0.9778500260896681
  - 0.9821573153848056
  - 0.9814379338116405
  - 0.9835422594193796
  - 0.9819071100935136
  train_precision_weighted_oob:
  - 0.9731538858167919
  - 0.9777876152686097
  - 0.9770859846179384
  - 0.977946519848748
  - 0.9760889468020558
  train_recall_macro:
  - 0.9697888589398023
  - 0.9720098920863309
  - 0.9722222222222222
  - 0.9727822580645161
  - 0.9717596759675967
  train_recall_macro_oob:
  - 0.9688903863432166
  - 0.9715602517985612
  - 0.9727822580645162
  - 0.971886200716846
  - 0.9706345634563456
  train_recall_micro:
  - 0.9697888589398024
  - 0.9720098920863309
  - 0.9722222222222222
  - 0.9727822580645161
  - 0.9717596759675967
  train_recall_micro_oob:
  - 0.9688903863432166
  - 0.9715602517985612
  - 0.9727822580645161
  - 0.9718862007168458
  - 0.9706345634563457
  train_recall_samples:
  - 0.9697888589398024
  - 0.9720098920863309
  - 0.9722222222222222
  - 0.9727822580645161
  - 0.9717596759675967
  train_recall_samples_oob:
  - 0.9688903863432166
  - 0.9715602517985612
  - 0.9727822580645161
  - 0.9718862007168458
  - 0.9706345634563457
  train_recall_weighted:
  - 0.9778500260896681
  - 0.9821573153848056
  - 0.9814379338116405
  - 0.9835422594193796
  - 0.9819071100935136
  train_recall_weighted_oob:
  - 0.9731538858167919
  - 0.9777876152686097
  - 0.9770859846179384
  - 0.977946519848748
  - 0.9760889468020558
  train_roc_auc_macro:
  - 0.9898335496049571
  - 0.9913961989614988
  - 0.9919708318766078
  - 0.9923105277463695
  - 0.9900285892016182
  train_roc_auc_macro_oob:
  - 0.9867824723045493
  - 0.9876184544771256
  - 0.9880333448394345
  - 0.9886089213230718
  - 0.9869657200589977
  train_roc_auc_micro:
  - 0.9932194961684293
  - 0.9935357011429272
  - 0.9945934430967951
  - 0.9940657581648316
  - 0.9939296536637874
  train_roc_auc_micro_oob:
  - 0.9905193043679019
  - 0.9905546059309905
  - 0.9909978374656317
  - 0.9912729427032156
  - 0.9912213128336628
  train_roc_auc_samples:
  - 0.9932721516279468
  - 0.993362452894827
  - 0.993567588325653
  - 0.9946663253114868
  - 0.9937958081522438
  train_roc_auc_samples_oob:
  - 0.990009840414153
  - 0.9898830935251799
  - 0.9894819935142515
  - 0.9915087898958868
  - 0.9901418713299903
  train_roc_auc_weighted:
  - 0.9969851970815207
  - 0.997728542321413
  - 0.997530845562304
  - 0.9977804677452967
  - 0.9972601151035072
  train_roc_auc_weighted_oob:
  - 0.992883468313398
  - 0.9931491648674483
  - 0.9924409288355339
  - 0.9937851620421211
  - 0.9932664988014656
start: 2023-12-12 15:47:56.170086
wrapper: null
