active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzQzMzMzMwNAzMzMzMzMDMBoZmZmZmb2Pw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ZmZmZmZm9r80MzMzMzPjP2ZmZmZmZva/NDMzMzMz4z+amZmZmZn5Pw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QGZmZmZmFsCAzMzMzMwMwMCZmZmZmRlAAJmZmZmZ+b/AmZmZmZkRQA==
      n_labels: 8
      n_samples: 1392
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_negative
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_negative.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 15:16:31.205361
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 7
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding__7
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 1a581359831a4a01838aaf3506a23877fb4211e9c630b64b9bf972f0d48fc4ad
metaestimator: null
modify_params:
  max_levels: 7
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/1a58135_20231212T151459315752_embedding__7_Gram_negative.yml
results:
  fit_time:
  - 42.89026117324829
  - 44.92503356933594
  - 46.27051091194153
  - 50.12467932701111
  - 51.13834357261658
  score_time:
  - 9.235059261322021
  - 8.764708757400513
  - 9.675865650177002
  - 8.779430627822876
  - 8.891034841537476
  test_average_precision_macro:
  - 0.8709435333245159
  - 0.8590000037202797
  - 0.7492895043823493
  - 0.878349528192049
  - 0.8552905561185252
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9710157919048011
  - 0.9721355324288344
  - 0.9775276377922757
  - 0.9800370240475255
  - 0.9808797595087089
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9653755868544601
  - 0.9653073286052009
  - 0.9775735294117647
  - 0.968392857142857
  - 0.9818734793187347
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9772004155736184
  - 0.9753569829550445
  - 0.9756594091675673
  - 0.9869305529851824
  - 0.9789444433748306
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9788732394366197
  - 0.9840425531914894
  - 0.9834558823529412
  - 0.98125
  - 0.9844890510948905
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9788732394366197
  - 0.9840425531914894
  - 0.9834558823529411
  - 0.98125
  - 0.9844890510948905
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9788732394366197
  - 0.9840425531914894
  - 0.9834558823529411
  - 0.98125
  - 0.9844890510948905
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9715087132967296
  - 0.9774883834678405
  - 0.9728876086517082
  - 0.974198250728863
  - 0.9740569649328774
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9589237285751919
  - 0.9686946040755413
  - 0.9677750500552872
  - 0.9633636275136961
  - 0.9699064571133207
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9586206896551724
  - 0.9685863874345549
  - 0.9674502712477396
  - 0.9631901840490797
  - 0.9694519317160827
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9640062597809078
  - 0.9733648542159182
  - 0.9714052287581699
  - 0.9682539682539684
  - 0.9738848337388483
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.9446956489095175
  - 0.9559949363782925
  - 0.947475600788244
  - 0.9497912903807709
  - 0.9499125412962204
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.96537558685446
  - 0.9653073286052009
  - 0.9775735294117647
  - 0.968392857142857
  - 0.9818734793187347
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6651453306042188
  - 0.6588347475979534
  - 0.68653952395151
  - 0.6697449143010319
  - 0.6927547477589181
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.903913420261253
  - 0.9276500113749774
  - 0.9271698561390227
  - 0.9159142995250581
  - 0.9304050701461649
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.8829191052588544
  - 0.9225319300226397
  - 0.9210812160842109
  - 0.9130476959359316
  - 0.9290019587849627
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.8846169498962377
  - 0.9149842363691607
  - 0.9124038246901951
  - 0.8971469045170877
  - 0.9192117996721285
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9750503908043473
  - 0.9747883827092959
  - 0.9849990950302647
  - 0.9773647247258328
  - 0.986508617088448
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.1654929577464788
  - -1.1595744680851063
  - -1.1801470588235294
  - -1.1642857142857144
  - -1.0912408759124088
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.02112676056338028
  - -0.01595744680851064
  - -0.016544117647058824
  - -0.01875
  - -0.01551094890510949
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.02112676056338028
  - -0.015957446808510637
  - -0.016544117647058824
  - -0.01875
  - -0.01551094890510949
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.02112676056338028
  - -0.015957446808510637
  - -0.016544117647058824
  - -0.01875
  - -0.01551094890510949
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.028491286703270467
  - -0.02251161653215945
  - -0.027112391348291895
  - -0.025801749271137025
  - -0.025943035067122658
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.015593561368209257
  - -0.016843971631205674
  - -0.01137955182072829
  - -0.014200680272108843
  - -0.006777893639207507
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9788732394366197
  - 0.9840425531914894
  - 0.9834558823529412
  - 0.98125
  - 0.9844890510948905
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9788732394366197
  - 0.9840425531914894
  - 0.9834558823529411
  - 0.98125
  - 0.9844890510948905
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9788732394366197
  - 0.9840425531914894
  - 0.9834558823529411
  - 0.98125
  - 0.9844890510948905
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9715087132967296
  - 0.9774883834678405
  - 0.9728876086517082
  - 0.974198250728863
  - 0.9740569649328774
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9788732394366197
  - 0.9840425531914894
  - 0.9834558823529412
  - 0.98125
  - 0.9844890510948905
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9788732394366197
  - 0.9840425531914894
  - 0.9834558823529411
  - 0.98125
  - 0.9844890510948905
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9788732394366197
  - 0.9840425531914894
  - 0.9834558823529411
  - 0.98125
  - 0.9844890510948905
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9715087132967296
  - 0.9774883834678405
  - 0.9728876086517082
  - 0.974198250728863
  - 0.9740569649328774
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9831709359900821
  - 0.9841000109917539
  - .nan
  - 0.994312019815785
  - .nan
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9901802937167253
  - 0.9919265443575261
  - 0.990442724712188
  - 0.9952728779075866
  - 0.995243214288335
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9844064386317909
  - 0.9831560283687943
  - 0.9886204481792717
  - 0.9857993197278911
  - 0.9932221063607923
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9931430284265421
  - 0.9891302814232723
  - .nan
  - 0.9961342488981275
  - .nan
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9814406917528702
  - 0.9963038343198348
  - 0.9947514228096865
  - 0.9959314317283836
  - 0.9977182547600378
  train_average_precision_macro_oob:
  - 0.8366898269777336
  - 0.9128003010834497
  - 0.9042924793872865
  - 0.897539099428011
  - 0.8962254868628037
  train_average_precision_micro:
  - 0.9955373598579854
  - 0.9966935081000206
  - 0.9960612120101907
  - 0.9961411139734045
  - 0.9966672869141253
  train_average_precision_micro_oob:
  - 0.9794427571435779
  - 0.9830120062675421
  - 0.9816122627384625
  - 0.9810536037895604
  - 0.9834099621985365
  train_average_precision_samples:
  - 0.990072202166065
  - 0.9921921921921921
  - 0.9895833333333333
  - 0.9904076738609112
  - 0.9895646988670244
  train_average_precision_samples_oob:
  - 0.9762656867801273
  - 0.9766966966966966
  - 0.9774043367346938
  - 0.9752633607399795
  - 0.9771317829457364
  train_average_precision_weighted:
  - 0.9952257109227096
  - 0.9966947425562334
  - 0.9955873388476354
  - 0.9961729360064974
  - 0.9975899433503332
  train_average_precision_weighted_oob:
  - 0.9779222457945554
  - 0.9830825351092649
  - 0.9817840653402943
  - 0.9804754313424561
  - 0.983288103022262
  train_f1_macro:
  - 0.9880415162454874
  - 0.9897522522522522
  - 0.9893973214285714
  - 0.989658273381295
  - 0.9892665474060823
  train_f1_macro_oob:
  - 0.9839801444043321
  - 0.9859234234234234
  - 0.9834821428571429
  - 0.9835881294964028
  - 0.9835644007155635
  train_f1_micro:
  - 0.9880415162454874
  - 0.9897522522522523
  - 0.9893973214285714
  - 0.989658273381295
  - 0.9892665474060823
  train_f1_micro_oob:
  - 0.9839801444043321
  - 0.9859234234234234
  - 0.9834821428571429
  - 0.9835881294964028
  - 0.9835644007155635
  train_f1_samples:
  - 0.9880415162454874
  - 0.9897522522522523
  - 0.9893973214285714
  - 0.989658273381295
  - 0.9892665474060823
  train_f1_samples_oob:
  - 0.9839801444043321
  - 0.9859234234234234
  - 0.9834821428571429
  - 0.9835881294964028
  - 0.9835644007155635
  train_f1_weighted:
  - 0.982247191360616
  - 0.9847063186685828
  - 0.984435928877989
  - 0.9851897311754727
  - 0.9849250034402091
  train_f1_weighted_oob:
  - 0.976308081232101
  - 0.9789972648463213
  - 0.9777851011649296
  - 0.9755452952612093
  - 0.9749835634451017
  train_jaccard_macro:
  - 0.9764484666397271
  - 0.9797924108463785
  - 0.979094900053946
  - 0.9795994830264912
  - 0.9788100802606202
  train_jaccard_macro_oob:
  - 0.9686308621209138
  - 0.9723654093427849
  - 0.9676315678783229
  - 0.9678858464707639
  - 0.9678206249432177
  train_jaccard_micro:
  - 0.9763656633221851
  - 0.9797124066436295
  - 0.9790171176145775
  - 0.9795282599020917
  - 0.9787610619469026
  train_jaccard_micro_oob:
  - 0.9684654674661337
  - 0.9722376457523598
  - 0.9675010979358806
  - 0.9677062596770626
  - 0.967660323396766
  train_jaccard_samples:
  - 0.9793421580425192
  - 0.9821421421421422
  - 0.9817857142857142
  - 0.9820543565147885
  - 0.9814748558934606
  train_jaccard_samples_oob:
  - 0.9727637384677097
  - 0.975895895895896
  - 0.9717857142857144
  - 0.9720223820943246
  - 0.9720930232558141
  train_jaccard_weighted:
  - 0.9651773995908165
  - 0.9699561167100983
  - 0.969409822259208
  - 0.9708863671207133
  - 0.9703400386630995
  train_jaccard_weighted_oob:
  - 0.9538130176160872
  - 0.9589519554476108
  - 0.9566288086561909
  - 0.9523374574420714
  - 0.9512970404170222
  train_label_ranking_average_precision_score:
  - 0.990072202166065
  - 0.9921921921921923
  - 0.9895833333333335
  - 0.9904076738609114
  - 0.9895646988670246
  train_label_ranking_average_precision_score_oob:
  - 0.9762656867801273
  - 0.9766966966966968
  - 0.977404336734694
  - 0.9752633607399795
  - 0.9771317829457367
  train_matthews_corrcoef_macro:
  - 0.6978993622683229
  - 0.7901858123797526
  - 0.8033337489748535
  - 0.7073748820402381
  - 0.7773342522094041
  train_matthews_corrcoef_macro_oob:
  - 0.6799965728200987
  - 0.6972875793080984
  - 0.6684359599396833
  - 0.6815154367264684
  - 0.683581401941046
  train_matthews_corrcoef_micro:
  - 0.9466757133127259
  - 0.9545141283957259
  - 0.9525037543351865
  - 0.9538820078610744
  - 0.9521623544511494
  train_matthews_corrcoef_micro_oob:
  - 0.9281819529157445
  - 0.937192563149833
  - 0.9254154187702133
  - 0.9262053499393974
  - 0.9262053589537875
  train_matthews_corrcoef_samples:
  - 0.9452741373198603
  - 0.9518939390312757
  - 0.9459260008346467
  - 0.9480415340073698
  - 0.9485437040375969
  train_matthews_corrcoef_samples_oob:
  - 0.9221851700861455
  - 0.9334360980653756
  - 0.9123689700278584
  - 0.9144363726899294
  - 0.9198144875016797
  train_matthews_corrcoef_weighted:
  - 0.9348593769543487
  - 0.9460750507687526
  - 0.9452569994439599
  - 0.9438185957466125
  - 0.9433862104850524
  train_matthews_corrcoef_weighted_oob:
  - 0.9145847765399253
  - 0.923196020780339
  - 0.9118891988205816
  - 0.9126966947400326
  - 0.9098078519574132
  train_ndgc:
  - 0.9926718904138736
  - 0.994253880707727
  - 0.9923039773022964
  - 0.9929124056397743
  - 0.9922902098198318
  train_ndgc_oob:
  - 0.9831051692784206
  - 0.9833324420538206
  - 0.9837413002575768
  - 0.982185030939237
  - 0.9836258186405648
  train_neg_coverage_error:
  - -1.0676895306859207
  - -1.0684684684684684
  - -1.0616071428571427
  - -1.064748201438849
  - -1.0679785330948122
  train_neg_coverage_error_oob:
  - -1.1489169675090252
  - -1.1414414414414416
  - -1.1214285714285714
  - -1.139388489208633
  - -1.1261180679785332
  train_neg_hamming_loss_macro:
  - -0.011958483754512635
  - -0.010247747747747747
  - -0.010602678571428572
  - -0.010341726618705038
  - -0.010733452593917711
  train_neg_hamming_loss_macro_oob:
  - -0.01601985559566787
  - -0.014076576576576577
  - -0.016517857142857143
  - -0.01641187050359712
  - -0.016435599284436494
  train_neg_hamming_loss_micro:
  - -0.011958483754512635
  - -0.010247747747747747
  - -0.010602678571428572
  - -0.010341726618705036
  - -0.01073345259391771
  train_neg_hamming_loss_micro_oob:
  - -0.01601985559566787
  - -0.014076576576576577
  - -0.016517857142857143
  - -0.01641187050359712
  - -0.016435599284436494
  train_neg_hamming_loss_samples:
  - -0.011958483754512635
  - -0.010247747747747747
  - -0.010602678571428572
  - -0.010341726618705036
  - -0.01073345259391771
  train_neg_hamming_loss_samples_oob:
  - -0.01601985559566787
  - -0.014076576576576577
  - -0.016517857142857143
  - -0.01641187050359712
  - -0.016435599284436494
  train_neg_hamming_loss_weighted:
  - -0.017752808639384075
  - -0.015293681331417178
  - -0.015564071122011035
  - -0.014810268824527299
  - -0.015074996559790837
  train_neg_hamming_loss_weighted_oob:
  - -0.02369191876789896
  - -0.02100273515367855
  - -0.02221489883507051
  - -0.02445470473879072
  - -0.025016436554898096
  train_neg_label_ranking_loss:
  - -0.0028365136668385763
  - -0.00252037752037752
  - -0.0030612244897959178
  - -0.0028263103802672143
  - -0.003066700741119345
  train_neg_label_ranking_loss_oob:
  - -0.012184115523465702
  - -0.011175461175461174
  - -0.010225340136054422
  - -0.011883350462487152
  - -0.009881591276940114
  train_precision_macro:
  - 0.9880415162454874
  - 0.9897522522522522
  - 0.9893973214285714
  - 0.989658273381295
  - 0.9892665474060823
  train_precision_macro_oob:
  - 0.9839801444043321
  - 0.9859234234234234
  - 0.9834821428571429
  - 0.9835881294964028
  - 0.9835644007155635
  train_precision_micro:
  - 0.9880415162454874
  - 0.9897522522522523
  - 0.9893973214285714
  - 0.989658273381295
  - 0.9892665474060823
  train_precision_micro_oob:
  - 0.9839801444043321
  - 0.9859234234234234
  - 0.9834821428571429
  - 0.9835881294964028
  - 0.9835644007155635
  train_precision_samples:
  - 0.9880415162454874
  - 0.9897522522522523
  - 0.9893973214285714
  - 0.989658273381295
  - 0.9892665474060823
  train_precision_samples_oob:
  - 0.9839801444043321
  - 0.9859234234234234
  - 0.9834821428571429
  - 0.9835881294964028
  - 0.9835644007155635
  train_precision_weighted:
  - 0.982247191360616
  - 0.9847063186685828
  - 0.984435928877989
  - 0.9851897311754727
  - 0.9849250034402091
  train_precision_weighted_oob:
  - 0.976308081232101
  - 0.9789972648463213
  - 0.9777851011649296
  - 0.9755452952612093
  - 0.9749835634451017
  train_recall_macro:
  - 0.9880415162454874
  - 0.9897522522522522
  - 0.9893973214285714
  - 0.989658273381295
  - 0.9892665474060823
  train_recall_macro_oob:
  - 0.9839801444043321
  - 0.9859234234234234
  - 0.9834821428571429
  - 0.9835881294964028
  - 0.9835644007155635
  train_recall_micro:
  - 0.9880415162454874
  - 0.9897522522522523
  - 0.9893973214285714
  - 0.989658273381295
  - 0.9892665474060823
  train_recall_micro_oob:
  - 0.9839801444043321
  - 0.9859234234234234
  - 0.9834821428571429
  - 0.9835881294964028
  - 0.9835644007155635
  train_recall_samples:
  - 0.9880415162454874
  - 0.9897522522522523
  - 0.9893973214285714
  - 0.989658273381295
  - 0.9892665474060823
  train_recall_samples_oob:
  - 0.9839801444043321
  - 0.9859234234234234
  - 0.9834821428571429
  - 0.9835881294964028
  - 0.9835644007155635
  train_recall_weighted:
  - 0.982247191360616
  - 0.9847063186685828
  - 0.984435928877989
  - 0.9851897311754727
  - 0.9849250034402091
  train_recall_weighted_oob:
  - 0.976308081232101
  - 0.9789972648463213
  - 0.9777851011649296
  - 0.9755452952612093
  - 0.9749835634451017
  train_roc_auc_macro:
  - 0.9993823282523616
  - 0.999577640568886
  - 0.9994316787071311
  - 0.9994580144689614
  - 0.9995841592392414
  train_roc_auc_macro_oob:
  - 0.9702918221072547
  - 0.9916494602163257
  - 0.9905204185618437
  - 0.9915211668462718
  - 0.9944956898346259
  train_roc_auc_micro:
  - 0.9992850979343708
  - 0.9994830187789816
  - 0.9993932503227831
  - 0.9993938960986359
  - 0.9994871684928284
  train_roc_auc_micro_oob:
  - 0.9929106896280665
  - 0.994998290070714
  - 0.9946128116680936
  - 0.9940971911585164
  - 0.9956033589941489
  train_roc_auc_samples:
  - 0.9971634863331612
  - 0.9974796224796225
  - 0.9969387755102042
  - 0.9971736896197329
  - 0.9969332992588805
  train_roc_auc_samples_oob:
  - 0.9878158844765343
  - 0.988824538824539
  - 0.9897746598639457
  - 0.988116649537513
  - 0.9901184087230599
  train_roc_auc_weighted:
  - 0.9991574161658632
  - 0.9993102792889139
  - 0.9990895947488169
  - 0.9991076097849777
  - 0.9992342017398742
  train_roc_auc_weighted_oob:
  - 0.9926112336397221
  - 0.9947397256874149
  - 0.9941148075977448
  - 0.9926297462068808
  - 0.9953687876176721
start: 2023-12-12 15:14:59.315752
wrapper: null
