active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/NDMzMzMz4z9mZmZmZmb2vw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADIzMzMz479AZmZmZmYSwACZmZmZmfm/AGdmZmZm9j/AmZmZmZkVQA==
      n_labels: 8
      n_samples: 1392
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_negative
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_negative.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 15:47:12.245694
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 9
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_weak__9
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 75313585fbeefbce985a43bfcc8e10da85a65062560719877915a3ef508e6714
metaestimator: null
modify_params:
  max_levels: 9
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/7531358_20231212T154504015825_embedding_weak__9_Gram_negative.yml
results:
  fit_time:
  - 68.68901753425598
  - 71.88261294364929
  - 67.06176376342773
  - 79.54299688339233
  - 71.90118670463562
  score_time:
  - 11.87729787826538
  - 10.78039836883545
  - 11.25692343711853
  - 10.361898422241211
  - 10.72588562965393
  test_average_precision_macro:
  - 0.7496562711526981
  - 0.7143357695476367
  - 0.7266069201763415
  - 0.7232160895984046
  - 0.7389002080289253
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9294915967899059
  - 0.938817046965388
  - 0.9208936224226596
  - 0.92429058845543
  - 0.9489120557429298
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9752730841440519
  - 0.9755594817432273
  - 0.9738095238095237
  - 0.967057761732852
  - 0.9775641025641025
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.964497579072985
  - 0.9601463730706302
  - 0.9492246010261896
  - 0.9594612419292251
  - 0.9696616961697982
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9646057347670252
  - 0.9642226148409894
  - 0.9598214285714286
  - 0.9652527075812275
  - 0.9615384615384615
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.964605734767025
  - 0.9642226148409894
  - 0.9598214285714286
  - 0.9652527075812274
  - 0.9615384615384616
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.964605734767025
  - 0.9642226148409894
  - 0.9598214285714286
  - 0.9652527075812274
  - 0.9615384615384616
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9747872248703642
  - 0.9783493011790707
  - 0.975721624266145
  - 0.970536057662486
  - 0.968392432309958
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9328992191669092
  - 0.9318604382160612
  - 0.9240506243491455
  - 0.933553879243541
  - 0.9272898510148558
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9316313284292514
  - 0.9309168443496801
  - 0.9227467811158798
  - 0.9328390754470126
  - 0.9259259259259259
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.940060099199884
  - 0.9404361637577187
  - 0.9345021645021644
  - 0.9418736097436456
  - 0.9339031339031337
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.9511985870616556
  - 0.9577902587723999
  - 0.9531624393789981
  - 0.9429423637779658
  - 0.9390877812399295
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9752730841440519
  - 0.9755594817432275
  - 0.9738095238095241
  - 0.967057761732852
  - 0.9775641025641025
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.7092424459097417
  - 0.7101256865952749
  - 0.6591528861779451
  - 0.6719922110924303
  - 0.7099072165205873
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8552317906144092
  - 0.8524762950920218
  - 0.8362331729475053
  - 0.8545966836262664
  - 0.8399863336627454
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.8912110450374813
  - 0.8874344625140398
  - 0.8794979650167902
  - 0.8879206710368531
  - 0.865843407600784
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.9190542962750425
  - 0.9203588986652177
  - 0.9105313685201344
  - 0.9001947446304825
  - 0.8958464551649061
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9818160962757619
  - 0.9822452913319673
  - 0.9810861007593725
  - 0.9762805034620526
  - 0.9841393720413015
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.157706093189964
  - -1.098939929328622
  - -1.1357142857142857
  - -1.151624548736462
  - -1.1465201465201464
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.03539426523297491
  - -0.035777385159010605
  - -0.040178571428571425
  - -0.034747292418772564
  - -0.038461538461538464
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.03539426523297491
  - -0.0357773851590106
  - -0.04017857142857143
  - -0.034747292418772564
  - -0.038461538461538464
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.03539426523297491
  - -0.0357773851590106
  - -0.04017857142857143
  - -0.034747292418772564
  - -0.038461538461538464
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.025212775129635785
  - -0.021650698820929414
  - -0.024278375733855186
  - -0.029463942337514114
  - -0.031607567690041916
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.014891619730329406
  - -0.009464916708732963
  - -0.011989795918367347
  - -0.012592401581571256
  - -0.009331937903366474
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9646057347670252
  - 0.9642226148409894
  - 0.9598214285714286
  - 0.9652527075812275
  - 0.9615384615384615
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.964605734767025
  - 0.9642226148409894
  - 0.9598214285714286
  - 0.9652527075812274
  - 0.9615384615384616
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.964605734767025
  - 0.9642226148409894
  - 0.9598214285714286
  - 0.9652527075812274
  - 0.9615384615384616
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9747872248703642
  - 0.9783493011790707
  - 0.975721624266145
  - 0.970536057662486
  - 0.968392432309958
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9646057347670252
  - 0.9642226148409894
  - 0.9598214285714286
  - 0.9652527075812275
  - 0.9615384615384615
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.964605734767025
  - 0.9642226148409894
  - 0.9598214285714286
  - 0.9652527075812274
  - 0.9615384615384616
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.964605734767025
  - 0.9642226148409894
  - 0.9598214285714286
  - 0.9652527075812274
  - 0.9615384615384616
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9747872248703642
  - 0.9783493011790707
  - 0.975721624266145
  - 0.970536057662486
  - 0.968392432309958
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.982806976060322
  - 0.9824957934160072
  - 0.980678383810708
  - 0.9719900893072336
  - 0.9779221469947785
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9870217817364839
  - 0.9892761907747721
  - 0.9863189502404996
  - 0.9851840942562593
  - 0.9901055253302546
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9851083802696705
  - 0.9905350832912669
  - 0.9880102040816328
  - 0.9874075984184287
  - 0.9906680620966336
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9915110015085034
  - 0.9899549015547618
  - 0.989610409683511
  - 0.9861752813191477
  - 0.9934656824850212
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7468301036888884
  - 0.7270534488586755
  - 0.763753860002774
  - 0.7119581458841986
  - 0.7630447609816888
  train_average_precision_macro_oob:
  - 0.7347101425090132
  - 0.7179874728367819
  - 0.752997600586205
  - 0.7062664976124929
  - 0.7588734406319783
  train_average_precision_micro:
  - 0.9487612763971358
  - 0.9342676487895998
  - 0.9496319488544771
  - 0.9389053394241924
  - 0.9446144312734511
  train_average_precision_micro_oob:
  - 0.9427405448619168
  - 0.9257164908443016
  - 0.9419113633511438
  - 0.9310014405222471
  - 0.9349140884615865
  train_average_precision_samples:
  - 0.9821802935010481
  - 0.9815900210399758
  - 0.9819394484412469
  - 0.9713004484304932
  - 0.9810098302055407
  train_average_precision_samples_oob:
  - 0.9771798656569545
  - 0.9766026879642751
  - 0.9760577252483728
  - 0.9646871663463592
  - 0.9764021873271203
  train_average_precision_weighted:
  - 0.9729829959241962
  - 0.9701824470045932
  - 0.9783447686353098
  - 0.967241871370839
  - 0.9785332310486108
  train_average_precision_weighted_oob:
  - 0.9661746142810383
  - 0.9618769915763827
  - 0.9716548405589918
  - 0.9623306095711289
  - 0.9690824962264385
  train_f1_macro:
  - 0.9674303683737646
  - 0.9642696122633003
  - 0.9660521582733812
  - 0.9624439461883407
  - 0.9617962466487936
  train_f1_macro_oob:
  - 0.9670934411500449
  - 0.9633678990081154
  - 0.9672886690647482
  - 0.962219730941704
  - 0.9631367292225201
  train_f1_micro:
  - 0.9674303683737646
  - 0.9642696122633003
  - 0.9660521582733813
  - 0.9624439461883408
  - 0.9617962466487936
  train_f1_micro_oob:
  - 0.9670934411500449
  - 0.9633678990081154
  - 0.9672886690647482
  - 0.962219730941704
  - 0.9631367292225201
  train_f1_samples:
  - 0.9674303683737646
  - 0.9642696122633003
  - 0.9660521582733813
  - 0.9624439461883408
  - 0.9617962466487936
  train_f1_samples_oob:
  - 0.9670934411500449
  - 0.9633678990081154
  - 0.9672886690647482
  - 0.962219730941704
  - 0.9631367292225201
  train_f1_weighted:
  - 0.9801526246582527
  - 0.9802784088050559
  - 0.9798442174095776
  - 0.9815639254027213
  - 0.9814725747621074
  train_f1_weighted_oob:
  - 0.9767237755900805
  - 0.9754610154142657
  - 0.9766264308141116
  - 0.9781781789487866
  - 0.9769444668177827
  train_jaccard_macro:
  - 0.937953970900975
  - 0.9322316964983481
  - 0.9354967160666869
  - 0.929278374959726
  - 0.9287710186483762
  train_jaccard_macro_oob:
  - 0.9371304069672199
  - 0.9302815759632126
  - 0.937405008066426
  - 0.9286216442351889
  - 0.9307385942606803
  train_jaccard_micro:
  - 0.9369153795953883
  - 0.9310044618565676
  - 0.9343335507719069
  - 0.9276066990815776
  - 0.9264041316978696
  train_jaccard_micro_oob:
  - 0.9362835707295857
  - 0.9293247798195063
  - 0.9366496135844128
  - 0.9271902344171978
  - 0.9288946347769877
  train_jaccard_samples:
  - 0.9451840961274924
  - 0.9406982357388127
  - 0.9427221858876534
  - 0.9374299044254201
  - 0.9343641960263942
  train_jaccard_samples_oob:
  - 0.9445851143964351
  - 0.9391352660964926
  - 0.9446406511154712
  - 0.9369914390542193
  - 0.9364295321399877
  train_jaccard_weighted:
  - 0.9612700268410528
  - 0.9615706643002246
  - 0.9606432398930121
  - 0.964067101432089
  - 0.9638498704190632
  train_jaccard_weighted_oob:
  - 0.9547168671331138
  - 0.952312173256185
  - 0.9544583319286056
  - 0.9575526345562797
  - 0.9551033172604356
  train_label_ranking_average_precision_score:
  - 0.9821802935010483
  - 0.9815900210399758
  - 0.981939448441247
  - 0.9713004484304932
  - 0.9810098302055409
  train_label_ranking_average_precision_score_oob:
  - 0.9771798656569545
  - 0.976602687964275
  - 0.9760577252483729
  - 0.9646871663463593
  - 0.9764021873271205
  train_matthews_corrcoef_macro:
  - 0.7306511922695444
  - 0.7072179967191773
  - 0.7260286516206955
  - 0.7149332602803419
  - 0.7284545186012343
  train_matthews_corrcoef_macro_oob:
  - 0.7230772884361615
  - 0.6966584086514404
  - 0.7197390797843025
  - 0.7001907997014208
  - 0.7277831840787714
  train_matthews_corrcoef_micro:
  - 0.8677199783495828
  - 0.856913274666894
  - 0.8627972921474869
  - 0.8518429066583172
  - 0.8486315832438461
  train_matthews_corrcoef_micro_oob:
  - 0.8639967233960362
  - 0.8505701841134377
  - 0.8641076236300017
  - 0.84759981542617
  - 0.8498413083259553
  train_matthews_corrcoef_samples:
  - 0.9048342606119764
  - 0.899728264948416
  - 0.8995856283993795
  - 0.8957360527754502
  - 0.8844041241026199
  train_matthews_corrcoef_samples_oob:
  - 0.8969390660128396
  - 0.8896250937195597
  - 0.8947203634044981
  - 0.8890851127525013
  - 0.8800310757853115
  train_matthews_corrcoef_weighted:
  - 0.9288382615417875
  - 0.9265493828384971
  - 0.9288088419404962
  - 0.9315481439313783
  - 0.9333575903261538
  train_matthews_corrcoef_weighted_oob:
  - 0.919166893172505
  - 0.9134407970469136
  - 0.9189511811143082
  - 0.9222348948815072
  - 0.9229403878079471
  train_ndgc:
  - 0.987168220654019
  - 0.9868035483327351
  - 0.9869850056705438
  - 0.9791442845365491
  - 0.986318069101357
  train_ndgc_oob:
  - 0.9835157326429541
  - 0.9831406585183413
  - 0.9827117636137036
  - 0.9742018830230267
  - 0.9829017722316299
  train_neg_coverage_error:
  - -1.0970350404312668
  - -1.1036970243462578
  - -1.0953237410071943
  - -1.1210762331838564
  - -1.0929401251117068
  train_neg_coverage_error_oob:
  - -1.1266846361185985
  - -1.1352569882777277
  - -1.1330935251798562
  - -1.147982062780269
  - -1.1340482573726542
  train_neg_hamming_loss_macro:
  - -0.0325696316262354
  - -0.03573038773669973
  - -0.0339478417266187
  - -0.0375560538116592
  - -0.03820375335120643
  train_neg_hamming_loss_macro_oob:
  - -0.032906558849955074
  - -0.03663210099188458
  - -0.032711330935251796
  - -0.037780269058295964
  - -0.03686327077747989
  train_neg_hamming_loss_micro:
  - -0.0325696316262354
  - -0.03573038773669973
  - -0.0339478417266187
  - -0.03755605381165919
  - -0.03820375335120643
  train_neg_hamming_loss_micro_oob:
  - -0.032906558849955074
  - -0.03663210099188458
  - -0.032711330935251796
  - -0.037780269058295964
  - -0.03686327077747989
  train_neg_hamming_loss_samples:
  - -0.0325696316262354
  - -0.03573038773669973
  - -0.0339478417266187
  - -0.03755605381165919
  - -0.03820375335120643
  train_neg_hamming_loss_samples_oob:
  - -0.032906558849955074
  - -0.03663210099188458
  - -0.032711330935251796
  - -0.037780269058295964
  - -0.03686327077747989
  train_neg_hamming_loss_weighted:
  - -0.019847375341747353
  - -0.019721591194944217
  - -0.020155782590422507
  - -0.018436074597278623
  - -0.018527425237892504
  train_neg_hamming_loss_weighted_oob:
  - -0.023276224409919447
  - -0.024538984585734353
  - -0.023373569185888402
  - -0.021821821051213455
  - -0.023055533182217414
  train_neg_label_ranking_loss:
  - -0.006492534120566465
  - -0.006795053458714413
  - -0.006348492634463857
  - -0.01013239376468076
  - -0.006819439125069151
  train_neg_label_ranking_loss_oob:
  - -0.010161297223291833
  - -0.010895701833483618
  - -0.010962658444672833
  - -0.013815929959427717
  - -0.011947316907102429
  train_precision_macro:
  - 0.9674303683737646
  - 0.9642696122633003
  - 0.9660521582733812
  - 0.9624439461883407
  - 0.9617962466487936
  train_precision_macro_oob:
  - 0.9670934411500449
  - 0.9633678990081154
  - 0.9672886690647482
  - 0.962219730941704
  - 0.9631367292225201
  train_precision_micro:
  - 0.9674303683737646
  - 0.9642696122633003
  - 0.9660521582733813
  - 0.9624439461883408
  - 0.9617962466487936
  train_precision_micro_oob:
  - 0.9670934411500449
  - 0.9633678990081154
  - 0.9672886690647482
  - 0.962219730941704
  - 0.9631367292225201
  train_precision_samples:
  - 0.9674303683737646
  - 0.9642696122633003
  - 0.9660521582733813
  - 0.9624439461883408
  - 0.9617962466487936
  train_precision_samples_oob:
  - 0.9670934411500449
  - 0.9633678990081154
  - 0.9672886690647482
  - 0.962219730941704
  - 0.9631367292225201
  train_precision_weighted:
  - 0.9801526246582527
  - 0.9802784088050559
  - 0.9798442174095776
  - 0.9815639254027213
  - 0.9814725747621074
  train_precision_weighted_oob:
  - 0.9767237755900805
  - 0.9754610154142657
  - 0.9766264308141116
  - 0.9781781789487866
  - 0.9769444668177827
  train_recall_macro:
  - 0.9674303683737646
  - 0.9642696122633003
  - 0.9660521582733812
  - 0.9624439461883407
  - 0.9617962466487936
  train_recall_macro_oob:
  - 0.9670934411500449
  - 0.9633678990081154
  - 0.9672886690647482
  - 0.962219730941704
  - 0.9631367292225201
  train_recall_micro:
  - 0.9674303683737646
  - 0.9642696122633003
  - 0.9660521582733813
  - 0.9624439461883408
  - 0.9617962466487936
  train_recall_micro_oob:
  - 0.9670934411500449
  - 0.9633678990081154
  - 0.9672886690647482
  - 0.962219730941704
  - 0.9631367292225201
  train_recall_samples:
  - 0.9674303683737646
  - 0.9642696122633003
  - 0.9660521582733813
  - 0.9624439461883408
  - 0.9617962466487936
  train_recall_samples_oob:
  - 0.9670934411500449
  - 0.9633678990081154
  - 0.9672886690647482
  - 0.962219730941704
  - 0.9631367292225201
  train_recall_weighted:
  - 0.9801526246582527
  - 0.9802784088050559
  - 0.9798442174095776
  - 0.9815639254027213
  - 0.9814725747621074
  train_recall_weighted_oob:
  - 0.9767237755900805
  - 0.9754610154142657
  - 0.9766264308141116
  - 0.9781781789487866
  - 0.9769444668177827
  train_roc_auc_macro:
  - 0.98956570831129
  - 0.9840208374732131
  - 0.9890692907397097
  - 0.981836731545813
  - 0.988315492803889
  train_roc_auc_macro_oob:
  - 0.9861903583101732
  - 0.9800886969217346
  - 0.9856833587535032
  - 0.9810393627826948
  - 0.9838768719000983
  train_roc_auc_micro:
  - 0.9930261808675418
  - 0.9913160712823914
  - 0.993407424049294
  - 0.9914308642077796
  - 0.9927875831348716
  train_roc_auc_micro_oob:
  - 0.9899713119049771
  - 0.988351261965183
  - 0.990354273666096
  - 0.9891499046717749
  - 0.9889380947997957
  train_roc_auc_samples:
  - 0.9935074658794336
  - 0.9932049465412857
  - 0.9936515073655361
  - 0.9898676062353194
  - 0.9931805608749309
  train_roc_auc_samples_oob:
  - 0.9898387027767082
  - 0.9891042981665165
  - 0.9890373415553272
  - 0.9861840700405723
  - 0.9880526830928975
  train_roc_auc_weighted:
  - 0.9970994129417501
  - 0.996564321797435
  - 0.9976245432979886
  - 0.9963399967934586
  - 0.9974371674120651
  train_roc_auc_weighted_oob:
  - 0.9927467782152906
  - 0.9923711927017929
  - 0.9936025034142131
  - 0.9933182138344349
  - 0.9920362621460379
start: 2023-12-12 15:45:04.015825
wrapper: null
