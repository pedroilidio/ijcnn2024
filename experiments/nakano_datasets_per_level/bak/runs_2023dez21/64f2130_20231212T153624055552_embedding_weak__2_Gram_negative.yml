active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ+b9oZmZmZmb2PzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv2ZmZmZmZva/NDMzMzMz4z80MzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADIzMzMz478AZ2ZmZmb2P4DMzMzMzATAAJmZmZmZ+b+AMzMzMzMLQA==
      n_labels: 8
      n_samples: 1392
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: false
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: &id003 !!python/tuple
        - decision_function
        - predict_proba
        - predict
        _score_func: &id004 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id004
        _sign: 1
      f1_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id005
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
      f1_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id005
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id007
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id007
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id008
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id008
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id009
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id006
        _sign: 1
      f1_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id009
        _response_method: predict
        _score_func: *id006
        _sign: 1
      jaccard_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id010
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id011 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id010
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id012
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id012
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id013
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id013
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id014
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id011
        _sign: 1
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id014
        _response_method: predict
        _score_func: *id011
        _sign: 1
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id015 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id015
        _sign: 1
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id016 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id016
        _sign: 1
      ndgc: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id017 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
      ndgc_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id017
        _sign: 1
      neg_coverage_error: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id018 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
      neg_coverage_error_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id018
        _sign: -1
      neg_hamming_loss_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: &id019 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
      neg_hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: predict
        _score_func: *id019
        _sign: -1
      neg_label_ranking_loss: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: &id020 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: -1
      neg_label_ranking_loss_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: null
        _kwargs: {}
        _response_method: *id003
        _score_func: *id020
        _sign: -1
      precision_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id021
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id022 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
      precision_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id021
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id023
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id023
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id024
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id024
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id025
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id022
        _sign: 1
      precision_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id025
        _response_method: predict
        _score_func: *id022
        _sign: 1
      recall_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: &id026
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: &id027 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
      recall_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: *id026
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: &id028
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: *id028
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: &id029
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: *id029
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: &id030
          average: micro
          pos_label: null
        _response_method: predict
        _score_func: *id027
        _sign: 1
      recall_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: *id030
        _response_method: predict
        _score_func: *id027
        _sign: 1
      roc_auc_macro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: &id031 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: macro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: micro
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: samples
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted: !!python/object:nakano_datasets_v2.scoring.MultiLabelScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.scoring.OOBScorer
        _average: weighted
        _kwargs: {}
        _response_method: *id003
        _score_func: *id031
        _sign: 1
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_negative
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_negative.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-12 15:36:58.022465
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              monotonic_cst: null
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            monotonic_cst: null
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        monotonic_cst: null
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 2
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring: null
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_weak__2
  params:
    min_levels: 0
    scoring: null
    trim_to_best_score: false
hash: 64f213020f4442199f8bc0a673448cde296446400e78218fa5f98a076454961d
metaestimator: null
modify_params:
  max_levels: 2
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/64f2130_20231212T153624055552_embedding_weak__2_Gram_negative.yml
results:
  fit_time:
  - 10.121997833251953
  - 10.37211561203003
  - 9.324873208999634
  - 11.870956420898438
  - 9.943231582641602
  score_time:
  - 4.050050497055054
  - 3.8695080280303955
  - 3.9483258724212646
  - 3.7310030460357666
  - 4.1407177448272705
  test_average_precision_macro:
  - 0.7534374629781873
  - 0.7618347091162843
  - 0.7701269351146895
  - 0.750540922076051
  - 0.7902291177044761
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9260433973709186
  - 0.9599702345956378
  - 0.9511267956792122
  - 0.9556039249542034
  - 0.9681953500867
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9715395118620924
  - 0.9849578820697955
  - 0.9712336892052194
  - 0.9711309523809523
  - 0.9757575757575757
  test_average_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_weighted:
  - 0.9474673293240045
  - 0.9780305733941324
  - 0.9663543644545509
  - 0.9639870257422103
  - 0.9829494616222171
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9744623655913979
  - 0.9792418772563176
  - 0.9733096085409253
  - 0.9750000000000001
  - 0.9763636363636363
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9744623655913979
  - 0.9792418772563177
  - 0.9733096085409253
  - 0.975
  - 0.9763636363636363
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9744623655913979
  - 0.9792418772563177
  - 0.9733096085409253
  - 0.975
  - 0.9763636363636363
  test_f1_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_weighted:
  - 0.9757450778219668
  - 0.9714168744649968
  - 0.9746289975064759
  - 0.9754802955665023
  - 0.9723057565272099
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9505074266977173
  - 0.9596525581948803
  - 0.9485559971715782
  - 0.9514144252571544
  - 0.9539988125239608
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.9501965923984272
  - 0.9593280282935456
  - 0.9480069324090121
  - 0.9512195121951219
  - 0.9538188277087034
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.9577712609970676
  - 0.96470116325712
  - 0.954405262590316
  - 0.9578499278499277
  - 0.959272727272727
  test_jaccard_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_weighted:
  - 0.9530692222375098
  - 0.9446756129791872
  - 0.9506484854969811
  - 0.9522692684872738
  - 0.9461658404870059
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9715395118620926
  - 0.9849578820697955
  - 0.9712336892052194
  - 0.9711309523809525
  - 0.9757575757575757
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.706824976774358
  - 0.7411537239124069
  - 0.728369458008591
  - 0.7257251673905094
  - 0.7388149383548295
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8882098130027045
  - 0.9078504063132817
  - 0.8826060618720364
  - 0.8901192531212677
  - 0.8946178403062381
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.9022911188813766
  - 0.9124048629065868
  - 0.8875794027446987
  - 0.8987292560768327
  - 0.8920687353477135
  test_matthews_corrcoef_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.9073474668785462
  - 0.9154736217084272
  - 0.9080628525513362
  - 0.9111112865282952
  - 0.9079596281230681
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9789227718770867
  - 0.9895828014848881
  - 0.9794930563012236
  - 0.9789508344292885
  - 0.9823303715101753
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_coverage_error:
  - -1.146953405017921
  - -1.1046931407942238
  - -1.1423487544483986
  - -1.1107142857142858
  - -1.1163636363636364
  test_neg_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_macro:
  - -0.025537634408602152
  - -0.02075812274368231
  - -0.026690391459074734
  - -0.024999999999999998
  - -0.023636363636363636
  test_neg_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_micro:
  - -0.025537634408602152
  - -0.02075812274368231
  - -0.026690391459074734
  - -0.025
  - -0.023636363636363636
  test_neg_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_samples:
  - -0.025537634408602152
  - -0.02075812274368231
  - -0.026690391459074734
  - -0.025
  - -0.023636363636363636
  test_neg_hamming_loss_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_hamming_loss_weighted:
  - -0.024254922178033093
  - -0.02858312553500316
  - -0.025371002493524104
  - -0.024519704433497536
  - -0.027694243472790186
  test_neg_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_neg_label_ranking_loss:
  - -0.01391022358764294
  - -0.006231734571084752
  - -0.012031859006947974
  - -0.010076530612244897
  - -0.008484848484848484
  test_neg_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9744623655913979
  - 0.9792418772563176
  - 0.9733096085409253
  - 0.9750000000000001
  - 0.9763636363636363
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9744623655913979
  - 0.9792418772563177
  - 0.9733096085409253
  - 0.975
  - 0.9763636363636363
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9744623655913979
  - 0.9792418772563177
  - 0.9733096085409253
  - 0.975
  - 0.9763636363636363
  test_precision_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_weighted:
  - 0.9757450778219668
  - 0.9714168744649968
  - 0.9746289975064759
  - 0.9754802955665023
  - 0.9723057565272099
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9744623655913979
  - 0.9792418772563176
  - 0.9733096085409253
  - 0.9750000000000001
  - 0.9763636363636363
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9744623655913979
  - 0.9792418772563177
  - 0.9733096085409253
  - 0.975
  - 0.9763636363636363
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9744623655913979
  - 0.9792418772563177
  - 0.9733096085409253
  - 0.975
  - 0.9763636363636363
  test_recall_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_weighted:
  - 0.9757450778219668
  - 0.9714168744649968
  - 0.9746289975064759
  - 0.9754802955665023
  - 0.9723057565272099
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9796195356998711
  - 0.9783993075173357
  - 0.9736245266632528
  - 0.9894216511867691
  - 0.9891877903493205
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.98496063409123
  - 0.9917838175570134
  - 0.9904051692324831
  - 0.9924924845269674
  - 0.995191741855113
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9860897764123572
  - 0.9937682654289153
  - 0.987968140993052
  - 0.9899234693877551
  - 0.9915151515151516
  test_roc_auc_samples_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.9841744303658482
  - 0.990875025637834
  - 0.9904599476918465
  - 0.9921473265147297
  - 0.9961999032384727
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.7866062003246466
  - 0.7828793403358753
  - 0.7619514900203106
  - 0.7803975473179061
  - 0.8077808894599543
  train_average_precision_macro_oob:
  - 0.765628294489413
  - 0.7704809566645248
  - 0.750472561676711
  - 0.7674960778445616
  - 0.7679268188214476
  train_average_precision_micro:
  - 0.9587419213079231
  - 0.9717431240132163
  - 0.9581553683797499
  - 0.9640970270331594
  - 0.9625475038943015
  train_average_precision_micro_oob:
  - 0.9494709710083373
  - 0.964270289398899
  - 0.949120471284322
  - 0.9554979634573254
  - 0.9514559294539837
  train_average_precision_samples:
  - 0.9836777478286913
  - 0.9834379671150971
  - 0.9843234323432343
  - 0.9856115107913669
  - 0.983736198149806
  train_average_precision_samples_oob:
  - 0.9748320711932571
  - 0.9775122784539826
  - 0.9746635377823496
  - 0.9782459746488524
  - 0.9733512384362875
  train_average_precision_weighted:
  - 0.9819576889183842
  - 0.9718728659875026
  - 0.9756461325160606
  - 0.9763311845344979
  - 0.9747744314254478
  train_average_precision_weighted_oob:
  - 0.9732157508131692
  - 0.9638396229151808
  - 0.9680464389738513
  - 0.9673496040098016
  - 0.9642888328973261
  train_f1_macro:
  - 0.9780997304582211
  - 0.9811659192825113
  - 0.9763726372637264
  - 0.9768435251798561
  - 0.9798567591763653
  train_f1_macro_oob:
  - 0.9752920035938903
  - 0.9783632286995515
  - 0.9733348334833483
  - 0.9749325539568345
  - 0.9760519247985676
  train_f1_micro:
  - 0.9780997304582211
  - 0.9811659192825112
  - 0.9763726372637264
  - 0.9768435251798561
  - 0.9798567591763653
  train_f1_micro_oob:
  - 0.9752920035938903
  - 0.9783632286995516
  - 0.9733348334833484
  - 0.9749325539568345
  - 0.9760519247985676
  train_f1_samples:
  - 0.9780997304582211
  - 0.9811659192825112
  - 0.9763726372637264
  - 0.9768435251798561
  - 0.9798567591763653
  train_f1_samples_oob:
  - 0.9752920035938903
  - 0.9783632286995516
  - 0.9733348334833484
  - 0.9749325539568345
  - 0.9760519247985676
  train_f1_weighted:
  - 0.9800954356974586
  - 0.9812036413325893
  - 0.9805303249774202
  - 0.9807472204054938
  - 0.9806166136954859
  train_f1_weighted_oob:
  - 0.9733792758496124
  - 0.9739640870686502
  - 0.9716920917565077
  - 0.9745417216826882
  - 0.9733287611647983
  train_jaccard_macro:
  - 0.9574392261744771
  - 0.9630911608029503
  - 0.9543129784262885
  - 0.9553067334750813
  - 0.9606969271449701
  train_jaccard_macro_oob:
  - 0.9519569391004832
  - 0.9577308704705858
  - 0.9483572637705593
  - 0.951373288673717
  - 0.9533671744975555
  train_jaccard_micro:
  - 0.9571381470491263
  - 0.9630281690140845
  - 0.9538360079138272
  - 0.9547352230279059
  - 0.9605089951733217
  train_jaccard_micro_oob:
  - 0.9517755370451556
  - 0.9576429276857237
  - 0.948054794520548
  - 0.9510911284132032
  - 0.953224043715847
  train_jaccard_samples:
  - 0.9624601813281058
  - 0.9677528649725957
  - 0.9597196083244688
  - 0.9601373446697188
  - 0.9656583742528236
  train_jaccard_samples_oob:
  - 0.9577881238258596
  - 0.9633174797300358
  - 0.9548791242760638
  - 0.9570598067000945
  - 0.9591438105314561
  train_jaccard_weighted:
  - 0.961030880756205
  - 0.9631539711754176
  - 0.9618623250625346
  - 0.9623461802510022
  - 0.9620270980434902
  train_jaccard_weighted_oob:
  - 0.948199734624909
  - 0.9493450476627348
  - 0.9450677926947016
  - 0.9504277941368744
  - 0.9481159154978234
  train_label_ranking_average_precision_score:
  - 0.9836777478286913
  - 0.9834379671150971
  - 0.9843234323432343
  - 0.9856115107913671
  - 0.9837361981498062
  train_label_ranking_average_precision_score_oob:
  - 0.9748320711932573
  - 0.9775122784539826
  - 0.9746635377823498
  - 0.9782459746488525
  - 0.9733512384362879
  train_matthews_corrcoef_macro:
  - 0.7696253940247189
  - 0.7786521312399552
  - 0.7470082162207643
  - 0.790651569094686
  - 0.7869453655370042
  train_matthews_corrcoef_macro_oob:
  - 0.7531481237106549
  - 0.7616860063198154
  - 0.7154689193894581
  - 0.7531091861428565
  - 0.7641265846207244
  train_matthews_corrcoef_micro:
  - 0.9053271588821413
  - 0.9177786837997397
  - 0.8976268775802027
  - 0.9009869659013162
  - 0.9119796003228259
  train_matthews_corrcoef_micro_oob:
  - 0.8908991449925113
  - 0.9036859997248886
  - 0.8820605456711011
  - 0.8895965963952877
  - 0.8933459271791327
  train_matthews_corrcoef_samples:
  - 0.9210553911275237
  - 0.9295265185894209
  - 0.9126720185076255
  - 0.9194406476990067
  - 0.9226928834208298
  train_matthews_corrcoef_samples_oob:
  - 0.8946072765866989
  - 0.9046882421203047
  - 0.8859182402382508
  - 0.8940173826484261
  - 0.8906070625533101
  train_matthews_corrcoef_weighted:
  - 0.9331055423867478
  - 0.9310347769484534
  - 0.9298880253355707
  - 0.9365259307776735
  - 0.9320185817718237
  train_matthews_corrcoef_weighted_oob:
  - 0.9106456227241476
  - 0.9092533728693868
  - 0.902956718404696
  - 0.9136473068287246
  - 0.906836209283528
  train_ndgc:
  - 0.9881780944446498
  - 0.9877958094040641
  - 0.9885041897264584
  - 0.9896825646828546
  - 0.9881750837727623
  train_ndgc_oob:
  - 0.9818570862013131
  - 0.9835872683045579
  - 0.9815576727507385
  - 0.9843773565215089
  - 0.9807494271716007
  train_neg_coverage_error:
  - -1.0862533692722371
  - -1.084304932735426
  - -1.0864086408640865
  - -1.0863309352517985
  - -1.0850492390331243
  train_neg_coverage_error_oob:
  - -1.123989218328841
  - -1.1183856502242153
  - -1.1233123312331232
  - -1.125
  - -1.1280214861235451
  train_neg_hamming_loss_macro:
  - -0.021900269541778976
  - -0.01883408071748879
  - -0.023627362736273628
  - -0.023156474820143887
  - -0.020143240823634737
  train_neg_hamming_loss_macro_oob:
  - -0.024707996406109614
  - -0.021636771300448433
  - -0.026665166516651663
  - -0.025067446043165468
  - -0.023948075201432408
  train_neg_hamming_loss_micro:
  - -0.021900269541778976
  - -0.01883408071748879
  - -0.023627362736273628
  - -0.023156474820143883
  - -0.020143240823634737
  train_neg_hamming_loss_micro_oob:
  - -0.024707996406109614
  - -0.02163677130044843
  - -0.026665166516651666
  - -0.025067446043165468
  - -0.023948075201432408
  train_neg_hamming_loss_samples:
  - -0.021900269541778976
  - -0.01883408071748879
  - -0.023627362736273628
  - -0.023156474820143883
  - -0.020143240823634737
  train_neg_hamming_loss_samples_oob:
  - -0.024707996406109614
  - -0.02163677130044843
  - -0.026665166516651666
  - -0.025067446043165468
  - -0.023948075201432408
  train_neg_hamming_loss_weighted:
  - -0.019904564302541353
  - -0.018796358667410844
  - -0.01946967502257971
  - -0.019252779594506213
  - -0.019383386304514093
  train_neg_hamming_loss_weighted_oob:
  - -0.02662072415038764
  - -0.02603591293134972
  - -0.028307908243492164
  - -0.025458278317311844
  - -0.02667123883520171
  train_neg_label_ranking_loss:
  - -0.005401531681855131
  - -0.005530642750373692
  - -0.005571985770005571
  - -0.004913926002055498
  - -0.005435477682568103
  train_neg_label_ranking_loss_oob:
  - -0.009883198562443846
  - -0.009705317104420243
  - -0.010147443315760146
  - -0.009742206235011989
  - -0.010775035170737945
  train_precision_macro:
  - 0.9780997304582211
  - 0.9811659192825113
  - 0.9763726372637264
  - 0.9768435251798561
  - 0.9798567591763653
  train_precision_macro_oob:
  - 0.9752920035938903
  - 0.9783632286995515
  - 0.9733348334833483
  - 0.9749325539568345
  - 0.9760519247985676
  train_precision_micro:
  - 0.9780997304582211
  - 0.9811659192825112
  - 0.9763726372637264
  - 0.9768435251798561
  - 0.9798567591763653
  train_precision_micro_oob:
  - 0.9752920035938903
  - 0.9783632286995516
  - 0.9733348334833484
  - 0.9749325539568345
  - 0.9760519247985676
  train_precision_samples:
  - 0.9780997304582211
  - 0.9811659192825112
  - 0.9763726372637264
  - 0.9768435251798561
  - 0.9798567591763653
  train_precision_samples_oob:
  - 0.9752920035938903
  - 0.9783632286995516
  - 0.9733348334833484
  - 0.9749325539568345
  - 0.9760519247985676
  train_precision_weighted:
  - 0.9800954356974586
  - 0.9812036413325893
  - 0.9805303249774202
  - 0.9807472204054938
  - 0.9806166136954859
  train_precision_weighted_oob:
  - 0.9733792758496124
  - 0.9739640870686502
  - 0.9716920917565077
  - 0.9745417216826882
  - 0.9733287611647983
  train_recall_macro:
  - 0.9780997304582211
  - 0.9811659192825113
  - 0.9763726372637264
  - 0.9768435251798561
  - 0.9798567591763653
  train_recall_macro_oob:
  - 0.9752920035938903
  - 0.9783632286995515
  - 0.9733348334833483
  - 0.9749325539568345
  - 0.9760519247985676
  train_recall_micro:
  - 0.9780997304582211
  - 0.9811659192825112
  - 0.9763726372637264
  - 0.9768435251798561
  - 0.9798567591763653
  train_recall_micro_oob:
  - 0.9752920035938903
  - 0.9783632286995516
  - 0.9733348334833484
  - 0.9749325539568345
  - 0.9760519247985676
  train_recall_samples:
  - 0.9780997304582211
  - 0.9811659192825112
  - 0.9763726372637264
  - 0.9768435251798561
  - 0.9798567591763653
  train_recall_samples_oob:
  - 0.9752920035938903
  - 0.9783632286995516
  - 0.9733348334833484
  - 0.9749325539568345
  - 0.9760519247985676
  train_recall_weighted:
  - 0.9800954356974586
  - 0.9812036413325893
  - 0.9805303249774202
  - 0.9807472204054938
  - 0.9806166136954859
  train_recall_weighted_oob:
  - 0.9733792758496124
  - 0.9739640870686502
  - 0.9716920917565077
  - 0.9745417216826882
  - 0.9733287611647983
  train_roc_auc_macro:
  - 0.9916189382038179
  - 0.993334837521809
  - 0.9908304483690112
  - 0.991271599115513
  - 0.9926044012210297
  train_roc_auc_macro_oob:
  - 0.9880302315925916
  - 0.9883981912791158
  - 0.9864802632365177
  - 0.9871622549529908
  - 0.9877315590432305
  train_roc_auc_micro:
  - 0.9950176816111245
  - 0.9963696687447943
  - 0.9947627498270142
  - 0.995221275953659
  - 0.9953050392641067
  train_roc_auc_micro_oob:
  - 0.9921279646944955
  - 0.9929337019173564
  - 0.991324307622116
  - 0.9917862508016039
  - 0.9914948817190637
  train_roc_auc_samples:
  - 0.9945984683181448
  - 0.9944693572496265
  - 0.9944280142299945
  - 0.9950860739979445
  - 0.994564522317432
  train_roc_auc_samples_oob:
  - 0.9901168014375562
  - 0.9902946828955799
  - 0.98985255668424
  - 0.9902577937649879
  - 0.9892249648292621
  train_roc_auc_weighted:
  - 0.9977052399302981
  - 0.9965868965721865
  - 0.996851059074198
  - 0.9970247046999269
  - 0.9964169753940871
  train_roc_auc_weighted_oob:
  - 0.9928764125177406
  - 0.991178950475296
  - 0.9914402154487809
  - 0.9918440585877111
  - 0.9903389753665568
start: 2023-12-12 15:36:24.055552
wrapper: null
