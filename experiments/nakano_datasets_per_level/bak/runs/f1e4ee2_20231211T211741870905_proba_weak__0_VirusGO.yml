active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b84MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz478gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMBMAAmpmZmZnZP6CZmZmZmRFAwMzMzMzMBMAAmpmZmZnZPw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: &id004 !!python/name:nakano_datasets_v2.estimators.get_oob_proba ''
        score_func: *id003
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id005 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
        average: null
        greater_is_better: false
        kwargs: {}
        response_method: predict_proba
        score_func: *id005
      coverage_error_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id005
        _sign: -1
        average: null
        greater_is_better: false
        kwargs: {}
        response_method: *id004
        score_func: *id005
      f1_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: &id007 !!python/name:nakano_datasets_v2.estimators.get_oob_predictions ''
        score_func: *id006
      f1_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      hamming_loss_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id008 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
        average: macro
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: macro
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: micro
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: micro
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: samples
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: samples
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: weighted
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: weighted
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      jaccard_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id009 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id010 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id010
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id010
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id010
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id011 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id011
      label_ranking_loss_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id011
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id011
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id012 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id013 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id013
      ndgc_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id013
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id013
      precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id014 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      recall_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id015 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id016 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-11 21:18:14.374850
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - rf
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.RandomForestRegressor
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        - - xt
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesRegressor
                params:
                  bootstrap: false
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 0
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      average_precision_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      coverage_error:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      coverage_error_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      label_ranking_average_precision_score:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      label_ranking_average_precision_score_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      label_ranking_loss:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      label_ranking_loss_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      ndgc:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      ndgc_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: proba_weak__0
  params:
    min_levels: 0
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id005
        _sign: -1
        average: null
        greater_is_better: false
        kwargs: {}
        response_method: predict_proba
        score_func: *id005
      coverage_error_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id005
        _sign: -1
        average: null
        greater_is_better: false
        kwargs: {}
        response_method: *id004
        score_func: *id005
      f1_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      hamming_loss_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: macro
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: macro
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: micro
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: micro
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: samples
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: samples
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: weighted
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: weighted
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      jaccard_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id010
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id010
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id010
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id010
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id011
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id011
      label_ranking_loss_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id011
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id011
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id013
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id013
      ndgc_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id013
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id013
      precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      recall_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
    trim_to_best_score: false
hash: f1e4ee274d36a0b4efb01a6bd715332eb637a14dc1aae81a7b0e201229f62e0b
metaestimator: null
modify_params:
  max_levels: 0
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/f1e4ee2_20231211T211741870905_proba_weak__0_VirusGO.yml
results:
  fit_time:
  - 14.132037162780762
  - 14.265717029571533
  - 14.000262022018433
  - 13.95434832572937
  - 14.171326875686646
  score_time:
  - 6.358999729156494
  - 6.214772701263428
  - 5.862916469573975
  - 6.013500690460205
  - 6.175183534622192
  test_average_precision_macro:
  - 0.8776861999891387
  - 0.9525152029645495
  - 0.9844215813392649
  - 0.9255466554865691
  - 0.9456777671160496
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.7147753925824014
  - 0.79400663617892
  - 0.8254664437954673
  - 0.7527769240498019
  - 0.777574474821812
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.7479166666666667
  - 0.8239837398373985
  - 0.8693693693693693
  - 0.7886363636363637
  - 0.8414634146341463
  test_average_precision_samples_oob:
  - 0.6005681818181817
  - 0.5668021680216802
  - 0.6468468468468469
  - 0.6005681818181817
  - 0.575609756097561
  test_average_precision_weighted:
  - 0.8706708606638114
  - 0.9314981978805509
  - 0.9815882607177454
  - 0.9204543887375772
  - 0.9291288584493647
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_coverage_error:
  - -2.0
  - -1.7804878048780488
  - -1.8918918918918919
  - -1.8409090909090908
  - -1.7560975609756098
  test_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.8560606060606061
  - 0.8333333333333334
  - 0.8018018018018017
  - 0.8598484848484849
  - 0.8373983739837398
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.8560606060606061
  - 0.8333333333333334
  - 0.8018018018018018
  - 0.8598484848484849
  - 0.8373983739837398
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.856060606060606
  - 0.8333333333333335
  - 0.8018018018018017
  - 0.8598484848484851
  - 0.8373983739837398
  test_f1_samples_oob:
  - 0.8143939393939396
  - 0.8008130081300814
  - 0.7702702702702702
  - 0.787878787878788
  - 0.804878048780488
  test_f1_weighted:
  - 0.801693404634581
  - 0.7434146341463415
  - 0.7117117117117115
  - 0.8106060606060606
  - 0.7541065206570433
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_hamming_loss_macro:
  - -0.14393939393939395
  - -0.16666666666666666
  - -0.1981981981981982
  - -0.14015151515151517
  - -0.16260162601626016
  test_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_hamming_loss_micro:
  - -0.14393939393939395
  - -0.16666666666666666
  - -0.1981981981981982
  - -0.14015151515151514
  - -0.16260162601626016
  test_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_hamming_loss_samples:
  - -0.14393939393939392
  - -0.16666666666666666
  - -0.19819819819819823
  - -0.14015151515151514
  - -0.16260162601626016
  test_hamming_loss_samples_oob:
  - -0.18560606060606058
  - -0.19918699186991867
  - -0.22972972972972974
  - -0.2121212121212121
  - -0.19512195121951217
  test_hamming_loss_weighted:
  - -0.1983065953654189
  - -0.25658536585365854
  - -0.28828828828828834
  - -0.18939393939393934
  - -0.24589347934295674
  test_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.7561677118208509
  - 0.7304525065163362
  - 0.686665094828653
  - 0.7614894341237052
  - 0.7356058499049739
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.7483443708609272
  - 0.7142857142857143
  - 0.6691729323308271
  - 0.7541528239202658
  - 0.7202797202797203
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.7662337662337663
  - 0.732288037166086
  - 0.6866151866151868
  - 0.7711038961038962
  - 0.7351916376306621
  test_jaccard_samples_oob:
  - 0.7023809523809524
  - 0.6771196283391406
  - 0.6344916344916346
  - 0.6558441558441559
  - 0.6794425087108015
  test_jaccard_weighted:
  - 0.6749595493588386
  - 0.6032615800275374
  - 0.5653586298923459
  - 0.687347087828508
  - 0.6168251900557589
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.7479166666666665
  - 0.8239837398373981
  - 0.8693693693693693
  - 0.7886363636363637
  - 0.8414634146341463
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_loss:
  - 0.16988636363636364
  - 0.10785907859078592
  - 0.09594594594594595
  - 0.13295454545454544
  - 0.1048780487804878
  test_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.16278868764454138
  - 0.13492728976624743
  - 0.11663619928893361
  - 0.1771238702283664
  - 0.12715800428359894
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.45894147264294827
  - 0.38582477822668526
  - 0.3304020682074896
  - 0.47667695164560975
  - 0.38456161948917666
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.32874797872880346
  - 0.21951219512195122
  - 0.17925555491982909
  - 0.33783888781971255
  - 0.23005989102521157
  test_matthews_corrcoef_samples_oob:
  - 0.13372209622689005
  - 0.049932038914633124
  - 0.01168798735226151
  - -0.012898737908325549
  - 0.045485635708959804
  test_matthews_corrcoef_weighted:
  - 0.32333507479275503
  - 0.28160390515480493
  - 0.23327239857786725
  - 0.3542477404567328
  - 0.26469625381483863
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.8119061875835354
  - 0.8692545974327385
  - 0.907606036268169
  - 0.8443071761351394
  - 0.8840661829364473
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.856060606060606
  - 0.8333333333333334
  - 0.8018018018018017
  - 0.8598484848484849
  - 0.8373983739837397
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.8560606060606061
  - 0.8333333333333334
  - 0.8018018018018018
  - 0.8598484848484849
  - 0.8373983739837398
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.856060606060606
  - 0.8333333333333335
  - 0.8018018018018017
  - 0.8598484848484851
  - 0.8373983739837398
  test_precision_samples_oob:
  - 0.8143939393939396
  - 0.8008130081300814
  - 0.7702702702702702
  - 0.787878787878788
  - 0.804878048780488
  test_precision_weighted:
  - 0.801693404634581
  - 0.7434146341463415
  - 0.7117117117117115
  - 0.8106060606060606
  - 0.7541065206570433
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.856060606060606
  - 0.8333333333333334
  - 0.8018018018018017
  - 0.8598484848484849
  - 0.8373983739837397
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.8560606060606061
  - 0.8333333333333334
  - 0.8018018018018018
  - 0.8598484848484849
  - 0.8373983739837398
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.856060606060606
  - 0.8333333333333335
  - 0.8018018018018017
  - 0.8598484848484851
  - 0.8373983739837398
  test_recall_samples_oob:
  - 0.8143939393939396
  - 0.8008130081300814
  - 0.7702702702702702
  - 0.787878787878788
  - 0.804878048780488
  test_recall_weighted:
  - 0.801693404634581
  - 0.7434146341463415
  - 0.7117117117117115
  - 0.8106060606060606
  - 0.7541065206570433
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9470384876634877
  - 0.9759901068404905
  - 0.9920157456922163
  - 0.9777985092936073
  - 0.977819731496202
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.885298720427138
  - 0.9181632653061225
  - 0.9174979933493865
  - 0.9058271195802265
  - 0.9234434890707551
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.8301136363636363
  - 0.8921409214092141
  - 0.9040540540540541
  - 0.8670454545454546
  - 0.8951219512195121
  test_roc_auc_samples_oob:
  - 0.7471590909090909
  - 0.6833333333333333
  - 0.7493243243243243
  - 0.7284090909090909
  - 0.6993902439024391
  test_roc_auc_weighted:
  - 0.9308727441080382
  - 0.9569366851323373
  - 0.9849970291146761
  - 0.9640827101611416
  - 0.9663770913770914
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9608543056009552
  - 0.9443009122407138
  - 0.9452047236477741
  - 0.9607085834581651
  - 0.955478971171258
  train_average_precision_macro_oob:
  - 0.8988950291594549
  - 0.8298459262478094
  - 0.8010459892347686
  - 0.869159595508501
  - 0.8673726096718591
  train_average_precision_micro:
  - 0.7981989536109524
  - 0.7790962544860881
  - 0.7711746449373144
  - 0.8000398379573354
  - 0.8014684103431424
  train_average_precision_micro_oob:
  - 0.7659895732569681
  - 0.7245857822980599
  - 0.7212116535089677
  - 0.7397571408057058
  - 0.7601632963300798
  train_average_precision_samples:
  - 0.8245910020449898
  - 0.8349397590361446
  - 0.8190196078431372
  - 0.8316973415132924
  - 0.8349899598393575
  train_average_precision_samples_oob:
  - 0.7908827539195638
  - 0.8
  - 0.7878431372549018
  - 0.802539195637355
  - 0.8000502008032129
  train_average_precision_weighted:
  - 0.9532137608108848
  - 0.9306679499534145
  - 0.9270282146950355
  - 0.9507768304069885
  - 0.9431480372361001
  train_average_precision_weighted_oob:
  - 0.9071226931447782
  - 0.8467541721208687
  - 0.8477639879140891
  - 0.8750791683871403
  - 0.8837698129773358
  train_coverage_error:
  - -1.8282208588957056
  - -1.8132530120481927
  - -1.7823529411764707
  - -1.7852760736196318
  - -1.7891566265060241
  train_coverage_error_oob:
  - -1.9202453987730062
  - -1.963855421686747
  - -1.9
  - -1.9570552147239264
  - -1.8975903614457832
  train_f1_macro:
  - 0.8660531697341513
  - 0.8383534136546184
  - 0.8323529411764706
  - 0.8558282208588955
  - 0.859437751004016
  train_f1_macro_oob:
  - 0.8496932515337422
  - 0.8202811244979918
  - 0.8303921568627451
  - 0.8394683026584865
  - 0.8493975903614457
  train_f1_micro:
  - 0.8660531697341514
  - 0.8383534136546185
  - 0.8323529411764706
  - 0.8558282208588958
  - 0.8594377510040161
  train_f1_micro_oob:
  - 0.8496932515337423
  - 0.820281124497992
  - 0.8303921568627451
  - 0.8394683026584867
  - 0.8493975903614458
  train_f1_samples:
  - 0.8660531697341515
  - 0.8383534136546185
  - 0.8323529411764706
  - 0.8558282208588958
  - 0.859437751004016
  train_f1_samples_oob:
  - 0.8496932515337423
  - 0.820281124497992
  - 0.8303921568627453
  - 0.8394683026584866
  - 0.8493975903614458
  train_f1_weighted:
  - 0.8228489454567653
  - 0.7689073124179888
  - 0.749282996780802
  - 0.8003235356957544
  - 0.8116505430589352
  train_f1_weighted_oob:
  - 0.7893050086988372
  - 0.7321662889180485
  - 0.7454492244659058
  - 0.7674205658822452
  - 0.7910558490118108
  train_hamming_loss_macro:
  - -0.13394683026584867
  - -0.1616465863453815
  - -0.1676470588235294
  - -0.1441717791411043
  - -0.14056224899598393
  train_hamming_loss_macro_oob:
  - -0.15030674846625766
  - -0.17971887550200805
  - -0.16960784313725488
  - -0.1605316973415133
  - -0.1506024096385542
  train_hamming_loss_micro:
  - -0.13394683026584867
  - -0.16164658634538154
  - -0.1676470588235294
  - -0.1441717791411043
  - -0.14056224899598393
  train_hamming_loss_micro_oob:
  - -0.15030674846625766
  - -0.17971887550200802
  - -0.1696078431372549
  - -0.1605316973415133
  - -0.15060240963855423
  train_hamming_loss_samples:
  - -0.1339468302658487
  - -0.1616465863453815
  - -0.1676470588235294
  - -0.1441717791411043
  - -0.14056224899598393
  train_hamming_loss_samples_oob:
  - -0.15030674846625766
  - -0.179718875502008
  - -0.1696078431372549
  - -0.1605316973415133
  - -0.15060240963855423
  train_hamming_loss_weighted:
  - -0.1771510545432347
  - -0.2310926875820112
  - -0.25071700321919815
  - -0.19967646430424563
  - -0.18834945694106475
  train_hamming_loss_weighted_oob:
  - -0.2106949913011629
  - -0.26783371108195153
  - -0.2545507755340942
  - -0.23257943411775478
  - -0.2089441509881892
  train_jaccard_macro:
  - 0.7703599480221118
  - 0.7329535603190996
  - 0.7276942539273964
  - 0.7581491125912118
  - 0.7599734149314267
  train_jaccard_macro_oob:
  - 0.7479680419022886
  - 0.7121070550964522
  - 0.7252924877039252
  - 0.7356038832611665
  - 0.7466692545762216
  train_jaccard_micro:
  - 0.763751127141569
  - 0.7216940363007779
  - 0.7128463476070529
  - 0.7479892761394102
  - 0.7535211267605634
  train_jaccard_micro_oob:
  - 0.7386666666666667
  - 0.6953191489361702
  - 0.7099748533109808
  - 0.7233480176211454
  - 0.7382198952879581
  train_jaccard_samples:
  - 0.7823546596552731
  - 0.737378083763626
  - 0.7261904761904763
  - 0.7661408121530823
  - 0.7733792312105563
  train_jaccard_samples_oob:
  - 0.7572304995617879
  - 0.7076878944348824
  - 0.7236694677871149
  - 0.7408705813613788
  - 0.7565978198508319
  train_jaccard_weighted:
  - 0.7044789825445454
  - 0.6324057883584262
  - 0.6099094692319053
  - 0.6773638912344383
  - 0.6871704681584577
  train_jaccard_weighted_oob:
  - 0.6585449101144727
  - 0.5900314671001197
  - 0.6052039858394815
  - 0.6320667696605786
  - 0.6598714367026842
  train_label_ranking_average_precision_score:
  - 0.8245910020449894
  - 0.8349397590361441
  - 0.8190196078431369
  - 0.8316973415132921
  - 0.8349899598393573
  train_label_ranking_average_precision_score_oob:
  - 0.7908827539195634
  - 0.7999999999999997
  - 0.7878431372549015
  - 0.8025391956373547
  - 0.8000502008032125
  train_label_ranking_loss:
  - 0.11509884117246082
  - 0.11174698795180721
  - 0.11447712418300653
  - 0.10604976141785957
  - 0.10850066934404284
  train_label_ranking_loss_oob:
  - 0.13832651670074983
  - 0.1469879518072289
  - 0.13859477124183006
  - 0.14146216768916156
  - 0.13154283801874164
  train_matthews_corrcoef_macro:
  - 0.1997451867848965
  - 0.14335241473604854
  - 0.12014825960924498
  - 0.18115790252453323
  - 0.1878801405493439
  train_matthews_corrcoef_macro_oob:
  - 0.1686982375410382
  - 0.0984556120296659
  - 0.11240872651057225
  - 0.14632307790893626
  - 0.16751022722764983
  train_matthews_corrcoef_micro:
  - 0.5423549168430144
  - 0.40479966325448113
  - 0.3460268358611801
  - 0.4986554711429507
  - 0.5097826585754222
  train_matthews_corrcoef_micro_oob:
  - 0.4710172120457407
  - 0.29725574764836743
  - 0.33201151831981585
  - 0.4192062535023626
  - 0.46325490432649097
  train_matthews_corrcoef_samples:
  - 0.4092122149936897
  - 0.24695622404940992
  - 0.1841021564476531
  - 0.35074704856341543
  - 0.3713370288415784
  train_matthews_corrcoef_samples_oob:
  - 0.32571840360922133
  - 0.1515799859046288
  - 0.18174921527118254
  - 0.2734716074986886
  - 0.3197253151791307
  train_matthews_corrcoef_weighted:
  - 0.4090389023560047
  - 0.28967850301774695
  - 0.24499172868047558
  - 0.3679883901563396
  - 0.38122351079025163
  train_matthews_corrcoef_weighted_oob:
  - 0.3454134215024293
  - 0.1983699983772659
  - 0.22957458181451518
  - 0.2979112972935545
  - 0.33955043477092467
  train_ndgc:
  - 0.8712494922674533
  - 0.8799372175173457
  - 0.8666669354749403
  - 0.8765270124190474
  - 0.8792788749396718
  train_ndgc_oob:
  - 0.8451651740266822
  - 0.8523264753390138
  - 0.8430549809634016
  - 0.8542448396073484
  - 0.8526833705460001
  train_precision_macro:
  - 0.8660531697341513
  - 0.8383534136546186
  - 0.8323529411764706
  - 0.8558282208588955
  - 0.859437751004016
  train_precision_macro_oob:
  - 0.8496932515337422
  - 0.820281124497992
  - 0.8303921568627451
  - 0.8394683026584867
  - 0.8493975903614458
  train_precision_micro:
  - 0.8660531697341514
  - 0.8383534136546185
  - 0.8323529411764706
  - 0.8558282208588958
  - 0.8594377510040161
  train_precision_micro_oob:
  - 0.8496932515337423
  - 0.820281124497992
  - 0.8303921568627451
  - 0.8394683026584867
  - 0.8493975903614458
  train_precision_samples:
  - 0.8660531697341515
  - 0.8383534136546185
  - 0.8323529411764706
  - 0.8558282208588958
  - 0.859437751004016
  train_precision_samples_oob:
  - 0.8496932515337423
  - 0.820281124497992
  - 0.8303921568627453
  - 0.8394683026584866
  - 0.8493975903614458
  train_precision_weighted:
  - 0.8228489454567653
  - 0.7689073124179888
  - 0.749282996780802
  - 0.8003235356957544
  - 0.8116505430589352
  train_precision_weighted_oob:
  - 0.7893050086988372
  - 0.7321662889180485
  - 0.7454492244659058
  - 0.7674205658822452
  - 0.7910558490118108
  train_recall_macro:
  - 0.8660531697341513
  - 0.8383534136546186
  - 0.8323529411764706
  - 0.8558282208588955
  - 0.859437751004016
  train_recall_macro_oob:
  - 0.8496932515337422
  - 0.820281124497992
  - 0.8303921568627451
  - 0.8394683026584867
  - 0.8493975903614458
  train_recall_micro:
  - 0.8660531697341514
  - 0.8383534136546185
  - 0.8323529411764706
  - 0.8558282208588958
  - 0.8594377510040161
  train_recall_micro_oob:
  - 0.8496932515337423
  - 0.820281124497992
  - 0.8303921568627451
  - 0.8394683026584867
  - 0.8493975903614458
  train_recall_samples:
  - 0.8660531697341515
  - 0.8383534136546185
  - 0.8323529411764706
  - 0.8558282208588958
  - 0.859437751004016
  train_recall_samples_oob:
  - 0.8496932515337423
  - 0.820281124497992
  - 0.8303921568627453
  - 0.8394683026584866
  - 0.8493975903614458
  train_recall_weighted:
  - 0.8228489454567653
  - 0.7689073124179888
  - 0.749282996780802
  - 0.8003235356957544
  - 0.8116505430589352
  train_recall_weighted_oob:
  - 0.7893050086988372
  - 0.7321662889180485
  - 0.7454492244659058
  - 0.7674205658822452
  - 0.7910558490118108
  train_roc_auc_macro:
  - 0.985971425850109
  - 0.9787672029925333
  - 0.9789558627139684
  - 0.9833294706107364
  - 0.9818266260492069
  train_roc_auc_macro_oob:
  - 0.9744078122628178
  - 0.9552488148998309
  - 0.9602401148470956
  - 0.9613383332528551
  - 0.9584899297407073
  train_roc_auc_micro:
  - 0.9160919981815505
  - 0.9118855525351024
  - 0.9130750399407115
  - 0.9196744719132779
  - 0.9221575485001149
  train_roc_auc_micro_oob:
  - 0.9070029517790712
  - 0.8951480160610519
  - 0.8985779284286748
  - 0.9008880949179456
  - 0.906111977338659
  train_roc_auc_samples:
  - 0.8849011588275392
  - 0.8882530120481927
  - 0.8855228758169935
  - 0.8939502385821405
  - 0.8914993306559571
  train_roc_auc_samples_oob:
  - 0.8616734832992502
  - 0.8530120481927711
  - 0.8614052287581699
  - 0.8585378323108385
  - 0.8684571619812582
  train_roc_auc_weighted:
  - 0.9775076457299599
  - 0.965239253176968
  - 0.9640327233493079
  - 0.9730630090100253
  - 0.9703536337969482
  train_roc_auc_weighted_oob:
  - 0.9615478521398533
  - 0.9394853918913348
  - 0.9421682195010379
  - 0.9462379781564426
  - 0.9459578761464209
start: 2023-12-11 21:17:41.870905
wrapper: null
