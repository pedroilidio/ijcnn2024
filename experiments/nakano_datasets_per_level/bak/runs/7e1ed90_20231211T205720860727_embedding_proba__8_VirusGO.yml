active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ2T+gmZmZmZkRQMDMzMzMzATAgJmZmZmZ+b8AMzMzMzPjvw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: &id004 !!python/name:nakano_datasets_v2.estimators.get_oob_proba ''
        score_func: *id003
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id005 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
        average: null
        greater_is_better: false
        kwargs: {}
        response_method: predict_proba
        score_func: *id005
      coverage_error_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id005
        _sign: -1
        average: null
        greater_is_better: false
        kwargs: {}
        response_method: *id004
        score_func: *id005
      f1_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: &id007 !!python/name:nakano_datasets_v2.estimators.get_oob_predictions ''
        score_func: *id006
      f1_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      hamming_loss_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id008 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
        average: macro
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: macro
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: micro
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: micro
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: samples
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: samples
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: weighted
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: weighted
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      jaccard_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id009 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id010 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id010
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id010
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id010
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id011 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id011
      label_ranking_loss_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id011
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id011
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id012 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id013 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id013
      ndgc_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id013
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id013
      precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id014 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      recall_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id015 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id016 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-11 21:03:20.850673
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 8
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      average_precision_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      coverage_error:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      coverage_error_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      label_ranking_average_precision_score:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      label_ranking_average_precision_score_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      label_ranking_loss:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      label_ranking_loss_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      ndgc:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      ndgc_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__8
  params:
    min_levels: 0
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id005
        _sign: -1
        average: null
        greater_is_better: false
        kwargs: {}
        response_method: predict_proba
        score_func: *id005
      coverage_error_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id005
        _sign: -1
        average: null
        greater_is_better: false
        kwargs: {}
        response_method: *id004
        score_func: *id005
      f1_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      hamming_loss_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: macro
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: macro
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: micro
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: micro
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: samples
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: samples
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: weighted
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: weighted
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      jaccard_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id010
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id010
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id010
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id010
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id011
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id011
      label_ranking_loss_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id011
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id011
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id013
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id013
      ndgc_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id013
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id013
      precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      recall_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
    trim_to_best_score: false
hash: 7e1ed90765058a947a7d2942b60724f8922718ce166323554a80b5b3a67972ee
metaestimator: null
modify_params:
  max_levels: 8
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/7e1ed90_20231211T205720860727_embedding_proba__8_VirusGO.yml
results:
  fit_time:
  - 146.742431640625
  - 145.63402390480042
  - 145.70059370994568
  - 144.09082412719727
  - 147.2728886604309
  score_time:
  - 90.60433053970337
  - 87.21894836425781
  - 91.79611229896545
  - 89.421315908432
  - 90.55278253555298
  test_average_precision_macro:
  - 0.9277346762980554
  - 0.93328905116717
  - 0.9730155621694049
  - 0.8734906277612523
  - 0.9157012147071005
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9437201386424219
  - 0.9176550085207531
  - 0.9581345604141625
  - 0.9043963140301915
  - 0.9282051054136176
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9512195121951219
  - 0.9369369369369369
  - 0.9545454545454546
  - 0.9368217054263566
  - 0.965079365079365
  test_average_precision_samples_oob:
  - 0.48577235772357724
  - 0.4468468468468469
  - 0.49880050505050505
  - 0.5242248062015504
  - 0.503968253968254
  test_average_precision_weighted:
  - 0.9524817724191127
  - 0.9357233374798295
  - 0.9733420487085576
  - 0.9097621504742248
  - 0.9383361266257493
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_coverage_error:
  - -1.3658536585365855
  - -1.4594594594594594
  - -1.25
  - -1.3953488372093024
  - -1.380952380952381
  test_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9349593495934959
  - 0.9054054054054056
  - 0.9545454545454546
  - 0.9263565891472868
  - 0.9523809523809524
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.9349593495934959
  - 0.9054054054054054
  - 0.9545454545454546
  - 0.9263565891472868
  - 0.9523809523809523
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.934959349593496
  - 0.9054054054054054
  - 0.9545454545454546
  - 0.9263565891472867
  - 0.9523809523809523
  test_f1_samples_oob:
  - 0.7398373983739837
  - 0.7027027027027027
  - 0.7500000000000001
  - 0.7364341085271318
  - 0.7301587301587302
  test_f1_weighted:
  - 0.922439024390244
  - 0.858246001103144
  - 0.9340463458110517
  - 0.9153488372093024
  - 0.9459706959706959
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_hamming_loss_macro:
  - -0.06504065040650407
  - -0.09459459459459459
  - -0.04545454545454545
  - -0.07364341085271318
  - -0.047619047619047616
  test_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_hamming_loss_micro:
  - -0.06504065040650407
  - -0.0945945945945946
  - -0.045454545454545456
  - -0.07364341085271318
  - -0.047619047619047616
  test_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_hamming_loss_samples:
  - -0.06504065040650406
  - -0.09459459459459459
  - -0.04545454545454545
  - -0.07364341085271317
  - -0.047619047619047616
  test_hamming_loss_samples_oob:
  - -0.26016260162601623
  - -0.2972972972972973
  - -0.24999999999999997
  - -0.2635658914728682
  - -0.2698412698412698
  test_hamming_loss_weighted:
  - -0.07756097560975608
  - -0.14175399889685605
  - -0.0659536541889483
  - -0.08465116279069766
  - -0.05402930402930403
  test_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.8787481682830519
  - 0.8339641839641839
  - 0.9154022303751391
  - 0.8643366525354104
  - 0.9094197791872211
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8778625954198473
  - 0.8271604938271605
  - 0.9130434782608695
  - 0.8628158844765343
  - 0.9090909090909091
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.8972125435540069
  - 0.8558558558558559
  - 0.9253246753246753
  - 0.8787375415282391
  - 0.9280045351473922
  test_jaccard_samples_oob:
  - 0.6068524970963997
  - 0.5579150579150579
  - 0.6195887445887447
  - 0.5980066445182726
  - 0.5952380952380951
  test_jaccard_weighted:
  - 0.8565698177791201
  - 0.7569908549500386
  - 0.8790378603903274
  - 0.8464351769693386
  - 0.8978207838672956
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9512195121951219
  - 0.936936936936937
  - 0.9545454545454546
  - 0.9368217054263566
  - 0.965079365079365
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_loss:
  - 0.023780487804878053
  - 0.02972972972972973
  - 0.018181818181818184
  - 0.044186046511627906
  - 0.028571428571428574
  test_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.5743559417380607
  - 0.6823238565951165
  - 0.7211886986946429
  - 0.5462394642437135
  - 0.6872324888028517
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.7903565734391982
  - 0.7085950399094754
  - 0.8494852887134334
  - 0.7524542748205348
  - 0.8505875642565953
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7528027088796915
  - 0.6976647124896721
  - 0.7927197528984916
  - 0.7173193765628385
  - 0.837878071789755
  test_matthews_corrcoef_samples_oob:
  - 0.06783265439229733
  - -0.001386937890526652
  - 0.05635611653485531
  - 0.062290823864772485
  - 0.08558524265716633
  test_matthews_corrcoef_weighted:
  - 0.7566560904550325
  - 0.6621517904844032
  - 0.8102132406838773
  - 0.7116762481237601
  - 0.8204086171567382
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9671207714185106
  - 0.953503839674295
  - 0.966448159415587
  - 0.9546662916911545
  - 0.9734964954103462
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9349593495934959
  - 0.9054054054054056
  - 0.9545454545454546
  - 0.9263565891472868
  - 0.9523809523809524
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.9349593495934959
  - 0.9054054054054054
  - 0.9545454545454546
  - 0.9263565891472868
  - 0.9523809523809523
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.934959349593496
  - 0.9054054054054054
  - 0.9545454545454546
  - 0.9263565891472867
  - 0.9523809523809523
  test_precision_samples_oob:
  - 0.7398373983739837
  - 0.7027027027027027
  - 0.7500000000000001
  - 0.7364341085271318
  - 0.7301587301587302
  test_precision_weighted:
  - 0.922439024390244
  - 0.858246001103144
  - 0.9340463458110516
  - 0.9153488372093024
  - 0.9459706959706959
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9349593495934959
  - 0.9054054054054056
  - 0.9545454545454546
  - 0.9263565891472868
  - 0.9523809523809524
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.9349593495934959
  - 0.9054054054054054
  - 0.9545454545454546
  - 0.9263565891472868
  - 0.9523809523809523
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.934959349593496
  - 0.9054054054054054
  - 0.9545454545454546
  - 0.9263565891472867
  - 0.9523809523809523
  test_recall_samples_oob:
  - 0.7398373983739837
  - 0.7027027027027027
  - 0.7500000000000001
  - 0.7364341085271318
  - 0.7301587301587302
  test_recall_weighted:
  - 0.922439024390244
  - 0.858246001103144
  - 0.9340463458110516
  - 0.9153488372093024
  - 0.9459706959706959
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9836853157505332
  - 0.9759262453759607
  - 0.9910652687000726
  - 0.9608080931610344
  - 0.9581009392060919
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9828571428571429
  - 0.979002005426448
  - 0.9903341618337475
  - 0.9663461538461539
  - 0.971826923076923
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.9762195121951219
  - 0.9702702702702702
  - 0.9818181818181819
  - 0.9558139534883722
  - 0.9714285714285713
  test_roc_auc_samples_oob:
  - 0.623780487804878
  - 0.5377627627627628
  - 0.6270833333333333
  - 0.6441860465116279
  - 0.5836640211640212
  test_roc_auc_weighted:
  - 0.9827873090481787
  - 0.9643605242683583
  - 0.986909949164851
  - 0.956985446985447
  - 0.9688425390399075
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9857222753576576
  - 0.9895838435837779
  - 0.9904182116457041
  - 0.9840317455875166
  - 0.9823303449892501
  train_average_precision_macro_oob:
  - 0.9310604576818674
  - 0.9403697482765451
  - 0.9526568553811737
  - 0.9577809642146619
  - 0.9325245956232865
  train_average_precision_micro:
  - 0.9776969301096604
  - 0.9863604898937626
  - 0.9809990611259832
  - 0.9827014614261178
  - 0.9744886872049361
  train_average_precision_micro_oob:
  - 0.9464840908945057
  - 0.9614822030835637
  - 0.9524852252862365
  - 0.9637110135111219
  - 0.9432303762191627
  train_average_precision_samples:
  - 0.9814257028112451
  - 0.9882352941176471
  - 0.9795501022494887
  - 0.9817073170731707
  - 0.9823232323232322
  train_average_precision_samples_oob:
  - 0.9649598393574298
  - 0.9704901960784315
  - 0.962883435582822
  - 0.968021680216802
  - 0.9582828282828283
  train_average_precision_weighted:
  - 0.9874337565850544
  - 0.9918801008218074
  - 0.989411955105471
  - 0.987793600035701
  - 0.984402827677059
  train_average_precision_weighted_oob:
  - 0.951003122731109
  - 0.9602321003231006
  - 0.9619961949295428
  - 0.9705218286051303
  - 0.9467758222852553
  train_coverage_error:
  - -1.2710843373493976
  - -1.2294117647058824
  - -1.294478527607362
  - -1.2804878048780488
  - -1.2606060606060605
  train_coverage_error_oob:
  - -1.3674698795180722
  - -1.3176470588235294
  - -1.3496932515337423
  - -1.3353658536585367
  - -1.3333333333333333
  train_f1_macro:
  - 0.9558232931726908
  - 0.9715686274509805
  - 0.9539877300613496
  - 0.9583333333333334
  - 0.9575757575757576
  train_f1_macro_oob:
  - 0.9427710843373495
  - 0.9500000000000001
  - 0.9366053169734151
  - 0.9420731707317073
  - 0.9373737373737373
  train_f1_micro:
  - 0.9558232931726908
  - 0.9715686274509804
  - 0.9539877300613497
  - 0.9583333333333334
  - 0.9575757575757575
  train_f1_micro_oob:
  - 0.9427710843373494
  - 0.9500000000000001
  - 0.9366053169734151
  - 0.9420731707317073
  - 0.9373737373737374
  train_f1_samples:
  - 0.9558232931726909
  - 0.9715686274509805
  - 0.9539877300613497
  - 0.9583333333333335
  - 0.9575757575757575
  train_f1_samples_oob:
  - 0.9427710843373494
  - 0.95
  - 0.9366053169734151
  - 0.9420731707317073
  - 0.9373737373737375
  train_f1_weighted:
  - 0.9543122986997495
  - 0.9672558678643872
  - 0.951439123401398
  - 0.953604201883603
  - 0.9556363636363636
  train_f1_weighted_oob:
  - 0.9381486341405224
  - 0.9463343958272965
  - 0.9268992461007843
  - 0.9280668920550592
  - 0.9274848484848485
  train_hamming_loss_macro:
  - -0.04417670682730924
  - -0.028431372549019607
  - -0.04601226993865031
  - -0.041666666666666664
  - -0.04242424242424242
  train_hamming_loss_macro_oob:
  - -0.05722891566265059
  - -0.049999999999999996
  - -0.06339468302658487
  - -0.05792682926829268
  - -0.06262626262626263
  train_hamming_loss_micro:
  - -0.04417670682730924
  - -0.028431372549019607
  - -0.046012269938650305
  - -0.041666666666666664
  - -0.04242424242424243
  train_hamming_loss_micro_oob:
  - -0.0572289156626506
  - -0.05
  - -0.06339468302658487
  - -0.057926829268292686
  - -0.06262626262626263
  train_hamming_loss_samples:
  - -0.04417670682730924
  - -0.028431372549019607
  - -0.0460122699386503
  - -0.04166666666666666
  - -0.04242424242424243
  train_hamming_loss_samples_oob:
  - -0.0572289156626506
  - -0.05
  - -0.06339468302658487
  - -0.057926829268292686
  - -0.06262626262626261
  train_hamming_loss_weighted:
  - -0.04568770130025051
  - -0.03274413213561287
  - -0.04856087659860209
  - -0.04639579811639701
  - -0.044363636363636355
  train_hamming_loss_weighted_oob:
  - -0.06185136585947751
  - -0.053665604172703565
  - -0.07310075389921557
  - -0.07193310794494084
  - -0.0725151515151515
  train_jaccard_macro:
  - 0.915484261336574
  - 0.9451478210565112
  - 0.9122615252315648
  - 0.9202278920356486
  - 0.9190216839850945
  train_jaccard_macro_oob:
  - 0.8919387615747958
  - 0.9050951205944046
  - 0.8816040059990676
  - 0.891355494730291
  - 0.8828393509642195
  train_jaccard_micro:
  - 0.9153846153846154
  - 0.9447092469018112
  - 0.9120234604105572
  - 0.92
  - 0.9186046511627907
  train_jaccard_micro_oob:
  - 0.8917378917378918
  - 0.9047619047619048
  - 0.8807692307692307
  - 0.8904899135446686
  - 0.8821292775665399
  train_jaccard_samples:
  - 0.9281411359724614
  - 0.9533613445378152
  - 0.9257960853052877
  - 0.9326364692218352
  - 0.9301587301587302
  train_jaccard_samples_oob:
  - 0.9084911072862879
  - 0.9184873949579834
  - 0.8986269354367514
  - 0.9089721254355402
  - 0.8984126984126984
  train_jaccard_weighted:
  - 0.9127252297481085
  - 0.9367843141689063
  - 0.9075536457531703
  - 0.911592155031379
  - 0.9153490899031179
  train_jaccard_weighted_oob:
  - 0.8836353900894155
  - 0.8984887549050575
  - 0.8644158494954138
  - 0.8666860238541543
  - 0.8653306850729947
  train_label_ranking_average_precision_score:
  - 0.9814257028112447
  - 0.9882352941176471
  - 0.9795501022494886
  - 0.9817073170731707
  - 0.9823232323232322
  train_label_ranking_average_precision_score_oob:
  - 0.9649598393574296
  - 0.9704901960784313
  - 0.962883435582822
  - 0.968021680216802
  - 0.9582828282828283
  train_label_ranking_loss:
  - 0.010240963855421687
  - 0.0061764705882352946
  - 0.010889570552147239
  - 0.009298780487804878
  - 0.00909090909090909
  train_label_ranking_loss_oob:
  - 0.02663989290495315
  - 0.021911764705882353
  - 0.02254601226993865
  - 0.020477642276422764
  - 0.02227272727272727
  train_matthews_corrcoef_macro:
  - 0.6770398331097409
  - 0.8756425295043258
  - 0.6628013285368045
  - 0.6934462204838359
  - 0.6727668690915252
  train_matthews_corrcoef_macro_oob:
  - 0.6152901790902762
  - 0.6452823739338909
  - 0.5826245343500581
  - 0.6361324465886421
  - 0.5880798568241412
  train_matthews_corrcoef_micro:
  - 0.85961256763213
  - 0.9092715196702376
  - 0.8551637910697042
  - 0.8690560760918683
  - 0.865018667690878
  train_matthews_corrcoef_micro_oob:
  - 0.8162691992572685
  - 0.8380000003048715
  - 0.7977227633423423
  - 0.8159149235213637
  - 0.7976146986731555
  train_matthews_corrcoef_samples:
  - 0.834494513810381
  - 0.9041843013473937
  - 0.8388283969179406
  - 0.8547501749855143
  - 0.8508474948802556
  train_matthews_corrcoef_samples_oob:
  - 0.7804978791024484
  - 0.8014790473139431
  - 0.7648413221591274
  - 0.7893630557915846
  - 0.7580771507518522
  train_matthews_corrcoef_weighted:
  - 0.8336481089687244
  - 0.8995457395420312
  - 0.82829340297702
  - 0.8433102819533442
  - 0.8388015403847744
  train_matthews_corrcoef_weighted_oob:
  - 0.7822564485207102
  - 0.807560490264201
  - 0.7558406025061829
  - 0.77875309765199
  - 0.7575994321753201
  train_ndgc:
  - 0.9867152258376901
  - 0.9917723593261134
  - 0.9855947952647788
  - 0.9866616466455035
  - 0.987428225712897
  train_ndgc_oob:
  - 0.9752149720552982
  - 0.9793496086727834
  - 0.973117750354873
  - 0.9768468867860948
  - 0.9700832010084283
  train_precision_macro:
  - 0.9558232931726908
  - 0.9715686274509805
  - 0.9539877300613496
  - 0.9583333333333334
  - 0.9575757575757576
  train_precision_macro_oob:
  - 0.9427710843373495
  - 0.9500000000000001
  - 0.9366053169734151
  - 0.9420731707317073
  - 0.9373737373737373
  train_precision_micro:
  - 0.9558232931726908
  - 0.9715686274509804
  - 0.9539877300613497
  - 0.9583333333333334
  - 0.9575757575757575
  train_precision_micro_oob:
  - 0.9427710843373494
  - 0.95
  - 0.9366053169734151
  - 0.9420731707317073
  - 0.9373737373737374
  train_precision_samples:
  - 0.9558232931726909
  - 0.9715686274509805
  - 0.9539877300613497
  - 0.9583333333333335
  - 0.9575757575757575
  train_precision_samples_oob:
  - 0.9427710843373494
  - 0.95
  - 0.9366053169734151
  - 0.9420731707317073
  - 0.9373737373737375
  train_precision_weighted:
  - 0.9543122986997495
  - 0.9672558678643872
  - 0.951439123401398
  - 0.953604201883603
  - 0.9556363636363636
  train_precision_weighted_oob:
  - 0.9381486341405224
  - 0.9463343958272965
  - 0.9268992461007843
  - 0.9280668920550592
  - 0.9274848484848485
  train_recall_macro:
  - 0.9558232931726908
  - 0.9715686274509805
  - 0.9539877300613496
  - 0.9583333333333334
  - 0.9575757575757576
  train_recall_macro_oob:
  - 0.9427710843373495
  - 0.9500000000000001
  - 0.9366053169734151
  - 0.9420731707317073
  - 0.9373737373737373
  train_recall_micro:
  - 0.9558232931726908
  - 0.9715686274509804
  - 0.9539877300613497
  - 0.9583333333333334
  - 0.9575757575757575
  train_recall_micro_oob:
  - 0.9427710843373494
  - 0.95
  - 0.9366053169734151
  - 0.9420731707317073
  - 0.9373737373737374
  train_recall_samples:
  - 0.9558232931726909
  - 0.9715686274509805
  - 0.9539877300613497
  - 0.9583333333333335
  - 0.9575757575757575
  train_recall_samples_oob:
  - 0.9427710843373494
  - 0.95
  - 0.9366053169734151
  - 0.9420731707317073
  - 0.9373737373737375
  train_recall_weighted:
  - 0.9543122986997495
  - 0.9672558678643872
  - 0.951439123401398
  - 0.953604201883603
  - 0.9556363636363636
  train_recall_weighted_oob:
  - 0.9381486341405224
  - 0.9463343958272965
  - 0.9268992461007843
  - 0.9280668920550592
  - 0.9274848484848485
  train_roc_auc_macro:
  - 0.9957309531677949
  - 0.9974629715202156
  - 0.996662608680923
  - 0.995863469038325
  - 0.9945319606193408
  train_roc_auc_macro_oob:
  - 0.9791079221428713
  - 0.9796428553936524
  - 0.9846745315907528
  - 0.9863131111825828
  - 0.9792104057403751
  train_roc_auc_micro:
  - 0.9933910267601067
  - 0.9962556752747949
  - 0.9952777937852565
  - 0.995157124408093
  - 0.9929398734177215
  train_roc_auc_micro_oob:
  - 0.9797989874554205
  - 0.9839012125341421
  - 0.9855164332776274
  - 0.9875921095945912
  - 0.9814746835443038
  train_roc_auc_samples:
  - 0.9897590361445784
  - 0.9938235294117647
  - 0.9891104294478528
  - 0.9907012195121951
  - 0.990909090909091
  train_roc_auc_samples_oob:
  - 0.9733601070950468
  - 0.9780882352941177
  - 0.9774539877300613
  - 0.9795223577235773
  - 0.9777272727272728
  train_roc_auc_weighted:
  - 0.994211613092721
  - 0.9968745657231477
  - 0.9945588261536183
  - 0.994840628285335
  - 0.9927571856020182
  train_roc_auc_weighted_oob:
  - 0.9787090730954011
  - 0.9827788310020843
  - 0.9817196088512872
  - 0.9865225968517332
  - 0.9762095521843037
start: 2023-12-11 20:57:20.860727
wrapper: null
