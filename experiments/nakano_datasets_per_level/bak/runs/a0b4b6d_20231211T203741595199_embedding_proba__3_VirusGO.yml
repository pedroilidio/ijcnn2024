active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZvzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wMzMzMzMBMCAZmZmZmb2PwCamZmZmdk/ADMzMzMz47+AZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: true
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: &id004 !!python/name:nakano_datasets_v2.estimators.get_oob_proba ''
        score_func: *id003
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id005 !!python/name:sklearn.metrics._ranking.coverage_error ''
        _sign: -1
        average: null
        greater_is_better: false
        kwargs: {}
        response_method: predict_proba
        score_func: *id005
      coverage_error_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id005
        _sign: -1
        average: null
        greater_is_better: false
        kwargs: {}
        response_method: *id004
        score_func: *id005
      f1_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id006 !!python/name:sklearn.metrics._classification.f1_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: &id007 !!python/name:nakano_datasets_v2.estimators.get_oob_predictions ''
        score_func: *id006
      f1_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      hamming_loss_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id008 !!python/name:sklearn.metrics._classification.hamming_loss ''
        _sign: -1
        average: macro
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: macro
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: micro
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: micro
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: samples
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: samples
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: weighted
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: weighted
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      jaccard_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id009 !!python/name:sklearn.metrics._classification.jaccard_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id010 !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id010
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id010
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id010
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id011 !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id011
      label_ranking_loss_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id011
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id011
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id012 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id013 !!python/name:sklearn.metrics._ranking.ndcg_score ''
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id013
      ndgc_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id013
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id013
      precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id014 !!python/name:sklearn.metrics._classification.precision_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      recall_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id015 !!python/name:sklearn.metrics._classification.recall_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: &id016 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_per_level/runs
end: 2023-12-11 20:40:12.373040
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.ExtraTreesRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.8
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        - - rf
          - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
            params:
              estimator:
                call: deep_forest.tree_embedder.ForestEmbedder
                params:
                  estimator:
                    call: sklearn.ensemble._forest.RandomForestRegressor
                    params:
                      bootstrap: true
                      ccp_alpha: 0.0
                      criterion: squared_error
                      max_depth: null
                      max_features: sqrt
                      max_leaf_nodes: null
                      max_samples: 0.5
                      min_impurity_decrease: 0.0
                      min_samples_leaf: 5
                      min_samples_split: 2
                      min_weight_fraction_leaf: 0.0
                      n_estimators: 150
                      n_jobs: 14
                      oob_score: false
                      random_state: 0
                      verbose: true
                      warm_start: false
                  max_node_size: 0.95
                  max_pvalue: 1.0
                  method: path
                  node_weights: log_node_size
              method: predict
              post_transformer:
                call: sklearn.pipeline.Pipeline
                params:
                  memory: null
                  steps:
                  - - densifier
                    - call: nakano_datasets_v2.estimators.Densifier
                      params: {}
                  - - pca
                    - call: sklearn.decomposition._pca.PCA
                      params:
                        copy: true
                        iterated_power: auto
                        n_components: 0.8
                        n_oversamples: 10
                        power_iteration_normalizer: auto
                        random_state: 0
                        svd_solver: auto
                        tol: 0.0
                        whiten: false
                  verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 3
    max_unimproving_levels: null
    memory:
      call: joblib.memory.Memory
      params: {}
    min_improvement: null
    min_levels: 0
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      average_precision_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      average_precision_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      coverage_error:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      coverage_error_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      f1_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      hamming_loss_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      jaccard_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      label_ranking_average_precision_score:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      label_ranking_average_precision_score_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      label_ranking_loss:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      label_ranking_loss_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      matthews_corrcoef_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      ndgc:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      ndgc_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      precision_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      recall_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_macro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_macro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_micro:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_micro_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_samples:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_samples_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_weighted:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
      roc_auc_weighted_oob:
        load: nakano_datasets_v2.estimators.MultiLabelScorer
    trim_to_best_score: false
    validation_size: train
    verbose: 10
  name: embedding_proba__3
  params:
    min_levels: 0
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id003
      average_precision_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id003
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id005
        _sign: -1
        average: null
        greater_is_better: false
        kwargs: {}
        response_method: predict_proba
        score_func: *id005
      coverage_error_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id005
        _sign: -1
        average: null
        greater_is_better: false
        kwargs: {}
        response_method: *id004
        score_func: *id005
      f1_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      f1_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id006
      f1_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id006
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id006
      hamming_loss_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: macro
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: macro
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: micro
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: micro
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: samples
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: samples
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      hamming_loss_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: weighted
        greater_is_better: false
        kwargs: {}
        response_method: predict
        score_func: *id008
      hamming_loss_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id008
        _sign: -1
        average: weighted
        greater_is_better: false
        kwargs: {}
        response_method: *id007
        score_func: *id008
      jaccard_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      jaccard_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id009
      jaccard_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id009
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id009
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id010
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id010
      label_ranking_average_precision_score_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id010
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id010
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id011
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id011
      label_ranking_loss_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id011
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id011
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict
        score_func: *id012
      matthews_corrcoef_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id012
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id007
        score_func: *id012
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id013
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id013
      ndgc_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id013
        _sign: 1
        average: null
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id013
      precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id014
      precision_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id014
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id014
      recall_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      recall_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: predict
        score_func: *id015
      recall_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id015
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs:
          average: micro
          pos_label: null
        response_method: *id007
        score_func: *id015
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_macro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: macro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_micro_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: micro
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_samples_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: samples
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: predict_proba
        score_func: *id016
      roc_auc_weighted_oob: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        _score_func: *id016
        _sign: 1
        average: weighted
        greater_is_better: true
        kwargs: {}
        response_method: *id004
        score_func: *id016
    trim_to_best_score: false
hash: a0b4b6d5ffa1c28049f6bd48a9c0d00d9700ff26bc4e6d01727e6008d2c09ea0
metaestimator: null
modify_params:
  max_levels: 3
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_per_level/runs/a0b4b6d_20231211T203741595199_embedding_proba__3_VirusGO.yml
results:
  fit_time:
  - 60.163933515548706
  - 61.414414167404175
  - 61.16806077957153
  - 61.15749645233154
  - 60.80752372741699
  score_time:
  - 37.413804054260254
  - 37.05304837226868
  - 38.12096047401428
  - 38.36956334114075
  - 38.220463275909424
  test_average_precision_macro:
  - 0.9966863706266821
  - 0.9813224595393714
  - 0.9140924857449626
  - 0.922615060816208
  - 0.872692679799394
  test_average_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_micro:
  - 0.9691943586555813
  - 0.9605985347760975
  - 0.9322583637291546
  - 0.9538197718209078
  - 0.8473019433913429
  test_average_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_average_precision_samples:
  - 0.9772727272727273
  - 0.9770833333333332
  - 0.9708672086720868
  - 0.9444444444444445
  - 0.8875
  test_average_precision_samples_oob:
  - 0.5079545454545454
  - 0.5541666666666667
  - 0.4838753387533875
  - 0.5527777777777778
  - 0.4608333333333333
  test_average_precision_weighted:
  - 0.9932638087914906
  - 0.9755854722841516
  - 0.9401400850611378
  - 0.9488973068984679
  - 0.8744568012500649
  test_average_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_coverage_error:
  - -1.2045454545454546
  - -1.275
  - -1.3414634146341464
  - -1.380952380952381
  - -1.6
  test_coverage_error_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_macro:
  - 0.9469696969696969
  - 0.9541666666666667
  - 0.9430894308943089
  - 0.9404761904761906
  - 0.9125
  test_f1_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_micro:
  - 0.946969696969697
  - 0.9541666666666666
  - 0.943089430894309
  - 0.9404761904761905
  - 0.9125
  test_f1_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_f1_samples:
  - 0.9469696969696971
  - 0.9541666666666668
  - 0.9430894308943091
  - 0.9404761904761905
  - 0.9125
  test_f1_samples_oob:
  - 0.7613636363636364
  - 0.75
  - 0.7113821138211383
  - 0.7460317460317459
  - 0.725
  test_f1_weighted:
  - 0.9402852049910875
  - 0.9336734693877551
  - 0.9365853658536585
  - 0.9377289377289377
  - 0.8675
  test_f1_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_hamming_loss_macro:
  - -0.05303030303030303
  - -0.04583333333333334
  - -0.056910569105691054
  - -0.059523809523809514
  - -0.08750000000000001
  test_hamming_loss_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_hamming_loss_micro:
  - -0.05303030303030303
  - -0.04583333333333333
  - -0.056910569105691054
  - -0.05952380952380952
  - -0.0875
  test_hamming_loss_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_hamming_loss_samples:
  - -0.053030303030303025
  - -0.04583333333333333
  - -0.05691056910569105
  - -0.05952380952380952
  - -0.0875
  test_hamming_loss_samples_oob:
  - -0.23863636363636365
  - -0.25
  - -0.2886178861788618
  - -0.2539682539682539
  - -0.275
  test_hamming_loss_weighted:
  - -0.059714795008912656
  - -0.0663265306122449
  - -0.06341463414634146
  - -0.06227106227106227
  - -0.13249999999999998
  test_hamming_loss_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_macro:
  - 0.9000599582005687
  - 0.9153439153439153
  - 0.8951942264379068
  - 0.8881862099253404
  - 0.845187423502181
  test_jaccard_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_micro:
  - 0.8992805755395683
  - 0.9123505976095617
  - 0.8923076923076924
  - 0.8876404494382022
  - 0.8390804597701149
  test_jaccard_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_jaccard_samples:
  - 0.913961038961039
  - 0.9232142857142858
  - 0.9059233449477351
  - 0.9058956916099774
  - 0.8636904761904762
  test_jaccard_samples_oob:
  - 0.635822510822511
  - 0.6196428571428572
  - 0.5650406504065041
  - 0.6162131519274376
  - 0.5869047619047618
  test_jaccard_weighted:
  - 0.888282454517422
  - 0.8788467768059605
  - 0.8845114674113662
  - 0.8832319854058984
  - 0.7695079769047959
  test_jaccard_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_average_precision_score:
  - 0.9772727272727273
  - 0.9770833333333334
  - 0.9708672086720868
  - 0.9444444444444444
  - 0.8875
  test_label_ranking_average_precision_score_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_label_ranking_loss:
  - 0.009090909090909092
  - 0.01125
  - 0.019444444444444445
  - 0.028571428571428574
  - 0.07062500000000001
  test_label_ranking_loss_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_macro:
  - 0.6321271175629805
  - 0.8367883978487112
  - 0.5644733779876985
  - 0.626736330761195
  - 0.7151495199827246
  test_matthews_corrcoef_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_micro:
  - 0.8235017275709996
  - 0.8552995797320528
  - 0.8176971874178582
  - 0.8120693451824883
  - 0.7212626714192323
  test_matthews_corrcoef_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_matthews_corrcoef_samples:
  - 0.7696570696378943
  - 0.8606797181058934
  - 0.7953534452602034
  - 0.7501692090758703
  - 0.6903398590529466
  test_matthews_corrcoef_samples_oob:
  - 0.09238434236516709
  - 0.08952847075210474
  - -0.01591788789997494
  - 0.1113230005020025
  - 0.06824555320336759
  test_matthews_corrcoef_weighted:
  - 0.7889493420942572
  - 0.8309129227255292
  - 0.7524540108473944
  - 0.7820532422363087
  - 0.6675609069652068
  test_matthews_corrcoef_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_ndgc:
  - 0.9832240797077936
  - 0.9831089039297183
  - 0.9828321355256268
  - 0.9586157025510218
  - 0.9171624949444144
  test_ndgc_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_macro:
  - 0.9469696969696969
  - 0.9541666666666667
  - 0.9430894308943089
  - 0.9404761904761906
  - 0.9125
  test_precision_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_micro:
  - 0.946969696969697
  - 0.9541666666666667
  - 0.943089430894309
  - 0.9404761904761905
  - 0.9125
  test_precision_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_precision_samples:
  - 0.9469696969696971
  - 0.9541666666666668
  - 0.9430894308943091
  - 0.9404761904761905
  - 0.9125
  test_precision_samples_oob:
  - 0.7613636363636364
  - 0.75
  - 0.7113821138211383
  - 0.7460317460317459
  - 0.725
  test_precision_weighted:
  - 0.9402852049910875
  - 0.9336734693877551
  - 0.9365853658536585
  - 0.9377289377289377
  - 0.8675
  test_precision_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_macro:
  - 0.9469696969696969
  - 0.9541666666666667
  - 0.9430894308943089
  - 0.9404761904761906
  - 0.9125
  test_recall_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_micro:
  - 0.946969696969697
  - 0.9541666666666667
  - 0.943089430894309
  - 0.9404761904761905
  - 0.9125
  test_recall_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_recall_samples:
  - 0.9469696969696971
  - 0.9541666666666668
  - 0.9430894308943091
  - 0.9404761904761905
  - 0.9125
  test_recall_samples_oob:
  - 0.7613636363636364
  - 0.75
  - 0.7113821138211383
  - 0.7460317460317459
  - 0.725
  test_recall_weighted:
  - 0.9402852049910875
  - 0.9336734693877551
  - 0.9365853658536585
  - 0.9377289377289377
  - 0.8675
  test_recall_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_macro:
  - 0.9978353164627675
  - 0.9914718906886426
  - 0.972387829005476
  - 0.975445253149993
  - 0.9293435588991855
  test_roc_auc_macro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_micro:
  - 0.9937402190923317
  - 0.9897424938561812
  - 0.9758163265306122
  - 0.9825
  - 0.9468421052631578
  test_roc_auc_micro_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  test_roc_auc_samples:
  - 0.990909090909091
  - 0.9887499999999999
  - 0.9805555555555556
  - 0.9714285714285713
  - 0.929375
  test_roc_auc_samples_oob:
  - 0.6130681818181818
  - 0.691875
  - 0.6263550135501356
  - 0.6586640211640212
  - 0.5518750000000001
  test_roc_auc_weighted:
  - 0.9955868387240936
  - 0.9849403529527754
  - 0.9682657657657658
  - 0.9808432138037401
  - 0.9206389986824769
  test_roc_auc_weighted_oob:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  train_average_precision_macro:
  - 0.9814912971246517
  - 0.9838851526178108
  - 0.9866761225311924
  - 0.9852931252685981
  - 0.9936761416533435
  train_average_precision_macro_oob:
  - 0.9255812402918419
  - 0.9371692537287556
  - 0.9411614695811353
  - 0.9350964002300378
  - 0.9511042540921046
  train_average_precision_micro:
  - 0.9720105610104687
  - 0.9751905887402511
  - 0.9750657616938372
  - 0.973643026396628
  - 0.9864518645037608
  train_average_precision_micro_oob:
  - 0.9333032462191759
  - 0.9403070942732472
  - 0.9385717365928928
  - 0.9383659280466343
  - 0.9603420977839496
  train_average_precision_samples:
  - 0.9810838445807772
  - 0.9755489021956087
  - 0.9784136546184738
  - 0.9808080808080807
  - 0.9870259481037923
  train_average_precision_samples_oob:
  - 0.9584867075664623
  - 0.9444444444444445
  - 0.9487951807228916
  - 0.961010101010101
  - 0.978243512974052
  train_average_precision_weighted:
  - 0.9839407833080399
  - 0.9858692742429717
  - 0.9865265346628449
  - 0.9844578184122943
  - 0.9938196659838724
  train_average_precision_weighted_oob:
  - 0.9411515095964847
  - 0.9522457592381609
  - 0.9513030847655873
  - 0.945801537500268
  - 0.9659906303698598
  train_coverage_error:
  - -1.2883435582822085
  - -1.281437125748503
  - -1.2771084337349397
  - -1.2666666666666666
  - -1.251497005988024
  train_coverage_error_oob:
  - -1.3803680981595092
  - -1.3892215568862276
  - -1.3674698795180722
  - -1.3393939393939394
  - -1.2874251497005988
  train_f1_macro:
  - 0.9488752556237219
  - 0.9590818363273451
  - 0.9497991967871485
  - 0.9575757575757575
  - 0.9690618762475048
  train_f1_macro_oob:
  - 0.929447852760736
  - 0.934131736526946
  - 0.9367469879518073
  - 0.9353535353535354
  - 0.9510978043912175
  train_f1_micro:
  - 0.9488752556237219
  - 0.9590818363273453
  - 0.9497991967871486
  - 0.9575757575757575
  - 0.969061876247505
  train_f1_micro_oob:
  - 0.9294478527607362
  - 0.9341317365269461
  - 0.9367469879518072
  - 0.9353535353535354
  - 0.9510978043912176
  train_f1_samples:
  - 0.948875255623722
  - 0.9590818363273454
  - 0.9497991967871485
  - 0.9575757575757575
  - 0.9690618762475051
  train_f1_samples_oob:
  - 0.9294478527607362
  - 0.9341317365269461
  - 0.9367469879518072
  - 0.9353535353535353
  - 0.9510978043912176
  train_f1_weighted:
  - 0.9455483319598326
  - 0.9493820241290817
  - 0.9414290826673029
  - 0.9508787878787879
  - 0.9626193158237979
  train_f1_weighted_oob:
  - 0.9199096541830724
  - 0.9247514822571608
  - 0.9232375044733389
  - 0.9197575757575759
  - 0.9469674512361416
  train_hamming_loss_macro:
  - -0.05112474437627812
  - -0.040918163672654696
  - -0.05020080321285141
  - -0.04242424242424242
  - -0.030938123752495005
  train_hamming_loss_macro_oob:
  - -0.0705521472392638
  - -0.0658682634730539
  - -0.06325301204819277
  - -0.06464646464646465
  - -0.04890219560878243
  train_hamming_loss_micro:
  - -0.05112474437627812
  - -0.04091816367265469
  - -0.050200803212851405
  - -0.04242424242424243
  - -0.03093812375249501
  train_hamming_loss_micro_oob:
  - -0.0705521472392638
  - -0.0658682634730539
  - -0.06325301204819277
  - -0.06464646464646465
  - -0.04890219560878244
  train_hamming_loss_samples:
  - -0.05112474437627811
  - -0.04091816367265469
  - -0.0502008032128514
  - -0.04242424242424243
  - -0.030938123752495005
  train_hamming_loss_samples_oob:
  - -0.0705521472392638
  - -0.0658682634730539
  - -0.06325301204819277
  - -0.06464646464646463
  - -0.04890219560878243
  train_hamming_loss_weighted:
  - -0.05445166804016727
  - -0.050617975870918264
  - -0.05857091733269713
  - -0.049121212121212114
  - -0.03738068417620205
  train_hamming_loss_weighted_oob:
  - -0.08009034581692764
  - -0.07524851774283944
  - -0.0767624955266611
  - -0.08024242424242424
  - -0.05303254876385842
  train_jaccard_macro:
  - 0.9030207049516085
  - 0.9221891815614051
  - 0.9046815409985896
  - 0.9190429295795308
  - 0.9404989348074623
  train_jaccard_macro_oob:
  - 0.8692336107170258
  - 0.8769084440914486
  - 0.8816343893861106
  - 0.8804917823433781
  - 0.9071152072176515
  train_jaccard_micro:
  - 0.9027237354085603
  - 0.9213806327900288
  - 0.904397705544933
  - 0.9186046511627907
  - 0.9399806389157793
  train_jaccard_micro_oob:
  - 0.8681948424068768
  - 0.8764044943820225
  - 0.8810198300283286
  - 0.8785578747628083
  - 0.9067554709800191
  train_jaccard_samples:
  - 0.9186386210926089
  - 0.9344168805246651
  - 0.9201090074584051
  - 0.9303030303030303
  - 0.9493869404049045
  train_jaccard_samples_oob:
  - 0.8873794916739701
  - 0.8956372968349016
  - 0.8998852553069421
  - 0.8948051948051948
  - 0.9198745366410037
  train_jaccard_weighted:
  - 0.8969199403472974
  - 0.9040410003123213
  - 0.8896203320403221
  - 0.9067867487070381
  - 0.9281518846682021
  train_jaccard_weighted_oob:
  - 0.8524810879879908
  - 0.8602281403720451
  - 0.8579248539835987
  - 0.8536534680076414
  - 0.8996527607689526
  train_label_ranking_average_precision_score:
  - 0.9810838445807769
  - 0.9755489021956085
  - 0.9784136546184736
  - 0.9808080808080807
  - 0.9870259481037923
  train_label_ranking_average_precision_score_oob:
  - 0.958486707566462
  - 0.9444444444444443
  - 0.9487951807228916
  - 0.961010101010101
  - 0.9782435129740518
  train_label_ranking_loss:
  - 0.010429447852760737
  - 0.012125748502994015
  - 0.011897590361445784
  - 0.009545454545454544
  - 0.007035928143712575
  train_label_ranking_loss_oob:
  - 0.028220858895705525
  - 0.033666001330671984
  - 0.030120481927710843
  - 0.023181818181818182
  - 0.012707917498336663
  train_matthews_corrcoef_macro:
  - 0.6379846312814914
  - 0.8299205390266327
  - 0.6611490319881276
  - 0.6897750655305895
  - 0.8703620122861838
  train_matthews_corrcoef_macro_oob:
  - 0.5017888642075811
  - 0.6571028991623484
  - 0.6105966709117586
  - 0.589332888100779
  - 0.7307851136339135
  train_matthews_corrcoef_micro:
  - 0.8384481410684135
  - 0.8701155234312619
  - 0.8397021590239876
  - 0.865018667690878
  - 0.9020732678112642
  train_matthews_corrcoef_micro_oob:
  - 0.7736667485722541
  - 0.7868561793143007
  - 0.7960213753901885
  - 0.7907001747455018
  - 0.8432385173424974
  train_matthews_corrcoef_samples:
  - 0.8120407848528002
  - 0.8643340524616203
  - 0.8151532188885932
  - 0.8571600798309463
  - 0.9042436995518442
  train_matthews_corrcoef_samples_oob:
  - 0.7315659905744857
  - 0.745656019882256
  - 0.7579703952878687
  - 0.7603870830553927
  - 0.8192438066080163
  train_matthews_corrcoef_weighted:
  - 0.8086192254746677
  - 0.8522880706988532
  - 0.8096668721644261
  - 0.8369913728222059
  - 0.8900231310221859
  train_matthews_corrcoef_weighted_oob:
  - 0.708402225532674
  - 0.7583649150667744
  - 0.7587925198010335
  - 0.7453376293483953
  - 0.8254018178323239
  train_ndgc:
  - 0.986470720791758
  - 0.9826780690953241
  - 0.9841867873488456
  - 0.9865629174650327
  - 0.991143843560404
  train_ndgc_oob:
  - 0.96966028996391
  - 0.9599166657072757
  - 0.9623737503789231
  - 0.9722408944774648
  - 0.9851411667475034
  train_precision_macro:
  - 0.9488752556237219
  - 0.9590818363273451
  - 0.9497991967871485
  - 0.9575757575757575
  - 0.9690618762475048
  train_precision_macro_oob:
  - 0.929447852760736
  - 0.934131736526946
  - 0.9367469879518073
  - 0.9353535353535354
  - 0.9510978043912175
  train_precision_micro:
  - 0.9488752556237219
  - 0.9590818363273453
  - 0.9497991967871486
  - 0.9575757575757575
  - 0.969061876247505
  train_precision_micro_oob:
  - 0.9294478527607362
  - 0.9341317365269461
  - 0.9367469879518072
  - 0.9353535353535354
  - 0.9510978043912176
  train_precision_samples:
  - 0.948875255623722
  - 0.9590818363273454
  - 0.9497991967871485
  - 0.9575757575757575
  - 0.9690618762475051
  train_precision_samples_oob:
  - 0.9294478527607362
  - 0.9341317365269461
  - 0.9367469879518072
  - 0.9353535353535353
  - 0.9510978043912176
  train_precision_weighted:
  - 0.9455483319598326
  - 0.9493820241290817
  - 0.9414290826673029
  - 0.9508787878787879
  - 0.9626193158237979
  train_precision_weighted_oob:
  - 0.9199096541830724
  - 0.9247514822571608
  - 0.9232375044733389
  - 0.9197575757575759
  - 0.9469674512361417
  train_recall_macro:
  - 0.9488752556237219
  - 0.9590818363273451
  - 0.9497991967871485
  - 0.9575757575757575
  - 0.9690618762475048
  train_recall_macro_oob:
  - 0.929447852760736
  - 0.934131736526946
  - 0.9367469879518073
  - 0.9353535353535354
  - 0.9510978043912175
  train_recall_micro:
  - 0.9488752556237219
  - 0.9590818363273453
  - 0.9497991967871486
  - 0.9575757575757575
  - 0.969061876247505
  train_recall_micro_oob:
  - 0.9294478527607362
  - 0.9341317365269461
  - 0.9367469879518072
  - 0.9353535353535354
  - 0.9510978043912176
  train_recall_samples:
  - 0.948875255623722
  - 0.9590818363273454
  - 0.9497991967871485
  - 0.9575757575757575
  - 0.9690618762475051
  train_recall_samples_oob:
  - 0.9294478527607362
  - 0.9341317365269461
  - 0.9367469879518072
  - 0.9353535353535353
  - 0.9510978043912176
  train_recall_weighted:
  - 0.9455483319598326
  - 0.9493820241290817
  - 0.9414290826673029
  - 0.9508787878787879
  - 0.9626193158237979
  train_recall_weighted_oob:
  - 0.9199096541830724
  - 0.9247514822571608
  - 0.9232375044733389
  - 0.9197575757575759
  - 0.9469674512361417
  train_roc_auc_macro:
  - 0.9938019269138731
  - 0.9954041962338627
  - 0.9950109914276156
  - 0.9947528920521526
  - 0.9981430045062091
  train_roc_auc_macro_oob:
  - 0.967241770993693
  - 0.9766048582132464
  - 0.978003907022774
  - 0.9770298416097177
  - 0.9855771283785111
  train_roc_auc_micro:
  - 0.9917465439853499
  - 0.993060907415057
  - 0.9931478664239219
  - 0.9928481012658228
  - 0.996457301980198
  train_roc_auc_micro_oob:
  - 0.9752844528963933
  - 0.9789206952039804
  - 0.9800172082699453
  - 0.9798670886075949
  - 0.9865779702970296
  train_roc_auc_samples:
  - 0.9895705521472393
  - 0.9878742514970061
  - 0.9881024096385542
  - 0.9904545454545455
  - 0.9929640718562873
  train_roc_auc_samples_oob:
  - 0.9717791411042945
  - 0.9663339986693281
  - 0.9698795180722891
  - 0.9768181818181819
  - 0.9872920825016634
  train_roc_auc_weighted:
  - 0.9917242070163514
  - 0.9935829347344235
  - 0.9928811882986859
  - 0.9917305628086901
  - 0.9971455522447374
  train_roc_auc_weighted_oob:
  - 0.9704588528012029
  - 0.9751505968558372
  - 0.9763848165392078
  - 0.9740114622450787
  - 0.9863118379329787
start: 2023-12-11 20:37:41.595199
wrapper: null
