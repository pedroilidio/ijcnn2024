<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="3140" onload="init(evt)" viewBox="0 0 1200 3140" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno">
    <!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.-->
    <!--NOTES: -->
    <defs>
        <linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
            <stop stop-color="#eeeeee" offset="5%"/>
            <stop stop-color="#eeeeb0" offset="95%"/>
        </linearGradient>
    </defs>
    <style type="text/css">
text { font-family:monospace; font-size:16px }
#title { text-anchor:middle; font-size:21px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style>
    <script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 16;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script>
    <rect x="0" y="0" width="100%" height="3140" fill="url(#background)"/>
    <text id="title" fill="rgb(0,0,0)" x="50.0000%" y="32.00">Peak Tracked Memory Usage (6107.3 MiB)</text>
    <text id="subtitle" x="50.0000%" y="64.00">Made with the Fil profiler. <a href="https://pythonspeed.com/fil/" style="text-decoration: underline;" target="_parent">Try it on your code!</a></text>
    <text id="details" fill="rgb(0,0,0)" x="10" y="84.00"> </text>
    <text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="32.00">Reset Zoom</text>
    <text id="search" fill="rgb(0,0,0)" x="1190" y="32.00">Search</text>
    <text id="matched" fill="rgb(0,0,0)" x="1190" y="3127.00"> </text>
    <svg id="frames" x="10" width="1180" total_samples="6373581139">
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:216 (fit) (642,132,720 bytes, 10.07%)</title>
            <rect x="0.1013%" y="1178" width="10.0749%" height="21" fill="rgb(255,202,202)" fg:x="6455014" fg:w="642132720"/>
            <text x="0.3513%" y="1191.50">/home/pedr..</text>
        </g>
        <g>
            <title>        self.estimator_.fit(X, y) (642,132,720 bytes, 10.07%)</title>
            <rect x="0.1013%" y="1200" width="10.0749%" height="21" fill="rgb(255,202,202)" fg:x="6455014" fg:w="642132720"/>
            <text x="0.3513%" y="1213.50">        s..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:473 (fit) (642,048,720 bytes, 10.07%)</title>
            <rect x="0.1026%" y="1222" width="10.0736%" height="21" fill="rgb(255,202,202)" fg:x="6539014" fg:w="642048720"/>
            <text x="0.3526%" y="1235.50">/home/pedr..</text>
        </g>
        <g>
            <title>            trees = Parallel( (642,048,720 bytes, 10.07%)</title>
            <rect x="0.1026%" y="1244" width="10.0736%" height="21" fill="rgb(255,202,202)" fg:x="6539014" fg:w="642048720"/>
            <text x="0.3526%" y="1257.50">         ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (642,048,720 bytes, 10.07%)</title>
            <rect x="0.1026%" y="1266" width="10.0736%" height="21" fill="rgb(255,202,202)" fg:x="6539014" fg:w="642048720"/>
            <text x="0.3526%" y="1279.50">/home/pedr..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (642,048,720 bytes, 10.07%)</title>
            <rect x="0.1026%" y="1288" width="10.0736%" height="21" fill="rgb(255,202,202)" fg:x="6539014" fg:w="642048720"/>
            <text x="0.3526%" y="1301.50">        r..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1088 (__call__) (635,668,360 bytes, 9.97%)</title>
            <rect x="0.2027%" y="1310" width="9.9735%" height="21" fill="rgb(255,202,202)" fg:x="12919374" fg:w="635668360"/>
            <text x="0.4527%" y="1323.50">/home/pedr..</text>
        </g>
        <g>
            <title>            while self.dispatch_one_batch(iterator): (635,668,360 bytes, 9.97%)</title>
            <rect x="0.2027%" y="1332" width="9.9735%" height="21" fill="rgb(255,202,202)" fg:x="12919374" fg:w="635668360"/>
            <text x="0.4527%" y="1345.50">         ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (635,668,360 bytes, 9.97%)</title>
            <rect x="0.2027%" y="1354" width="9.9735%" height="21" fill="rgb(255,202,202)" fg:x="12919374" fg:w="635668360"/>
            <text x="0.4527%" y="1367.50">/home/pedr..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (635,668,360 bytes, 9.97%)</title>
            <rect x="0.2027%" y="1376" width="9.9735%" height="21" fill="rgb(255,202,202)" fg:x="12919374" fg:w="635668360"/>
            <text x="0.4527%" y="1389.50">         ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (635,668,360 bytes, 9.97%)</title>
            <rect x="0.2027%" y="1398" width="9.9735%" height="21" fill="rgb(255,202,202)" fg:x="12919374" fg:w="635668360"/>
            <text x="0.4527%" y="1411.50">/home/pedr..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (635,668,360 bytes, 9.97%)</title>
            <rect x="0.2027%" y="1420" width="9.9735%" height="21" fill="rgb(255,202,202)" fg:x="12919374" fg:w="635668360"/>
            <text x="0.4527%" y="1433.50">         ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (635,668,360 bytes, 9.97%)</title>
            <rect x="0.2027%" y="1442" width="9.9735%" height="21" fill="rgb(255,202,202)" fg:x="12919374" fg:w="635668360"/>
            <text x="0.4527%" y="1455.50">/home/pedr..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (635,668,360 bytes, 9.97%)</title>
            <rect x="0.2027%" y="1464" width="9.9735%" height="21" fill="rgb(255,202,202)" fg:x="12919374" fg:w="635668360"/>
            <text x="0.4527%" y="1477.50">        r..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (635,668,360 bytes, 9.97%)</title>
            <rect x="0.2027%" y="1486" width="9.9735%" height="21" fill="rgb(255,202,202)" fg:x="12919374" fg:w="635668360"/>
            <text x="0.4527%" y="1499.50">/home/pedr..</text>
        </g>
        <g>
            <title>        self.results = batch() (635,668,360 bytes, 9.97%)</title>
            <rect x="0.2027%" y="1508" width="9.9735%" height="21" fill="rgb(255,202,202)" fg:x="12919374" fg:w="635668360"/>
            <text x="0.4527%" y="1521.50">        s..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (635,668,360 bytes, 9.97%)</title>
            <rect x="0.2027%" y="1530" width="9.9735%" height="21" fill="rgb(255,202,202)" fg:x="12919374" fg:w="635668360"/>
            <text x="0.4527%" y="1543.50">/home/pedr..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (635,668,360 bytes, 9.97%)</title>
            <rect x="0.2027%" y="1552" width="9.9735%" height="21" fill="rgb(255,202,202)" fg:x="12919374" fg:w="635668360"/>
            <text x="0.4527%" y="1565.50">         ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (635,668,360 bytes, 9.97%)</title>
            <rect x="0.2027%" y="1574" width="9.9735%" height="21" fill="rgb(255,202,202)" fg:x="12919374" fg:w="635668360"/>
            <text x="0.4527%" y="1587.50">/home/pedr..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (635,668,360 bytes, 9.97%)</title>
            <rect x="0.2027%" y="1596" width="9.9735%" height="21" fill="rgb(255,202,202)" fg:x="12919374" fg:w="635668360"/>
            <text x="0.4527%" y="1609.50">         ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (635,668,360 bytes, 9.97%)</title>
            <rect x="0.2027%" y="1618" width="9.9735%" height="21" fill="rgb(255,202,202)" fg:x="12919374" fg:w="635668360"/>
            <text x="0.4527%" y="1631.50">/home/pedr..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (635,668,360 bytes, 9.97%)</title>
            <rect x="0.2027%" y="1640" width="9.9735%" height="21" fill="rgb(255,202,202)" fg:x="12919374" fg:w="635668360"/>
            <text x="0.4527%" y="1653.50">         ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:186 (_parallel_build_trees) (635,668,360 bytes, 9.97%)</title>
            <rect x="0.2027%" y="1662" width="9.9735%" height="21" fill="rgb(255,202,202)" fg:x="12919374" fg:w="635668360"/>
            <text x="0.4527%" y="1675.50">/home/pedr..</text>
        </g>
        <g>
            <title>        tree.fit(X, y, sample_weight=sample_weight, check_input=False) (635,668,360 bytes, 9.97%)</title>
            <rect x="0.2027%" y="1684" width="9.9735%" height="21" fill="rgb(255,202,202)" fg:x="12919374" fg:w="635668360"/>
            <text x="0.4527%" y="1697.50">        t..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/tree/_classes.py:889 (fit) (635,668,360 bytes, 9.97%)</title>
            <rect x="0.2027%" y="1706" width="9.9735%" height="21" fill="rgb(255,202,202)" fg:x="12919374" fg:w="635668360"/>
            <text x="0.4527%" y="1719.50">/home/pedr..</text>
        </g>
        <g>
            <title>        super().fit( (635,668,360 bytes, 9.97%)</title>
            <rect x="0.2027%" y="1728" width="9.9735%" height="21" fill="rgb(255,202,202)" fg:x="12919374" fg:w="635668360"/>
            <text x="0.4527%" y="1741.50">        s..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/tree/_classes.py:379 (fit) (634,601,800 bytes, 9.96%)</title>
            <rect x="0.2194%" y="1750" width="9.9568%" height="21" fill="rgb(255,202,202)" fg:x="13985934" fg:w="634601800"/>
            <text x="0.4694%" y="1763.50">/home/pedr..</text>
        </g>
        <g>
            <title>        builder.build(self.tree_, X, y, sample_weight) (634,601,800 bytes, 9.96%)</title>
            <rect x="0.2194%" y="1772" width="9.9568%" height="21" fill="rgb(255,202,202)" fg:x="13985934" fg:w="634601800"/>
            <text x="0.4694%" y="1785.50">        b..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:420 (_compressed_sparse_stack) (37,918,088 bytes, 0.59%)</title>
            <rect x="10.1762%" y="1398" width="0.5949%" height="21" fill="rgb(255,238,238)" fg:x="648587734" fg:w="37918088"/>
            <text x="10.4262%" y="1411.50"></text>
        </g>
        <g>
            <title>    data = np.concatenate([b.data for b in blocks]) (37,918,088 bytes, 0.59%)</title>
            <rect x="10.1762%" y="1420" width="0.5949%" height="21" fill="rgb(255,238,238)" fg:x="648587734" fg:w="37918088"/>
            <text x="10.4262%" y="1433.50"></text>
        </g>
        <g>
            <title>&lt;__array_function__ internals&gt;:200 (concatenate) (37,918,088 bytes, 0.59%)</title>
            <rect x="10.1762%" y="1442" width="0.5949%" height="21" fill="rgb(255,238,238)" fg:x="648587734" fg:w="37918088"/>
            <text x="10.4262%" y="1455.50"></text>
        </g>
        <g>
            <title> (37,918,088 bytes, 0.59%)</title>
            <rect x="10.1762%" y="1464" width="0.5949%" height="21" fill="rgb(255,238,238)" fg:x="648587734" fg:w="37918088"/>
            <text x="10.4262%" y="1477.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (699,009,900 bytes, 10.97%)</title>
            <rect x="0.1013%" y="914" width="10.9673%" height="21" fill="rgb(255,200,200)" fg:x="6455014" fg:w="699009900"/>
            <text x="0.3513%" y="927.50">/home/pedro..</text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (699,009,900 bytes, 10.97%)</title>
            <rect x="0.1013%" y="936" width="10.9673%" height="21" fill="rgb(255,200,200)" fg:x="6455014" fg:w="699009900"/>
            <text x="0.3513%" y="949.50">        Xt..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (699,009,900 bytes, 10.97%)</title>
            <rect x="0.1013%" y="958" width="10.9673%" height="21" fill="rgb(255,200,200)" fg:x="6455014" fg:w="699009900"/>
            <text x="0.3513%" y="971.50">/home/pedro..</text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (699,009,900 bytes, 10.97%)</title>
            <rect x="0.1013%" y="980" width="10.9673%" height="21" fill="rgb(255,200,200)" fg:x="6455014" fg:w="699009900"/>
            <text x="0.3513%" y="993.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (699,009,900 bytes, 10.97%)</title>
            <rect x="0.1013%" y="1002" width="10.9673%" height="21" fill="rgb(255,200,200)" fg:x="6455014" fg:w="699009900"/>
            <text x="0.3513%" y="1015.50">/home/pedro..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (699,009,900 bytes, 10.97%)</title>
            <rect x="0.1013%" y="1024" width="10.9673%" height="21" fill="rgb(255,200,200)" fg:x="6455014" fg:w="699009900"/>
            <text x="0.3513%" y="1037.50">        re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (699,009,900 bytes, 10.97%)</title>
            <rect x="0.1013%" y="1046" width="10.9673%" height="21" fill="rgb(255,200,200)" fg:x="6455014" fg:w="699009900"/>
            <text x="0.3513%" y="1059.50">/home/pedro..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (699,009,900 bytes, 10.97%)</title>
            <rect x="0.1013%" y="1068" width="10.9673%" height="21" fill="rgb(255,200,200)" fg:x="6455014" fg:w="699009900"/>
            <text x="0.3513%" y="1081.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (699,009,900 bytes, 10.97%)</title>
            <rect x="0.1013%" y="1090" width="10.9673%" height="21" fill="rgb(255,200,200)" fg:x="6455014" fg:w="699009900"/>
            <text x="0.3513%" y="1103.50">/home/pedro..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (699,009,900 bytes, 10.97%)</title>
            <rect x="0.1013%" y="1112" width="10.9673%" height="21" fill="rgb(255,200,200)" fg:x="6455014" fg:w="699009900"/>
            <text x="0.3513%" y="1125.50">        da..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (699,009,900 bytes, 10.97%)</title>
            <rect x="0.1013%" y="1134" width="10.9673%" height="21" fill="rgb(255,200,200)" fg:x="6455014" fg:w="699009900"/>
            <text x="0.3513%" y="1147.50">/home/pedro..</text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (699,009,900 bytes, 10.97%)</title>
            <rect x="0.1013%" y="1156" width="10.9673%" height="21" fill="rgb(255,200,200)" fg:x="6455014" fg:w="699009900"/>
            <text x="0.3513%" y="1169.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (56,877,180 bytes, 0.89%)</title>
            <rect x="10.1762%" y="1178" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="648587734" fg:w="56877180"/>
            <text x="10.4262%" y="1191.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (56,877,180 bytes, 0.89%)</title>
            <rect x="10.1762%" y="1200" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="648587734" fg:w="56877180"/>
            <text x="10.4262%" y="1213.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:255 (transform) (56,877,180 bytes, 0.89%)</title>
            <rect x="10.1762%" y="1222" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="648587734" fg:w="56877180"/>
            <text x="10.4262%" y="1235.50"></text>
        </g>
        <g>
            <title>        return _hstack(np.fromiter(embeddings_iter, dtype=&apos;object&apos;)) (56,877,180 bytes, 0.89%)</title>
            <rect x="10.1762%" y="1244" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="648587734" fg:w="56877180"/>
            <text x="10.4262%" y="1257.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:41 (_hstack) (56,877,180 bytes, 0.89%)</title>
            <rect x="10.1762%" y="1266" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="648587734" fg:w="56877180"/>
            <text x="10.4262%" y="1279.50"></text>
        </g>
        <g>
            <title>        return scipy.sparse.hstack(Xs, format=&apos;csr&apos;) (56,877,180 bytes, 0.89%)</title>
            <rect x="10.1762%" y="1288" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="648587734" fg:w="56877180"/>
            <text x="10.4262%" y="1301.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:535 (hstack) (56,877,180 bytes, 0.89%)</title>
            <rect x="10.1762%" y="1310" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="648587734" fg:w="56877180"/>
            <text x="10.4262%" y="1323.50"></text>
        </g>
        <g>
            <title>    return bmat([blocks], format=format, dtype=dtype) (56,877,180 bytes, 0.89%)</title>
            <rect x="10.1762%" y="1332" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="648587734" fg:w="56877180"/>
            <text x="10.4262%" y="1345.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:632 (bmat) (56,877,180 bytes, 0.89%)</title>
            <rect x="10.1762%" y="1354" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="648587734" fg:w="56877180"/>
            <text x="10.4262%" y="1367.50"></text>
        </g>
        <g>
            <title>        A = _compressed_sparse_stack(blocks[:, 0], 0) (56,877,180 bytes, 0.89%)</title>
            <rect x="10.1762%" y="1376" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="648587734" fg:w="56877180"/>
            <text x="10.4262%" y="1389.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:424 (_compressed_sparse_stack) (18,959,092 bytes, 0.30%)</title>
            <rect x="10.7711%" y="1398" width="0.2975%" height="21" fill="rgb(255,241,241)" fg:x="686505822" fg:w="18959092"/>
            <text x="11.0211%" y="1411.50"></text>
        </g>
        <g>
            <title>    indices = np.empty(data.size, dtype=idx_dtype) (18,959,092 bytes, 0.30%)</title>
            <rect x="10.7711%" y="1420" width="0.2975%" height="21" fill="rgb(255,241,241)" fg:x="686505822" fg:w="18959092"/>
            <text x="11.0211%" y="1433.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_eigen/arpack/arpack.py:535 (iterate) (33,556,542 bytes, 0.53%)</title>
            <rect x="11.0686%" y="1134" width="0.5265%" height="21" fill="rgb(255,239,239)" fg:x="705464914" fg:w="33556542"/>
            <text x="11.3186%" y="1147.50"></text>
        </g>
        <g>
            <title>    def iterate(self): (33,556,542 bytes, 0.53%)</title>
            <rect x="11.0686%" y="1156" width="0.5265%" height="21" fill="rgb(255,239,239)" fg:x="705464914" fg:w="33556542"/>
            <text x="11.3186%" y="1169.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_eigen/_svds.py:532 (svds) (90,434,242 bytes, 1.42%)</title>
            <rect x="11.0686%" y="1046" width="1.4189%" height="21" fill="rgb(255,232,232)" fg:x="705464914" fg:w="90434242"/>
            <text x="11.3186%" y="1059.50"></text>
        </g>
        <g>
            <title>        _, eigvec = eigsh(XH_X, k=k, tol=tol ** 2, maxiter=maxiter, (90,434,242 bytes, 1.42%)</title>
            <rect x="11.0686%" y="1068" width="1.4189%" height="21" fill="rgb(255,232,232)" fg:x="705464914" fg:w="90434242"/>
            <text x="11.3186%" y="1081.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_eigen/arpack/arpack.py:1697 (eigsh) (90,434,242 bytes, 1.42%)</title>
            <rect x="11.0686%" y="1090" width="1.4189%" height="21" fill="rgb(255,232,232)" fg:x="705464914" fg:w="90434242"/>
            <text x="11.3186%" y="1103.50"></text>
        </g>
        <g>
            <title>            params.iterate() (90,434,242 bytes, 1.42%)</title>
            <rect x="11.0686%" y="1112" width="1.4189%" height="21" fill="rgb(255,232,232)" fg:x="705464914" fg:w="90434242"/>
            <text x="11.3186%" y="1125.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_eigen/arpack/arpack.py:549 (iterate) (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1134" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1147.50"></text>
        </g>
        <g>
            <title>                self.workd[yslice] = self.OP(self.workd[xslice]) (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1156" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1169.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_interface.py:232 (matvec) (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1178" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1191.50"></text>
        </g>
        <g>
            <title>        y = self._matvec(x) (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1200" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1213.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_interface.py:530 (_matvec) (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1222" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1235.50"></text>
        </g>
        <g>
            <title>        return self.__matvec_impl(x) (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1244" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1257.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_eigen/_svds.py:473 (matvec_XH_X) (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1266" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1279.50"></text>
        </g>
        <g>
            <title>        return XH_dot(X_dot(x)) (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1288" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1301.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_interface.py:279 (rmatvec) (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1310" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1323.50"></text>
        </g>
        <g>
            <title>        y = self._rmatvec(x) (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1332" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1345.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_interface.py:301 (_rmatvec) (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1354" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1367.50"></text>
        </g>
        <g>
            <title>            return self.H.matvec(x) (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1376" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1389.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_interface.py:484 (adjoint) (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1398" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1411.50"></text>
        </g>
        <g>
            <title>        return self._adjoint() (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1420" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1433.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_interface.py:737 (_adjoint) (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1442" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1455.50"></text>
        </g>
        <g>
            <title>            self.__adj = _AdjointMatrixOperator(self) (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1464" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1477.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_interface.py:742 (__init__) (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1486" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1499.50"></text>
        </g>
        <g>
            <title>        self.A = adjoint.A.T.conj() (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1508" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1521.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_data.py:85 (conj) (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1530" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1543.50"></text>
        </g>
        <g>
            <title>            return self.copy() (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1552" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1565.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_data.py:92 (copy) (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1574" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1587.50"></text>
        </g>
        <g>
            <title>        return self._with_data(self.data.copy(), copy=True) (56,877,700 bytes, 0.89%)</title>
            <rect x="11.5951%" y="1596" width="0.8924%" height="21" fill="rgb(255,235,235)" fg:x="739021456" fg:w="56877700"/>
            <text x="11.8451%" y="1609.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_compressed.py:1230 (_with_data) (18,959,156 bytes, 0.30%)</title>
            <rect x="12.1900%" y="1618" width="0.2975%" height="21" fill="rgb(255,241,241)" fg:x="776940000" fg:w="18959156"/>
            <text x="12.4400%" y="1631.50"></text>
        </g>
        <g>
            <title>            return self.__class__((data, self.indices.copy(), (18,959,156 bytes, 0.30%)</title>
            <rect x="12.1900%" y="1640" width="0.2975%" height="21" fill="rgb(255,241,241)" fg:x="776940000" fg:w="18959156"/>
            <text x="12.4400%" y="1653.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/numpy/linalg/linalg.py:927 (qr) (33,554,432 bytes, 0.53%)</title>
            <rect x="12.4875%" y="1134" width="0.5265%" height="21" fill="rgb(255,239,239)" fg:x="795899156" fg:w="33554432"/>
            <text x="12.7375%" y="1147.50"></text>
        </g>
        <g>
            <title>    tau = gufunc(a, signature=signature, extobj=extobj) (33,554,432 bytes, 0.53%)</title>
            <rect x="12.4875%" y="1156" width="0.5265%" height="21" fill="rgb(255,239,239)" fg:x="795899156" fg:w="33554432"/>
            <text x="12.7375%" y="1169.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_eigen/_svds.py:536 (svds) (35,568,312 bytes, 0.56%)</title>
            <rect x="12.4875%" y="1046" width="0.5581%" height="21" fill="rgb(255,238,238)" fg:x="795899156" fg:w="35568312"/>
            <text x="12.7375%" y="1059.50"></text>
        </g>
        <g>
            <title>        eigvec, _ = np.linalg.qr(eigvec) (35,568,312 bytes, 0.56%)</title>
            <rect x="12.4875%" y="1068" width="0.5581%" height="21" fill="rgb(255,238,238)" fg:x="795899156" fg:w="35568312"/>
            <text x="12.7375%" y="1081.50"></text>
        </g>
        <g>
            <title>&lt;__array_function__ internals&gt;:200 (qr) (35,568,312 bytes, 0.56%)</title>
            <rect x="12.4875%" y="1090" width="0.5581%" height="21" fill="rgb(255,238,238)" fg:x="795899156" fg:w="35568312"/>
            <text x="12.7375%" y="1103.50"></text>
        </g>
        <g>
            <title> (35,568,312 bytes, 0.56%)</title>
            <rect x="12.4875%" y="1112" width="0.5581%" height="21" fill="rgb(255,238,238)" fg:x="795899156" fg:w="35568312"/>
            <text x="12.7375%" y="1125.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_eigen/_svds.py:539 (svds) (357,256,896 bytes, 5.61%)</title>
            <rect x="13.0455%" y="1046" width="5.6053%" height="21" fill="rgb(255,214,214)" fg:x="831467468" fg:w="357256896"/>
            <text x="13.2955%" y="1059.50">/home..</text>
        </g>
        <g>
            <title>    Av = X_matmat(eigvec) (357,256,896 bytes, 5.61%)</title>
            <rect x="13.0455%" y="1068" width="5.6053%" height="21" fill="rgb(255,214,214)" fg:x="831467468" fg:w="357256896"/>
            <text x="13.2955%" y="1081.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_interface.py:377 (rmatmat) (357,256,896 bytes, 5.61%)</title>
            <rect x="13.0455%" y="1090" width="5.6053%" height="21" fill="rgb(255,214,214)" fg:x="831467468" fg:w="357256896"/>
            <text x="13.2955%" y="1103.50">/home..</text>
        </g>
        <g>
            <title>        Y = self._rmatmat(X) (357,256,896 bytes, 5.61%)</title>
            <rect x="13.0455%" y="1112" width="5.6053%" height="21" fill="rgb(255,214,214)" fg:x="831467468" fg:w="357256896"/>
            <text x="13.2955%" y="1125.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_interface.py:387 (_rmatmat) (357,256,896 bytes, 5.61%)</title>
            <rect x="13.0455%" y="1134" width="5.6053%" height="21" fill="rgb(255,214,214)" fg:x="831467468" fg:w="357256896"/>
            <text x="13.2955%" y="1147.50">/home..</text>
        </g>
        <g>
            <title>            return self.H.matmat(X) (357,256,896 bytes, 5.61%)</title>
            <rect x="13.0455%" y="1156" width="5.6053%" height="21" fill="rgb(255,214,214)" fg:x="831467468" fg:w="357256896"/>
            <text x="13.2955%" y="1169.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_interface.py:337 (matmat) (357,256,896 bytes, 5.61%)</title>
            <rect x="13.0455%" y="1178" width="5.6053%" height="21" fill="rgb(255,214,214)" fg:x="831467468" fg:w="357256896"/>
            <text x="13.2955%" y="1191.50">/home..</text>
        </g>
        <g>
            <title>        Y = self._matmat(X) (357,256,896 bytes, 5.61%)</title>
            <rect x="13.0455%" y="1200" width="5.6053%" height="21" fill="rgb(255,214,214)" fg:x="831467468" fg:w="357256896"/>
            <text x="13.2955%" y="1213.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_interface.py:733 (_matmat) (357,256,896 bytes, 5.61%)</title>
            <rect x="13.0455%" y="1222" width="5.6053%" height="21" fill="rgb(255,214,214)" fg:x="831467468" fg:w="357256896"/>
            <text x="13.2955%" y="1235.50">/home..</text>
        </g>
        <g>
            <title>        return self.A.dot(X) (357,256,896 bytes, 5.61%)</title>
            <rect x="13.0455%" y="1244" width="5.6053%" height="21" fill="rgb(255,214,214)" fg:x="831467468" fg:w="357256896"/>
            <text x="13.2955%" y="1257.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_base.py:416 (dot) (357,256,896 bytes, 5.61%)</title>
            <rect x="13.0455%" y="1266" width="5.6053%" height="21" fill="rgb(255,214,214)" fg:x="831467468" fg:w="357256896"/>
            <text x="13.2955%" y="1279.50">/home..</text>
        </g>
        <g>
            <title>            return self @ other (357,256,896 bytes, 5.61%)</title>
            <rect x="13.0455%" y="1288" width="5.6053%" height="21" fill="rgb(255,214,214)" fg:x="831467468" fg:w="357256896"/>
            <text x="13.2955%" y="1301.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_base.py:630 (__matmul__) (357,256,896 bytes, 5.61%)</title>
            <rect x="13.0455%" y="1310" width="5.6053%" height="21" fill="rgb(255,214,214)" fg:x="831467468" fg:w="357256896"/>
            <text x="13.2955%" y="1323.50">/home..</text>
        </g>
        <g>
            <title>        return self._mul_dispatch(other) (357,256,896 bytes, 5.61%)</title>
            <rect x="13.0455%" y="1332" width="5.6053%" height="21" fill="rgb(255,214,214)" fg:x="831467468" fg:w="357256896"/>
            <text x="13.2955%" y="1345.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_base.py:532 (_mul_dispatch) (357,256,896 bytes, 5.61%)</title>
            <rect x="13.0455%" y="1354" width="5.6053%" height="21" fill="rgb(255,214,214)" fg:x="831467468" fg:w="357256896"/>
            <text x="13.2955%" y="1367.50">/home..</text>
        </g>
        <g>
            <title>                return self._mul_multivector(other) (357,256,896 bytes, 5.61%)</title>
            <rect x="13.0455%" y="1376" width="5.6053%" height="21" fill="rgb(255,214,214)" fg:x="831467468" fg:w="357256896"/>
            <text x="13.2955%" y="1389.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_compressed.py:497 (_mul_multivector) (357,256,896 bytes, 5.61%)</title>
            <rect x="13.0455%" y="1398" width="5.6053%" height="21" fill="rgb(255,214,214)" fg:x="831467468" fg:w="357256896"/>
            <text x="13.2955%" y="1411.50">/home..</text>
        </g>
        <g>
            <title>        result = np.zeros((M, n_vecs), (357,256,896 bytes, 5.61%)</title>
            <rect x="13.0455%" y="1420" width="5.6053%" height="21" fill="rgb(255,214,214)" fg:x="831467468" fg:w="357256896"/>
            <text x="13.2955%" y="1433.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (3,374,430,014 bytes, 52.94%)</title>
            <rect x="0.0397%" y="518" width="52.9440%" height="21" fill="rgb(255,140,140)" fg:x="2529582" fg:w="3374430014"/>
            <text x="0.2897%" y="531.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/..</text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (3,374,430,014 bytes, 52.94%)</title>
            <rect x="0.0397%" y="540" width="52.9440%" height="21" fill="rgb(255,140,140)" fg:x="2529582" fg:w="3374430014"/>
            <text x="0.2897%" y="553.50">            if self.dispatch_one_batch(iterator):..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (3,370,504,582 bytes, 52.88%)</title>
            <rect x="0.1013%" y="562" width="52.8824%" height="21" fill="rgb(255,140,140)" fg:x="6455014" fg:w="3370504582"/>
            <text x="0.3513%" y="575.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (3,370,504,582 bytes, 52.88%)</title>
            <rect x="0.1013%" y="584" width="52.8824%" height="21" fill="rgb(255,140,140)" fg:x="6455014" fg:w="3370504582"/>
            <text x="0.3513%" y="597.50">                self._dispatch(tasks)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (3,370,504,582 bytes, 52.88%)</title>
            <rect x="0.1013%" y="606" width="52.8824%" height="21" fill="rgb(255,140,140)" fg:x="6455014" fg:w="3370504582"/>
            <text x="0.3513%" y="619.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (3,370,504,582 bytes, 52.88%)</title>
            <rect x="0.1013%" y="628" width="52.8824%" height="21" fill="rgb(255,140,140)" fg:x="6455014" fg:w="3370504582"/>
            <text x="0.3513%" y="641.50">            job = self._backend.apply_async(batch, callback=cb)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (3,370,504,582 bytes, 52.88%)</title>
            <rect x="0.1013%" y="650" width="52.8824%" height="21" fill="rgb(255,140,140)" fg:x="6455014" fg:w="3370504582"/>
            <text x="0.3513%" y="663.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (3,370,504,582 bytes, 52.88%)</title>
            <rect x="0.1013%" y="672" width="52.8824%" height="21" fill="rgb(255,140,140)" fg:x="6455014" fg:w="3370504582"/>
            <text x="0.3513%" y="685.50">        result = ImmediateResult(func)</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (3,370,504,582 bytes, 52.88%)</title>
            <rect x="0.1013%" y="694" width="52.8824%" height="21" fill="rgb(255,140,140)" fg:x="6455014" fg:w="3370504582"/>
            <text x="0.3513%" y="707.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/..</text>
        </g>
        <g>
            <title>        self.results = batch() (3,370,504,582 bytes, 52.88%)</title>
            <rect x="0.1013%" y="716" width="52.8824%" height="21" fill="rgb(255,140,140)" fg:x="6455014" fg:w="3370504582"/>
            <text x="0.3513%" y="729.50">        self.results = batch()</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (3,370,504,582 bytes, 52.88%)</title>
            <rect x="0.1013%" y="738" width="52.8824%" height="21" fill="rgb(255,140,140)" fg:x="6455014" fg:w="3370504582"/>
            <text x="0.3513%" y="751.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (3,370,504,582 bytes, 52.88%)</title>
            <rect x="0.1013%" y="760" width="52.8824%" height="21" fill="rgb(255,140,140)" fg:x="6455014" fg:w="3370504582"/>
            <text x="0.3513%" y="773.50">            return [func(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (3,370,504,582 bytes, 52.88%)</title>
            <rect x="0.1013%" y="782" width="52.8824%" height="21" fill="rgb(255,140,140)" fg:x="6455014" fg:w="3370504582"/>
            <text x="0.3513%" y="795.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (3,370,504,582 bytes, 52.88%)</title>
            <rect x="0.1013%" y="804" width="52.8824%" height="21" fill="rgb(255,140,140)" fg:x="6455014" fg:w="3370504582"/>
            <text x="0.3513%" y="817.50">            return [func(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (3,370,504,582 bytes, 52.88%)</title>
            <rect x="0.1013%" y="826" width="52.8824%" height="21" fill="rgb(255,140,140)" fg:x="6455014" fg:w="3370504582"/>
            <text x="0.3513%" y="839.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (3,370,504,582 bytes, 52.88%)</title>
            <rect x="0.1013%" y="848" width="52.8824%" height="21" fill="rgb(255,140,140)" fg:x="6455014" fg:w="3370504582"/>
            <text x="0.3513%" y="861.50">            return self.function(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (3,370,504,582 bytes, 52.88%)</title>
            <rect x="0.1013%" y="870" width="52.8824%" height="21" fill="rgb(255,140,140)" fg:x="6455014" fg:w="3370504582"/>
            <text x="0.3513%" y="883.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (3,370,504,582 bytes, 52.88%)</title>
            <rect x="0.1013%" y="892" width="52.8824%" height="21" fill="rgb(255,140,140)" fg:x="6455014" fg:w="3370504582"/>
            <text x="0.3513%" y="905.50">            res = transformer.fit_transform(X, y, **fit_params)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:445 (fit_transform) (2,671,494,682 bytes, 41.92%)</title>
            <rect x="11.0686%" y="914" width="41.9151%" height="21" fill="rgb(255,152,152)" fg:x="705464914" fg:w="2671494682"/>
            <text x="11.3186%" y="927.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_fo..</text>
        </g>
        <g>
            <title>                return last_step.fit_transform(Xt, y, **fit_params_last_step) (2,671,494,682 bytes, 41.92%)</title>
            <rect x="11.0686%" y="936" width="41.9151%" height="21" fill="rgb(255,152,152)" fg:x="705464914" fg:w="2671494682"/>
            <text x="11.3186%" y="949.50">                return last_step.fit_transform(Xt,..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (2,671,494,682 bytes, 41.92%)</title>
            <rect x="11.0686%" y="958" width="41.9151%" height="21" fill="rgb(255,152,152)" fg:x="705464914" fg:w="2671494682"/>
            <text x="11.3186%" y="971.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_fo..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (2,671,494,682 bytes, 41.92%)</title>
            <rect x="11.0686%" y="980" width="41.9151%" height="21" fill="rgb(255,152,152)" fg:x="705464914" fg:w="2671494682"/>
            <text x="11.3186%" y="993.50">        data_to_wrap = f(self, X, *args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/decomposition/_truncated_svd.py:229 (fit_transform) (2,671,494,682 bytes, 41.92%)</title>
            <rect x="11.0686%" y="1002" width="41.9151%" height="21" fill="rgb(255,152,152)" fg:x="705464914" fg:w="2671494682"/>
            <text x="11.3186%" y="1015.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_fo..</text>
        </g>
        <g>
            <title>            U, Sigma, VT = svds(X, k=self.n_components, tol=self.tol, v0=v0) (2,671,494,682 bytes, 41.92%)</title>
            <rect x="11.0686%" y="1024" width="41.9151%" height="21" fill="rgb(255,152,152)" fg:x="705464914" fg:w="2671494682"/>
            <text x="11.3186%" y="1037.50">            U, Sigma, VT = svds(X, k=self.n_compon..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_eigen/_svds.py:546 (svds) (2,188,235,232 bytes, 34.33%)</title>
            <rect x="18.6508%" y="1046" width="34.3329%" height="21" fill="rgb(255,162,162)" fg:x="1188724364" fg:w="2188235232"/>
            <text x="18.9008%" y="1059.50">/home/pedro/mestrado/biomal_repo/scripts/..</text>
        </g>
        <g>
            <title>    u, s, vh = svd(Av, full_matrices=False, overwrite_a=True) (2,188,235,232 bytes, 34.33%)</title>
            <rect x="18.6508%" y="1068" width="34.3329%" height="21" fill="rgb(255,162,162)" fg:x="1188724364" fg:w="2188235232"/>
            <text x="18.9008%" y="1081.50">    u, s, vh = svd(Av, full_matrices=Fal..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/linalg/_decomp_svd.py:127 (svd) (2,188,235,232 bytes, 34.33%)</title>
            <rect x="18.6508%" y="1090" width="34.3329%" height="21" fill="rgb(255,162,162)" fg:x="1188724364" fg:w="2188235232"/>
            <text x="18.9008%" y="1103.50">/home/pedro/mestrado/biomal_repo/scripts/..</text>
        </g>
        <g>
            <title>    u, s, v, info = gesXd(a1, compute_uv=compute_uv, lwork=lwork, (2,188,235,232 bytes, 34.33%)</title>
            <rect x="18.6508%" y="1112" width="34.3329%" height="21" fill="rgb(255,162,162)" fg:x="1188724364" fg:w="2188235232"/>
            <text x="18.9008%" y="1125.50">    u, s, v, info = gesXd(a1, compute_uv..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (224,170,800 bytes, 3.52%)</title>
            <rect x="52.9837%" y="914" width="3.5172%" height="21" fill="rgb(255,221,221)" fg:x="3376959596" fg:w="224170800"/>
            <text x="53.2337%" y="927.50">/h..</text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (224,170,800 bytes, 3.52%)</title>
            <rect x="52.9837%" y="936" width="3.5172%" height="21" fill="rgb(255,221,221)" fg:x="3376959596" fg:w="224170800"/>
            <text x="53.2337%" y="949.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (224,170,800 bytes, 3.52%)</title>
            <rect x="52.9837%" y="958" width="3.5172%" height="21" fill="rgb(255,221,221)" fg:x="3376959596" fg:w="224170800"/>
            <text x="53.2337%" y="971.50">/h..</text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (224,170,800 bytes, 3.52%)</title>
            <rect x="52.9837%" y="980" width="3.5172%" height="21" fill="rgb(255,221,221)" fg:x="3376959596" fg:w="224170800"/>
            <text x="53.2337%" y="993.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (224,170,800 bytes, 3.52%)</title>
            <rect x="52.9837%" y="1002" width="3.5172%" height="21" fill="rgb(255,221,221)" fg:x="3376959596" fg:w="224170800"/>
            <text x="53.2337%" y="1015.50">/h..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (224,170,800 bytes, 3.52%)</title>
            <rect x="52.9837%" y="1024" width="3.5172%" height="21" fill="rgb(255,221,221)" fg:x="3376959596" fg:w="224170800"/>
            <text x="53.2337%" y="1037.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (224,170,800 bytes, 3.52%)</title>
            <rect x="52.9837%" y="1046" width="3.5172%" height="21" fill="rgb(255,221,221)" fg:x="3376959596" fg:w="224170800"/>
            <text x="53.2337%" y="1059.50">/h..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (224,170,800 bytes, 3.52%)</title>
            <rect x="52.9837%" y="1068" width="3.5172%" height="21" fill="rgb(255,221,221)" fg:x="3376959596" fg:w="224170800"/>
            <text x="53.2337%" y="1081.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (224,170,800 bytes, 3.52%)</title>
            <rect x="52.9837%" y="1090" width="3.5172%" height="21" fill="rgb(255,221,221)" fg:x="3376959596" fg:w="224170800"/>
            <text x="53.2337%" y="1103.50">/h..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (224,170,800 bytes, 3.52%)</title>
            <rect x="52.9837%" y="1112" width="3.5172%" height="21" fill="rgb(255,221,221)" fg:x="3376959596" fg:w="224170800"/>
            <text x="53.2337%" y="1125.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (224,170,800 bytes, 3.52%)</title>
            <rect x="52.9837%" y="1134" width="3.5172%" height="21" fill="rgb(255,221,221)" fg:x="3376959596" fg:w="224170800"/>
            <text x="53.2337%" y="1147.50">/h..</text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (224,170,800 bytes, 3.52%)</title>
            <rect x="52.9837%" y="1156" width="3.5172%" height="21" fill="rgb(255,221,221)" fg:x="3376959596" fg:w="224170800"/>
            <text x="53.2337%" y="1169.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:216 (fit) (224,170,800 bytes, 3.52%)</title>
            <rect x="52.9837%" y="1178" width="3.5172%" height="21" fill="rgb(255,221,221)" fg:x="3376959596" fg:w="224170800"/>
            <text x="53.2337%" y="1191.50">/h..</text>
        </g>
        <g>
            <title>        self.estimator_.fit(X, y) (224,170,800 bytes, 3.52%)</title>
            <rect x="52.9837%" y="1200" width="3.5172%" height="21" fill="rgb(255,221,221)" fg:x="3376959596" fg:w="224170800"/>
            <text x="53.2337%" y="1213.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:473 (fit) (224,170,800 bytes, 3.52%)</title>
            <rect x="52.9837%" y="1222" width="3.5172%" height="21" fill="rgb(255,221,221)" fg:x="3376959596" fg:w="224170800"/>
            <text x="53.2337%" y="1235.50">/h..</text>
        </g>
        <g>
            <title>            trees = Parallel( (224,170,800 bytes, 3.52%)</title>
            <rect x="52.9837%" y="1244" width="3.5172%" height="21" fill="rgb(255,221,221)" fg:x="3376959596" fg:w="224170800"/>
            <text x="53.2337%" y="1257.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (224,170,800 bytes, 3.52%)</title>
            <rect x="52.9837%" y="1266" width="3.5172%" height="21" fill="rgb(255,221,221)" fg:x="3376959596" fg:w="224170800"/>
            <text x="53.2337%" y="1279.50">/h..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (224,170,800 bytes, 3.52%)</title>
            <rect x="52.9837%" y="1288" width="3.5172%" height="21" fill="rgb(255,221,221)" fg:x="3376959596" fg:w="224170800"/>
            <text x="53.2337%" y="1301.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1088 (__call__) (221,933,040 bytes, 3.48%)</title>
            <rect x="53.0188%" y="1310" width="3.4821%" height="21" fill="rgb(255,222,222)" fg:x="3379197356" fg:w="221933040"/>
            <text x="53.2688%" y="1323.50">/h..</text>
        </g>
        <g>
            <title>            while self.dispatch_one_batch(iterator): (221,933,040 bytes, 3.48%)</title>
            <rect x="53.0188%" y="1332" width="3.4821%" height="21" fill="rgb(255,222,222)" fg:x="3379197356" fg:w="221933040"/>
            <text x="53.2688%" y="1345.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (221,933,040 bytes, 3.48%)</title>
            <rect x="53.0188%" y="1354" width="3.4821%" height="21" fill="rgb(255,222,222)" fg:x="3379197356" fg:w="221933040"/>
            <text x="53.2688%" y="1367.50">/h..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (221,933,040 bytes, 3.48%)</title>
            <rect x="53.0188%" y="1376" width="3.4821%" height="21" fill="rgb(255,222,222)" fg:x="3379197356" fg:w="221933040"/>
            <text x="53.2688%" y="1389.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (221,933,040 bytes, 3.48%)</title>
            <rect x="53.0188%" y="1398" width="3.4821%" height="21" fill="rgb(255,222,222)" fg:x="3379197356" fg:w="221933040"/>
            <text x="53.2688%" y="1411.50">/h..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (221,933,040 bytes, 3.48%)</title>
            <rect x="53.0188%" y="1420" width="3.4821%" height="21" fill="rgb(255,222,222)" fg:x="3379197356" fg:w="221933040"/>
            <text x="53.2688%" y="1433.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (221,933,040 bytes, 3.48%)</title>
            <rect x="53.0188%" y="1442" width="3.4821%" height="21" fill="rgb(255,222,222)" fg:x="3379197356" fg:w="221933040"/>
            <text x="53.2688%" y="1455.50">/h..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (221,933,040 bytes, 3.48%)</title>
            <rect x="53.0188%" y="1464" width="3.4821%" height="21" fill="rgb(255,222,222)" fg:x="3379197356" fg:w="221933040"/>
            <text x="53.2688%" y="1477.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (221,933,040 bytes, 3.48%)</title>
            <rect x="53.0188%" y="1486" width="3.4821%" height="21" fill="rgb(255,222,222)" fg:x="3379197356" fg:w="221933040"/>
            <text x="53.2688%" y="1499.50">/h..</text>
        </g>
        <g>
            <title>        self.results = batch() (221,933,040 bytes, 3.48%)</title>
            <rect x="53.0188%" y="1508" width="3.4821%" height="21" fill="rgb(255,222,222)" fg:x="3379197356" fg:w="221933040"/>
            <text x="53.2688%" y="1521.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (221,933,040 bytes, 3.48%)</title>
            <rect x="53.0188%" y="1530" width="3.4821%" height="21" fill="rgb(255,222,222)" fg:x="3379197356" fg:w="221933040"/>
            <text x="53.2688%" y="1543.50">/h..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (221,933,040 bytes, 3.48%)</title>
            <rect x="53.0188%" y="1552" width="3.4821%" height="21" fill="rgb(255,222,222)" fg:x="3379197356" fg:w="221933040"/>
            <text x="53.2688%" y="1565.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (221,933,040 bytes, 3.48%)</title>
            <rect x="53.0188%" y="1574" width="3.4821%" height="21" fill="rgb(255,222,222)" fg:x="3379197356" fg:w="221933040"/>
            <text x="53.2688%" y="1587.50">/h..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (221,933,040 bytes, 3.48%)</title>
            <rect x="53.0188%" y="1596" width="3.4821%" height="21" fill="rgb(255,222,222)" fg:x="3379197356" fg:w="221933040"/>
            <text x="53.2688%" y="1609.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (221,933,040 bytes, 3.48%)</title>
            <rect x="53.0188%" y="1618" width="3.4821%" height="21" fill="rgb(255,222,222)" fg:x="3379197356" fg:w="221933040"/>
            <text x="53.2688%" y="1631.50">/h..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (221,933,040 bytes, 3.48%)</title>
            <rect x="53.0188%" y="1640" width="3.4821%" height="21" fill="rgb(255,222,222)" fg:x="3379197356" fg:w="221933040"/>
            <text x="53.2688%" y="1653.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:184 (_parallel_build_trees) (221,933,040 bytes, 3.48%)</title>
            <rect x="53.0188%" y="1662" width="3.4821%" height="21" fill="rgb(255,222,222)" fg:x="3379197356" fg:w="221933040"/>
            <text x="53.2688%" y="1675.50">/h..</text>
        </g>
        <g>
            <title>        tree.fit(X, y, sample_weight=curr_sample_weight, check_input=False) (221,933,040 bytes, 3.48%)</title>
            <rect x="53.0188%" y="1684" width="3.4821%" height="21" fill="rgb(255,222,222)" fg:x="3379197356" fg:w="221933040"/>
            <text x="53.2688%" y="1697.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/tree/_classes.py:889 (fit) (221,933,040 bytes, 3.48%)</title>
            <rect x="53.0188%" y="1706" width="3.4821%" height="21" fill="rgb(255,222,222)" fg:x="3379197356" fg:w="221933040"/>
            <text x="53.2688%" y="1719.50">/h..</text>
        </g>
        <g>
            <title>        super().fit( (221,933,040 bytes, 3.48%)</title>
            <rect x="53.0188%" y="1728" width="3.4821%" height="21" fill="rgb(255,222,222)" fg:x="3379197356" fg:w="221933040"/>
            <text x="53.2688%" y="1741.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/tree/_classes.py:379 (fit) (221,156,880 bytes, 3.47%)</title>
            <rect x="53.0310%" y="1750" width="3.4699%" height="21" fill="rgb(255,222,222)" fg:x="3379973516" fg:w="221156880"/>
            <text x="53.2810%" y="1763.50">/h..</text>
        </g>
        <g>
            <title>        builder.build(self.tree_, X, y, sample_weight) (221,156,880 bytes, 3.47%)</title>
            <rect x="53.0310%" y="1772" width="3.4699%" height="21" fill="rgb(255,222,222)" fg:x="3379973516" fg:w="221156880"/>
            <text x="53.2810%" y="1785.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (4,236,342,382 bytes, 66.47%)</title>
            <rect x="0.0397%" y="386" width="66.4672%" height="21" fill="rgb(255,127,127)" fg:x="2529582" fg:w="4236342382"/>
            <text x="0.2897%" y="399.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-p..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (4,236,342,382 bytes, 66.47%)</title>
            <rect x="0.0397%" y="408" width="66.4672%" height="21" fill="rgb(255,127,127)" fg:x="2529582" fg:w="4236342382"/>
            <text x="0.2897%" y="421.50">        result = self._fit_transform(X, y, _fit_transform_one)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (4,236,342,382 bytes, 66.47%)</title>
            <rect x="0.0397%" y="430" width="66.4672%" height="21" fill="rgb(255,127,127)" fg:x="2529582" fg:w="4236342382"/>
            <text x="0.2897%" y="443.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-p..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (4,236,342,382 bytes, 66.47%)</title>
            <rect x="0.0397%" y="452" width="66.4672%" height="21" fill="rgb(255,127,127)" fg:x="2529582" fg:w="4236342382"/>
            <text x="0.2897%" y="465.50">            return Parallel(n_jobs=self.n_jobs)(</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (4,236,342,382 bytes, 66.47%)</title>
            <rect x="0.0397%" y="474" width="66.4672%" height="21" fill="rgb(255,127,127)" fg:x="2529582" fg:w="4236342382"/>
            <text x="0.2897%" y="487.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-p..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (4,236,342,382 bytes, 66.47%)</title>
            <rect x="0.0397%" y="496" width="66.4672%" height="21" fill="rgb(255,127,127)" fg:x="2529582" fg:w="4236342382"/>
            <text x="0.2897%" y="509.50">        return super().__call__(iterable_with_config)</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1088 (__call__) (861,912,368 bytes, 13.52%)</title>
            <rect x="52.9837%" y="518" width="13.5232%" height="21" fill="rgb(255,194,194)" fg:x="3376959596" fg:w="861912368"/>
            <text x="53.2337%" y="531.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>            while self.dispatch_one_batch(iterator): (861,912,368 bytes, 13.52%)</title>
            <rect x="52.9837%" y="540" width="13.5232%" height="21" fill="rgb(255,194,194)" fg:x="3376959596" fg:w="861912368"/>
            <text x="53.2337%" y="553.50">            wh..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (861,912,368 bytes, 13.52%)</title>
            <rect x="52.9837%" y="562" width="13.5232%" height="21" fill="rgb(255,194,194)" fg:x="3376959596" fg:w="861912368"/>
            <text x="53.2337%" y="575.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (861,912,368 bytes, 13.52%)</title>
            <rect x="52.9837%" y="584" width="13.5232%" height="21" fill="rgb(255,194,194)" fg:x="3376959596" fg:w="861912368"/>
            <text x="53.2337%" y="597.50">              ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (861,912,368 bytes, 13.52%)</title>
            <rect x="52.9837%" y="606" width="13.5232%" height="21" fill="rgb(255,194,194)" fg:x="3376959596" fg:w="861912368"/>
            <text x="53.2337%" y="619.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (861,912,368 bytes, 13.52%)</title>
            <rect x="52.9837%" y="628" width="13.5232%" height="21" fill="rgb(255,194,194)" fg:x="3376959596" fg:w="861912368"/>
            <text x="53.2337%" y="641.50">            jo..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (861,912,368 bytes, 13.52%)</title>
            <rect x="52.9837%" y="650" width="13.5232%" height="21" fill="rgb(255,194,194)" fg:x="3376959596" fg:w="861912368"/>
            <text x="53.2337%" y="663.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (861,912,368 bytes, 13.52%)</title>
            <rect x="52.9837%" y="672" width="13.5232%" height="21" fill="rgb(255,194,194)" fg:x="3376959596" fg:w="861912368"/>
            <text x="53.2337%" y="685.50">        result..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (861,912,368 bytes, 13.52%)</title>
            <rect x="52.9837%" y="694" width="13.5232%" height="21" fill="rgb(255,194,194)" fg:x="3376959596" fg:w="861912368"/>
            <text x="53.2337%" y="707.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>        self.results = batch() (861,912,368 bytes, 13.52%)</title>
            <rect x="52.9837%" y="716" width="13.5232%" height="21" fill="rgb(255,194,194)" fg:x="3376959596" fg:w="861912368"/>
            <text x="53.2337%" y="729.50">        self.r..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (861,912,368 bytes, 13.52%)</title>
            <rect x="52.9837%" y="738" width="13.5232%" height="21" fill="rgb(255,194,194)" fg:x="3376959596" fg:w="861912368"/>
            <text x="53.2337%" y="751.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (861,912,368 bytes, 13.52%)</title>
            <rect x="52.9837%" y="760" width="13.5232%" height="21" fill="rgb(255,194,194)" fg:x="3376959596" fg:w="861912368"/>
            <text x="53.2337%" y="773.50">            re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (861,912,368 bytes, 13.52%)</title>
            <rect x="52.9837%" y="782" width="13.5232%" height="21" fill="rgb(255,194,194)" fg:x="3376959596" fg:w="861912368"/>
            <text x="53.2337%" y="795.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (861,912,368 bytes, 13.52%)</title>
            <rect x="52.9837%" y="804" width="13.5232%" height="21" fill="rgb(255,194,194)" fg:x="3376959596" fg:w="861912368"/>
            <text x="53.2337%" y="817.50">            re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (861,912,368 bytes, 13.52%)</title>
            <rect x="52.9837%" y="826" width="13.5232%" height="21" fill="rgb(255,194,194)" fg:x="3376959596" fg:w="861912368"/>
            <text x="53.2337%" y="839.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (861,912,368 bytes, 13.52%)</title>
            <rect x="52.9837%" y="848" width="13.5232%" height="21" fill="rgb(255,194,194)" fg:x="3376959596" fg:w="861912368"/>
            <text x="53.2337%" y="861.50">            re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (861,912,368 bytes, 13.52%)</title>
            <rect x="52.9837%" y="870" width="13.5232%" height="21" fill="rgb(255,194,194)" fg:x="3376959596" fg:w="861912368"/>
            <text x="53.2337%" y="883.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (861,912,368 bytes, 13.52%)</title>
            <rect x="52.9837%" y="892" width="13.5232%" height="21" fill="rgb(255,194,194)" fg:x="3376959596" fg:w="861912368"/>
            <text x="53.2337%" y="905.50">            re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:445 (fit_transform) (637,741,568 bytes, 10.01%)</title>
            <rect x="56.5009%" y="914" width="10.0060%" height="21" fill="rgb(255,202,202)" fg:x="3601130396" fg:w="637741568"/>
            <text x="56.7509%" y="927.50">/home/pedr..</text>
        </g>
        <g>
            <title>                return last_step.fit_transform(Xt, y, **fit_params_last_step) (637,741,568 bytes, 10.01%)</title>
            <rect x="56.5009%" y="936" width="10.0060%" height="21" fill="rgb(255,202,202)" fg:x="3601130396" fg:w="637741568"/>
            <text x="56.7509%" y="949.50">         ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (637,741,568 bytes, 10.01%)</title>
            <rect x="56.5009%" y="958" width="10.0060%" height="21" fill="rgb(255,202,202)" fg:x="3601130396" fg:w="637741568"/>
            <text x="56.7509%" y="971.50">/home/pedr..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (637,741,568 bytes, 10.01%)</title>
            <rect x="56.5009%" y="980" width="10.0060%" height="21" fill="rgb(255,202,202)" fg:x="3601130396" fg:w="637741568"/>
            <text x="56.7509%" y="993.50">        d..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/decomposition/_truncated_svd.py:229 (fit_transform) (637,741,568 bytes, 10.01%)</title>
            <rect x="56.5009%" y="1002" width="10.0060%" height="21" fill="rgb(255,202,202)" fg:x="3601130396" fg:w="637741568"/>
            <text x="56.7509%" y="1015.50">/home/pedr..</text>
        </g>
        <g>
            <title>            U, Sigma, VT = svds(X, k=self.n_components, tol=self.tol, v0=v0) (637,741,568 bytes, 10.01%)</title>
            <rect x="56.5009%" y="1024" width="10.0060%" height="21" fill="rgb(255,202,202)" fg:x="3601130396" fg:w="637741568"/>
            <text x="56.7509%" y="1037.50">         ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_eigen/_svds.py:546 (svds) (637,741,568 bytes, 10.01%)</title>
            <rect x="56.5009%" y="1046" width="10.0060%" height="21" fill="rgb(255,202,202)" fg:x="3601130396" fg:w="637741568"/>
            <text x="56.7509%" y="1059.50">/home/pedr..</text>
        </g>
        <g>
            <title>    u, s, vh = svd(Av, full_matrices=False, overwrite_a=True) (637,741,568 bytes, 10.01%)</title>
            <rect x="56.5009%" y="1068" width="10.0060%" height="21" fill="rgb(255,202,202)" fg:x="3601130396" fg:w="637741568"/>
            <text x="56.7509%" y="1081.50">    u, s,..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/linalg/_decomp_svd.py:127 (svd) (637,741,568 bytes, 10.01%)</title>
            <rect x="56.5009%" y="1090" width="10.0060%" height="21" fill="rgb(255,202,202)" fg:x="3601130396" fg:w="637741568"/>
            <text x="56.7509%" y="1103.50">/home/pedr..</text>
        </g>
        <g>
            <title>    u, s, v, info = gesXd(a1, compute_uv=compute_uv, lwork=lwork, (637,741,568 bytes, 10.01%)</title>
            <rect x="56.5009%" y="1112" width="10.0060%" height="21" fill="rgb(255,202,202)" fg:x="3601130396" fg:w="637741568"/>
            <text x="56.7509%" y="1125.50">    u, s,..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (4,240,209,678 bytes, 66.53%)</title>
            <rect x="0.0397%" y="210" width="66.5279%" height="21" fill="rgb(255,127,127)" fg:x="2529582" fg:w="4240209678"/>
            <text x="0.2897%" y="223.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:40..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (4,240,209,678 bytes, 66.53%)</title>
            <rect x="0.0397%" y="232" width="66.5279%" height="21" fill="rgb(255,127,127)" fg:x="2529582" fg:w="4240209678"/>
            <text x="0.2897%" y="245.50">                new_X, fitted_transformer = fit_transform_one_cached(..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (4,240,209,678 bytes, 66.53%)</title>
            <rect x="0.0397%" y="254" width="66.5279%" height="21" fill="rgb(255,127,127)" fg:x="2529582" fg:w="4240209678"/>
            <text x="0.2897%" y="267.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-p..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (4,240,209,678 bytes, 66.53%)</title>
            <rect x="0.0397%" y="276" width="66.5279%" height="21" fill="rgb(255,127,127)" fg:x="2529582" fg:w="4240209678"/>
            <text x="0.2897%" y="289.50">        return self.func(*args, **kwargs)</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (4,240,209,678 bytes, 66.53%)</title>
            <rect x="0.0397%" y="298" width="66.5279%" height="21" fill="rgb(255,127,127)" fg:x="2529582" fg:w="4240209678"/>
            <text x="0.2897%" y="311.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-p..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (4,240,209,678 bytes, 66.53%)</title>
            <rect x="0.0397%" y="320" width="66.5279%" height="21" fill="rgb(255,127,127)" fg:x="2529582" fg:w="4240209678"/>
            <text x="0.2897%" y="333.50">            res = transformer.fit_transform(X, y, **fit_params)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (4,240,209,678 bytes, 66.53%)</title>
            <rect x="0.0397%" y="342" width="66.5279%" height="21" fill="rgb(255,127,127)" fg:x="2529582" fg:w="4240209678"/>
            <text x="0.2897%" y="355.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-p..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (4,240,209,678 bytes, 66.53%)</title>
            <rect x="0.0397%" y="364" width="66.5279%" height="21" fill="rgb(255,127,127)" fg:x="2529582" fg:w="4240209678"/>
            <text x="0.2897%" y="377.50">        data_to_wrap = f(self, X, *args, **kwargs)</text>
        </g>
        <g>
            <title>estimators.py:174 (&lt;module&gt;) (4,246,339,414 bytes, 66.62%)</title>
            <rect x="0.0397%" y="122" width="66.6241%" height="21" fill="rgb(255,127,127)" fg:x="2529582" fg:w="4246339414"/>
            <text x="0.2897%" y="135.50">estimators.py:174 (&lt;module&gt;)</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (4,246,339,414 bytes, 66.62%)</title>
            <rect x="0.0397%" y="144" width="66.6241%" height="21" fill="rgb(255,127,127)" fg:x="2529582" fg:w="4246339414"/>
            <text x="0.2897%" y="157.50">    cascade = cascade_weak_label_tree_embedder.fit(X, y)</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (4,246,339,414 bytes, 66.62%)</title>
            <rect x="0.0397%" y="166" width="66.6241%" height="21" fill="rgb(255,127,127)" fg:x="2529582" fg:w="4246339414"/>
            <text x="0.2897%" y="179.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:32..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (4,246,339,414 bytes, 66.62%)</title>
            <rect x="0.0397%" y="188" width="66.6241%" height="21" fill="rgb(255,127,127)" fg:x="2529582" fg:w="4246339414"/>
            <text x="0.2897%" y="201.50">        Xt, yt = self._fit(X, y, **fit_params_steps)</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_isolve/__init__.py:4 (&lt;module&gt;) (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2454" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2467.50">/home/pedro/mestrado/biomal_repo/scripts..</text>
        </g>
        <g>
            <title>from .iterative import * (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2476" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2489.50">from .iterative import *</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2498" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2511.50">&lt;frozen importlib._bootstrap&gt;:1027 (_fin..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2520" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2533.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2542" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2555.50">&lt;frozen importlib._bootstrap&gt;:1006 (_fin..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2564" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2577.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2586" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2599.50">&lt;frozen importlib._bootstrap&gt;:688 (_load..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2608" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2621.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2630" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2643.50">&lt;frozen importlib._bootstrap_external&gt;:8..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2652" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2665.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2674" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2687.50">&lt;frozen importlib._bootstrap&gt;:241 (_call..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2696" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2709.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_isolve/iterative.py:9 (&lt;module&gt;) (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2718" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2731.50">/home/pedro/mestrado/biomal_repo/scripts..</text>
        </g>
        <g>
            <title>from . import _iterative (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2740" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2753.50">from . import _iterative</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1078 (_handle_fromlist) (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2762" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2775.50">&lt;frozen importlib._bootstrap&gt;:1078 (_han..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2784" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2797.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2806" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2819.50">&lt;frozen importlib._bootstrap&gt;:241 (_call..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2828" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2841.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2850" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2863.50">&lt;frozen importlib._bootstrap&gt;:1027 (_fin..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2872" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2885.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2894" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2907.50">&lt;frozen importlib._bootstrap&gt;:1006 (_fin..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2916" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2929.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:674 (_load_unlocked) (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2938" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2951.50">&lt;frozen importlib._bootstrap&gt;:674 (_load..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2960" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2973.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:571 (module_from_spec) (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="2982" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="2995.50">&lt;frozen importlib._bootstrap&gt;:571 (modul..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="3004" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="3017.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:1176 (create_module) (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="3026" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="3039.50">&lt;frozen importlib._bootstrap_external&gt;:1..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="3048" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="3061.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="3070" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="3083.50">&lt;frozen importlib._bootstrap&gt;:241 (_call..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 33.17%)</title>
            <rect x="66.6968%" y="3092" width="33.1677%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2113969034"/>
            <text x="66.9468%" y="3105.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,115,864,154 bytes, 33.20%)</title>
            <rect x="66.6953%" y="1134" width="33.1974%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2115864154"/>
            <text x="66.9453%" y="1147.50">&lt;frozen importlib._bootstrap&gt;:1006 (_fin..</text>
        </g>
        <g>
            <title> (2,115,864,154 bytes, 33.20%)</title>
            <rect x="66.6953%" y="1156" width="33.1974%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2115864154"/>
            <text x="66.9453%" y="1169.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,115,864,154 bytes, 33.20%)</title>
            <rect x="66.6953%" y="1178" width="33.1974%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2115864154"/>
            <text x="66.9453%" y="1191.50">&lt;frozen importlib._bootstrap&gt;:688 (_load..</text>
        </g>
        <g>
            <title> (2,115,864,154 bytes, 33.20%)</title>
            <rect x="66.6953%" y="1200" width="33.1974%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2115864154"/>
            <text x="66.9453%" y="1213.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,115,864,154 bytes, 33.20%)</title>
            <rect x="66.6953%" y="1222" width="33.1974%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2115864154"/>
            <text x="66.9453%" y="1235.50">&lt;frozen importlib._bootstrap_external&gt;:8..</text>
        </g>
        <g>
            <title> (2,115,864,154 bytes, 33.20%)</title>
            <rect x="66.6953%" y="1244" width="33.1974%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2115864154"/>
            <text x="66.9453%" y="1257.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,115,864,154 bytes, 33.20%)</title>
            <rect x="66.6953%" y="1266" width="33.1974%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2115864154"/>
            <text x="66.9453%" y="1279.50">&lt;frozen importlib._bootstrap&gt;:241 (_call..</text>
        </g>
        <g>
            <title> (2,115,864,154 bytes, 33.20%)</title>
            <rect x="66.6953%" y="1288" width="33.1974%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2115864154"/>
            <text x="66.9453%" y="1301.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/__init__.py:283 (&lt;module&gt;) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1310" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1323.50">/home/pedro/mestrado/biomal_repo/scripts..</text>
        </g>
        <g>
            <title>from . import csgraph (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1332" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1345.50">from . import csgraph</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1078 (_handle_fromlist) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1354" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1367.50">&lt;frozen importlib._bootstrap&gt;:1078 (_han..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1376" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1389.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1398" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1411.50">&lt;frozen importlib._bootstrap&gt;:241 (_call..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1420" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1433.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1442" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1455.50">&lt;frozen importlib._bootstrap&gt;:1027 (_fin..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1464" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1477.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1486" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1499.50">&lt;frozen importlib._bootstrap&gt;:1006 (_fin..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1508" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1521.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1530" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1543.50">&lt;frozen importlib._bootstrap&gt;:688 (_load..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1552" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1565.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1574" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1587.50">&lt;frozen importlib._bootstrap_external&gt;:8..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1596" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1609.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1618" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1631.50">&lt;frozen importlib._bootstrap&gt;:241 (_call..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1640" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1653.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/csgraph/__init__.py:185 (&lt;module&gt;) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1662" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1675.50">/home/pedro/mestrado/biomal_repo/scripts..</text>
        </g>
        <g>
            <title>from ._laplacian import laplacian (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1684" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1697.50">from ._laplacian import laplacian..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1706" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1719.50">&lt;frozen importlib._bootstrap&gt;:1027 (_fin..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1728" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1741.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1750" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1763.50">&lt;frozen importlib._bootstrap&gt;:1006 (_fin..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1772" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1785.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1794" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1807.50">&lt;frozen importlib._bootstrap&gt;:688 (_load..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1816" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1829.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1838" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1851.50">&lt;frozen importlib._bootstrap_external&gt;:8..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1860" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1873.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1882" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1895.50">&lt;frozen importlib._bootstrap&gt;:241 (_call..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1904" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1917.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/csgraph/_laplacian.py:7 (&lt;module&gt;) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1926" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1939.50">/home/pedro/mestrado/biomal_repo/scripts..</text>
        </g>
        <g>
            <title>from scipy.sparse.linalg import LinearOperator (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1948" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1961.50">from scipy.sparse.linalg import LinearO..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1970" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="1983.50">&lt;frozen importlib._bootstrap&gt;:1027 (_fin..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="1992" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="2005.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="2014" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="2027.50">&lt;frozen importlib._bootstrap&gt;:1006 (_fin..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="2036" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="2049.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="2058" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="2071.50">&lt;frozen importlib._bootstrap&gt;:688 (_load..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="2080" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="2093.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="2102" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="2115.50">&lt;frozen importlib._bootstrap_external&gt;:8..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="2124" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="2137.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="2146" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="2159.50">&lt;frozen importlib._bootstrap&gt;:241 (_call..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="2168" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="2181.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/__init__.py:120 (&lt;module&gt;) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="2190" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="2203.50">/home/pedro/mestrado/biomal_repo/scripts..</text>
        </g>
        <g>
            <title>from ._isolve import * (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="2212" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="2225.50">from ._isolve import *</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="2234" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="2247.50">&lt;frozen importlib._bootstrap&gt;:1027 (_fin..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="2256" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="2269.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="2278" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="2291.50">&lt;frozen importlib._bootstrap&gt;:1006 (_fin..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="2300" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="2313.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="2322" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="2335.50">&lt;frozen importlib._bootstrap&gt;:688 (_load..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="2344" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="2357.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="2366" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="2379.50">&lt;frozen importlib._bootstrap_external&gt;:8..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="2388" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="2401.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="2410" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="2423.50">&lt;frozen importlib._bootstrap&gt;:241 (_call..</text>
        </g>
        <g>
            <title> (2,115,767,462 bytes, 33.20%)</title>
            <rect x="66.6968%" y="2432" width="33.1959%" height="21" fill="rgb(255,163,163)" fg:x="4250972881" fg:w="2115767462"/>
            <text x="66.9468%" y="2445.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/__init__.py:17 (&lt;module&gt;) (2,116,296,242 bytes, 33.20%)</title>
            <rect x="66.6953%" y="1046" width="33.2042%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2116296242"/>
            <text x="66.9453%" y="1059.50">/home/pedro/mestrado/biomal_repo/scripts..</text>
        </g>
        <g>
            <title>from scipy.sparse import issparse (2,116,296,242 bytes, 33.20%)</title>
            <rect x="66.6953%" y="1068" width="33.2042%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2116296242"/>
            <text x="66.9453%" y="1081.50">from scipy.sparse import issparse..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,116,296,242 bytes, 33.20%)</title>
            <rect x="66.6953%" y="1090" width="33.2042%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2116296242"/>
            <text x="66.9453%" y="1103.50">&lt;frozen importlib._bootstrap&gt;:1027 (_fin..</text>
        </g>
        <g>
            <title> (2,116,296,242 bytes, 33.20%)</title>
            <rect x="66.6953%" y="1112" width="33.2042%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2116296242"/>
            <text x="66.9453%" y="1125.50"></text>
        </g>
        <g>
            <title>estimators.py:7 (&lt;module&gt;) (2,121,652,505 bytes, 33.29%)</title>
            <rect x="66.6931%" y="122" width="33.2882%" height="21" fill="rgb(255,163,163)" fg:x="4250741447" fg:w="2121652505"/>
            <text x="66.9431%" y="135.50">estimators.py:7 (&lt;module&gt;)</text>
        </g>
        <g>
            <title>from sklearn.pipeline import Pipeline, FeatureUnion (2,121,652,505 bytes, 33.29%)</title>
            <rect x="66.6931%" y="144" width="33.2882%" height="21" fill="rgb(255,163,163)" fg:x="4250741447" fg:w="2121652505"/>
            <text x="66.9431%" y="157.50">from sklearn.pipeline import Pipeline, ..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,121,652,505 bytes, 33.29%)</title>
            <rect x="66.6931%" y="166" width="33.2882%" height="21" fill="rgb(255,163,163)" fg:x="4250741447" fg:w="2121652505"/>
            <text x="66.9431%" y="179.50">&lt;frozen importlib._bootstrap&gt;:1027 (_fin..</text>
        </g>
        <g>
            <title> (2,121,652,505 bytes, 33.29%)</title>
            <rect x="66.6931%" y="188" width="33.2882%" height="21" fill="rgb(255,163,163)" fg:x="4250741447" fg:w="2121652505"/>
            <text x="66.9431%" y="201.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:992 (_find_and_load_unlocked) (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="210" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="223.50">&lt;frozen importlib._bootstrap&gt;:992 (_find..</text>
        </g>
        <g>
            <title> (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="232" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="245.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="254" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="267.50">&lt;frozen importlib._bootstrap&gt;:241 (_call..</text>
        </g>
        <g>
            <title> (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="276" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="289.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="298" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="311.50">&lt;frozen importlib._bootstrap&gt;:1027 (_fin..</text>
        </g>
        <g>
            <title> (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="320" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="333.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="342" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="355.50">&lt;frozen importlib._bootstrap&gt;:1006 (_fin..</text>
        </g>
        <g>
            <title> (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="364" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="377.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="386" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="399.50">&lt;frozen importlib._bootstrap&gt;:688 (_load..</text>
        </g>
        <g>
            <title> (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="408" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="421.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="430" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="443.50">&lt;frozen importlib._bootstrap_external&gt;:8..</text>
        </g>
        <g>
            <title> (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="452" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="465.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="474" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="487.50">&lt;frozen importlib._bootstrap&gt;:241 (_call..</text>
        </g>
        <g>
            <title> (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="496" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="509.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/__init__.py:82 (&lt;module&gt;) (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="518" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="531.50">/home/pedro/mestrado/biomal_repo/scripts..</text>
        </g>
        <g>
            <title>    from .base import clone (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="540" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="553.50">    from .base import clone..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="562" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="575.50">&lt;frozen importlib._bootstrap&gt;:1027 (_fin..</text>
        </g>
        <g>
            <title> (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="584" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="597.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="606" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="619.50">&lt;frozen importlib._bootstrap&gt;:1006 (_fin..</text>
        </g>
        <g>
            <title> (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="628" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="641.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="650" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="663.50">&lt;frozen importlib._bootstrap&gt;:688 (_load..</text>
        </g>
        <g>
            <title> (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="672" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="685.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="694" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="707.50">&lt;frozen importlib._bootstrap_external&gt;:8..</text>
        </g>
        <g>
            <title> (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="716" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="729.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="738" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="751.50">&lt;frozen importlib._bootstrap&gt;:241 (_call..</text>
        </g>
        <g>
            <title> (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="760" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="773.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:17 (&lt;module&gt;) (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="782" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="795.50">/home/pedro/mestrado/biomal_repo/scripts..</text>
        </g>
        <g>
            <title>from .utils import _IS_32BIT (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="804" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="817.50">from .utils import _IS_32BIT</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="826" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="839.50">&lt;frozen importlib._bootstrap&gt;:1027 (_fin..</text>
        </g>
        <g>
            <title> (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="848" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="861.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="870" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="883.50">&lt;frozen importlib._bootstrap&gt;:1006 (_fin..</text>
        </g>
        <g>
            <title> (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="892" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="905.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="914" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="927.50">&lt;frozen importlib._bootstrap&gt;:688 (_load..</text>
        </g>
        <g>
            <title> (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="936" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="949.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="958" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="971.50">&lt;frozen importlib._bootstrap_external&gt;:8..</text>
        </g>
        <g>
            <title> (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="980" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="993.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="1002" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="1015.50">&lt;frozen importlib._bootstrap&gt;:241 (_call..</text>
        </g>
        <g>
            <title> (2,121,517,763 bytes, 33.29%)</title>
            <rect x="66.6953%" y="1024" width="33.2861%" height="21" fill="rgb(255,163,163)" fg:x="4250876189" fg:w="2121517763"/>
            <text x="66.9453%" y="1037.50"></text>
        </g>
        <g>
            <title>all (6,373,581,139 bytes, 100%)</title>
            <rect x="0.0000%" y="100" width="100.0000%" height="21" fill="rgb(255,100,100)" fg:x="0" fg:w="6373581139"/>
            <text x="0.2500%" y="113.50"></text>
        </g>
    </svg>
</svg>