<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="3756" onload="init(evt)" viewBox="0 0 1200 3756" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno">
    <!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.-->
    <!--NOTES: -->
    <defs>
        <linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
            <stop stop-color="#eeeeee" offset="5%"/>
            <stop stop-color="#eeeeb0" offset="95%"/>
        </linearGradient>
    </defs>
    <style type="text/css">
text { font-family:monospace; font-size:16px }
#title { text-anchor:middle; font-size:21px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style>
    <script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 16;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script>
    <rect x="0" y="0" width="100%" height="3756" fill="url(#background)"/>
    <text id="title" fill="rgb(0,0,0)" x="50.0000%" y="32.00">Peak Tracked Memory Usage (341.1 MiB), Reversed</text>
    <text id="subtitle" x="50.0000%" y="64.00">Made with the Fil profiler. <a href="https://pythonspeed.com/fil/" style="text-decoration: underline;" target="_parent">Try it on your code!</a></text>
    <text id="details" fill="rgb(0,0,0)" x="10" y="84.00"> </text>
    <text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="32.00">Reset Zoom</text>
    <text id="search" fill="rgb(0,0,0)" x="1190" y="32.00">Search</text>
    <text id="matched" fill="rgb(0,0,0)" x="1190" y="3743.00"> </text>
    <svg id="frames" x="10" width="1180" total_samples="353767821">
        <g>
            <title>    data_cat = np.concatenate([b.data for b in blocks]) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="166" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="179.50">    data_ca..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:470 (_stack_along_minor_axis) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="188" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="201.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            blocks = [[_stack_along_minor_axis(blocks[b, :], 1)] (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="210" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="223.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:627 (&lt;listcomp&gt;) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="232" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="245.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            blocks = [[_stack_along_minor_axis(blocks[b, :], 1)] (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="254" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="267.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:627 (bmat) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="276" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="289.50">/home/pedro/..</text>
        </g>
        <g>
            <title>    return bmat([blocks], format=format, dtype=dtype) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="298" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="311.50">    return ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:535 (hstack) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="320" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="333.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        return scipy.sparse.hstack(Xs, format=&apos;csr&apos;) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="342" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="355.50">        ret..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:41 (_hstack) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="364" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="377.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        return _hstack(np.fromiter(embeddings_iter, dtype=&apos;object&apos;)) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="386" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="399.50">        ret..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:255 (transform) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="408" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="421.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="430" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="443.50">        dat..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="452" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="465.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="474" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="487.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="496" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="509.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="518" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="531.50">        dat..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="540" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="553.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="562" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="575.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="584" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="597.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="606" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="619.50">        ret..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="628" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="641.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="650" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="663.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="672" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="685.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="694" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="707.50">        Xt ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="716" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="729.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="738" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="751.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="760" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="773.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="782" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="795.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="804" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="817.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="826" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="839.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="848" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="861.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="870" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="883.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="892" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="905.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        self.results = batch() (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="914" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="927.50">        sel..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="936" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="949.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="958" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="971.50">        res..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="980" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="993.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1002" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1015.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1024" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1037.50">/home/pedro/..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1046" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1059.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1068" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1081.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1090" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1103.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1112" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1125.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1134" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1147.50">        ret..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1156" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1169.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1178" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1191.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1200" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1213.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1222" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1235.50">        res..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1244" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1257.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1266" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1279.50">        dat..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1288" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1301.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1310" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1323.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1332" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1345.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1354" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1367.50">        ret..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1376" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1389.50">/home/pedro/..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1398" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1411.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1420" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1433.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1442" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1455.50">        Xt,..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1464" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1477.50">/home/pedro/..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1486" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1499.50">    cascade..</text>
        </g>
        <g>
            <title>estimators.py:265 (&lt;module&gt;) (40,242,176 bytes, 11.38%)</title>
            <rect x="0.0118%" y="1508" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40242176"/>
            <text x="0.2618%" y="1521.50">estimators.p..</text>
        </g>
        <g>
            <title>&lt;__array_function__ internals&gt;:200 (concatenate) (40,243,760 bytes, 11.38%)</title>
            <rect x="0.0118%" y="144" width="11.3758%" height="21" fill="rgb(255,199,199)" fg:x="41574" fg:w="40243760"/>
            <text x="0.2618%" y="157.50">&lt;__array_fun..</text>
        </g>
        <g>
            <title>        data = np.empty_like(data_cat) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="166" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="179.50">        dat..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:488 (_stack_along_minor_axis) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="188" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="201.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            blocks = [[_stack_along_minor_axis(blocks[b, :], 1)] (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="210" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="223.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:627 (&lt;listcomp&gt;) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="232" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="245.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            blocks = [[_stack_along_minor_axis(blocks[b, :], 1)] (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="254" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="267.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:627 (bmat) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="276" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="289.50">/home/pedro/..</text>
        </g>
        <g>
            <title>    return bmat([blocks], format=format, dtype=dtype) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="298" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="311.50">    return ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:535 (hstack) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="320" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="333.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        return scipy.sparse.hstack(Xs, format=&apos;csr&apos;) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="342" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="355.50">        ret..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:41 (_hstack) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="364" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="377.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        return _hstack(np.fromiter(embeddings_iter, dtype=&apos;object&apos;)) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="386" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="399.50">        ret..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:255 (transform) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="408" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="421.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="430" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="443.50">        dat..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="452" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="465.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="474" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="487.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="496" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="509.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="518" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="531.50">        dat..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="540" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="553.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="562" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="575.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="584" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="597.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="606" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="619.50">        ret..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="628" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="641.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="650" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="663.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="672" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="685.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="694" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="707.50">        Xt ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="716" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="729.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="738" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="751.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="760" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="773.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="782" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="795.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="804" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="817.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="826" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="839.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="848" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="861.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="870" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="883.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="892" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="905.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        self.results = batch() (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="914" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="927.50">        sel..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="936" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="949.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="958" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="971.50">        res..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="980" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="993.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1002" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1015.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1024" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1037.50">/home/pedro/..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1046" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1059.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1068" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1081.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1090" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1103.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1112" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1125.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1134" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1147.50">        ret..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1156" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1169.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1178" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1191.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1200" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1213.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1222" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1235.50">        res..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1244" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1257.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1266" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1279.50">        dat..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1288" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1301.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1310" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1323.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1332" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1345.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1354" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1367.50">        ret..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1376" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1389.50">/home/pedro/..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1398" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1411.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1420" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1433.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1442" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1455.50">        Xt,..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1464" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1477.50">/home/pedro/..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1486" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1499.50">    cascade..</text>
        </g>
        <g>
            <title>estimators.py:265 (&lt;module&gt;) (40,242,192 bytes, 11.38%)</title>
            <rect x="11.3878%" y="1508" width="11.3753%" height="21" fill="rgb(255,199,199)" fg:x="40286334" fg:w="40242192"/>
            <text x="11.6378%" y="1521.50">estimators.p..</text>
        </g>
        <g>
            <title>        indices = np.empty_like(indices_cat) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="166" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="179.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:487 (_stack_along_minor_axis) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="188" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="201.50">/home..</text>
        </g>
        <g>
            <title>            blocks = [[_stack_along_minor_axis(blocks[b, :], 1)] (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="210" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="223.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:627 (&lt;listcomp&gt;) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="232" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="245.50">/home..</text>
        </g>
        <g>
            <title>            blocks = [[_stack_along_minor_axis(blocks[b, :], 1)] (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="254" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="267.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:627 (bmat) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="276" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="289.50">/home..</text>
        </g>
        <g>
            <title>    return bmat([blocks], format=format, dtype=dtype) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="298" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="311.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:535 (hstack) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="320" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="333.50">/home..</text>
        </g>
        <g>
            <title>        return scipy.sparse.hstack(Xs, format=&apos;csr&apos;) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="342" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="355.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:41 (_hstack) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="364" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="377.50">/home..</text>
        </g>
        <g>
            <title>        return _hstack(np.fromiter(embeddings_iter, dtype=&apos;object&apos;)) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="386" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="399.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:255 (transform) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="408" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="421.50">/home..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="430" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="443.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="452" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="465.50">/home..</text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="474" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="487.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="496" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="509.50">/home..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="518" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="531.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="540" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="553.50">/home..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="562" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="575.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="584" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="597.50">/home..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="606" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="619.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="628" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="641.50">/home..</text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="650" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="663.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="672" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="685.50">/home..</text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="694" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="707.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="716" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="729.50">/home..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="738" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="751.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="760" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="773.50">/home..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="782" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="795.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="804" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="817.50">/home..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="826" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="839.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="848" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="861.50">/home..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="870" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="883.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="892" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="905.50">/home..</text>
        </g>
        <g>
            <title>        self.results = batch() (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="914" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="927.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="936" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="949.50">/home..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="958" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="971.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="980" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="993.50">/home..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1002" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1015.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1024" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1037.50">/home..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1046" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1059.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1068" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1081.50">/home..</text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1090" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1103.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1112" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1125.50">/home..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1134" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1147.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1156" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1169.50">/home..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1178" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1191.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1200" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1213.50">/home..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1222" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1235.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1244" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1257.50">/home..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1266" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1279.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1288" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1301.50">/home..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1310" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1323.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1332" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1345.50">/home..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1354" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1367.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1376" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1389.50">/home..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1398" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1411.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1420" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1433.50">/home..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1442" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1455.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1464" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1477.50">/home..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1486" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1499.50">    ..</text>
        </g>
        <g>
            <title>estimators.py:265 (&lt;module&gt;) (20,121,136 bytes, 5.69%)</title>
            <rect x="22.7631%" y="1508" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="80528526" fg:w="20121136"/>
            <text x="23.0131%" y="1521.50">estim..</text>
        </g>
        <g>
            <title>&lt;__array_function__ internals&gt;:200 (empty_like) (61,340,128 bytes, 17.34%)</title>
            <rect x="11.3878%" y="144" width="17.3391%" height="21" fill="rgb(255,187,187)" fg:x="40286334" fg:w="61340128"/>
            <text x="11.6378%" y="157.50">&lt;__array_function__ ..</text>
        </g>
        <g>
            <title>        res_indptr = np.empty_like(self.indptr) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="166" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="179.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_compressed.py:768 (_minor_index_fancy) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="188" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="201.50"></text>
        </g>
        <g>
            <title>        return self._major_slice(row)._minor_index_fancy(col) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="210" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="223.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_csr.py:321 (_get_sliceXarray) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="232" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="245.50"></text>
        </g>
        <g>
            <title>                return self._get_sliceXarray(row, col) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="254" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="267.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_index.py:71 (__getitem__) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="276" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="289.50"></text>
        </g>
        <g>
            <title>        Xt = Xt[:, node_size &lt;= max_node_size] (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="298" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="311.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:151 (embed_with_tree) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="320" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="333.50"></text>
        </g>
        <g>
            <title>                return func(*args, **kwargs) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="342" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="355.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py:192 (wrapper) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="364" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="377.50"></text>
        </g>
        <g>
            <title>            embed_with_tree( (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="386" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="399.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:246 (&lt;genexpr&gt;) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="408" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="421.50"></text>
        </g>
        <g>
            <title>        return _hstack(np.fromiter(embeddings_iter, dtype=&apos;object&apos;)) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="430" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="443.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:255 (transform) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="452" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="465.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="474" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="487.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="496" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="509.50"></text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="518" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="531.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="540" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="553.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="562" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="575.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="584" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="597.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="606" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="619.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="628" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="641.50"></text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="650" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="663.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="672" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="685.50"></text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="694" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="707.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="716" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="729.50"></text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="738" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="751.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="760" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="773.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="782" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="795.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="804" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="817.50"></text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="826" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="839.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="848" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="861.50"></text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="870" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="883.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="892" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="905.50"></text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="914" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="927.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="936" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="949.50"></text>
        </g>
        <g>
            <title>        self.results = batch() (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="958" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="971.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="980" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="993.50"></text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1002" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1015.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1024" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1037.50"></text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1046" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1059.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1068" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1081.50"></text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1090" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1103.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1112" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1125.50"></text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1134" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1147.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1156" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1169.50"></text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1178" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1191.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1200" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1213.50"></text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1222" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1235.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1244" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1257.50"></text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1266" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1279.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1288" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1301.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1310" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1323.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1332" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1345.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1354" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1367.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1376" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1389.50"></text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1398" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1411.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1420" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1433.50"></text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1442" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1455.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1464" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1477.50"></text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1486" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1499.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1508" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1521.50"></text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1530" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1543.50"></text>
        </g>
        <g>
            <title>estimators.py:265 (&lt;module&gt;) (976,800 bytes, 0.28%)</title>
            <rect x="28.4508%" y="1552" width="0.2761%" height="21" fill="rgb(255,242,242)" fg:x="100649662" fg:w="976800"/>
            <text x="28.7008%" y="1565.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:1176 (create_module) (1,244,794 bytes, 0.35%)</title>
            <rect x="28.7564%" y="188" width="0.3519%" height="21" fill="rgb(255,241,241)" fg:x="101730797" fg:w="1244794"/>
            <text x="29.0064%" y="201.50"></text>
        </g>
        <g>
            <title> (1,244,794 bytes, 0.35%)</title>
            <rect x="28.7564%" y="210" width="0.3519%" height="21" fill="rgb(255,241,241)" fg:x="101730797" fg:w="1244794"/>
            <text x="29.0064%" y="223.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:571 (module_from_spec) (1,244,794 bytes, 0.35%)</title>
            <rect x="28.7564%" y="232" width="0.3519%" height="21" fill="rgb(255,241,241)" fg:x="101730797" fg:w="1244794"/>
            <text x="29.0064%" y="245.50"></text>
        </g>
        <g>
            <title> (1,244,794 bytes, 0.35%)</title>
            <rect x="28.7564%" y="254" width="0.3519%" height="21" fill="rgb(255,241,241)" fg:x="101730797" fg:w="1244794"/>
            <text x="29.0064%" y="267.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:674 (_load_unlocked) (1,244,794 bytes, 0.35%)</title>
            <rect x="28.7564%" y="276" width="0.3519%" height="21" fill="rgb(255,241,241)" fg:x="101730797" fg:w="1244794"/>
            <text x="29.0064%" y="289.50"></text>
        </g>
        <g>
            <title> (1,244,794 bytes, 0.35%)</title>
            <rect x="28.7564%" y="298" width="0.3519%" height="21" fill="rgb(255,241,241)" fg:x="101730797" fg:w="1244794"/>
            <text x="29.0064%" y="311.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (1,244,794 bytes, 0.35%)</title>
            <rect x="28.7564%" y="320" width="0.3519%" height="21" fill="rgb(255,241,241)" fg:x="101730797" fg:w="1244794"/>
            <text x="29.0064%" y="333.50"></text>
        </g>
        <g>
            <title> (1,244,794 bytes, 0.35%)</title>
            <rect x="28.7564%" y="342" width="0.3519%" height="21" fill="rgb(255,241,241)" fg:x="101730797" fg:w="1244794"/>
            <text x="29.0064%" y="355.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (1,244,794 bytes, 0.35%)</title>
            <rect x="28.7564%" y="364" width="0.3519%" height="21" fill="rgb(255,241,241)" fg:x="101730797" fg:w="1244794"/>
            <text x="29.0064%" y="377.50"></text>
        </g>
        <g>
            <title>from ._matfuncs_expm import pick_pade_structure, pade_UV_calc (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="562" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="575.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/linalg/_matfuncs.py:20 (&lt;module&gt;) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="584" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="597.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="606" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="619.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="628" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="641.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="650" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="663.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="672" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="685.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="694" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="707.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="716" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="729.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="738" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="751.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="760" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="773.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="782" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="795.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="804" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="817.50"></text>
        </g>
        <g>
            <title>from ._matfuncs import * (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="826" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="839.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/linalg/__init__.py:209 (&lt;module&gt;) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="848" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="861.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="870" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="883.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="892" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="905.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="914" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="927.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="936" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="949.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="958" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="971.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="980" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="993.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1002" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1015.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1024" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1037.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1046" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1059.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1068" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1081.50"></text>
        </g>
        <g>
            <title>from scipy.linalg import get_blas_funcs (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1090" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1103.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_isolve/lgmres.py:7 (&lt;module&gt;) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1112" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1125.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1134" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1147.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1156" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1169.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1178" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1191.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1200" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1213.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1222" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1235.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1244" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1257.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1266" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1279.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1288" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1301.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1310" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1323.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1332" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1345.50"></text>
        </g>
        <g>
            <title>from .lgmres import lgmres (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1354" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1367.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_isolve/__init__.py:6 (&lt;module&gt;) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1376" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1389.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1398" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1411.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1420" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1433.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1442" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1455.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1464" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1477.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1486" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1499.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1508" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1521.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1530" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1543.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1552" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1565.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1574" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1587.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1596" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1609.50"></text>
        </g>
        <g>
            <title>from ._isolve import * (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1618" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1631.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/__init__.py:120 (&lt;module&gt;) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1640" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1653.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1662" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1675.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1684" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1697.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1706" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1719.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1728" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1741.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1750" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1763.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1772" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1785.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1794" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1807.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1816" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1829.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1838" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1851.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1860" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1873.50"></text>
        </g>
        <g>
            <title>from scipy.sparse.linalg import LinearOperator (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1882" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1895.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/csgraph/_laplacian.py:7 (&lt;module&gt;) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1904" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1917.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1926" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1939.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1948" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1961.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1970" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="1983.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="1992" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2005.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2014" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2027.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2036" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2049.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2058" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2071.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2080" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2093.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2102" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2115.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2124" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2137.50"></text>
        </g>
        <g>
            <title>from ._laplacian import laplacian (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2146" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2159.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/csgraph/__init__.py:185 (&lt;module&gt;) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2168" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2181.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2190" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2203.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2212" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2225.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2234" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2247.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2256" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2269.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2278" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2291.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2300" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2313.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2322" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2335.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2344" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2357.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2366" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2379.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2388" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2401.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2410" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2423.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2432" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2445.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2454" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2467.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1078 (_handle_fromlist) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2476" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2489.50"></text>
        </g>
        <g>
            <title>from . import csgraph (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2498" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2511.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/__init__.py:283 (&lt;module&gt;) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2520" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2533.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2542" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2555.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2564" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2577.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2586" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2599.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2608" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2621.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2630" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2643.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2652" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2665.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2674" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2687.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2696" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2709.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2718" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2731.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2740" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2753.50"></text>
        </g>
        <g>
            <title>from scipy.sparse import issparse (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2762" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2775.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/__init__.py:17 (&lt;module&gt;) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2784" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2797.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2806" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2819.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2828" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2841.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2850" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2863.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2872" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2885.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2894" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2907.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2916" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2929.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2938" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2951.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2960" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2973.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="2982" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="2995.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3004" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3017.50"></text>
        </g>
        <g>
            <title>from .utils import _IS_32BIT (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3026" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3039.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:17 (&lt;module&gt;) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3048" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3061.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3070" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3083.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3092" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3105.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3114" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3127.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3136" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3149.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3158" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3171.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3180" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3193.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3202" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3215.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3224" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3237.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3246" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3259.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3268" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3281.50"></text>
        </g>
        <g>
            <title>    from .base import clone (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3290" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3303.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/__init__.py:82 (&lt;module&gt;) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3312" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3325.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3334" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3347.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3356" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3369.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3378" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3391.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3400" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3413.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3422" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3435.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3444" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3457.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3466" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3479.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3488" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3501.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3510" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3523.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3532" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3545.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3554" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3567.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3576" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3589.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3598" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3611.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:992 (_find_and_load_unlocked) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3620" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3633.50"></text>
        </g>
        <g>
            <title> (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3642" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3655.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3664" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3677.50"></text>
        </g>
        <g>
            <title>from sklearn.pipeline import Pipeline, FeatureUnion (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3686" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3699.50"></text>
        </g>
        <g>
            <title>estimators.py:7 (&lt;module&gt;) (1,538,886 bytes, 0.43%)</title>
            <rect x="29.3877%" y="3708" width="0.4350%" height="21" fill="rgb(255,240,240)" fg:x="103964388" fg:w="1538886"/>
            <text x="29.6377%" y="3721.50"></text>
        </g>
        <g>
            <title> (2,554,973 bytes, 0.72%)</title>
            <rect x="29.1082%" y="342" width="0.7222%" height="21" fill="rgb(255,237,237)" fg:x="102975591" fg:w="2554973"/>
            <text x="29.3582%" y="355.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,554,973 bytes, 0.72%)</title>
            <rect x="29.1082%" y="364" width="0.7222%" height="21" fill="rgb(255,237,237)" fg:x="102975591" fg:w="2554973"/>
            <text x="29.3582%" y="377.50"></text>
        </g>
        <g>
            <title> (2,554,973 bytes, 0.72%)</title>
            <rect x="29.1082%" y="386" width="0.7222%" height="21" fill="rgb(255,237,237)" fg:x="102975591" fg:w="2554973"/>
            <text x="29.3582%" y="399.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:1184 (exec_module) (1,949,730 bytes, 0.55%)</title>
            <rect x="29.2793%" y="408" width="0.5511%" height="21" fill="rgb(255,238,238)" fg:x="103580834" fg:w="1949730"/>
            <text x="29.5293%" y="421.50"></text>
        </g>
        <g>
            <title> (1,949,730 bytes, 0.55%)</title>
            <rect x="29.2793%" y="430" width="0.5511%" height="21" fill="rgb(255,238,238)" fg:x="103580834" fg:w="1949730"/>
            <text x="29.5293%" y="443.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (1,949,730 bytes, 0.55%)</title>
            <rect x="29.2793%" y="452" width="0.5511%" height="21" fill="rgb(255,238,238)" fg:x="103580834" fg:w="1949730"/>
            <text x="29.5293%" y="465.50"></text>
        </g>
        <g>
            <title> (1,949,730 bytes, 0.55%)</title>
            <rect x="29.2793%" y="474" width="0.5511%" height="21" fill="rgb(255,238,238)" fg:x="103580834" fg:w="1949730"/>
            <text x="29.5293%" y="487.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (1,949,730 bytes, 0.55%)</title>
            <rect x="29.2793%" y="496" width="0.5511%" height="21" fill="rgb(255,238,238)" fg:x="103580834" fg:w="1949730"/>
            <text x="29.5293%" y="509.50"></text>
        </g>
        <g>
            <title> (1,949,730 bytes, 0.55%)</title>
            <rect x="29.2793%" y="518" width="0.5511%" height="21" fill="rgb(255,238,238)" fg:x="103580834" fg:w="1949730"/>
            <text x="29.5293%" y="531.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (1,949,730 bytes, 0.55%)</title>
            <rect x="29.2793%" y="540" width="0.5511%" height="21" fill="rgb(255,238,238)" fg:x="103580834" fg:w="1949730"/>
            <text x="29.5293%" y="553.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (5,736,150 bytes, 1.62%)</title>
            <rect x="28.7525%" y="144" width="1.6214%" height="21" fill="rgb(255,230,230)" fg:x="101717195" fg:w="5736150"/>
            <text x="29.0025%" y="157.50"></text>
        </g>
        <g>
            <title> (5,736,150 bytes, 1.62%)</title>
            <rect x="28.7525%" y="166" width="1.6214%" height="21" fill="rgb(255,230,230)" fg:x="101717195" fg:w="5736150"/>
            <text x="29.0025%" y="179.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:1184 (exec_module) (4,477,754 bytes, 1.27%)</title>
            <rect x="29.1082%" y="188" width="1.2657%" height="21" fill="rgb(255,233,233)" fg:x="102975591" fg:w="4477754"/>
            <text x="29.3582%" y="201.50"></text>
        </g>
        <g>
            <title> (4,477,754 bytes, 1.27%)</title>
            <rect x="29.1082%" y="210" width="1.2657%" height="21" fill="rgb(255,233,233)" fg:x="102975591" fg:w="4477754"/>
            <text x="29.3582%" y="223.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (4,477,754 bytes, 1.27%)</title>
            <rect x="29.1082%" y="232" width="1.2657%" height="21" fill="rgb(255,233,233)" fg:x="102975591" fg:w="4477754"/>
            <text x="29.3582%" y="245.50"></text>
        </g>
        <g>
            <title> (4,477,754 bytes, 1.27%)</title>
            <rect x="29.1082%" y="254" width="1.2657%" height="21" fill="rgb(255,233,233)" fg:x="102975591" fg:w="4477754"/>
            <text x="29.3582%" y="267.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (4,477,754 bytes, 1.27%)</title>
            <rect x="29.1082%" y="276" width="1.2657%" height="21" fill="rgb(255,233,233)" fg:x="102975591" fg:w="4477754"/>
            <text x="29.3582%" y="289.50"></text>
        </g>
        <g>
            <title> (4,477,754 bytes, 1.27%)</title>
            <rect x="29.1082%" y="298" width="1.2657%" height="21" fill="rgb(255,233,233)" fg:x="102975591" fg:w="4477754"/>
            <text x="29.3582%" y="311.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (4,477,754 bytes, 1.27%)</title>
            <rect x="29.1082%" y="320" width="1.2657%" height="21" fill="rgb(255,233,233)" fg:x="102975591" fg:w="4477754"/>
            <text x="29.3582%" y="333.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1078 (_handle_fromlist) (2,712,245 bytes, 0.77%)</title>
            <rect x="30.4979%" y="452" width="0.7667%" height="21" fill="rgb(255,236,236)" fg:x="107891626" fg:w="2712245"/>
            <text x="30.7479%" y="465.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,783,327 bytes, 0.79%)</title>
            <rect x="30.4979%" y="408" width="0.7868%" height="21" fill="rgb(255,236,236)" fg:x="107891626" fg:w="2783327"/>
            <text x="30.7479%" y="421.50"></text>
        </g>
        <g>
            <title> (2,783,327 bytes, 0.79%)</title>
            <rect x="30.4979%" y="430" width="0.7868%" height="21" fill="rgb(255,236,236)" fg:x="107891626" fg:w="2783327"/>
            <text x="30.7479%" y="443.50"></text>
        </g>
        <g>
            <title> (2,814,541 bytes, 0.80%)</title>
            <rect x="30.4920%" y="386" width="0.7956%" height="21" fill="rgb(255,236,236)" fg:x="107870924" fg:w="2814541"/>
            <text x="30.7420%" y="399.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:672 (_compile_bytecode) (18,471,648 bytes, 5.22%)</title>
            <rect x="30.4840%" y="144" width="5.2214%" height="21" fill="rgb(255,215,215)" fg:x="107842564" fg:w="18471648"/>
            <text x="30.7340%" y="157.50">&lt;fro..</text>
        </g>
        <g>
            <title> (18,471,648 bytes, 5.22%)</title>
            <rect x="30.4840%" y="166" width="5.2214%" height="21" fill="rgb(255,215,215)" fg:x="107842564" fg:w="18471648"/>
            <text x="30.7340%" y="179.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:1012 (get_code) (18,471,648 bytes, 5.22%)</title>
            <rect x="30.4840%" y="188" width="5.2214%" height="21" fill="rgb(255,215,215)" fg:x="107842564" fg:w="18471648"/>
            <text x="30.7340%" y="201.50">&lt;fro..</text>
        </g>
        <g>
            <title> (18,471,648 bytes, 5.22%)</title>
            <rect x="30.4840%" y="210" width="5.2214%" height="21" fill="rgb(255,215,215)" fg:x="107842564" fg:w="18471648"/>
            <text x="30.7340%" y="223.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:879 (exec_module) (18,471,648 bytes, 5.22%)</title>
            <rect x="30.4840%" y="232" width="5.2214%" height="21" fill="rgb(255,215,215)" fg:x="107842564" fg:w="18471648"/>
            <text x="30.7340%" y="245.50">&lt;fro..</text>
        </g>
        <g>
            <title> (18,471,648 bytes, 5.22%)</title>
            <rect x="30.4840%" y="254" width="5.2214%" height="21" fill="rgb(255,215,215)" fg:x="107842564" fg:w="18471648"/>
            <text x="30.7340%" y="267.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (18,471,648 bytes, 5.22%)</title>
            <rect x="30.4840%" y="276" width="5.2214%" height="21" fill="rgb(255,215,215)" fg:x="107842564" fg:w="18471648"/>
            <text x="30.7340%" y="289.50">&lt;fro..</text>
        </g>
        <g>
            <title> (18,471,648 bytes, 5.22%)</title>
            <rect x="30.4840%" y="298" width="5.2214%" height="21" fill="rgb(255,215,215)" fg:x="107842564" fg:w="18471648"/>
            <text x="30.7340%" y="311.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (18,471,648 bytes, 5.22%)</title>
            <rect x="30.4840%" y="320" width="5.2214%" height="21" fill="rgb(255,215,215)" fg:x="107842564" fg:w="18471648"/>
            <text x="30.7340%" y="333.50">&lt;fro..</text>
        </g>
        <g>
            <title> (18,471,648 bytes, 5.22%)</title>
            <rect x="30.4840%" y="342" width="5.2214%" height="21" fill="rgb(255,215,215)" fg:x="107842564" fg:w="18471648"/>
            <text x="30.7340%" y="355.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (18,471,648 bytes, 5.22%)</title>
            <rect x="30.4840%" y="364" width="5.2214%" height="21" fill="rgb(255,215,215)" fg:x="107842564" fg:w="18471648"/>
            <text x="30.7340%" y="377.50">&lt;fro..</text>
        </g>
        <g>
            <title> (126,352,795 bytes, 35.72%)</title>
            <rect x="0.0025%" y="122" width="35.7163%" height="21" fill="rgb(255,160,160)" fg:x="8772" fg:w="126352795"/>
            <text x="0.2525%" y="135.50"></text>
        </g>
        <g>
            <title>    return array[key] if axis == 0 else array[:, key] (1,992,688 bytes, 0.56%)</title>
            <rect x="37.3874%" y="122" width="0.5633%" height="21" fill="rgb(255,238,238)" fg:x="132264542" fg:w="1992688"/>
            <text x="37.6374%" y="135.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/__init__.py:185 (_array_indexing) (1,992,688 bytes, 0.56%)</title>
            <rect x="37.3874%" y="144" width="0.5633%" height="21" fill="rgb(255,238,238)" fg:x="132264542" fg:w="1992688"/>
            <text x="37.6374%" y="157.50"></text>
        </g>
        <g>
            <title>        return _array_indexing(X, indices, indices_dtype, axis=axis) (1,992,688 bytes, 0.56%)</title>
            <rect x="37.3874%" y="166" width="0.5633%" height="21" fill="rgb(255,238,238)" fg:x="132264542" fg:w="1992688"/>
            <text x="37.6374%" y="179.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/__init__.py:356 (_safe_indexing) (1,992,688 bytes, 0.56%)</title>
            <rect x="37.3874%" y="188" width="0.5633%" height="21" fill="rgb(255,238,238)" fg:x="132264542" fg:w="1992688"/>
            <text x="37.6374%" y="201.50"></text>
        </g>
        <g>
            <title>                    X=_safe_indexing(X, column, axis=1), (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="210" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="223.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:661 (&lt;genexpr&gt;) (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="232" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="245.50"></text>
        </g>
        <g>
            <title>        iterable_with_config = ( (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="254" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="267.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:59 (&lt;genexpr&gt;) (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="276" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="289.50"></text>
        </g>
        <g>
            <title>                islice = list(itertools.islice(iterator, big_batch_size)) (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="298" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="311.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:873 (dispatch_one_batch) (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="320" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="333.50"></text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="342" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="355.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="364" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="377.50"></text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="386" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="399.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="408" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="421.50"></text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="430" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="443.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="452" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="465.50"></text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="474" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="487.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="496" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="509.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="518" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="531.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="540" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="553.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="562" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="575.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="584" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="597.50"></text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="606" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="619.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="628" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="641.50"></text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="650" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="663.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="672" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="685.50"></text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="694" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="707.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="716" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="729.50"></text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="738" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="751.50"></text>
        </g>
        <g>
            <title>estimators.py:265 (&lt;module&gt;) (1,991,864 bytes, 0.56%)</title>
            <rect x="37.3876%" y="760" width="0.5630%" height="21" fill="rgb(255,238,238)" fg:x="132265366" fg:w="1991864"/>
            <text x="37.6376%" y="773.50"></text>
        </g>
        <g>
            <title>    return docstring % indented (720,354 bytes, 0.20%)</title>
            <rect x="37.9700%" y="122" width="0.2036%" height="21" fill="rgb(255,243,243)" fg:x="134325704" fg:w="720354"/>
            <text x="38.2200%" y="135.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/_lib/doccer.py:69 (docformat) (720,354 bytes, 0.20%)</title>
            <rect x="37.9700%" y="144" width="0.2036%" height="21" fill="rgb(255,243,243)" fg:x="134325704" fg:w="720354"/>
            <text x="38.2200%" y="157.50"></text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="562" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="575.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="584" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="597.50"></text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="606" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="619.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="628" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="641.50"></text>
        </g>
        <g>
            <title>            trees = Parallel( (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="650" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="663.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:473 (fit) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="672" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="685.50"></text>
        </g>
        <g>
            <title>        self.estimator_.fit(X, y) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="694" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="707.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:216 (fit) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="716" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="729.50"></text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="738" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="751.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="760" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="773.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="782" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="795.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="804" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="817.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="826" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="839.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="848" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="861.50"></text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="870" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="883.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="892" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="905.50"></text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="914" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="927.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="936" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="949.50"></text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="958" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="971.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="980" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="993.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1002" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1015.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1024" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1037.50"></text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1046" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1059.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1068" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1081.50"></text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1090" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1103.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1112" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1125.50"></text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1134" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1147.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1156" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1169.50"></text>
        </g>
        <g>
            <title>        self.results = batch() (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1178" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1191.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1200" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1213.50"></text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1222" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1235.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1244" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1257.50"></text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1266" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1279.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1288" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1301.50"></text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1310" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1323.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1332" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1345.50"></text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1354" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1367.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1376" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1389.50"></text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1398" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1411.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1420" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1433.50"></text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1442" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1455.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1464" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1477.50"></text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1486" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1499.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1508" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1521.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1530" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1543.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1552" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1565.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1574" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1587.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1596" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1609.50"></text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1618" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1631.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1640" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1653.50"></text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1662" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1675.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1684" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1697.50"></text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1706" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1719.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1728" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1741.50"></text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1750" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1763.50"></text>
        </g>
        <g>
            <title>estimators.py:265 (&lt;module&gt;) (1,291,080 bytes, 0.36%)</title>
            <rect x="38.3351%" y="1772" width="0.3650%" height="21" fill="rgb(255,241,241)" fg:x="135617336" fg:w="1291080"/>
            <text x="38.5851%" y="1785.50"></text>
        </g>
        <g>
            <title>        builder.build(self.tree_, X, y, sample_weight) (129,782,800 bytes, 36.69%)</title>
            <rect x="38.3351%" y="122" width="36.6859%" height="21" fill="rgb(255,159,159)" fg:x="135617336" fg:w="129782800"/>
            <text x="38.5851%" y="135.50">        builder.build(self.tree_, X, y, sam..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/tree/_classes.py:379 (fit) (129,782,800 bytes, 36.69%)</title>
            <rect x="38.3351%" y="144" width="36.6859%" height="21" fill="rgb(255,159,159)" fg:x="135617336" fg:w="129782800"/>
            <text x="38.5851%" y="157.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>        super().fit( (129,782,800 bytes, 36.69%)</title>
            <rect x="38.3351%" y="166" width="36.6859%" height="21" fill="rgb(255,159,159)" fg:x="135617336" fg:w="129782800"/>
            <text x="38.5851%" y="179.50">        super().fit(</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/tree/_classes.py:889 (fit) (129,782,800 bytes, 36.69%)</title>
            <rect x="38.3351%" y="188" width="36.6859%" height="21" fill="rgb(255,159,159)" fg:x="135617336" fg:w="129782800"/>
            <text x="38.5851%" y="201.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>        tree.fit(X, y, sample_weight=sample_weight, check_input=False) (129,782,800 bytes, 36.69%)</title>
            <rect x="38.3351%" y="210" width="36.6859%" height="21" fill="rgb(255,159,159)" fg:x="135617336" fg:w="129782800"/>
            <text x="38.5851%" y="223.50">        tree.fit(X, y, sample_weight=sample..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:186 (_parallel_build_trees) (129,782,800 bytes, 36.69%)</title>
            <rect x="38.3351%" y="232" width="36.6859%" height="21" fill="rgb(255,159,159)" fg:x="135617336" fg:w="129782800"/>
            <text x="38.5851%" y="245.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (129,782,800 bytes, 36.69%)</title>
            <rect x="38.3351%" y="254" width="36.6859%" height="21" fill="rgb(255,159,159)" fg:x="135617336" fg:w="129782800"/>
            <text x="38.5851%" y="267.50">            return self.function(*args, **k..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (129,782,800 bytes, 36.69%)</title>
            <rect x="38.3351%" y="276" width="36.6859%" height="21" fill="rgb(255,159,159)" fg:x="135617336" fg:w="129782800"/>
            <text x="38.5851%" y="289.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (129,782,800 bytes, 36.69%)</title>
            <rect x="38.3351%" y="298" width="36.6859%" height="21" fill="rgb(255,159,159)" fg:x="135617336" fg:w="129782800"/>
            <text x="38.5851%" y="311.50">            return [func(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (129,782,800 bytes, 36.69%)</title>
            <rect x="38.3351%" y="320" width="36.6859%" height="21" fill="rgb(255,159,159)" fg:x="135617336" fg:w="129782800"/>
            <text x="38.5851%" y="333.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (129,782,800 bytes, 36.69%)</title>
            <rect x="38.3351%" y="342" width="36.6859%" height="21" fill="rgb(255,159,159)" fg:x="135617336" fg:w="129782800"/>
            <text x="38.5851%" y="355.50">            return [func(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (129,782,800 bytes, 36.69%)</title>
            <rect x="38.3351%" y="364" width="36.6859%" height="21" fill="rgb(255,159,159)" fg:x="135617336" fg:w="129782800"/>
            <text x="38.5851%" y="377.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>        self.results = batch() (129,782,800 bytes, 36.69%)</title>
            <rect x="38.3351%" y="386" width="36.6859%" height="21" fill="rgb(255,159,159)" fg:x="135617336" fg:w="129782800"/>
            <text x="38.5851%" y="399.50">        self.results = batch()..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (129,782,800 bytes, 36.69%)</title>
            <rect x="38.3351%" y="408" width="36.6859%" height="21" fill="rgb(255,159,159)" fg:x="135617336" fg:w="129782800"/>
            <text x="38.5851%" y="421.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (129,782,800 bytes, 36.69%)</title>
            <rect x="38.3351%" y="430" width="36.6859%" height="21" fill="rgb(255,159,159)" fg:x="135617336" fg:w="129782800"/>
            <text x="38.5851%" y="443.50">        result = ImmediateResult(func)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (129,782,800 bytes, 36.69%)</title>
            <rect x="38.3351%" y="452" width="36.6859%" height="21" fill="rgb(255,159,159)" fg:x="135617336" fg:w="129782800"/>
            <text x="38.5851%" y="465.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (129,782,800 bytes, 36.69%)</title>
            <rect x="38.3351%" y="474" width="36.6859%" height="21" fill="rgb(255,159,159)" fg:x="135617336" fg:w="129782800"/>
            <text x="38.5851%" y="487.50">            job = self._backend.apply_async..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (129,782,800 bytes, 36.69%)</title>
            <rect x="38.3351%" y="496" width="36.6859%" height="21" fill="rgb(255,159,159)" fg:x="135617336" fg:w="129782800"/>
            <text x="38.5851%" y="509.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (129,782,800 bytes, 36.69%)</title>
            <rect x="38.3351%" y="518" width="36.6859%" height="21" fill="rgb(255,159,159)" fg:x="135617336" fg:w="129782800"/>
            <text x="38.5851%" y="531.50">                self._dispatch(tasks)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (129,782,800 bytes, 36.69%)</title>
            <rect x="38.3351%" y="540" width="36.6859%" height="21" fill="rgb(255,159,159)" fg:x="135617336" fg:w="129782800"/>
            <text x="38.5851%" y="553.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>            while self.dispatch_one_batch(iterator): (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="562" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="575.50">            while self.dispatch_one_batch(i..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1088 (__call__) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="584" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="597.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="606" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="619.50">        return super().__call__(iterable_wi..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="628" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="641.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>            trees = Parallel( (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="650" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="663.50">            trees = Parallel(..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:473 (fit) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="672" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="685.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>        self.estimator_.fit(X, y) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="694" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="707.50">        self.estimator_.fit(X, y)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:216 (fit) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="716" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="729.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="738" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="751.50">            return self.fit(X, y, **fit_par..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="760" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="773.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="782" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="795.50">        data_to_wrap = f(self, X, *args, **..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="804" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="817.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="826" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="839.50">            res = transformer.fit_transform..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="848" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="861.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="870" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="883.50">        return self.func(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="892" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="905.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="914" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="927.50">            X, fitted_transformer = fit_tra..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="936" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="949.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="958" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="971.50">        Xt = self._fit(X, y, **fit_params_s..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="980" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="993.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1002" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1015.50">            res = transformer.fit_transform..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1024" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1037.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1046" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1059.50">            return self.function(*args, **k..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1068" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1081.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1090" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1103.50">            return [func(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1112" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1125.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1134" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1147.50">            return [func(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1156" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1169.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>        self.results = batch() (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1178" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1191.50">        self.results = batch()..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1200" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1213.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1222" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1235.50">        result = ImmediateResult(func)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1244" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1257.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1266" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1279.50">            job = self._backend.apply_async..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1288" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1301.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1310" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1323.50">                self._dispatch(tasks)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1332" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1345.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1354" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1367.50">            if self.dispatch_one_batch(iter..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1376" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1389.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1398" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1411.50">        return super().__call__(iterable_wi..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1420" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1433.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1442" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1455.50">            return Parallel(n_jobs=self.n_j..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1464" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1477.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1486" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1499.50">        result = self._fit_transform(X, y, ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1508" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1521.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1530" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1543.50">        data_to_wrap = f(self, X, *args, **..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1552" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1565.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1574" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1587.50">            res = transformer.fit_transform..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1596" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1609.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1618" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1631.50">        return self.func(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1640" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1653.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1662" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1675.50">                new_X, fitted_transformer =..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1684" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1697.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1706" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1719.50">        Xt, yt = self._fit(X, y, **fit_para..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1728" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1741.50">/home/pedro/mestrado/biomal_repo/scripts/cas..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1750" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1763.50">    cascade = cascade_weak_label_tree_embed..</text>
        </g>
        <g>
            <title>estimators.py:265 (&lt;module&gt;) (128,491,720 bytes, 36.32%)</title>
            <rect x="38.7001%" y="1772" width="36.3209%" height="21" fill="rgb(255,159,159)" fg:x="136908416" fg:w="128491720"/>
            <text x="38.9501%" y="1785.50">estimators.py:265 (&lt;module&gt;)</text>
        </g>
        <g>
            <title>        indptr_cat = np.concatenate(indptr_list).astype(idx_dtype) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="122" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="135.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:483 (_stack_along_minor_axis) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="144" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="157.50"></text>
        </g>
        <g>
            <title>            blocks = [[_stack_along_minor_axis(blocks[b, :], 1)] (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="166" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="179.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:627 (&lt;listcomp&gt;) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="188" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="201.50"></text>
        </g>
        <g>
            <title>            blocks = [[_stack_along_minor_axis(blocks[b, :], 1)] (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="210" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="223.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:627 (bmat) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="232" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="245.50"></text>
        </g>
        <g>
            <title>    return bmat([blocks], format=format, dtype=dtype) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="254" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="267.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:535 (hstack) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="276" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="289.50"></text>
        </g>
        <g>
            <title>        return scipy.sparse.hstack(Xs, format=&apos;csr&apos;) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="298" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="311.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:41 (_hstack) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="320" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="333.50"></text>
        </g>
        <g>
            <title>        return _hstack(np.fromiter(embeddings_iter, dtype=&apos;object&apos;)) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="342" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="355.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:255 (transform) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="364" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="377.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="386" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="399.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="408" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="421.50"></text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="430" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="443.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="452" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="465.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="474" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="487.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="496" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="509.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="518" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="531.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="540" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="553.50"></text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="562" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="575.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="584" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="597.50"></text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="606" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="619.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="628" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="641.50"></text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="650" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="663.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="672" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="685.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="694" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="707.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="716" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="729.50"></text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="738" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="751.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="760" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="773.50"></text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="782" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="795.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="804" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="817.50"></text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="826" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="839.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="848" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="861.50"></text>
        </g>
        <g>
            <title>        self.results = batch() (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="870" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="883.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="892" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="905.50"></text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="914" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="927.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="936" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="949.50"></text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="958" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="971.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="980" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="993.50"></text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1002" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1015.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1024" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1037.50"></text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1046" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1059.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1068" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1081.50"></text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1090" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1103.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1112" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1125.50"></text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1134" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1147.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1156" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1169.50"></text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1178" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1191.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1200" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1213.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1222" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1235.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1244" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1257.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1266" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1279.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1288" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1301.50"></text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1310" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1323.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1332" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1345.50"></text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1354" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1367.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1376" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1389.50"></text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1398" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1411.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1420" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1433.50"></text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1442" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1455.50"></text>
        </g>
        <g>
            <title>estimators.py:265 (&lt;module&gt;) (967,296 bytes, 0.27%)</title>
            <rect x="75.3709%" y="1464" width="0.2734%" height="21" fill="rgb(255,242,242)" fg:x="266638039" fg:w="967296"/>
            <text x="75.6209%" y="1477.50"></text>
        </g>
        <g>
            <title>        res_data = np.empty(nnz, dtype=self.dtype) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="122" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="135.50">        res..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_compressed.py:776 (_minor_index_fancy) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="144" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="157.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        return self._major_slice(row)._minor_index_fancy(col) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="166" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="179.50">        ret..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_csr.py:321 (_get_sliceXarray) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="188" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="201.50">/home/pedro/..</text>
        </g>
        <g>
            <title>                return self._get_sliceXarray(row, col) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="210" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="223.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_index.py:71 (__getitem__) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="232" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="245.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        Xt = Xt[:, node_size &lt;= max_node_size] (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="254" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="267.50">        Xt ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:151 (embed_with_tree) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="276" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="289.50">/home/pedro/..</text>
        </g>
        <g>
            <title>                return func(*args, **kwargs) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="298" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="311.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py:192 (wrapper) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="320" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="333.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            embed_with_tree( (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="342" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="355.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:246 (&lt;genexpr&gt;) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="364" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="377.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        return _hstack(np.fromiter(embeddings_iter, dtype=&apos;object&apos;)) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="386" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="399.50">        ret..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:255 (transform) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="408" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="421.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="430" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="443.50">        dat..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="452" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="465.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="474" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="487.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="496" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="509.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="518" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="531.50">        dat..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="540" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="553.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="562" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="575.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="584" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="597.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="606" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="619.50">        ret..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="628" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="641.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="650" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="663.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="672" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="685.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="694" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="707.50">        Xt ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="716" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="729.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="738" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="751.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="760" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="773.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="782" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="795.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="804" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="817.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="826" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="839.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="848" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="861.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="870" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="883.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="892" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="905.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        self.results = batch() (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="914" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="927.50">        sel..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="936" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="949.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="958" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="971.50">        res..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="980" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="993.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1002" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1015.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1024" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1037.50">/home/pedro/..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1046" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1059.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1068" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1081.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1090" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1103.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1112" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1125.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1134" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1147.50">        ret..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1156" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1169.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1178" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1191.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1200" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1213.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1222" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1235.50">        res..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1244" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1257.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1266" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1279.50">        dat..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1288" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1301.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1310" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1323.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1332" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1345.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1354" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1367.50">        ret..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1376" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1389.50">/home/pedro/..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1398" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1411.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1420" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1433.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1442" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1455.50">        Xt,..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1464" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1477.50">/home/pedro/..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1486" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1499.50">    cascade..</text>
        </g>
        <g>
            <title>estimators.py:265 (&lt;module&gt;) (40,253,280 bytes, 11.38%)</title>
            <rect x="75.7446%" y="1508" width="11.3784%" height="21" fill="rgb(255,199,199)" fg:x="267960047" fg:w="40253280"/>
            <text x="75.9946%" y="1521.50">estimators.p..</text>
        </g>
        <g>
            <title>        res_indices = np.empty(nnz, dtype=idx_dtype) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="122" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="135.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_compressed.py:775 (_minor_index_fancy) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="144" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="157.50">/home..</text>
        </g>
        <g>
            <title>        return self._major_slice(row)._minor_index_fancy(col) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="166" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="179.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_csr.py:321 (_get_sliceXarray) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="188" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="201.50">/home..</text>
        </g>
        <g>
            <title>                return self._get_sliceXarray(row, col) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="210" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="223.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_index.py:71 (__getitem__) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="232" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="245.50">/home..</text>
        </g>
        <g>
            <title>        Xt = Xt[:, node_size &lt;= max_node_size] (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="254" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="267.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:151 (embed_with_tree) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="276" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="289.50">/home..</text>
        </g>
        <g>
            <title>                return func(*args, **kwargs) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="298" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="311.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py:192 (wrapper) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="320" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="333.50">/home..</text>
        </g>
        <g>
            <title>            embed_with_tree( (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="342" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="355.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:246 (&lt;genexpr&gt;) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="364" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="377.50">/home..</text>
        </g>
        <g>
            <title>        return _hstack(np.fromiter(embeddings_iter, dtype=&apos;object&apos;)) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="386" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="399.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:255 (transform) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="408" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="421.50">/home..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="430" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="443.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="452" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="465.50">/home..</text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="474" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="487.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="496" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="509.50">/home..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="518" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="531.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="540" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="553.50">/home..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="562" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="575.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="584" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="597.50">/home..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="606" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="619.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="628" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="641.50">/home..</text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="650" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="663.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="672" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="685.50">/home..</text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="694" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="707.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="716" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="729.50">/home..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="738" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="751.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="760" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="773.50">/home..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="782" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="795.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="804" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="817.50">/home..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="826" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="839.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="848" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="861.50">/home..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="870" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="883.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="892" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="905.50">/home..</text>
        </g>
        <g>
            <title>        self.results = batch() (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="914" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="927.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="936" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="949.50">/home..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="958" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="971.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="980" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="993.50">/home..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1002" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1015.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1024" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1037.50">/home..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1046" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1059.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1068" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1081.50">/home..</text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1090" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1103.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1112" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1125.50">/home..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1134" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1147.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1156" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1169.50">/home..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1178" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1191.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1200" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1213.50">/home..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1222" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1235.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1244" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1257.50">/home..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1266" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1279.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1288" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1301.50">/home..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1310" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1323.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1332" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1345.50">/home..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1354" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1367.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1376" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1389.50">/home..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1398" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1411.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1420" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1433.50">/home..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1442" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1455.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1464" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1477.50">/home..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1486" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1499.50">    ..</text>
        </g>
        <g>
            <title>estimators.py:265 (&lt;module&gt;) (20,132,240 bytes, 5.69%)</title>
            <rect x="87.1231%" y="1508" width="5.6908%" height="21" fill="rgb(255,214,214)" fg:x="308213327" fg:w="20132240"/>
            <text x="87.3731%" y="1521.50">estim..</text>
        </g>
        <g>
            <title>            cls = super().__new__(mcls, name, bases, namespace, **kwargs) (1,252,513 bytes, 0.35%)</title>
            <rect x="93.0826%" y="122" width="0.3540%" height="21" fill="rgb(255,241,241)" fg:x="329296401" fg:w="1252513"/>
            <text x="93.3326%" y="135.50"></text>
        </g>
        <g>
            <title>/usr/lib/python3.10/abc.py:106 (__new__) (1,252,513 bytes, 0.35%)</title>
            <rect x="93.0826%" y="144" width="0.3540%" height="21" fill="rgb(255,241,241)" fg:x="329296401" fg:w="1252513"/>
            <text x="93.3326%" y="157.50"></text>
        </g>
        <g>
            <title>            return np.zeros(self.shape, dtype=self.dtype, order=order) (2,262,960 bytes, 0.64%)</title>
            <rect x="93.5435%" y="122" width="0.6397%" height="21" fill="rgb(255,238,238)" fg:x="330926786" fg:w="2262960"/>
            <text x="93.7935%" y="135.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_base.py:1298 (_process_toarray_args) (2,262,960 bytes, 0.64%)</title>
            <rect x="93.5435%" y="144" width="0.6397%" height="21" fill="rgb(255,238,238)" fg:x="330926786" fg:w="2262960"/>
            <text x="93.7935%" y="157.50"></text>
        </g>
        <g>
            <title>        d = self._process_toarray_args(order, out) (2,262,960 bytes, 0.64%)</title>
            <rect x="93.5435%" y="166" width="0.6397%" height="21" fill="rgb(255,238,238)" fg:x="330926786" fg:w="2262960"/>
            <text x="93.7935%" y="179.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_lil.py:426 (toarray) (2,262,960 bytes, 0.64%)</title>
            <rect x="93.5435%" y="188" width="0.6397%" height="21" fill="rgb(255,238,238)" fg:x="330926786" fg:w="2262960"/>
            <text x="93.7935%" y="201.50"></text>
        </g>
        <g>
            <title>    X, y = X.toarray(), y.toarray() (2,262,960 bytes, 0.64%)</title>
            <rect x="93.5435%" y="210" width="0.6397%" height="21" fill="rgb(255,238,238)" fg:x="330926786" fg:w="2262960"/>
            <text x="93.7935%" y="223.50"></text>
        </g>
        <g>
            <title>estimators.py:262 (&lt;module&gt;) (2,262,960 bytes, 0.64%)</title>
            <rect x="93.5435%" y="232" width="0.6397%" height="21" fill="rgb(255,238,238)" fg:x="330926786" fg:w="2262960"/>
            <text x="93.7935%" y="245.50"></text>
        </g>
        <g>
            <title>                       .astype(idx_dtype)) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="122" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="135.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:485 (_stack_along_minor_axis) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="144" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="157.50">/home..</text>
        </g>
        <g>
            <title>            blocks = [[_stack_along_minor_axis(blocks[b, :], 1)] (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="166" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="179.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:627 (&lt;listcomp&gt;) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="188" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="201.50">/home..</text>
        </g>
        <g>
            <title>            blocks = [[_stack_along_minor_axis(blocks[b, :], 1)] (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="210" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="223.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:627 (bmat) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="232" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="245.50">/home..</text>
        </g>
        <g>
            <title>    return bmat([blocks], format=format, dtype=dtype) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="254" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="267.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:535 (hstack) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="276" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="289.50">/home..</text>
        </g>
        <g>
            <title>        return scipy.sparse.hstack(Xs, format=&apos;csr&apos;) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="298" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="311.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:41 (_hstack) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="320" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="333.50">/home..</text>
        </g>
        <g>
            <title>        return _hstack(np.fromiter(embeddings_iter, dtype=&apos;object&apos;)) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="342" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="355.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:255 (transform) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="364" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="377.50">/home..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="386" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="399.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="408" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="421.50">/home..</text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="430" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="443.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="452" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="465.50">/home..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="474" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="487.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="496" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="509.50">/home..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="518" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="531.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="540" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="553.50">/home..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="562" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="575.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="584" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="597.50">/home..</text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="606" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="619.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="628" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="641.50">/home..</text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="650" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="663.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="672" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="685.50">/home..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="694" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="707.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="716" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="729.50">/home..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="738" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="751.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="760" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="773.50">/home..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="782" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="795.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="804" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="817.50">/home..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="826" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="839.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="848" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="861.50">/home..</text>
        </g>
        <g>
            <title>        self.results = batch() (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="870" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="883.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="892" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="905.50">/home..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="914" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="927.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="936" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="949.50">/home..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="958" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="971.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="980" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="993.50">/home..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1002" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1015.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1024" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1037.50">/home..</text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1046" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1059.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1068" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1081.50">/home..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1090" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1103.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1112" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1125.50">/home..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1134" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1147.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1156" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1169.50">/home..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1178" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1191.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1200" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1213.50">/home..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1222" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1235.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1244" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1257.50">/home..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1266" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1279.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1288" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1301.50">/home..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1310" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1323.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1332" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1345.50">/home..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1354" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1367.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1376" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1389.50">/home..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1398" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1411.50">    ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1420" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1433.50">/home..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1442" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1455.50">    ..</text>
        </g>
        <g>
            <title>estimators.py:265 (&lt;module&gt;) (20,121,136 bytes, 5.69%)</title>
            <rect x="94.3076%" y="1464" width="5.6877%" height="21" fill="rgb(255,214,214)" fg:x="333629941" fg:w="20121136"/>
            <text x="94.5576%" y="1477.50">estim..</text>
        </g>
        <g>
            <title>all (353,767,821 bytes, 100%)</title>
            <rect x="0.0000%" y="100" width="100.0000%" height="21" fill="rgb(255,100,100)" fg:x="0" fg:w="353767821"/>
            <text x="0.2500%" y="113.50"></text>
        </g>
    </svg>
</svg>