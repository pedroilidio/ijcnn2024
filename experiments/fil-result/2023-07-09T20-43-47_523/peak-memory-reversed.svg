<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="3140" onload="init(evt)" viewBox="0 0 1200 3140" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno">
    <!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.-->
    <!--NOTES: -->
    <defs>
        <linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
            <stop stop-color="#eeeeee" offset="5%"/>
            <stop stop-color="#eeeeb0" offset="95%"/>
        </linearGradient>
    </defs>
    <style type="text/css">
text { font-family:monospace; font-size:16px }
#title { text-anchor:middle; font-size:21px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style>
    <script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 16;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script>
    <rect x="0" y="0" width="100%" height="3140" fill="url(#background)"/>
    <text id="title" fill="rgb(0,0,0)" x="50.0000%" y="32.00">Peak Tracked Memory Usage (7032.4 MiB), Reversed</text>
    <text id="subtitle" x="50.0000%" y="64.00">Made with the Fil profiler. <a href="https://pythonspeed.com/fil/" style="text-decoration: underline;" target="_parent">Try it on your code!</a></text>
    <text id="details" fill="rgb(0,0,0)" x="10" y="84.00"> </text>
    <text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="32.00">Reset Zoom</text>
    <text id="search" fill="rgb(0,0,0)" x="1190" y="32.00">Search</text>
    <text id="matched" fill="rgb(0,0,0)" x="1190" y="3127.00"> </text>
    <svg id="frames" x="10" width="1180" total_samples="7341747873">
        <g>
            <title>    data = np.concatenate([b.data for b in blocks]) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="166" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="179.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:420 (_compressed_sparse_stack) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="188" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="201.50"></text>
        </g>
        <g>
            <title>        A = _compressed_sparse_stack(blocks[:, 0], 0) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="210" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="223.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:632 (bmat) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="232" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="245.50"></text>
        </g>
        <g>
            <title>    return bmat([blocks], format=format, dtype=dtype) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="254" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="267.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:535 (hstack) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="276" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="289.50"></text>
        </g>
        <g>
            <title>        return scipy.sparse.hstack(Xs, format=&apos;csr&apos;) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="298" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="311.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:41 (_hstack) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="320" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="333.50"></text>
        </g>
        <g>
            <title>        return _hstack(np.fromiter(embeddings_iter, dtype=&apos;object&apos;)) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="342" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="355.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:255 (transform) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="364" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="377.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="386" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="399.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="408" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="421.50"></text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="430" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="443.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="452" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="465.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="474" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="487.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="496" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="509.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="518" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="531.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="540" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="553.50"></text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="562" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="575.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="584" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="597.50"></text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="606" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="619.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="628" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="641.50"></text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="650" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="663.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="672" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="685.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="694" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="707.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="716" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="729.50"></text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="738" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="751.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="760" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="773.50"></text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="782" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="795.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="804" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="817.50"></text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="826" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="839.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="848" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="861.50"></text>
        </g>
        <g>
            <title>        self.results = batch() (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="870" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="883.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="892" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="905.50"></text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="914" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="927.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="936" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="949.50"></text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="958" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="971.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="980" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="993.50"></text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1002" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1015.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1024" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1037.50"></text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1046" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1059.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1068" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1081.50"></text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1090" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1103.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1112" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1125.50"></text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1134" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1147.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1156" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1169.50"></text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1178" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1191.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1200" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1213.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1222" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1235.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1244" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1257.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1266" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1279.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1288" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1301.50"></text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1310" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1323.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1332" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1345.50"></text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1354" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1367.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1376" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1389.50"></text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1398" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1411.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1420" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1433.50"></text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1442" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1455.50"></text>
        </g>
        <g>
            <title>estimators.py:166 (&lt;module&gt;) (37,695,104 bytes, 0.51%)</title>
            <rect x="0.0000%" y="1464" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="0" fg:w="37695104"/>
            <text x="0.2500%" y="1477.50"></text>
        </g>
        <g>
            <title>&lt;__array_function__ internals&gt;:200 (concatenate) (47,692,136 bytes, 0.65%)</title>
            <rect x="0.0000%" y="144" width="0.6496%" height="21" fill="rgb(255,237,237)" fg:x="0" fg:w="47692136"/>
            <text x="0.2500%" y="157.50"></text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (2,048,293,792 bytes, 27.90%)</title>
            <rect x="0.6496%" y="694" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="47692136" fg:w="2048293792"/>
            <text x="0.8996%" y="707.50">            if self.dispatch_one..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (2,048,293,792 bytes, 27.90%)</title>
            <rect x="0.6496%" y="716" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="47692136" fg:w="2048293792"/>
            <text x="0.8996%" y="729.50">/home/pedro/mestrado/biomal_repo/..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (2,048,293,792 bytes, 27.90%)</title>
            <rect x="0.6496%" y="738" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="47692136" fg:w="2048293792"/>
            <text x="0.8996%" y="751.50">        return super().__call__(..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (2,048,293,792 bytes, 27.90%)</title>
            <rect x="0.6496%" y="760" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="47692136" fg:w="2048293792"/>
            <text x="0.8996%" y="773.50">/home/pedro/mestrado/biomal_repo/..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (2,048,293,792 bytes, 27.90%)</title>
            <rect x="0.6496%" y="782" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="47692136" fg:w="2048293792"/>
            <text x="0.8996%" y="795.50">            return Parallel(n_jo..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (2,048,293,792 bytes, 27.90%)</title>
            <rect x="0.6496%" y="804" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="47692136" fg:w="2048293792"/>
            <text x="0.8996%" y="817.50">/home/pedro/mestrado/biomal_repo/..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (2,048,293,792 bytes, 27.90%)</title>
            <rect x="0.6496%" y="826" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="47692136" fg:w="2048293792"/>
            <text x="0.8996%" y="839.50">        result = self._fit_trans..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (2,048,293,792 bytes, 27.90%)</title>
            <rect x="0.6496%" y="848" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="47692136" fg:w="2048293792"/>
            <text x="0.8996%" y="861.50">/home/pedro/mestrado/biomal_repo/..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (2,048,293,792 bytes, 27.90%)</title>
            <rect x="0.6496%" y="870" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="47692136" fg:w="2048293792"/>
            <text x="0.8996%" y="883.50">        data_to_wrap = f(self, X..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (2,048,293,792 bytes, 27.90%)</title>
            <rect x="0.6496%" y="892" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="47692136" fg:w="2048293792"/>
            <text x="0.8996%" y="905.50">/home/pedro/mestrado/biomal_repo/..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (2,048,293,792 bytes, 27.90%)</title>
            <rect x="0.6496%" y="914" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="47692136" fg:w="2048293792"/>
            <text x="0.8996%" y="927.50">            res = transformer.fi..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (2,048,293,792 bytes, 27.90%)</title>
            <rect x="0.6496%" y="936" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="47692136" fg:w="2048293792"/>
            <text x="0.8996%" y="949.50">/home/pedro/mestrado/biomal_repo/..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (2,048,293,792 bytes, 27.90%)</title>
            <rect x="0.6496%" y="958" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="47692136" fg:w="2048293792"/>
            <text x="0.8996%" y="971.50">        return self.func(*args, ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (2,048,293,792 bytes, 27.90%)</title>
            <rect x="0.6496%" y="980" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="47692136" fg:w="2048293792"/>
            <text x="0.8996%" y="993.50">/home/pedro/mestrado/biomal_repo/..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (2,048,293,792 bytes, 27.90%)</title>
            <rect x="0.6496%" y="1002" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="47692136" fg:w="2048293792"/>
            <text x="0.8996%" y="1015.50">                new_X, fitted_tr..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (2,048,293,792 bytes, 27.90%)</title>
            <rect x="0.6496%" y="1024" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="47692136" fg:w="2048293792"/>
            <text x="0.8996%" y="1037.50">/home/pedro/mestrado/biomal_repo/..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (2,048,293,792 bytes, 27.90%)</title>
            <rect x="0.6496%" y="1046" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="47692136" fg:w="2048293792"/>
            <text x="0.8996%" y="1059.50">        Xt, yt = self._fit(X, y,..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (2,048,293,792 bytes, 27.90%)</title>
            <rect x="0.6496%" y="1068" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="47692136" fg:w="2048293792"/>
            <text x="0.8996%" y="1081.50">/home/pedro/mestrado/biomal_repo/..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (2,048,293,792 bytes, 27.90%)</title>
            <rect x="0.6496%" y="1090" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="47692136" fg:w="2048293792"/>
            <text x="0.8996%" y="1103.50">    cascade = cascade_weak_label..</text>
        </g>
        <g>
            <title>estimators.py:166 (&lt;module&gt;) (2,048,293,792 bytes, 27.90%)</title>
            <rect x="0.6496%" y="1112" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="47692136" fg:w="2048293792"/>
            <text x="0.8996%" y="1125.50">estimators.py:166 (&lt;module&gt;)</text>
        </g>
        <g>
            <title>&lt;__array_function__ internals&gt;:200 (dot) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="144" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="157.50">&lt;__array_function__ internals&gt;:200 (dot)</text>
        </g>
        <g>
            <title>    U = np.dot(Q, Uhat) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="166" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="179.50">    U = np.dot(Q, Uhat)</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/extmath.py:461 (randomized_svd) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="188" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="201.50">/home/pedro/mestrado/biomal_repo/scripts/cascade..</text>
        </g>
        <g>
            <title>            U, Sigma, VT = randomized_svd( (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="210" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="223.50">            U, Sigma, VT = randomized_svd(..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/decomposition/_truncated_svd.py:241 (fit_transform) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="232" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="245.50">/home/pedro/mestrado/biomal_repo/scripts/cascade..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="254" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="267.50">        data_to_wrap = f(self, X, *args, **kwar..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="276" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="289.50">/home/pedro/mestrado/biomal_repo/scripts/cascade..</text>
        </g>
        <g>
            <title>                return last_step.fit_transform(Xt, y, **fit_params_last_step) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="298" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="311.50">                return last_step.fit_transform(..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:445 (fit_transform) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="320" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="333.50">/home/pedro/mestrado/biomal_repo/scripts/cascade..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="342" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="355.50">            res = transformer.fit_transform(X, ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="364" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="377.50">/home/pedro/mestrado/biomal_repo/scripts/cascade..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="386" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="399.50">            return self.function(*args, **kwarg..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="408" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="421.50">/home/pedro/mestrado/biomal_repo/scripts/cascade..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="430" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="443.50">            return [func(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="452" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="465.50">/home/pedro/mestrado/biomal_repo/scripts/cascade..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="474" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="487.50">            return [func(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="496" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="509.50">/home/pedro/mestrado/biomal_repo/scripts/cascade..</text>
        </g>
        <g>
            <title>        self.results = batch() (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="518" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="531.50">        self.results = batch()..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="540" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="553.50">/home/pedro/mestrado/biomal_repo/scripts/cascade..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="562" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="575.50">        result = ImmediateResult(func)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="584" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="597.50">/home/pedro/mestrado/biomal_repo/scripts/cascade..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="606" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="619.50">            job = self._backend.apply_async(bat..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="628" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="641.50">/home/pedro/mestrado/biomal_repo/scripts/cascade..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="650" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="663.50">                self._dispatch(tasks)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (2,906,831,952 bytes, 39.59%)</title>
            <rect x="0.6496%" y="672" width="39.5932%" height="21" fill="rgb(255,155,155)" fg:x="47692136" fg:w="2906831952"/>
            <text x="0.8996%" y="685.50">/home/pedro/mestrado/biomal_repo/scripts/cascade..</text>
        </g>
        <g>
            <title>            while self.dispatch_one_batch(iterator): (858,538,160 bytes, 11.69%)</title>
            <rect x="28.5489%" y="694" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="2095985928" fg:w="858538160"/>
            <text x="28.7989%" y="707.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1088 (__call__) (858,538,160 bytes, 11.69%)</title>
            <rect x="28.5489%" y="716" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="2095985928" fg:w="858538160"/>
            <text x="28.7989%" y="729.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (858,538,160 bytes, 11.69%)</title>
            <rect x="28.5489%" y="738" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="2095985928" fg:w="858538160"/>
            <text x="28.7989%" y="751.50">        ret..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (858,538,160 bytes, 11.69%)</title>
            <rect x="28.5489%" y="760" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="2095985928" fg:w="858538160"/>
            <text x="28.7989%" y="773.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (858,538,160 bytes, 11.69%)</title>
            <rect x="28.5489%" y="782" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="2095985928" fg:w="858538160"/>
            <text x="28.7989%" y="795.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (858,538,160 bytes, 11.69%)</title>
            <rect x="28.5489%" y="804" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="2095985928" fg:w="858538160"/>
            <text x="28.7989%" y="817.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (858,538,160 bytes, 11.69%)</title>
            <rect x="28.5489%" y="826" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="2095985928" fg:w="858538160"/>
            <text x="28.7989%" y="839.50">        res..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (858,538,160 bytes, 11.69%)</title>
            <rect x="28.5489%" y="848" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="2095985928" fg:w="858538160"/>
            <text x="28.7989%" y="861.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (858,538,160 bytes, 11.69%)</title>
            <rect x="28.5489%" y="870" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="2095985928" fg:w="858538160"/>
            <text x="28.7989%" y="883.50">        dat..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (858,538,160 bytes, 11.69%)</title>
            <rect x="28.5489%" y="892" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="2095985928" fg:w="858538160"/>
            <text x="28.7989%" y="905.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (858,538,160 bytes, 11.69%)</title>
            <rect x="28.5489%" y="914" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="2095985928" fg:w="858538160"/>
            <text x="28.7989%" y="927.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (858,538,160 bytes, 11.69%)</title>
            <rect x="28.5489%" y="936" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="2095985928" fg:w="858538160"/>
            <text x="28.7989%" y="949.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (858,538,160 bytes, 11.69%)</title>
            <rect x="28.5489%" y="958" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="2095985928" fg:w="858538160"/>
            <text x="28.7989%" y="971.50">        ret..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (858,538,160 bytes, 11.69%)</title>
            <rect x="28.5489%" y="980" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="2095985928" fg:w="858538160"/>
            <text x="28.7989%" y="993.50">/home/pedro/..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (858,538,160 bytes, 11.69%)</title>
            <rect x="28.5489%" y="1002" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="2095985928" fg:w="858538160"/>
            <text x="28.7989%" y="1015.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (858,538,160 bytes, 11.69%)</title>
            <rect x="28.5489%" y="1024" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="2095985928" fg:w="858538160"/>
            <text x="28.7989%" y="1037.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (858,538,160 bytes, 11.69%)</title>
            <rect x="28.5489%" y="1046" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="2095985928" fg:w="858538160"/>
            <text x="28.7989%" y="1059.50">        Xt,..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (858,538,160 bytes, 11.69%)</title>
            <rect x="28.5489%" y="1068" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="2095985928" fg:w="858538160"/>
            <text x="28.7989%" y="1081.50">/home/pedro/..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (858,538,160 bytes, 11.69%)</title>
            <rect x="28.5489%" y="1090" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="2095985928" fg:w="858538160"/>
            <text x="28.7989%" y="1103.50">    cascade..</text>
        </g>
        <g>
            <title>estimators.py:166 (&lt;module&gt;) (858,538,160 bytes, 11.69%)</title>
            <rect x="28.5489%" y="1112" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="2095985928" fg:w="858538160"/>
            <text x="28.7989%" y="1125.50">estimators.p..</text>
        </g>
        <g>
            <title>from . import _iterative (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="474" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="487.50">from . import _iterative</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_isolve/iterative.py:9 (&lt;module&gt;) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="496" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="509.50">/home/pedro/mestrado/biomal_repo/s..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="518" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="531.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="540" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="553.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="562" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="575.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="584" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="597.50">&lt;frozen importlib._bootstrap_exter..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="606" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="619.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="628" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="641.50">&lt;frozen importlib._bootstrap&gt;:688 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="650" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="663.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="672" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="685.50">&lt;frozen importlib._bootstrap&gt;:1006..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="694" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="707.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="716" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="729.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title>from .iterative import * (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="738" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="751.50">from .iterative import *</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_isolve/__init__.py:4 (&lt;module&gt;) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="760" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="773.50">/home/pedro/mestrado/biomal_repo/s..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="782" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="795.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="804" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="817.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="826" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="839.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="848" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="861.50">&lt;frozen importlib._bootstrap_exter..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="870" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="883.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="892" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="905.50">&lt;frozen importlib._bootstrap&gt;:688 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="914" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="927.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="936" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="949.50">&lt;frozen importlib._bootstrap&gt;:1006..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="958" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="971.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="980" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="993.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title>from ._isolve import * (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1002" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1015.50">from ._isolve import *</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/__init__.py:120 (&lt;module&gt;) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1024" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1037.50">/home/pedro/mestrado/biomal_repo/s..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1046" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1059.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1068" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1081.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1090" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1103.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1112" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1125.50">&lt;frozen importlib._bootstrap_exter..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1134" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1147.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1156" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1169.50">&lt;frozen importlib._bootstrap&gt;:688 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1178" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1191.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1200" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1213.50">&lt;frozen importlib._bootstrap&gt;:1006..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1222" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1235.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1244" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1257.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title>from scipy.sparse.linalg import LinearOperator (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1266" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1279.50">from scipy.sparse.linalg import L..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/csgraph/_laplacian.py:7 (&lt;module&gt;) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1288" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1301.50">/home/pedro/mestrado/biomal_repo/s..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1310" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1323.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1332" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1345.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1354" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1367.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1376" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1389.50">&lt;frozen importlib._bootstrap_exter..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1398" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1411.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1420" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1433.50">&lt;frozen importlib._bootstrap&gt;:688 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1442" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1455.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1464" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1477.50">&lt;frozen importlib._bootstrap&gt;:1006..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1486" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1499.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1508" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1521.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title>from ._laplacian import laplacian (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1530" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1543.50">from ._laplacian import laplacian..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/csgraph/__init__.py:185 (&lt;module&gt;) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1552" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1565.50">/home/pedro/mestrado/biomal_repo/s..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1574" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1587.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1596" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1609.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1618" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1631.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1640" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1653.50">&lt;frozen importlib._bootstrap_exter..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1662" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1675.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1684" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1697.50">&lt;frozen importlib._bootstrap&gt;:688 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1706" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1719.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1728" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1741.50">&lt;frozen importlib._bootstrap&gt;:1006..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1750" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1763.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1772" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1785.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1794" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1807.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1816" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1829.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1838" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1851.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1078 (_handle_fromlist) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1860" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1873.50">&lt;frozen importlib._bootstrap&gt;:1078..</text>
        </g>
        <g>
            <title>from . import csgraph (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1882" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1895.50">from . import csgraph</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/__init__.py:283 (&lt;module&gt;) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1904" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1917.50">/home/pedro/mestrado/biomal_repo/s..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1926" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1939.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1948" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1961.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1970" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="1983.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="1992" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2005.50">&lt;frozen importlib._bootstrap_exter..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2014" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2027.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2036" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2049.50">&lt;frozen importlib._bootstrap&gt;:688 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2058" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2071.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2080" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2093.50">&lt;frozen importlib._bootstrap&gt;:1006..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2102" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2115.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2124" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2137.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title>from scipy.sparse import issparse (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2146" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2159.50">from scipy.sparse import issparse..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/__init__.py:17 (&lt;module&gt;) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2168" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2181.50">/home/pedro/mestrado/biomal_repo/s..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2190" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2203.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2212" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2225.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2234" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2247.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2256" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2269.50">&lt;frozen importlib._bootstrap_exter..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2278" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2291.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2300" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2313.50">&lt;frozen importlib._bootstrap&gt;:688 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2322" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2335.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2344" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2357.50">&lt;frozen importlib._bootstrap&gt;:1006..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2366" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2379.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2388" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2401.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title>from .utils import _IS_32BIT (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2410" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2423.50">from .utils import _IS_32BIT..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:17 (&lt;module&gt;) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2432" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2445.50">/home/pedro/mestrado/biomal_repo/s..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2454" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2467.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2476" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2489.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2498" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2511.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2520" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2533.50">&lt;frozen importlib._bootstrap_exter..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2542" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2555.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2564" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2577.50">&lt;frozen importlib._bootstrap&gt;:688 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2586" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2599.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2608" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2621.50">&lt;frozen importlib._bootstrap&gt;:1006..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2630" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2643.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2652" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2665.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title>    from .base import clone (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2674" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2687.50">    from .base import clone..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/__init__.py:82 (&lt;module&gt;) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2696" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2709.50">/home/pedro/mestrado/biomal_repo/s..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2718" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2731.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2740" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2753.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2762" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2775.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2784" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2797.50">&lt;frozen importlib._bootstrap_exter..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2806" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2819.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2828" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2841.50">&lt;frozen importlib._bootstrap&gt;:688 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2850" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2863.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2872" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2885.50">&lt;frozen importlib._bootstrap&gt;:1006..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2894" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2907.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2916" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2929.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2938" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2951.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2960" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2973.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="2982" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="2995.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:992 (_find_and_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="3004" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="3017.50">&lt;frozen importlib._bootstrap&gt;:992 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="3026" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="3039.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="3048" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="3061.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title>from sklearn.datasets import load_iris (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="3070" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="3083.50">from sklearn.datasets import load..</text>
        </g>
        <g>
            <title>estimators.py:6 (&lt;module&gt;) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="40.2428%" y="3092" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2113969034"/>
            <text x="40.4928%" y="3105.50">estimators.py:6 (&lt;module&gt;)</text>
        </g>
        <g>
            <title> (2,114,149,633 bytes, 28.80%)</title>
            <rect x="40.2428%" y="386" width="28.7963%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2114149633"/>
            <text x="40.4928%" y="399.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,114,149,633 bytes, 28.80%)</title>
            <rect x="40.2428%" y="408" width="28.7963%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2114149633"/>
            <text x="40.4928%" y="421.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,114,149,633 bytes, 28.80%)</title>
            <rect x="40.2428%" y="430" width="28.7963%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2114149633"/>
            <text x="40.4928%" y="443.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1078 (_handle_fromlist) (2,114,149,633 bytes, 28.80%)</title>
            <rect x="40.2428%" y="452" width="28.7963%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2114149633"/>
            <text x="40.4928%" y="465.50">&lt;frozen importlib._bootstrap&gt;:1078..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:1176 (create_module) (2,114,358,216 bytes, 28.80%)</title>
            <rect x="40.2428%" y="188" width="28.7991%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2114358216"/>
            <text x="40.4928%" y="201.50">&lt;frozen importlib._bootstrap_exter..</text>
        </g>
        <g>
            <title> (2,114,358,216 bytes, 28.80%)</title>
            <rect x="40.2428%" y="210" width="28.7991%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2114358216"/>
            <text x="40.4928%" y="223.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:571 (module_from_spec) (2,114,358,216 bytes, 28.80%)</title>
            <rect x="40.2428%" y="232" width="28.7991%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2114358216"/>
            <text x="40.4928%" y="245.50">&lt;frozen importlib._bootstrap&gt;:571 ..</text>
        </g>
        <g>
            <title> (2,114,358,216 bytes, 28.80%)</title>
            <rect x="40.2428%" y="254" width="28.7991%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2114358216"/>
            <text x="40.4928%" y="267.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:674 (_load_unlocked) (2,114,358,216 bytes, 28.80%)</title>
            <rect x="40.2428%" y="276" width="28.7991%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2114358216"/>
            <text x="40.4928%" y="289.50">&lt;frozen importlib._bootstrap&gt;:674 ..</text>
        </g>
        <g>
            <title> (2,114,358,216 bytes, 28.80%)</title>
            <rect x="40.2428%" y="298" width="28.7991%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2114358216"/>
            <text x="40.4928%" y="311.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,114,358,216 bytes, 28.80%)</title>
            <rect x="40.2428%" y="320" width="28.7991%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2114358216"/>
            <text x="40.4928%" y="333.50">&lt;frozen importlib._bootstrap&gt;:1006..</text>
        </g>
        <g>
            <title> (2,114,358,216 bytes, 28.80%)</title>
            <rect x="40.2428%" y="342" width="28.7991%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2114358216"/>
            <text x="40.4928%" y="355.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,114,358,216 bytes, 28.80%)</title>
            <rect x="40.2428%" y="364" width="28.7991%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2114358216"/>
            <text x="40.4928%" y="377.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,115,767,712 bytes, 28.82%)</title>
            <rect x="40.2428%" y="144" width="28.8183%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2115767712"/>
            <text x="40.4928%" y="157.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,115,767,712 bytes, 28.82%)</title>
            <rect x="40.2428%" y="166" width="28.8183%" height="21" fill="rgb(255,169,169)" fg:x="2954524088" fg:w="2115767712"/>
            <text x="40.4928%" y="179.50"></text>
        </g>
        <g>
            <title> (5,080,369,441 bytes, 69.20%)</title>
            <rect x="0.0000%" y="122" width="69.1984%" height="21" fill="rgb(255,125,125)" fg:x="0" fg:w="5080369441"/>
            <text x="0.2500%" y="135.50"></text>
        </g>
        <g>
            <title>    indices = np.empty(data.size, dtype=idx_dtype) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="122" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="135.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:424 (_compressed_sparse_stack) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="144" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="157.50"></text>
        </g>
        <g>
            <title>        A = _compressed_sparse_stack(blocks[:, 0], 0) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="166" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="179.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:632 (bmat) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="188" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="201.50"></text>
        </g>
        <g>
            <title>    return bmat([blocks], format=format, dtype=dtype) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="210" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="223.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:535 (hstack) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="232" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="245.50"></text>
        </g>
        <g>
            <title>        return scipy.sparse.hstack(Xs, format=&apos;csr&apos;) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="254" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="267.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:41 (_hstack) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="276" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="289.50"></text>
        </g>
        <g>
            <title>        return _hstack(np.fromiter(embeddings_iter, dtype=&apos;object&apos;)) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="298" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="311.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:255 (transform) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="320" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="333.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="342" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="355.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="364" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="377.50"></text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="386" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="399.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="408" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="421.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="430" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="443.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="452" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="465.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="474" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="487.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="496" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="509.50"></text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="518" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="531.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="540" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="553.50"></text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="562" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="575.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="584" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="597.50"></text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="606" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="619.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="628" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="641.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="650" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="663.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="672" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="685.50"></text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="694" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="707.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="716" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="729.50"></text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="738" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="751.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="760" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="773.50"></text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="782" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="795.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="804" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="817.50"></text>
        </g>
        <g>
            <title>        self.results = batch() (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="826" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="839.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="848" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="861.50"></text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="870" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="883.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="892" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="905.50"></text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="914" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="927.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="936" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="949.50"></text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="958" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="971.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="980" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="993.50"></text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="1002" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="1015.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="1024" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="1037.50"></text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="1046" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="1059.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="1068" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="1081.50"></text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="1090" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="1103.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="1112" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="1125.50"></text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="1134" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="1147.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="1156" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="1169.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="1178" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="1191.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="1200" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="1213.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="1222" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="1235.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="1244" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="1257.50"></text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="1266" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="1279.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="1288" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="1301.50"></text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="1310" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="1323.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="1332" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="1345.50"></text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="1354" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="1367.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="1376" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="1389.50"></text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="1398" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="1411.50"></text>
        </g>
        <g>
            <title>estimators.py:166 (&lt;module&gt;) (18,847,600 bytes, 0.26%)</title>
            <rect x="69.1984%" y="1420" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="5080369441" fg:w="18847600"/>
            <text x="69.4484%" y="1433.50"></text>
        </g>
        <g>
            <title>            Q, _ = linalg.lu(safe_sparse_dot(A, Q), permute_l=True) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="166" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="179.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/extmath.py:274 (randomized_range_finder) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="188" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="201.50">/home/pedro..</text>
        </g>
        <g>
            <title>    Q = randomized_range_finder( (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="210" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="223.50">    Q = ra..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/extmath.py:446 (randomized_svd) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="232" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="245.50">/home/pedro..</text>
        </g>
        <g>
            <title>            U, Sigma, VT = randomized_svd( (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="254" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="267.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/decomposition/_truncated_svd.py:241 (fit_transform) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="276" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="289.50">/home/pedro..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="298" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="311.50">        da..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="320" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="333.50">/home/pedro..</text>
        </g>
        <g>
            <title>                return last_step.fit_transform(Xt, y, **fit_params_last_step) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="342" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="355.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:445 (fit_transform) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="364" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="377.50">/home/pedro..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="386" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="399.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="408" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="421.50">/home/pedro..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="430" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="443.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="452" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="465.50">/home/pedro..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="474" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="487.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="496" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="509.50">/home/pedro..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="518" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="531.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="540" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="553.50">/home/pedro..</text>
        </g>
        <g>
            <title>        self.results = batch() (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="562" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="575.50">        se..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="584" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="597.50">/home/pedro..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="606" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="619.50">        re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="628" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="641.50">/home/pedro..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="650" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="663.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="672" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="685.50">/home/pedro..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="694" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="707.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="716" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="729.50">/home/pedro..</text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="738" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="751.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="760" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="773.50">/home/pedro..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="782" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="795.50">        re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="804" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="817.50">/home/pedro..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="826" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="839.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="848" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="861.50">/home/pedro..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="870" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="883.50">        re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="892" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="905.50">/home/pedro..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="914" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="927.50">        da..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="936" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="949.50">/home/pedro..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="958" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="971.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="980" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="993.50">/home/pedro..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="1002" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="1015.50">        re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="1024" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="1037.50">/home/pedro..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="1046" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="1059.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="1068" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="1081.50">/home/pedro..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="1090" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="1103.50">        Xt..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="1112" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="1125.50">/home/pedro..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="1134" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="1147.50">    cascad..</text>
        </g>
        <g>
            <title>estimators.py:166 (&lt;module&gt;) (806,550,872 bytes, 10.99%)</title>
            <rect x="69.4551%" y="1156" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="806550872"/>
            <text x="69.7051%" y="1169.50">estimators...</text>
        </g>
        <g>
            <title>    p, l, u, info = flu(a1, permute_l=permute_l, overwrite_a=overwrite_a) (808,774,824 bytes, 11.02%)</title>
            <rect x="69.4551%" y="122" width="11.0161%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="808774824"/>
            <text x="69.7051%" y="135.50">    p, l, u..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/linalg/_decomp_lu.py:220 (lu) (808,774,824 bytes, 11.02%)</title>
            <rect x="69.4551%" y="144" width="11.0161%" height="21" fill="rgb(255,200,200)" fg:x="5099217041" fg:w="808774824"/>
            <text x="69.7051%" y="157.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        tree.fit(X, y, sample_weight=curr_sample_weight, check_input=False) (273,411,600 bytes, 3.72%)</title>
            <rect x="80.5486%" y="210" width="3.7241%" height="21" fill="rgb(255,221,221)" fg:x="5913672729" fg:w="273411600"/>
            <text x="80.7986%" y="223.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:184 (_parallel_build_trees) (273,411,600 bytes, 3.72%)</title>
            <rect x="80.5486%" y="232" width="3.7241%" height="21" fill="rgb(255,221,221)" fg:x="5913672729" fg:w="273411600"/>
            <text x="80.7986%" y="245.50">/h..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (273,411,600 bytes, 3.72%)</title>
            <rect x="80.5486%" y="254" width="3.7241%" height="21" fill="rgb(255,221,221)" fg:x="5913672729" fg:w="273411600"/>
            <text x="80.7986%" y="267.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (273,411,600 bytes, 3.72%)</title>
            <rect x="80.5486%" y="276" width="3.7241%" height="21" fill="rgb(255,221,221)" fg:x="5913672729" fg:w="273411600"/>
            <text x="80.7986%" y="289.50">/h..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (273,411,600 bytes, 3.72%)</title>
            <rect x="80.5486%" y="298" width="3.7241%" height="21" fill="rgb(255,221,221)" fg:x="5913672729" fg:w="273411600"/>
            <text x="80.7986%" y="311.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (273,411,600 bytes, 3.72%)</title>
            <rect x="80.5486%" y="320" width="3.7241%" height="21" fill="rgb(255,221,221)" fg:x="5913672729" fg:w="273411600"/>
            <text x="80.7986%" y="333.50">/h..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (273,411,600 bytes, 3.72%)</title>
            <rect x="80.5486%" y="342" width="3.7241%" height="21" fill="rgb(255,221,221)" fg:x="5913672729" fg:w="273411600"/>
            <text x="80.7986%" y="355.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (273,411,600 bytes, 3.72%)</title>
            <rect x="80.5486%" y="364" width="3.7241%" height="21" fill="rgb(255,221,221)" fg:x="5913672729" fg:w="273411600"/>
            <text x="80.7986%" y="377.50">/h..</text>
        </g>
        <g>
            <title>        self.results = batch() (273,411,600 bytes, 3.72%)</title>
            <rect x="80.5486%" y="386" width="3.7241%" height="21" fill="rgb(255,221,221)" fg:x="5913672729" fg:w="273411600"/>
            <text x="80.7986%" y="399.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (273,411,600 bytes, 3.72%)</title>
            <rect x="80.5486%" y="408" width="3.7241%" height="21" fill="rgb(255,221,221)" fg:x="5913672729" fg:w="273411600"/>
            <text x="80.7986%" y="421.50">/h..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (273,411,600 bytes, 3.72%)</title>
            <rect x="80.5486%" y="430" width="3.7241%" height="21" fill="rgb(255,221,221)" fg:x="5913672729" fg:w="273411600"/>
            <text x="80.7986%" y="443.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (273,411,600 bytes, 3.72%)</title>
            <rect x="80.5486%" y="452" width="3.7241%" height="21" fill="rgb(255,221,221)" fg:x="5913672729" fg:w="273411600"/>
            <text x="80.7986%" y="465.50">/h..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (273,411,600 bytes, 3.72%)</title>
            <rect x="80.5486%" y="474" width="3.7241%" height="21" fill="rgb(255,221,221)" fg:x="5913672729" fg:w="273411600"/>
            <text x="80.7986%" y="487.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (273,411,600 bytes, 3.72%)</title>
            <rect x="80.5486%" y="496" width="3.7241%" height="21" fill="rgb(255,221,221)" fg:x="5913672729" fg:w="273411600"/>
            <text x="80.7986%" y="509.50">/h..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (273,411,600 bytes, 3.72%)</title>
            <rect x="80.5486%" y="518" width="3.7241%" height="21" fill="rgb(255,221,221)" fg:x="5913672729" fg:w="273411600"/>
            <text x="80.7986%" y="531.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (273,411,600 bytes, 3.72%)</title>
            <rect x="80.5486%" y="540" width="3.7241%" height="21" fill="rgb(255,221,221)" fg:x="5913672729" fg:w="273411600"/>
            <text x="80.7986%" y="553.50">/h..</text>
        </g>
        <g>
            <title>            while self.dispatch_one_batch(iterator): (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="562" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="575.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1088 (__call__) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="584" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="597.50">/h..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="606" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="619.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="628" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="641.50">/h..</text>
        </g>
        <g>
            <title>            trees = Parallel( (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="650" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="663.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:473 (fit) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="672" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="685.50">/h..</text>
        </g>
        <g>
            <title>        self.estimator_.fit(X, y) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="694" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="707.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:216 (fit) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="716" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="729.50">/h..</text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="738" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="751.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="760" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="773.50">/h..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="782" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="795.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="804" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="817.50">/h..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="826" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="839.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="848" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="861.50">/h..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="870" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="883.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="892" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="905.50">/h..</text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="914" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="927.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="936" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="949.50">/h..</text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="958" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="971.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="980" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="993.50">/h..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1002" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1015.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1024" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1037.50">/h..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1046" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1059.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1068" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1081.50">/h..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1090" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1103.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1112" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1125.50">/h..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1134" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1147.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1156" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1169.50">/h..</text>
        </g>
        <g>
            <title>        self.results = batch() (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1178" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1191.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1200" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1213.50">/h..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1222" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1235.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1244" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1257.50">/h..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1266" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1279.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1288" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1301.50">/h..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1310" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1323.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1332" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1345.50">/h..</text>
        </g>
        <g>
            <title>            while self.dispatch_one_batch(iterator): (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1354" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1367.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1088 (__call__) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1376" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1389.50">/h..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1398" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1411.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1420" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1433.50">/h..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1442" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1455.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1464" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1477.50">/h..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1486" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1499.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1508" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1521.50">/h..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1530" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1543.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1552" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1565.50">/h..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1574" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1587.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1596" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1609.50">/h..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1618" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1631.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1640" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1653.50">/h..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1662" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1675.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1684" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1697.50">/h..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1706" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1719.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1728" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1741.50">/h..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1750" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1763.50"> ..</text>
        </g>
        <g>
            <title>estimators.py:166 (&lt;module&gt;) (270,709,320 bytes, 3.69%)</title>
            <rect x="80.5854%" y="1772" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="5916375009" fg:w="270709320"/>
            <text x="80.8354%" y="1785.50">es..</text>
        </g>
        <g>
            <title>        builder.build(self.tree_, X, y, sample_weight) (1,037,994,744 bytes, 14.14%)</title>
            <rect x="80.5486%" y="122" width="14.1383%" height="21" fill="rgb(255,193,193)" fg:x="5913672729" fg:w="1037994744"/>
            <text x="80.7986%" y="135.50">        builde..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/tree/_classes.py:379 (fit) (1,037,994,744 bytes, 14.14%)</title>
            <rect x="80.5486%" y="144" width="14.1383%" height="21" fill="rgb(255,193,193)" fg:x="5913672729" fg:w="1037994744"/>
            <text x="80.7986%" y="157.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>        super().fit( (1,037,994,744 bytes, 14.14%)</title>
            <rect x="80.5486%" y="166" width="14.1383%" height="21" fill="rgb(255,193,193)" fg:x="5913672729" fg:w="1037994744"/>
            <text x="80.7986%" y="179.50">        super(..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/tree/_classes.py:889 (fit) (1,037,994,744 bytes, 14.14%)</title>
            <rect x="80.5486%" y="188" width="14.1383%" height="21" fill="rgb(255,193,193)" fg:x="5913672729" fg:w="1037994744"/>
            <text x="80.7986%" y="201.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>        tree.fit(X, y, sample_weight=sample_weight, check_input=False) (764,583,144 bytes, 10.41%)</title>
            <rect x="84.2726%" y="210" width="10.4142%" height="21" fill="rgb(255,201,201)" fg:x="6187084329" fg:w="764583144"/>
            <text x="84.5226%" y="223.50">        tr..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:186 (_parallel_build_trees) (764,583,144 bytes, 10.41%)</title>
            <rect x="84.2726%" y="232" width="10.4142%" height="21" fill="rgb(255,201,201)" fg:x="6187084329" fg:w="764583144"/>
            <text x="84.5226%" y="245.50">/home/pedro..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (764,583,144 bytes, 10.41%)</title>
            <rect x="84.2726%" y="254" width="10.4142%" height="21" fill="rgb(255,201,201)" fg:x="6187084329" fg:w="764583144"/>
            <text x="84.5226%" y="267.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (764,583,144 bytes, 10.41%)</title>
            <rect x="84.2726%" y="276" width="10.4142%" height="21" fill="rgb(255,201,201)" fg:x="6187084329" fg:w="764583144"/>
            <text x="84.5226%" y="289.50">/home/pedro..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (764,583,144 bytes, 10.41%)</title>
            <rect x="84.2726%" y="298" width="10.4142%" height="21" fill="rgb(255,201,201)" fg:x="6187084329" fg:w="764583144"/>
            <text x="84.5226%" y="311.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (764,583,144 bytes, 10.41%)</title>
            <rect x="84.2726%" y="320" width="10.4142%" height="21" fill="rgb(255,201,201)" fg:x="6187084329" fg:w="764583144"/>
            <text x="84.5226%" y="333.50">/home/pedro..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (764,583,144 bytes, 10.41%)</title>
            <rect x="84.2726%" y="342" width="10.4142%" height="21" fill="rgb(255,201,201)" fg:x="6187084329" fg:w="764583144"/>
            <text x="84.5226%" y="355.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (764,583,144 bytes, 10.41%)</title>
            <rect x="84.2726%" y="364" width="10.4142%" height="21" fill="rgb(255,201,201)" fg:x="6187084329" fg:w="764583144"/>
            <text x="84.5226%" y="377.50">/home/pedro..</text>
        </g>
        <g>
            <title>        self.results = batch() (764,583,144 bytes, 10.41%)</title>
            <rect x="84.2726%" y="386" width="10.4142%" height="21" fill="rgb(255,201,201)" fg:x="6187084329" fg:w="764583144"/>
            <text x="84.5226%" y="399.50">        se..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (764,583,144 bytes, 10.41%)</title>
            <rect x="84.2726%" y="408" width="10.4142%" height="21" fill="rgb(255,201,201)" fg:x="6187084329" fg:w="764583144"/>
            <text x="84.5226%" y="421.50">/home/pedro..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (764,583,144 bytes, 10.41%)</title>
            <rect x="84.2726%" y="430" width="10.4142%" height="21" fill="rgb(255,201,201)" fg:x="6187084329" fg:w="764583144"/>
            <text x="84.5226%" y="443.50">        re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (764,583,144 bytes, 10.41%)</title>
            <rect x="84.2726%" y="452" width="10.4142%" height="21" fill="rgb(255,201,201)" fg:x="6187084329" fg:w="764583144"/>
            <text x="84.5226%" y="465.50">/home/pedro..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (764,583,144 bytes, 10.41%)</title>
            <rect x="84.2726%" y="474" width="10.4142%" height="21" fill="rgb(255,201,201)" fg:x="6187084329" fg:w="764583144"/>
            <text x="84.5226%" y="487.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (764,583,144 bytes, 10.41%)</title>
            <rect x="84.2726%" y="496" width="10.4142%" height="21" fill="rgb(255,201,201)" fg:x="6187084329" fg:w="764583144"/>
            <text x="84.5226%" y="509.50">/home/pedro..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (764,583,144 bytes, 10.41%)</title>
            <rect x="84.2726%" y="518" width="10.4142%" height="21" fill="rgb(255,201,201)" fg:x="6187084329" fg:w="764583144"/>
            <text x="84.5226%" y="531.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (764,583,144 bytes, 10.41%)</title>
            <rect x="84.2726%" y="540" width="10.4142%" height="21" fill="rgb(255,201,201)" fg:x="6187084329" fg:w="764583144"/>
            <text x="84.5226%" y="553.50">/home/pedro..</text>
        </g>
        <g>
            <title>            while self.dispatch_one_batch(iterator): (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="562" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="575.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1088 (__call__) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="584" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="597.50">/home/pedro..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="606" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="619.50">        re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="628" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="641.50">/home/pedro..</text>
        </g>
        <g>
            <title>            trees = Parallel( (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="650" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="663.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:473 (fit) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="672" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="685.50">/home/pedro..</text>
        </g>
        <g>
            <title>        self.estimator_.fit(X, y) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="694" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="707.50">        se..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:216 (fit) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="716" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="729.50">/home/pedro..</text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="738" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="751.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="760" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="773.50">/home/pedro..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="782" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="795.50">        da..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="804" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="817.50">/home/pedro..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="826" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="839.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="848" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="861.50">/home/pedro..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="870" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="883.50">        re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="892" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="905.50">/home/pedro..</text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="914" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="927.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="936" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="949.50">/home/pedro..</text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="958" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="971.50">        Xt..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="980" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="993.50">/home/pedro..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1002" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1015.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1024" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1037.50">/home/pedro..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1046" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1059.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1068" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1081.50">/home/pedro..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1090" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1103.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1112" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1125.50">/home/pedro..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1134" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1147.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1156" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1169.50">/home/pedro..</text>
        </g>
        <g>
            <title>        self.results = batch() (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1178" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1191.50">        se..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1200" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1213.50">/home/pedro..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1222" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1235.50">        re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1244" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1257.50">/home/pedro..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1266" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1279.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1288" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1301.50">/home/pedro..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1310" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1323.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1332" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1345.50">/home/pedro..</text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1354" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1367.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1376" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1389.50">/home/pedro..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1398" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1411.50">        re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1420" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1433.50">/home/pedro..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1442" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1455.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1464" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1477.50">/home/pedro..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1486" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1499.50">        re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1508" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1521.50">/home/pedro..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1530" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1543.50">        da..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1552" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1565.50">/home/pedro..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1574" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1587.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1596" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1609.50">/home/pedro..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1618" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1631.50">        re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1640" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1653.50">/home/pedro..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1662" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1675.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1684" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1697.50">/home/pedro..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1706" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1719.50">        Xt..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1728" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1741.50">/home/pedro..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1750" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1763.50">    cascad..</text>
        </g>
        <g>
            <title>estimators.py:166 (&lt;module&gt;) (756,929,040 bytes, 10.31%)</title>
            <rect x="84.3769%" y="1772" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="6194738433" fg:w="756929040"/>
            <text x="84.6269%" y="1785.50">estimators...</text>
        </g>
        <g>
            <title>        result = np.zeros((M, n_vecs), (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="122" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="135.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_compressed.py:497 (_mul_multivector) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="144" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="157.50">/hom..</text>
        </g>
        <g>
            <title>                return self._mul_multivector(other) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="166" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="179.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_base.py:532 (_mul_dispatch) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="188" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="201.50">/hom..</text>
        </g>
        <g>
            <title>        return self._mul_dispatch(other) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="210" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="223.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_base.py:630 (__matmul__) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="232" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="245.50">/hom..</text>
        </g>
        <g>
            <title>        ret = a @ b (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="254" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="267.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/extmath.py:189 (safe_sparse_dot) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="276" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="289.50">/hom..</text>
        </g>
        <g>
            <title>            Q, _ = linalg.lu(safe_sparse_dot(A, Q), permute_l=True) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="298" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="311.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/extmath.py:274 (randomized_range_finder) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="320" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="333.50">/hom..</text>
        </g>
        <g>
            <title>    Q = randomized_range_finder( (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="342" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="355.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/extmath.py:446 (randomized_svd) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="364" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="377.50">/hom..</text>
        </g>
        <g>
            <title>            U, Sigma, VT = randomized_svd( (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="386" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="399.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/decomposition/_truncated_svd.py:241 (fit_transform) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="408" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="421.50">/hom..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="430" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="443.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="452" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="465.50">/hom..</text>
        </g>
        <g>
            <title>                return last_step.fit_transform(Xt, y, **fit_params_last_step) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="474" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="487.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:445 (fit_transform) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="496" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="509.50">/hom..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="518" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="531.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="540" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="553.50">/hom..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="562" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="575.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="584" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="597.50">/hom..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="606" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="619.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="628" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="641.50">/hom..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="650" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="663.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="672" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="685.50">/hom..</text>
        </g>
        <g>
            <title>        self.results = batch() (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="694" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="707.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="716" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="729.50">/hom..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="738" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="751.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="760" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="773.50">/hom..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="782" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="795.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="804" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="817.50">/hom..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="826" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="839.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="848" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="861.50">/hom..</text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="870" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="883.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="892" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="905.50">/hom..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="914" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="927.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="936" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="949.50">/hom..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="958" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="971.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="980" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="993.50">/hom..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="1002" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="1015.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="1024" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="1037.50">/hom..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="1046" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="1059.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="1068" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="1081.50">/hom..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="1090" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="1103.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="1112" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="1125.50">/hom..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="1134" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="1147.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="1156" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="1169.50">/hom..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="1178" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="1191.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="1200" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="1213.50">/hom..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="1222" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="1235.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="1244" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="1257.50">/hom..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="1266" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="1279.50">   ..</text>
        </g>
        <g>
            <title>estimators.py:166 (&lt;module&gt;) (386,449,456 bytes, 5.26%)</title>
            <rect x="94.6948%" y="1288" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="6952252337" fg:w="386449456"/>
            <text x="94.9448%" y="1301.50">esti..</text>
        </g>
        <g>
            <title>all (7,341,747,873 bytes, 100%)</title>
            <rect x="0.0000%" y="100" width="100.0000%" height="21" fill="rgb(255,100,100)" fg:x="0" fg:w="7341747873"/>
            <text x="0.2500%" y="113.50"></text>
        </g>
    </svg>
</svg>