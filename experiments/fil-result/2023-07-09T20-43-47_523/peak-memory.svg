<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="3140" onload="init(evt)" viewBox="0 0 1200 3140" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno">
    <!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.-->
    <!--NOTES: -->
    <defs>
        <linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
            <stop stop-color="#eeeeee" offset="5%"/>
            <stop stop-color="#eeeeb0" offset="95%"/>
        </linearGradient>
    </defs>
    <style type="text/css">
text { font-family:monospace; font-size:16px }
#title { text-anchor:middle; font-size:21px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style>
    <script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 16;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script>
    <rect x="0" y="0" width="100%" height="3140" fill="url(#background)"/>
    <text id="title" fill="rgb(0,0,0)" x="50.0000%" y="32.00">Peak Tracked Memory Usage (7032.4 MiB)</text>
    <text id="subtitle" x="50.0000%" y="64.00">Made with the Fil profiler. <a href="https://pythonspeed.com/fil/" style="text-decoration: underline;" target="_parent">Try it on your code!</a></text>
    <text id="details" fill="rgb(0,0,0)" x="10" y="84.00"> </text>
    <text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="32.00">Reset Zoom</text>
    <text id="search" fill="rgb(0,0,0)" x="1190" y="32.00">Search</text>
    <text id="matched" fill="rgb(0,0,0)" x="1190" y="3127.00"> </text>
    <svg id="frames" x="10" width="1180" total_samples="7341747873">
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:216 (fit) (766,039,736 bytes, 10.43%)</title>
            <rect x="0.0879%" y="1178" width="10.4340%" height="21" fill="rgb(255,201,201)" fg:x="6454982" fg:w="766039736"/>
            <text x="0.3379%" y="1191.50">/home/pedro..</text>
        </g>
        <g>
            <title>        self.estimator_.fit(X, y) (766,039,736 bytes, 10.43%)</title>
            <rect x="0.0879%" y="1200" width="10.4340%" height="21" fill="rgb(255,201,201)" fg:x="6454982" fg:w="766039736"/>
            <text x="0.3379%" y="1213.50">        se..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:473 (fit) (765,938,936 bytes, 10.43%)</title>
            <rect x="0.0893%" y="1222" width="10.4327%" height="21" fill="rgb(255,201,201)" fg:x="6555782" fg:w="765938936"/>
            <text x="0.3393%" y="1235.50">/home/pedro..</text>
        </g>
        <g>
            <title>            trees = Parallel( (765,938,936 bytes, 10.43%)</title>
            <rect x="0.0893%" y="1244" width="10.4327%" height="21" fill="rgb(255,201,201)" fg:x="6555782" fg:w="765938936"/>
            <text x="0.3393%" y="1257.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (765,938,936 bytes, 10.43%)</title>
            <rect x="0.0893%" y="1266" width="10.4327%" height="21" fill="rgb(255,201,201)" fg:x="6555782" fg:w="765938936"/>
            <text x="0.3393%" y="1279.50">/home/pedro..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (765,938,936 bytes, 10.43%)</title>
            <rect x="0.0893%" y="1288" width="10.4327%" height="21" fill="rgb(255,201,201)" fg:x="6555782" fg:w="765938936"/>
            <text x="0.3393%" y="1301.50">        re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1088 (__call__) (758,284,832 bytes, 10.33%)</title>
            <rect x="0.1935%" y="1310" width="10.3284%" height="21" fill="rgb(255,201,201)" fg:x="14209886" fg:w="758284832"/>
            <text x="0.4435%" y="1323.50">/home/pedro..</text>
        </g>
        <g>
            <title>            while self.dispatch_one_batch(iterator): (758,284,832 bytes, 10.33%)</title>
            <rect x="0.1935%" y="1332" width="10.3284%" height="21" fill="rgb(255,201,201)" fg:x="14209886" fg:w="758284832"/>
            <text x="0.4435%" y="1345.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (758,284,832 bytes, 10.33%)</title>
            <rect x="0.1935%" y="1354" width="10.3284%" height="21" fill="rgb(255,201,201)" fg:x="14209886" fg:w="758284832"/>
            <text x="0.4435%" y="1367.50">/home/pedro..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (758,284,832 bytes, 10.33%)</title>
            <rect x="0.1935%" y="1376" width="10.3284%" height="21" fill="rgb(255,201,201)" fg:x="14209886" fg:w="758284832"/>
            <text x="0.4435%" y="1389.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (758,284,832 bytes, 10.33%)</title>
            <rect x="0.1935%" y="1398" width="10.3284%" height="21" fill="rgb(255,201,201)" fg:x="14209886" fg:w="758284832"/>
            <text x="0.4435%" y="1411.50">/home/pedro..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (758,284,832 bytes, 10.33%)</title>
            <rect x="0.1935%" y="1420" width="10.3284%" height="21" fill="rgb(255,201,201)" fg:x="14209886" fg:w="758284832"/>
            <text x="0.4435%" y="1433.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (758,284,832 bytes, 10.33%)</title>
            <rect x="0.1935%" y="1442" width="10.3284%" height="21" fill="rgb(255,201,201)" fg:x="14209886" fg:w="758284832"/>
            <text x="0.4435%" y="1455.50">/home/pedro..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (758,284,832 bytes, 10.33%)</title>
            <rect x="0.1935%" y="1464" width="10.3284%" height="21" fill="rgb(255,201,201)" fg:x="14209886" fg:w="758284832"/>
            <text x="0.4435%" y="1477.50">        re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (758,284,832 bytes, 10.33%)</title>
            <rect x="0.1935%" y="1486" width="10.3284%" height="21" fill="rgb(255,201,201)" fg:x="14209886" fg:w="758284832"/>
            <text x="0.4435%" y="1499.50">/home/pedro..</text>
        </g>
        <g>
            <title>        self.results = batch() (758,284,832 bytes, 10.33%)</title>
            <rect x="0.1935%" y="1508" width="10.3284%" height="21" fill="rgb(255,201,201)" fg:x="14209886" fg:w="758284832"/>
            <text x="0.4435%" y="1521.50">        se..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (758,284,832 bytes, 10.33%)</title>
            <rect x="0.1935%" y="1530" width="10.3284%" height="21" fill="rgb(255,201,201)" fg:x="14209886" fg:w="758284832"/>
            <text x="0.4435%" y="1543.50">/home/pedro..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (758,284,832 bytes, 10.33%)</title>
            <rect x="0.1935%" y="1552" width="10.3284%" height="21" fill="rgb(255,201,201)" fg:x="14209886" fg:w="758284832"/>
            <text x="0.4435%" y="1565.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (758,284,832 bytes, 10.33%)</title>
            <rect x="0.1935%" y="1574" width="10.3284%" height="21" fill="rgb(255,201,201)" fg:x="14209886" fg:w="758284832"/>
            <text x="0.4435%" y="1587.50">/home/pedro..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (758,284,832 bytes, 10.33%)</title>
            <rect x="0.1935%" y="1596" width="10.3284%" height="21" fill="rgb(255,201,201)" fg:x="14209886" fg:w="758284832"/>
            <text x="0.4435%" y="1609.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (758,284,832 bytes, 10.33%)</title>
            <rect x="0.1935%" y="1618" width="10.3284%" height="21" fill="rgb(255,201,201)" fg:x="14209886" fg:w="758284832"/>
            <text x="0.4435%" y="1631.50">/home/pedro..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (758,284,832 bytes, 10.33%)</title>
            <rect x="0.1935%" y="1640" width="10.3284%" height="21" fill="rgb(255,201,201)" fg:x="14209886" fg:w="758284832"/>
            <text x="0.4435%" y="1653.50">          ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:186 (_parallel_build_trees) (758,284,832 bytes, 10.33%)</title>
            <rect x="0.1935%" y="1662" width="10.3284%" height="21" fill="rgb(255,201,201)" fg:x="14209886" fg:w="758284832"/>
            <text x="0.4435%" y="1675.50">/home/pedro..</text>
        </g>
        <g>
            <title>        tree.fit(X, y, sample_weight=sample_weight, check_input=False) (758,284,832 bytes, 10.33%)</title>
            <rect x="0.1935%" y="1684" width="10.3284%" height="21" fill="rgb(255,201,201)" fg:x="14209886" fg:w="758284832"/>
            <text x="0.4435%" y="1697.50">        tr..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/tree/_classes.py:889 (fit) (758,284,832 bytes, 10.33%)</title>
            <rect x="0.1935%" y="1706" width="10.3284%" height="21" fill="rgb(255,201,201)" fg:x="14209886" fg:w="758284832"/>
            <text x="0.4435%" y="1719.50">/home/pedro..</text>
        </g>
        <g>
            <title>        super().fit( (758,284,832 bytes, 10.33%)</title>
            <rect x="0.1935%" y="1728" width="10.3284%" height="21" fill="rgb(255,201,201)" fg:x="14209886" fg:w="758284832"/>
            <text x="0.4435%" y="1741.50">        su..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/tree/_classes.py:379 (fit) (756,929,040 bytes, 10.31%)</title>
            <rect x="0.2120%" y="1750" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="15565678" fg:w="756929040"/>
            <text x="0.4620%" y="1763.50">/home/pedro..</text>
        </g>
        <g>
            <title>        builder.build(self.tree_, X, y, sample_weight) (756,929,040 bytes, 10.31%)</title>
            <rect x="0.2120%" y="1772" width="10.3099%" height="21" fill="rgb(255,201,201)" fg:x="15565678" fg:w="756929040"/>
            <text x="0.4620%" y="1785.50">        bu..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:420 (_compressed_sparse_stack) (37,695,104 bytes, 0.51%)</title>
            <rect x="10.5219%" y="1398" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="772494718" fg:w="37695104"/>
            <text x="10.7719%" y="1411.50"></text>
        </g>
        <g>
            <title>    data = np.concatenate([b.data for b in blocks]) (37,695,104 bytes, 0.51%)</title>
            <rect x="10.5219%" y="1420" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="772494718" fg:w="37695104"/>
            <text x="10.7719%" y="1433.50"></text>
        </g>
        <g>
            <title>&lt;__array_function__ internals&gt;:200 (concatenate) (37,695,104 bytes, 0.51%)</title>
            <rect x="10.5219%" y="1442" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="772494718" fg:w="37695104"/>
            <text x="10.7719%" y="1455.50"></text>
        </g>
        <g>
            <title> (37,695,104 bytes, 0.51%)</title>
            <rect x="10.5219%" y="1464" width="0.5134%" height="21" fill="rgb(255,239,239)" fg:x="772494718" fg:w="37695104"/>
            <text x="10.7719%" y="1477.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (822,582,440 bytes, 11.20%)</title>
            <rect x="0.0879%" y="914" width="11.2042%" height="21" fill="rgb(255,199,199)" fg:x="6454982" fg:w="822582440"/>
            <text x="0.3379%" y="927.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (822,582,440 bytes, 11.20%)</title>
            <rect x="0.0879%" y="936" width="11.2042%" height="21" fill="rgb(255,199,199)" fg:x="6454982" fg:w="822582440"/>
            <text x="0.3379%" y="949.50">        Xt ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (822,582,440 bytes, 11.20%)</title>
            <rect x="0.0879%" y="958" width="11.2042%" height="21" fill="rgb(255,199,199)" fg:x="6454982" fg:w="822582440"/>
            <text x="0.3379%" y="971.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (822,582,440 bytes, 11.20%)</title>
            <rect x="0.0879%" y="980" width="11.2042%" height="21" fill="rgb(255,199,199)" fg:x="6454982" fg:w="822582440"/>
            <text x="0.3379%" y="993.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (822,582,440 bytes, 11.20%)</title>
            <rect x="0.0879%" y="1002" width="11.2042%" height="21" fill="rgb(255,199,199)" fg:x="6454982" fg:w="822582440"/>
            <text x="0.3379%" y="1015.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (822,582,440 bytes, 11.20%)</title>
            <rect x="0.0879%" y="1024" width="11.2042%" height="21" fill="rgb(255,199,199)" fg:x="6454982" fg:w="822582440"/>
            <text x="0.3379%" y="1037.50">        ret..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (822,582,440 bytes, 11.20%)</title>
            <rect x="0.0879%" y="1046" width="11.2042%" height="21" fill="rgb(255,199,199)" fg:x="6454982" fg:w="822582440"/>
            <text x="0.3379%" y="1059.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (822,582,440 bytes, 11.20%)</title>
            <rect x="0.0879%" y="1068" width="11.2042%" height="21" fill="rgb(255,199,199)" fg:x="6454982" fg:w="822582440"/>
            <text x="0.3379%" y="1081.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (822,582,440 bytes, 11.20%)</title>
            <rect x="0.0879%" y="1090" width="11.2042%" height="21" fill="rgb(255,199,199)" fg:x="6454982" fg:w="822582440"/>
            <text x="0.3379%" y="1103.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (822,582,440 bytes, 11.20%)</title>
            <rect x="0.0879%" y="1112" width="11.2042%" height="21" fill="rgb(255,199,199)" fg:x="6454982" fg:w="822582440"/>
            <text x="0.3379%" y="1125.50">        dat..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (822,582,440 bytes, 11.20%)</title>
            <rect x="0.0879%" y="1134" width="11.2042%" height="21" fill="rgb(255,199,199)" fg:x="6454982" fg:w="822582440"/>
            <text x="0.3379%" y="1147.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (822,582,440 bytes, 11.20%)</title>
            <rect x="0.0879%" y="1156" width="11.2042%" height="21" fill="rgb(255,199,199)" fg:x="6454982" fg:w="822582440"/>
            <text x="0.3379%" y="1169.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (56,542,704 bytes, 0.77%)</title>
            <rect x="10.5219%" y="1178" width="0.7702%" height="21" fill="rgb(255,236,236)" fg:x="772494718" fg:w="56542704"/>
            <text x="10.7719%" y="1191.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (56,542,704 bytes, 0.77%)</title>
            <rect x="10.5219%" y="1200" width="0.7702%" height="21" fill="rgb(255,236,236)" fg:x="772494718" fg:w="56542704"/>
            <text x="10.7719%" y="1213.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:255 (transform) (56,542,704 bytes, 0.77%)</title>
            <rect x="10.5219%" y="1222" width="0.7702%" height="21" fill="rgb(255,236,236)" fg:x="772494718" fg:w="56542704"/>
            <text x="10.7719%" y="1235.50"></text>
        </g>
        <g>
            <title>        return _hstack(np.fromiter(embeddings_iter, dtype=&apos;object&apos;)) (56,542,704 bytes, 0.77%)</title>
            <rect x="10.5219%" y="1244" width="0.7702%" height="21" fill="rgb(255,236,236)" fg:x="772494718" fg:w="56542704"/>
            <text x="10.7719%" y="1257.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:41 (_hstack) (56,542,704 bytes, 0.77%)</title>
            <rect x="10.5219%" y="1266" width="0.7702%" height="21" fill="rgb(255,236,236)" fg:x="772494718" fg:w="56542704"/>
            <text x="10.7719%" y="1279.50"></text>
        </g>
        <g>
            <title>        return scipy.sparse.hstack(Xs, format=&apos;csr&apos;) (56,542,704 bytes, 0.77%)</title>
            <rect x="10.5219%" y="1288" width="0.7702%" height="21" fill="rgb(255,236,236)" fg:x="772494718" fg:w="56542704"/>
            <text x="10.7719%" y="1301.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:535 (hstack) (56,542,704 bytes, 0.77%)</title>
            <rect x="10.5219%" y="1310" width="0.7702%" height="21" fill="rgb(255,236,236)" fg:x="772494718" fg:w="56542704"/>
            <text x="10.7719%" y="1323.50"></text>
        </g>
        <g>
            <title>    return bmat([blocks], format=format, dtype=dtype) (56,542,704 bytes, 0.77%)</title>
            <rect x="10.5219%" y="1332" width="0.7702%" height="21" fill="rgb(255,236,236)" fg:x="772494718" fg:w="56542704"/>
            <text x="10.7719%" y="1345.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:632 (bmat) (56,542,704 bytes, 0.77%)</title>
            <rect x="10.5219%" y="1354" width="0.7702%" height="21" fill="rgb(255,236,236)" fg:x="772494718" fg:w="56542704"/>
            <text x="10.7719%" y="1367.50"></text>
        </g>
        <g>
            <title>        A = _compressed_sparse_stack(blocks[:, 0], 0) (56,542,704 bytes, 0.77%)</title>
            <rect x="10.5219%" y="1376" width="0.7702%" height="21" fill="rgb(255,236,236)" fg:x="772494718" fg:w="56542704"/>
            <text x="10.7719%" y="1389.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:424 (_compressed_sparse_stack) (18,847,600 bytes, 0.26%)</title>
            <rect x="11.0354%" y="1398" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="810189822" fg:w="18847600"/>
            <text x="11.2854%" y="1411.50"></text>
        </g>
        <g>
            <title>    indices = np.empty(data.size, dtype=idx_dtype) (18,847,600 bytes, 0.26%)</title>
            <rect x="11.0354%" y="1420" width="0.2567%" height="21" fill="rgb(255,242,242)" fg:x="810189822" fg:w="18847600"/>
            <text x="11.2854%" y="1433.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/linalg/_decomp_lu.py:220 (lu) (806,550,872 bytes, 10.99%)</title>
            <rect x="11.2921%" y="1134" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="829037422" fg:w="806550872"/>
            <text x="11.5421%" y="1147.50">/home/pedro..</text>
        </g>
        <g>
            <title>    p, l, u, info = flu(a1, permute_l=permute_l, overwrite_a=overwrite_a) (806,550,872 bytes, 10.99%)</title>
            <rect x="11.2921%" y="1156" width="10.9858%" height="21" fill="rgb(255,200,200)" fg:x="829037422" fg:w="806550872"/>
            <text x="11.5421%" y="1169.50">    p, l, ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/extmath.py:274 (randomized_range_finder) (1,193,000,328 bytes, 16.25%)</title>
            <rect x="11.2921%" y="1090" width="16.2495%" height="21" fill="rgb(255,189,189)" fg:x="829037422" fg:w="1193000328"/>
            <text x="11.5421%" y="1103.50">/home/pedro/mestra..</text>
        </g>
        <g>
            <title>            Q, _ = linalg.lu(safe_sparse_dot(A, Q), permute_l=True) (1,193,000,328 bytes, 16.25%)</title>
            <rect x="11.2921%" y="1112" width="16.2495%" height="21" fill="rgb(255,189,189)" fg:x="829037422" fg:w="1193000328"/>
            <text x="11.5421%" y="1125.50">            Q, _ ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/extmath.py:189 (safe_sparse_dot) (386,449,456 bytes, 5.26%)</title>
            <rect x="22.2779%" y="1134" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="1635588294" fg:w="386449456"/>
            <text x="22.5279%" y="1147.50">/hom..</text>
        </g>
        <g>
            <title>        ret = a @ b (386,449,456 bytes, 5.26%)</title>
            <rect x="22.2779%" y="1156" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="1635588294" fg:w="386449456"/>
            <text x="22.5279%" y="1169.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_base.py:630 (__matmul__) (386,449,456 bytes, 5.26%)</title>
            <rect x="22.2779%" y="1178" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="1635588294" fg:w="386449456"/>
            <text x="22.5279%" y="1191.50">/hom..</text>
        </g>
        <g>
            <title>        return self._mul_dispatch(other) (386,449,456 bytes, 5.26%)</title>
            <rect x="22.2779%" y="1200" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="1635588294" fg:w="386449456"/>
            <text x="22.5279%" y="1213.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_base.py:532 (_mul_dispatch) (386,449,456 bytes, 5.26%)</title>
            <rect x="22.2779%" y="1222" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="1635588294" fg:w="386449456"/>
            <text x="22.5279%" y="1235.50">/hom..</text>
        </g>
        <g>
            <title>                return self._mul_multivector(other) (386,449,456 bytes, 5.26%)</title>
            <rect x="22.2779%" y="1244" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="1635588294" fg:w="386449456"/>
            <text x="22.5279%" y="1257.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_compressed.py:497 (_mul_multivector) (386,449,456 bytes, 5.26%)</title>
            <rect x="22.2779%" y="1266" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="1635588294" fg:w="386449456"/>
            <text x="22.5279%" y="1279.50">/hom..</text>
        </g>
        <g>
            <title>        result = np.zeros((M, n_vecs), (386,449,456 bytes, 5.26%)</title>
            <rect x="22.2779%" y="1288" width="5.2637%" height="21" fill="rgb(255,215,215)" fg:x="1635588294" fg:w="386449456"/>
            <text x="22.5279%" y="1301.50">   ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/extmath.py:446 (randomized_svd) (1,195,224,280 bytes, 16.28%)</title>
            <rect x="11.2921%" y="1046" width="16.2798%" height="21" fill="rgb(255,189,189)" fg:x="829037422" fg:w="1195224280"/>
            <text x="11.5421%" y="1059.50">/home/pedro/mestra..</text>
        </g>
        <g>
            <title>    Q = randomized_range_finder( (1,195,224,280 bytes, 16.28%)</title>
            <rect x="11.2921%" y="1068" width="16.2798%" height="21" fill="rgb(255,189,189)" fg:x="829037422" fg:w="1195224280"/>
            <text x="11.5421%" y="1081.50">    Q = randomize..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (4,070,025,912 bytes, 55.44%)</title>
            <rect x="0.0345%" y="518" width="55.4367%" height="21" fill="rgb(255,138,138)" fg:x="2529582" fg:w="4070025912"/>
            <text x="0.2845%" y="531.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/pyt..</text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (4,070,025,912 bytes, 55.44%)</title>
            <rect x="0.0345%" y="540" width="55.4367%" height="21" fill="rgb(255,138,138)" fg:x="2529582" fg:w="4070025912"/>
            <text x="0.2845%" y="553.50">            if self.dispatch_one_batch(iterator):..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (4,066,100,512 bytes, 55.38%)</title>
            <rect x="0.0879%" y="562" width="55.3833%" height="21" fill="rgb(255,138,138)" fg:x="6454982" fg:w="4066100512"/>
            <text x="0.3379%" y="575.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/pyt..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (4,066,100,512 bytes, 55.38%)</title>
            <rect x="0.0879%" y="584" width="55.3833%" height="21" fill="rgb(255,138,138)" fg:x="6454982" fg:w="4066100512"/>
            <text x="0.3379%" y="597.50">                self._dispatch(tasks)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (4,066,100,512 bytes, 55.38%)</title>
            <rect x="0.0879%" y="606" width="55.3833%" height="21" fill="rgb(255,138,138)" fg:x="6454982" fg:w="4066100512"/>
            <text x="0.3379%" y="619.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/pyt..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (4,066,100,512 bytes, 55.38%)</title>
            <rect x="0.0879%" y="628" width="55.3833%" height="21" fill="rgb(255,138,138)" fg:x="6454982" fg:w="4066100512"/>
            <text x="0.3379%" y="641.50">            job = self._backend.apply_async(batch, callback=cb)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (4,066,100,512 bytes, 55.38%)</title>
            <rect x="0.0879%" y="650" width="55.3833%" height="21" fill="rgb(255,138,138)" fg:x="6454982" fg:w="4066100512"/>
            <text x="0.3379%" y="663.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/pyt..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (4,066,100,512 bytes, 55.38%)</title>
            <rect x="0.0879%" y="672" width="55.3833%" height="21" fill="rgb(255,138,138)" fg:x="6454982" fg:w="4066100512"/>
            <text x="0.3379%" y="685.50">        result = ImmediateResult(func)</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (4,066,100,512 bytes, 55.38%)</title>
            <rect x="0.0879%" y="694" width="55.3833%" height="21" fill="rgb(255,138,138)" fg:x="6454982" fg:w="4066100512"/>
            <text x="0.3379%" y="707.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/pyt..</text>
        </g>
        <g>
            <title>        self.results = batch() (4,066,100,512 bytes, 55.38%)</title>
            <rect x="0.0879%" y="716" width="55.3833%" height="21" fill="rgb(255,138,138)" fg:x="6454982" fg:w="4066100512"/>
            <text x="0.3379%" y="729.50">        self.results = batch()</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (4,066,100,512 bytes, 55.38%)</title>
            <rect x="0.0879%" y="738" width="55.3833%" height="21" fill="rgb(255,138,138)" fg:x="6454982" fg:w="4066100512"/>
            <text x="0.3379%" y="751.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/pyt..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (4,066,100,512 bytes, 55.38%)</title>
            <rect x="0.0879%" y="760" width="55.3833%" height="21" fill="rgb(255,138,138)" fg:x="6454982" fg:w="4066100512"/>
            <text x="0.3379%" y="773.50">            return [func(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (4,066,100,512 bytes, 55.38%)</title>
            <rect x="0.0879%" y="782" width="55.3833%" height="21" fill="rgb(255,138,138)" fg:x="6454982" fg:w="4066100512"/>
            <text x="0.3379%" y="795.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/pyt..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (4,066,100,512 bytes, 55.38%)</title>
            <rect x="0.0879%" y="804" width="55.3833%" height="21" fill="rgb(255,138,138)" fg:x="6454982" fg:w="4066100512"/>
            <text x="0.3379%" y="817.50">            return [func(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (4,066,100,512 bytes, 55.38%)</title>
            <rect x="0.0879%" y="826" width="55.3833%" height="21" fill="rgb(255,138,138)" fg:x="6454982" fg:w="4066100512"/>
            <text x="0.3379%" y="839.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/pyt..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (4,066,100,512 bytes, 55.38%)</title>
            <rect x="0.0879%" y="848" width="55.3833%" height="21" fill="rgb(255,138,138)" fg:x="6454982" fg:w="4066100512"/>
            <text x="0.3379%" y="861.50">            return self.function(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (4,066,100,512 bytes, 55.38%)</title>
            <rect x="0.0879%" y="870" width="55.3833%" height="21" fill="rgb(255,138,138)" fg:x="6454982" fg:w="4066100512"/>
            <text x="0.3379%" y="883.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/pyt..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (4,066,100,512 bytes, 55.38%)</title>
            <rect x="0.0879%" y="892" width="55.3833%" height="21" fill="rgb(255,138,138)" fg:x="6454982" fg:w="4066100512"/>
            <text x="0.3379%" y="905.50">            res = transformer.fit_transform(X, y, **fit_params)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:445 (fit_transform) (3,243,518,072 bytes, 44.18%)</title>
            <rect x="11.2921%" y="914" width="44.1791%" height="21" fill="rgb(255,150,150)" fg:x="829037422" fg:w="3243518072"/>
            <text x="11.5421%" y="927.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_fores..</text>
        </g>
        <g>
            <title>                return last_step.fit_transform(Xt, y, **fit_params_last_step) (3,243,518,072 bytes, 44.18%)</title>
            <rect x="11.2921%" y="936" width="44.1791%" height="21" fill="rgb(255,150,150)" fg:x="829037422" fg:w="3243518072"/>
            <text x="11.5421%" y="949.50">                return last_step.fit_transform(Xt, y,..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (3,243,518,072 bytes, 44.18%)</title>
            <rect x="11.2921%" y="958" width="44.1791%" height="21" fill="rgb(255,150,150)" fg:x="829037422" fg:w="3243518072"/>
            <text x="11.5421%" y="971.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_fores..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (3,243,518,072 bytes, 44.18%)</title>
            <rect x="11.2921%" y="980" width="44.1791%" height="21" fill="rgb(255,150,150)" fg:x="829037422" fg:w="3243518072"/>
            <text x="11.5421%" y="993.50">        data_to_wrap = f(self, X, *args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/decomposition/_truncated_svd.py:241 (fit_transform) (3,243,518,072 bytes, 44.18%)</title>
            <rect x="11.2921%" y="1002" width="44.1791%" height="21" fill="rgb(255,150,150)" fg:x="829037422" fg:w="3243518072"/>
            <text x="11.5421%" y="1015.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_fores..</text>
        </g>
        <g>
            <title>            U, Sigma, VT = randomized_svd( (3,243,518,072 bytes, 44.18%)</title>
            <rect x="11.2921%" y="1024" width="44.1791%" height="21" fill="rgb(255,150,150)" fg:x="829037422" fg:w="3243518072"/>
            <text x="11.5421%" y="1037.50">            U, Sigma, VT = randomized_svd(..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/extmath.py:461 (randomized_svd) (2,048,293,792 bytes, 27.90%)</title>
            <rect x="27.5719%" y="1046" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="2024261702" fg:w="2048293792"/>
            <text x="27.8219%" y="1059.50">/home/pedro/mestrado/biomal_repo/..</text>
        </g>
        <g>
            <title>    U = np.dot(Q, Uhat) (2,048,293,792 bytes, 27.90%)</title>
            <rect x="27.5719%" y="1068" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="2024261702" fg:w="2048293792"/>
            <text x="27.8219%" y="1081.50">    U = np.dot(Q, Uhat)..</text>
        </g>
        <g>
            <title>&lt;__array_function__ internals&gt;:200 (dot) (2,048,293,792 bytes, 27.90%)</title>
            <rect x="27.5719%" y="1090" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="2024261702" fg:w="2048293792"/>
            <text x="27.8219%" y="1103.50">&lt;__array_function__ internals&gt;:20..</text>
        </g>
        <g>
            <title> (2,048,293,792 bytes, 27.90%)</title>
            <rect x="27.5719%" y="1112" width="27.8993%" height="21" fill="rgb(255,170,170)" fg:x="2024261702" fg:w="2048293792"/>
            <text x="27.8219%" y="1125.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (274,556,880 bytes, 3.74%)</title>
            <rect x="55.4712%" y="914" width="3.7397%" height="21" fill="rgb(255,221,221)" fg:x="4072555494" fg:w="274556880"/>
            <text x="55.7212%" y="927.50">/h..</text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (274,556,880 bytes, 3.74%)</title>
            <rect x="55.4712%" y="936" width="3.7397%" height="21" fill="rgb(255,221,221)" fg:x="4072555494" fg:w="274556880"/>
            <text x="55.7212%" y="949.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (274,556,880 bytes, 3.74%)</title>
            <rect x="55.4712%" y="958" width="3.7397%" height="21" fill="rgb(255,221,221)" fg:x="4072555494" fg:w="274556880"/>
            <text x="55.7212%" y="971.50">/h..</text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (274,556,880 bytes, 3.74%)</title>
            <rect x="55.4712%" y="980" width="3.7397%" height="21" fill="rgb(255,221,221)" fg:x="4072555494" fg:w="274556880"/>
            <text x="55.7212%" y="993.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (274,556,880 bytes, 3.74%)</title>
            <rect x="55.4712%" y="1002" width="3.7397%" height="21" fill="rgb(255,221,221)" fg:x="4072555494" fg:w="274556880"/>
            <text x="55.7212%" y="1015.50">/h..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (274,556,880 bytes, 3.74%)</title>
            <rect x="55.4712%" y="1024" width="3.7397%" height="21" fill="rgb(255,221,221)" fg:x="4072555494" fg:w="274556880"/>
            <text x="55.7212%" y="1037.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (274,556,880 bytes, 3.74%)</title>
            <rect x="55.4712%" y="1046" width="3.7397%" height="21" fill="rgb(255,221,221)" fg:x="4072555494" fg:w="274556880"/>
            <text x="55.7212%" y="1059.50">/h..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (274,556,880 bytes, 3.74%)</title>
            <rect x="55.4712%" y="1068" width="3.7397%" height="21" fill="rgb(255,221,221)" fg:x="4072555494" fg:w="274556880"/>
            <text x="55.7212%" y="1081.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (274,556,880 bytes, 3.74%)</title>
            <rect x="55.4712%" y="1090" width="3.7397%" height="21" fill="rgb(255,221,221)" fg:x="4072555494" fg:w="274556880"/>
            <text x="55.7212%" y="1103.50">/h..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (274,556,880 bytes, 3.74%)</title>
            <rect x="55.4712%" y="1112" width="3.7397%" height="21" fill="rgb(255,221,221)" fg:x="4072555494" fg:w="274556880"/>
            <text x="55.7212%" y="1125.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (274,556,880 bytes, 3.74%)</title>
            <rect x="55.4712%" y="1134" width="3.7397%" height="21" fill="rgb(255,221,221)" fg:x="4072555494" fg:w="274556880"/>
            <text x="55.7212%" y="1147.50">/h..</text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (274,556,880 bytes, 3.74%)</title>
            <rect x="55.4712%" y="1156" width="3.7397%" height="21" fill="rgb(255,221,221)" fg:x="4072555494" fg:w="274556880"/>
            <text x="55.7212%" y="1169.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:216 (fit) (274,556,880 bytes, 3.74%)</title>
            <rect x="55.4712%" y="1178" width="3.7397%" height="21" fill="rgb(255,221,221)" fg:x="4072555494" fg:w="274556880"/>
            <text x="55.7212%" y="1191.50">/h..</text>
        </g>
        <g>
            <title>        self.estimator_.fit(X, y) (274,556,880 bytes, 3.74%)</title>
            <rect x="55.4712%" y="1200" width="3.7397%" height="21" fill="rgb(255,221,221)" fg:x="4072555494" fg:w="274556880"/>
            <text x="55.7212%" y="1213.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:473 (fit) (274,472,880 bytes, 3.74%)</title>
            <rect x="55.4723%" y="1222" width="3.7385%" height="21" fill="rgb(255,221,221)" fg:x="4072639494" fg:w="274472880"/>
            <text x="55.7223%" y="1235.50">/h..</text>
        </g>
        <g>
            <title>            trees = Parallel( (274,472,880 bytes, 3.74%)</title>
            <rect x="55.4723%" y="1244" width="3.7385%" height="21" fill="rgb(255,221,221)" fg:x="4072639494" fg:w="274472880"/>
            <text x="55.7223%" y="1257.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (274,472,880 bytes, 3.74%)</title>
            <rect x="55.4723%" y="1266" width="3.7385%" height="21" fill="rgb(255,221,221)" fg:x="4072639494" fg:w="274472880"/>
            <text x="55.7223%" y="1279.50">/h..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (274,472,880 bytes, 3.74%)</title>
            <rect x="55.4723%" y="1288" width="3.7385%" height="21" fill="rgb(255,221,221)" fg:x="4072639494" fg:w="274472880"/>
            <text x="55.7223%" y="1301.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1088 (__call__) (271,770,600 bytes, 3.70%)</title>
            <rect x="55.5091%" y="1310" width="3.7017%" height="21" fill="rgb(255,221,221)" fg:x="4075341774" fg:w="271770600"/>
            <text x="55.7591%" y="1323.50">/h..</text>
        </g>
        <g>
            <title>            while self.dispatch_one_batch(iterator): (271,770,600 bytes, 3.70%)</title>
            <rect x="55.5091%" y="1332" width="3.7017%" height="21" fill="rgb(255,221,221)" fg:x="4075341774" fg:w="271770600"/>
            <text x="55.7591%" y="1345.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (271,770,600 bytes, 3.70%)</title>
            <rect x="55.5091%" y="1354" width="3.7017%" height="21" fill="rgb(255,221,221)" fg:x="4075341774" fg:w="271770600"/>
            <text x="55.7591%" y="1367.50">/h..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (271,770,600 bytes, 3.70%)</title>
            <rect x="55.5091%" y="1376" width="3.7017%" height="21" fill="rgb(255,221,221)" fg:x="4075341774" fg:w="271770600"/>
            <text x="55.7591%" y="1389.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (271,770,600 bytes, 3.70%)</title>
            <rect x="55.5091%" y="1398" width="3.7017%" height="21" fill="rgb(255,221,221)" fg:x="4075341774" fg:w="271770600"/>
            <text x="55.7591%" y="1411.50">/h..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (271,770,600 bytes, 3.70%)</title>
            <rect x="55.5091%" y="1420" width="3.7017%" height="21" fill="rgb(255,221,221)" fg:x="4075341774" fg:w="271770600"/>
            <text x="55.7591%" y="1433.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (271,770,600 bytes, 3.70%)</title>
            <rect x="55.5091%" y="1442" width="3.7017%" height="21" fill="rgb(255,221,221)" fg:x="4075341774" fg:w="271770600"/>
            <text x="55.7591%" y="1455.50">/h..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (271,770,600 bytes, 3.70%)</title>
            <rect x="55.5091%" y="1464" width="3.7017%" height="21" fill="rgb(255,221,221)" fg:x="4075341774" fg:w="271770600"/>
            <text x="55.7591%" y="1477.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (271,770,600 bytes, 3.70%)</title>
            <rect x="55.5091%" y="1486" width="3.7017%" height="21" fill="rgb(255,221,221)" fg:x="4075341774" fg:w="271770600"/>
            <text x="55.7591%" y="1499.50">/h..</text>
        </g>
        <g>
            <title>        self.results = batch() (271,770,600 bytes, 3.70%)</title>
            <rect x="55.5091%" y="1508" width="3.7017%" height="21" fill="rgb(255,221,221)" fg:x="4075341774" fg:w="271770600"/>
            <text x="55.7591%" y="1521.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (271,770,600 bytes, 3.70%)</title>
            <rect x="55.5091%" y="1530" width="3.7017%" height="21" fill="rgb(255,221,221)" fg:x="4075341774" fg:w="271770600"/>
            <text x="55.7591%" y="1543.50">/h..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (271,770,600 bytes, 3.70%)</title>
            <rect x="55.5091%" y="1552" width="3.7017%" height="21" fill="rgb(255,221,221)" fg:x="4075341774" fg:w="271770600"/>
            <text x="55.7591%" y="1565.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (271,770,600 bytes, 3.70%)</title>
            <rect x="55.5091%" y="1574" width="3.7017%" height="21" fill="rgb(255,221,221)" fg:x="4075341774" fg:w="271770600"/>
            <text x="55.7591%" y="1587.50">/h..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (271,770,600 bytes, 3.70%)</title>
            <rect x="55.5091%" y="1596" width="3.7017%" height="21" fill="rgb(255,221,221)" fg:x="4075341774" fg:w="271770600"/>
            <text x="55.7591%" y="1609.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (271,770,600 bytes, 3.70%)</title>
            <rect x="55.5091%" y="1618" width="3.7017%" height="21" fill="rgb(255,221,221)" fg:x="4075341774" fg:w="271770600"/>
            <text x="55.7591%" y="1631.50">/h..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (271,770,600 bytes, 3.70%)</title>
            <rect x="55.5091%" y="1640" width="3.7017%" height="21" fill="rgb(255,221,221)" fg:x="4075341774" fg:w="271770600"/>
            <text x="55.7591%" y="1653.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:184 (_parallel_build_trees) (271,770,600 bytes, 3.70%)</title>
            <rect x="55.5091%" y="1662" width="3.7017%" height="21" fill="rgb(255,221,221)" fg:x="4075341774" fg:w="271770600"/>
            <text x="55.7591%" y="1675.50">/h..</text>
        </g>
        <g>
            <title>        tree.fit(X, y, sample_weight=curr_sample_weight, check_input=False) (271,770,600 bytes, 3.70%)</title>
            <rect x="55.5091%" y="1684" width="3.7017%" height="21" fill="rgb(255,221,221)" fg:x="4075341774" fg:w="271770600"/>
            <text x="55.7591%" y="1697.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/tree/_classes.py:889 (fit) (271,770,600 bytes, 3.70%)</title>
            <rect x="55.5091%" y="1706" width="3.7017%" height="21" fill="rgb(255,221,221)" fg:x="4075341774" fg:w="271770600"/>
            <text x="55.7591%" y="1719.50">/h..</text>
        </g>
        <g>
            <title>        super().fit( (271,770,600 bytes, 3.70%)</title>
            <rect x="55.5091%" y="1728" width="3.7017%" height="21" fill="rgb(255,221,221)" fg:x="4075341774" fg:w="271770600"/>
            <text x="55.7591%" y="1741.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/tree/_classes.py:379 (fit) (270,709,320 bytes, 3.69%)</title>
            <rect x="55.5236%" y="1750" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="4076403054" fg:w="270709320"/>
            <text x="55.7736%" y="1763.50">/h..</text>
        </g>
        <g>
            <title>        builder.build(self.tree_, X, y, sample_weight) (270,709,320 bytes, 3.69%)</title>
            <rect x="55.5236%" y="1772" width="3.6873%" height="21" fill="rgb(255,221,221)" fg:x="4076403054" fg:w="270709320"/>
            <text x="55.7736%" y="1785.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (5,203,120,952 bytes, 70.87%)</title>
            <rect x="0.0345%" y="386" width="70.8703%" height="21" fill="rgb(255,123,123)" fg:x="2529582" fg:w="5203120952"/>
            <text x="0.2845%" y="399.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-package..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (5,203,120,952 bytes, 70.87%)</title>
            <rect x="0.0345%" y="408" width="70.8703%" height="21" fill="rgb(255,123,123)" fg:x="2529582" fg:w="5203120952"/>
            <text x="0.2845%" y="421.50">        result = self._fit_transform(X, y, _fit_transform_one)</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (5,203,120,952 bytes, 70.87%)</title>
            <rect x="0.0345%" y="430" width="70.8703%" height="21" fill="rgb(255,123,123)" fg:x="2529582" fg:w="5203120952"/>
            <text x="0.2845%" y="443.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-package..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (5,203,120,952 bytes, 70.87%)</title>
            <rect x="0.0345%" y="452" width="70.8703%" height="21" fill="rgb(255,123,123)" fg:x="2529582" fg:w="5203120952"/>
            <text x="0.2845%" y="465.50">            return Parallel(n_jobs=self.n_jobs)(</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (5,203,120,952 bytes, 70.87%)</title>
            <rect x="0.0345%" y="474" width="70.8703%" height="21" fill="rgb(255,123,123)" fg:x="2529582" fg:w="5203120952"/>
            <text x="0.2845%" y="487.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-package..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (5,203,120,952 bytes, 70.87%)</title>
            <rect x="0.0345%" y="496" width="70.8703%" height="21" fill="rgb(255,123,123)" fg:x="2529582" fg:w="5203120952"/>
            <text x="0.2845%" y="509.50">        return super().__call__(iterable_with_config)</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1088 (__call__) (1,133,095,040 bytes, 15.43%)</title>
            <rect x="55.4712%" y="518" width="15.4336%" height="21" fill="rgb(255,191,191)" fg:x="4072555494" fg:w="1133095040"/>
            <text x="55.7212%" y="531.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            while self.dispatch_one_batch(iterator): (1,133,095,040 bytes, 15.43%)</title>
            <rect x="55.4712%" y="540" width="15.4336%" height="21" fill="rgb(255,191,191)" fg:x="4072555494" fg:w="1133095040"/>
            <text x="55.7212%" y="553.50">            whil..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (1,133,095,040 bytes, 15.43%)</title>
            <rect x="55.4712%" y="562" width="15.4336%" height="21" fill="rgb(255,191,191)" fg:x="4072555494" fg:w="1133095040"/>
            <text x="55.7212%" y="575.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (1,133,095,040 bytes, 15.43%)</title>
            <rect x="55.4712%" y="584" width="15.4336%" height="21" fill="rgb(255,191,191)" fg:x="4072555494" fg:w="1133095040"/>
            <text x="55.7212%" y="597.50">                ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (1,133,095,040 bytes, 15.43%)</title>
            <rect x="55.4712%" y="606" width="15.4336%" height="21" fill="rgb(255,191,191)" fg:x="4072555494" fg:w="1133095040"/>
            <text x="55.7212%" y="619.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (1,133,095,040 bytes, 15.43%)</title>
            <rect x="55.4712%" y="628" width="15.4336%" height="21" fill="rgb(255,191,191)" fg:x="4072555494" fg:w="1133095040"/>
            <text x="55.7212%" y="641.50">            job ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (1,133,095,040 bytes, 15.43%)</title>
            <rect x="55.4712%" y="650" width="15.4336%" height="21" fill="rgb(255,191,191)" fg:x="4072555494" fg:w="1133095040"/>
            <text x="55.7212%" y="663.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (1,133,095,040 bytes, 15.43%)</title>
            <rect x="55.4712%" y="672" width="15.4336%" height="21" fill="rgb(255,191,191)" fg:x="4072555494" fg:w="1133095040"/>
            <text x="55.7212%" y="685.50">        result =..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (1,133,095,040 bytes, 15.43%)</title>
            <rect x="55.4712%" y="694" width="15.4336%" height="21" fill="rgb(255,191,191)" fg:x="4072555494" fg:w="1133095040"/>
            <text x="55.7212%" y="707.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>        self.results = batch() (1,133,095,040 bytes, 15.43%)</title>
            <rect x="55.4712%" y="716" width="15.4336%" height="21" fill="rgb(255,191,191)" fg:x="4072555494" fg:w="1133095040"/>
            <text x="55.7212%" y="729.50">        self.res..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (1,133,095,040 bytes, 15.43%)</title>
            <rect x="55.4712%" y="738" width="15.4336%" height="21" fill="rgb(255,191,191)" fg:x="4072555494" fg:w="1133095040"/>
            <text x="55.7212%" y="751.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (1,133,095,040 bytes, 15.43%)</title>
            <rect x="55.4712%" y="760" width="15.4336%" height="21" fill="rgb(255,191,191)" fg:x="4072555494" fg:w="1133095040"/>
            <text x="55.7212%" y="773.50">            retu..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (1,133,095,040 bytes, 15.43%)</title>
            <rect x="55.4712%" y="782" width="15.4336%" height="21" fill="rgb(255,191,191)" fg:x="4072555494" fg:w="1133095040"/>
            <text x="55.7212%" y="795.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (1,133,095,040 bytes, 15.43%)</title>
            <rect x="55.4712%" y="804" width="15.4336%" height="21" fill="rgb(255,191,191)" fg:x="4072555494" fg:w="1133095040"/>
            <text x="55.7212%" y="817.50">            retu..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (1,133,095,040 bytes, 15.43%)</title>
            <rect x="55.4712%" y="826" width="15.4336%" height="21" fill="rgb(255,191,191)" fg:x="4072555494" fg:w="1133095040"/>
            <text x="55.7212%" y="839.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (1,133,095,040 bytes, 15.43%)</title>
            <rect x="55.4712%" y="848" width="15.4336%" height="21" fill="rgb(255,191,191)" fg:x="4072555494" fg:w="1133095040"/>
            <text x="55.7212%" y="861.50">            retu..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (1,133,095,040 bytes, 15.43%)</title>
            <rect x="55.4712%" y="870" width="15.4336%" height="21" fill="rgb(255,191,191)" fg:x="4072555494" fg:w="1133095040"/>
            <text x="55.7212%" y="883.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (1,133,095,040 bytes, 15.43%)</title>
            <rect x="55.4712%" y="892" width="15.4336%" height="21" fill="rgb(255,191,191)" fg:x="4072555494" fg:w="1133095040"/>
            <text x="55.7212%" y="905.50">            res ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:445 (fit_transform) (858,538,160 bytes, 11.69%)</title>
            <rect x="59.2109%" y="914" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="4347112374" fg:w="858538160"/>
            <text x="59.4609%" y="927.50">/home/pedro/..</text>
        </g>
        <g>
            <title>                return last_step.fit_transform(Xt, y, **fit_params_last_step) (858,538,160 bytes, 11.69%)</title>
            <rect x="59.2109%" y="936" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="4347112374" fg:w="858538160"/>
            <text x="59.4609%" y="949.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (858,538,160 bytes, 11.69%)</title>
            <rect x="59.2109%" y="958" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="4347112374" fg:w="858538160"/>
            <text x="59.4609%" y="971.50">/home/pedro/..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (858,538,160 bytes, 11.69%)</title>
            <rect x="59.2109%" y="980" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="4347112374" fg:w="858538160"/>
            <text x="59.4609%" y="993.50">        dat..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/decomposition/_truncated_svd.py:241 (fit_transform) (858,538,160 bytes, 11.69%)</title>
            <rect x="59.2109%" y="1002" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="4347112374" fg:w="858538160"/>
            <text x="59.4609%" y="1015.50">/home/pedro/..</text>
        </g>
        <g>
            <title>            U, Sigma, VT = randomized_svd( (858,538,160 bytes, 11.69%)</title>
            <rect x="59.2109%" y="1024" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="4347112374" fg:w="858538160"/>
            <text x="59.4609%" y="1037.50">           ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/extmath.py:461 (randomized_svd) (858,538,160 bytes, 11.69%)</title>
            <rect x="59.2109%" y="1046" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="4347112374" fg:w="858538160"/>
            <text x="59.4609%" y="1059.50">/home/pedro/..</text>
        </g>
        <g>
            <title>    U = np.dot(Q, Uhat) (858,538,160 bytes, 11.69%)</title>
            <rect x="59.2109%" y="1068" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="4347112374" fg:w="858538160"/>
            <text x="59.4609%" y="1081.50">    U = np...</text>
        </g>
        <g>
            <title>&lt;__array_function__ internals&gt;:200 (dot) (858,538,160 bytes, 11.69%)</title>
            <rect x="59.2109%" y="1090" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="4347112374" fg:w="858538160"/>
            <text x="59.4609%" y="1103.50">&lt;__array_fun..</text>
        </g>
        <g>
            <title> (858,538,160 bytes, 11.69%)</title>
            <rect x="59.2109%" y="1112" width="11.6939%" height="21" fill="rgb(255,198,198)" fg:x="4347112374" fg:w="858538160"/>
            <text x="59.4609%" y="1125.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (5,206,988,248 bytes, 70.92%)</title>
            <rect x="0.0345%" y="210" width="70.9230%" height="21" fill="rgb(255,123,123)" fg:x="2529582" fg:w="5206988248"/>
            <text x="0.2845%" y="223.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fi..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (5,206,988,248 bytes, 70.92%)</title>
            <rect x="0.0345%" y="232" width="70.9230%" height="21" fill="rgb(255,123,123)" fg:x="2529582" fg:w="5206988248"/>
            <text x="0.2845%" y="245.50">                new_X, fitted_transformer = fit_transform_one_cached(..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (5,206,988,248 bytes, 70.92%)</title>
            <rect x="0.0345%" y="254" width="70.9230%" height="21" fill="rgb(255,123,123)" fg:x="2529582" fg:w="5206988248"/>
            <text x="0.2845%" y="267.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-package..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (5,206,988,248 bytes, 70.92%)</title>
            <rect x="0.0345%" y="276" width="70.9230%" height="21" fill="rgb(255,123,123)" fg:x="2529582" fg:w="5206988248"/>
            <text x="0.2845%" y="289.50">        return self.func(*args, **kwargs)</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (5,206,988,248 bytes, 70.92%)</title>
            <rect x="0.0345%" y="298" width="70.9230%" height="21" fill="rgb(255,123,123)" fg:x="2529582" fg:w="5206988248"/>
            <text x="0.2845%" y="311.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-package..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (5,206,988,248 bytes, 70.92%)</title>
            <rect x="0.0345%" y="320" width="70.9230%" height="21" fill="rgb(255,123,123)" fg:x="2529582" fg:w="5206988248"/>
            <text x="0.2845%" y="333.50">            res = transformer.fit_transform(X, y, **fit_params)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (5,206,988,248 bytes, 70.92%)</title>
            <rect x="0.0345%" y="342" width="70.9230%" height="21" fill="rgb(255,123,123)" fg:x="2529582" fg:w="5206988248"/>
            <text x="0.2845%" y="355.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-package..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (5,206,988,248 bytes, 70.92%)</title>
            <rect x="0.0345%" y="364" width="70.9230%" height="21" fill="rgb(255,123,123)" fg:x="2529582" fg:w="5206988248"/>
            <text x="0.2845%" y="377.50">        data_to_wrap = f(self, X, *args, **kwargs)</text>
        </g>
        <g>
            <title>estimators.py:166 (&lt;module&gt;) (5,213,117,984 bytes, 71.01%)</title>
            <rect x="0.0345%" y="122" width="71.0065%" height="21" fill="rgb(255,123,123)" fg:x="2529582" fg:w="5213117984"/>
            <text x="0.2845%" y="135.50">estimators.py:166 (&lt;module&gt;)</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (5,213,117,984 bytes, 71.01%)</title>
            <rect x="0.0345%" y="144" width="71.0065%" height="21" fill="rgb(255,123,123)" fg:x="2529582" fg:w="5213117984"/>
            <text x="0.2845%" y="157.50">    cascade = cascade_weak_label_tree_embedder.fit(X, y)</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (5,213,117,984 bytes, 71.01%)</title>
            <rect x="0.0345%" y="166" width="71.0065%" height="21" fill="rgb(255,123,123)" fg:x="2529582" fg:w="5213117984"/>
            <text x="0.2845%" y="179.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit)</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (5,213,117,984 bytes, 71.01%)</title>
            <rect x="0.0345%" y="188" width="71.0065%" height="21" fill="rgb(255,123,123)" fg:x="2529582" fg:w="5213117984"/>
            <text x="0.2845%" y="201.50">        Xt, yt = self._fit(X, y, **fit_params_steps)</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_isolve/__init__.py:4 (&lt;module&gt;) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2454" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2467.50">/home/pedro/mestrado/biomal_repo/s..</text>
        </g>
        <g>
            <title>from .iterative import * (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2476" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2489.50">from .iterative import *</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2498" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2511.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2520" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2533.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2542" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2555.50">&lt;frozen importlib._bootstrap&gt;:1006..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2564" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2577.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2586" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2599.50">&lt;frozen importlib._bootstrap&gt;:688 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2608" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2621.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2630" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2643.50">&lt;frozen importlib._bootstrap_exter..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2652" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2665.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2674" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2687.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2696" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2709.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_isolve/iterative.py:9 (&lt;module&gt;) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2718" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2731.50">/home/pedro/mestrado/biomal_repo/s..</text>
        </g>
        <g>
            <title>from . import _iterative (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2740" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2753.50">from . import _iterative</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1078 (_handle_fromlist) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2762" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2775.50">&lt;frozen importlib._bootstrap&gt;:1078..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2784" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2797.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2806" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2819.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2828" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2841.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2850" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2863.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2872" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2885.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2894" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2907.50">&lt;frozen importlib._bootstrap&gt;:1006..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2916" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2929.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:674 (_load_unlocked) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2938" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2951.50">&lt;frozen importlib._bootstrap&gt;:674 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2960" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2973.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:571 (module_from_spec) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="2982" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="2995.50">&lt;frozen importlib._bootstrap&gt;:571 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="3004" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="3017.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:1176 (create_module) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="3026" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="3039.50">&lt;frozen importlib._bootstrap_exter..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="3048" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="3061.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="3070" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="3083.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,113,969,034 bytes, 28.79%)</title>
            <rect x="71.1074%" y="3092" width="28.7938%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2113969034"/>
            <text x="71.3574%" y="3105.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,114,553,410 bytes, 28.80%)</title>
            <rect x="71.1061%" y="1134" width="28.8018%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2114553410"/>
            <text x="71.3561%" y="1147.50">&lt;frozen importlib._bootstrap&gt;:1006..</text>
        </g>
        <g>
            <title> (2,114,553,410 bytes, 28.80%)</title>
            <rect x="71.1061%" y="1156" width="28.8018%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2114553410"/>
            <text x="71.3561%" y="1169.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,114,553,410 bytes, 28.80%)</title>
            <rect x="71.1061%" y="1178" width="28.8018%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2114553410"/>
            <text x="71.3561%" y="1191.50">&lt;frozen importlib._bootstrap&gt;:688 ..</text>
        </g>
        <g>
            <title> (2,114,553,410 bytes, 28.80%)</title>
            <rect x="71.1061%" y="1200" width="28.8018%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2114553410"/>
            <text x="71.3561%" y="1213.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,114,553,410 bytes, 28.80%)</title>
            <rect x="71.1061%" y="1222" width="28.8018%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2114553410"/>
            <text x="71.3561%" y="1235.50">&lt;frozen importlib._bootstrap_exter..</text>
        </g>
        <g>
            <title> (2,114,553,410 bytes, 28.80%)</title>
            <rect x="71.1061%" y="1244" width="28.8018%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2114553410"/>
            <text x="71.3561%" y="1257.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,114,553,410 bytes, 28.80%)</title>
            <rect x="71.1061%" y="1266" width="28.8018%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2114553410"/>
            <text x="71.3561%" y="1279.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,114,553,410 bytes, 28.80%)</title>
            <rect x="71.1061%" y="1288" width="28.8018%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2114553410"/>
            <text x="71.3561%" y="1301.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/__init__.py:283 (&lt;module&gt;) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1310" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1323.50">/home/pedro/mestrado/biomal_repo/s..</text>
        </g>
        <g>
            <title>from . import csgraph (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1332" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1345.50">from . import csgraph</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1078 (_handle_fromlist) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1354" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1367.50">&lt;frozen importlib._bootstrap&gt;:1078..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1376" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1389.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1398" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1411.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1420" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1433.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1442" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1455.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1464" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1477.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1486" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1499.50">&lt;frozen importlib._bootstrap&gt;:1006..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1508" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1521.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1530" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1543.50">&lt;frozen importlib._bootstrap&gt;:688 ..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1552" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1565.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1574" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1587.50">&lt;frozen importlib._bootstrap_exter..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1596" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1609.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1618" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1631.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1640" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1653.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/csgraph/__init__.py:185 (&lt;module&gt;) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1662" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1675.50">/home/pedro/mestrado/biomal_repo/s..</text>
        </g>
        <g>
            <title>from ._laplacian import laplacian (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1684" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1697.50">from ._laplacian import laplacian..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1706" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1719.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1728" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1741.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1750" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1763.50">&lt;frozen importlib._bootstrap&gt;:1006..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1772" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1785.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1794" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1807.50">&lt;frozen importlib._bootstrap&gt;:688 ..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1816" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1829.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1838" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1851.50">&lt;frozen importlib._bootstrap_exter..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1860" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1873.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1882" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1895.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1904" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1917.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/csgraph/_laplacian.py:7 (&lt;module&gt;) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1926" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1939.50">/home/pedro/mestrado/biomal_repo/s..</text>
        </g>
        <g>
            <title>from scipy.sparse.linalg import LinearOperator (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1948" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1961.50">from scipy.sparse.linalg import L..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1970" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="1983.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="1992" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="2005.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="2014" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="2027.50">&lt;frozen importlib._bootstrap&gt;:1006..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="2036" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="2049.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="2058" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="2071.50">&lt;frozen importlib._bootstrap&gt;:688 ..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="2080" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="2093.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="2102" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="2115.50">&lt;frozen importlib._bootstrap_exter..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="2124" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="2137.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="2146" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="2159.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="2168" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="2181.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/__init__.py:120 (&lt;module&gt;) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="2190" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="2203.50">/home/pedro/mestrado/biomal_repo/s..</text>
        </g>
        <g>
            <title>from ._isolve import * (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="2212" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="2225.50">from ._isolve import *</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="2234" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="2247.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="2256" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="2269.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="2278" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="2291.50">&lt;frozen importlib._bootstrap&gt;:1006..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="2300" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="2313.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="2322" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="2335.50">&lt;frozen importlib._bootstrap&gt;:688 ..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="2344" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="2357.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="2366" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="2379.50">&lt;frozen importlib._bootstrap_exter..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="2388" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="2401.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="2410" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="2423.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,114,456,718 bytes, 28.80%)</title>
            <rect x="71.1074%" y="2432" width="28.8005%" height="21" fill="rgb(255,169,169)" fg:x="5220525645" fg:w="2114456718"/>
            <text x="71.3574%" y="2445.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/__init__.py:17 (&lt;module&gt;) (2,114,985,498 bytes, 28.81%)</title>
            <rect x="71.1061%" y="1046" width="28.8077%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2114985498"/>
            <text x="71.3561%" y="1059.50">/home/pedro/mestrado/biomal_repo/s..</text>
        </g>
        <g>
            <title>from scipy.sparse import issparse (2,114,985,498 bytes, 28.81%)</title>
            <rect x="71.1061%" y="1068" width="28.8077%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2114985498"/>
            <text x="71.3561%" y="1081.50">from scipy.sparse import issparse..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,114,985,498 bytes, 28.81%)</title>
            <rect x="71.1061%" y="1090" width="28.8077%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2114985498"/>
            <text x="71.3561%" y="1103.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title> (2,114,985,498 bytes, 28.81%)</title>
            <rect x="71.1061%" y="1112" width="28.8077%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2114985498"/>
            <text x="71.3561%" y="1125.50"></text>
        </g>
        <g>
            <title>estimators.py:6 (&lt;module&gt;) (2,120,997,482 bytes, 28.89%)</title>
            <rect x="71.0943%" y="122" width="28.8895%" height="21" fill="rgb(255,169,169)" fg:x="5219564098" fg:w="2120997482"/>
            <text x="71.3443%" y="135.50">estimators.py:6 (&lt;module&gt;)</text>
        </g>
        <g>
            <title>from sklearn.datasets import load_iris (2,120,997,482 bytes, 28.89%)</title>
            <rect x="71.0943%" y="144" width="28.8895%" height="21" fill="rgb(255,169,169)" fg:x="5219564098" fg:w="2120997482"/>
            <text x="71.3443%" y="157.50">from sklearn.datasets import load..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,120,997,482 bytes, 28.89%)</title>
            <rect x="71.0943%" y="166" width="28.8895%" height="21" fill="rgb(255,169,169)" fg:x="5219564098" fg:w="2120997482"/>
            <text x="71.3443%" y="179.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title> (2,120,997,482 bytes, 28.89%)</title>
            <rect x="71.0943%" y="188" width="28.8895%" height="21" fill="rgb(255,169,169)" fg:x="5219564098" fg:w="2120997482"/>
            <text x="71.3443%" y="201.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:992 (_find_and_load_unlocked) (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="210" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="223.50">&lt;frozen importlib._bootstrap&gt;:992 ..</text>
        </g>
        <g>
            <title> (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="232" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="245.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="254" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="267.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="276" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="289.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="298" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="311.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title> (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="320" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="333.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="342" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="355.50">&lt;frozen importlib._bootstrap&gt;:1006..</text>
        </g>
        <g>
            <title> (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="364" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="377.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="386" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="399.50">&lt;frozen importlib._bootstrap&gt;:688 ..</text>
        </g>
        <g>
            <title> (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="408" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="421.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="430" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="443.50">&lt;frozen importlib._bootstrap_exter..</text>
        </g>
        <g>
            <title> (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="452" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="465.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="474" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="487.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="496" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="509.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/__init__.py:82 (&lt;module&gt;) (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="518" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="531.50">/home/pedro/mestrado/biomal_repo/s..</text>
        </g>
        <g>
            <title>    from .base import clone (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="540" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="553.50">    from .base import clone..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="562" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="575.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title> (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="584" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="597.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="606" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="619.50">&lt;frozen importlib._bootstrap&gt;:1006..</text>
        </g>
        <g>
            <title> (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="628" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="641.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="650" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="663.50">&lt;frozen importlib._bootstrap&gt;:688 ..</text>
        </g>
        <g>
            <title> (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="672" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="685.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="694" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="707.50">&lt;frozen importlib._bootstrap_exter..</text>
        </g>
        <g>
            <title> (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="716" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="729.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="738" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="751.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="760" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="773.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:17 (&lt;module&gt;) (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="782" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="795.50">/home/pedro/mestrado/biomal_repo/s..</text>
        </g>
        <g>
            <title>from .utils import _IS_32BIT (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="804" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="817.50">from .utils import _IS_32BIT..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="826" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="839.50">&lt;frozen importlib._bootstrap&gt;:1027..</text>
        </g>
        <g>
            <title> (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="848" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="861.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="870" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="883.50">&lt;frozen importlib._bootstrap&gt;:1006..</text>
        </g>
        <g>
            <title> (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="892" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="905.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="914" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="927.50">&lt;frozen importlib._bootstrap&gt;:688 ..</text>
        </g>
        <g>
            <title> (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="936" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="949.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:883 (exec_module) (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="958" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="971.50">&lt;frozen importlib._bootstrap_exter..</text>
        </g>
        <g>
            <title> (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="980" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="993.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="1002" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="1015.50">&lt;frozen importlib._bootstrap&gt;:241 ..</text>
        </g>
        <g>
            <title> (2,120,132,627 bytes, 28.88%)</title>
            <rect x="71.1061%" y="1024" width="28.8778%" height="21" fill="rgb(255,169,169)" fg:x="5220428953" fg:w="2120132627"/>
            <text x="71.3561%" y="1037.50"></text>
        </g>
        <g>
            <title>all (7,341,747,873 bytes, 100%)</title>
            <rect x="0.0000%" y="100" width="100.0000%" height="21" fill="rgb(255,100,100)" fg:x="0" fg:w="7341747873"/>
            <text x="0.2500%" y="113.50"></text>
        </g>
    </svg>
</svg>