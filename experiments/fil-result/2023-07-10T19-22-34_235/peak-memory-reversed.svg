<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1908" onload="init(evt)" viewBox="0 0 1200 1908" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno">
    <!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.-->
    <!--NOTES: -->
    <defs>
        <linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
            <stop stop-color="#eeeeee" offset="5%"/>
            <stop stop-color="#eeeeb0" offset="95%"/>
        </linearGradient>
    </defs>
    <style type="text/css">
text { font-family:monospace; font-size:16px }
#title { text-anchor:middle; font-size:21px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style>
    <script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 16;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script>
    <rect x="0" y="0" width="100%" height="1908" fill="url(#background)"/>
    <text id="title" fill="rgb(0,0,0)" x="50.0000%" y="32.00">Peak Tracked Memory Usage (1093.4 MiB), Reversed</text>
    <text id="subtitle" x="50.0000%" y="64.00">Made with the Fil profiler. <a href="https://pythonspeed.com/fil/" style="text-decoration: underline;" target="_parent">Try it on your code!</a></text>
    <text id="details" fill="rgb(0,0,0)" x="10" y="84.00"> </text>
    <text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="32.00">Reset Zoom</text>
    <text id="search" fill="rgb(0,0,0)" x="1190" y="32.00">Search</text>
    <text id="matched" fill="rgb(0,0,0)" x="1190" y="1895.00"> </text>
    <svg id="frames" x="10" width="1180" total_samples="1135096173">
        <g>
            <title>    data_cat = np.concatenate([b.data for b in blocks]) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="166" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="179.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:470 (_stack_along_minor_axis) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="188" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="201.50">/h..</text>
        </g>
        <g>
            <title>            blocks = [[_stack_along_minor_axis(blocks[b, :], 1)] (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="210" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="223.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:627 (&lt;listcomp&gt;) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="232" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="245.50">/h..</text>
        </g>
        <g>
            <title>            blocks = [[_stack_along_minor_axis(blocks[b, :], 1)] (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="254" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="267.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:627 (bmat) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="276" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="289.50">/h..</text>
        </g>
        <g>
            <title>    return bmat([blocks], format=format, dtype=dtype) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="298" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="311.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:535 (hstack) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="320" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="333.50">/h..</text>
        </g>
        <g>
            <title>        return scipy.sparse.hstack(Xs, format=&apos;csr&apos;) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="342" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="355.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:41 (_hstack) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="364" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="377.50">/h..</text>
        </g>
        <g>
            <title>        return _hstack(np.fromiter(embeddings_iter, dtype=&apos;object&apos;)) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="386" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="399.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:256 (transform) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="408" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="421.50">/h..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="430" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="443.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="452" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="465.50">/h..</text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="474" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="487.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="496" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="509.50">/h..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="518" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="531.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="540" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="553.50">/h..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="562" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="575.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="584" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="597.50">/h..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="606" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="619.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="628" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="641.50">/h..</text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="650" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="663.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="672" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="685.50">/h..</text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="694" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="707.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="716" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="729.50">/h..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="738" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="751.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="760" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="773.50">/h..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="782" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="795.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="804" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="817.50">/h..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="826" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="839.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="848" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="861.50">/h..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="870" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="883.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="892" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="905.50">/h..</text>
        </g>
        <g>
            <title>        self.results = batch() (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="914" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="927.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="936" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="949.50">/h..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="958" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="971.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="980" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="993.50">/h..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1002" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1015.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1024" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1037.50">/h..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1046" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1059.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1068" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1081.50">/h..</text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1090" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1103.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1112" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1125.50">/h..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1134" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1147.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1156" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1169.50">/h..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1178" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1191.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1200" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1213.50">/h..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1222" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1235.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1244" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1257.50">/h..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1266" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1279.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1288" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1301.50">/h..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1310" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1323.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1332" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1345.50">/h..</text>
        </g>
        <g>
            <title>        output = self.func(*args, **kwargs) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1354" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1367.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:779 (call) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1376" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1389.50">/h..</text>
        </g>
        <g>
            <title>            out, metadata = self.call(*args, **kwargs) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1398" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1411.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:537 (_cached_call) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1420" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1433.50">/h..</text>
        </g>
        <g>
            <title>        return self._cached_call(args, kwargs)[0] (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1442" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1455.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:594 (__call__) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1464" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1477.50">/h..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1486" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1499.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1508" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1521.50">/h..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1530" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1543.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1552" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1565.50">/h..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1574" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1587.50"> ..</text>
        </g>
        <g>
            <title>estimators.py:186 (&lt;module&gt;) (38,901,128 bytes, 3.43%)</title>
            <rect x="0.0024%" y="1596" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="27124" fg:w="38901128"/>
            <text x="0.2524%" y="1609.50">es..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:108 (_combine_features) (2,378,424 bytes, 0.21%)</title>
            <rect x="3.4295%" y="276" width="0.2095%" height="21" fill="rgb(255,243,243)" fg:x="38928252" fg:w="2378424"/>
            <text x="3.6795%" y="289.50"></text>
        </g>
        <g>
            <title>            X = self._combine_features(original_X, new_X) (2,378,424 bytes, 0.21%)</title>
            <rect x="3.4295%" y="298" width="0.2095%" height="21" fill="rgb(255,243,243)" fg:x="38928252" fg:w="2378424"/>
            <text x="3.6795%" y="311.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:427 (_fit) (2,378,424 bytes, 0.21%)</title>
            <rect x="3.4295%" y="320" width="0.2095%" height="21" fill="rgb(255,243,243)" fg:x="38928252" fg:w="2378424"/>
            <text x="3.6795%" y="333.50"></text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (2,378,424 bytes, 0.21%)</title>
            <rect x="3.4295%" y="342" width="0.2095%" height="21" fill="rgb(255,243,243)" fg:x="38928252" fg:w="2378424"/>
            <text x="3.6795%" y="355.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (2,378,424 bytes, 0.21%)</title>
            <rect x="3.4295%" y="364" width="0.2095%" height="21" fill="rgb(255,243,243)" fg:x="38928252" fg:w="2378424"/>
            <text x="3.6795%" y="377.50"></text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (2,378,424 bytes, 0.21%)</title>
            <rect x="3.4295%" y="386" width="0.2095%" height="21" fill="rgb(255,243,243)" fg:x="38928252" fg:w="2378424"/>
            <text x="3.6795%" y="399.50"></text>
        </g>
        <g>
            <title>estimators.py:186 (&lt;module&gt;) (2,378,424 bytes, 0.21%)</title>
            <rect x="3.4295%" y="408" width="0.2095%" height="21" fill="rgb(255,243,243)" fg:x="38928252" fg:w="2378424"/>
            <text x="3.6795%" y="421.50"></text>
        </g>
        <g>
            <title>            return np.hstack(Xs) (2,765,240 bytes, 0.24%)</title>
            <rect x="3.4295%" y="254" width="0.2436%" height="21" fill="rgb(255,242,242)" fg:x="38928252" fg:w="2765240"/>
            <text x="3.6795%" y="267.50"></text>
        </g>
        <g>
            <title>        return _nx.concatenate(arrs, 1, dtype=dtype, casting=casting) (3,036,072 bytes, 0.27%)</title>
            <rect x="3.4295%" y="166" width="0.2675%" height="21" fill="rgb(255,242,242)" fg:x="38928252" fg:w="3036072"/>
            <text x="3.6795%" y="179.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/numpy/core/shape_base.py:370 (hstack) (3,036,072 bytes, 0.27%)</title>
            <rect x="3.4295%" y="188" width="0.2675%" height="21" fill="rgb(255,242,242)" fg:x="38928252" fg:w="3036072"/>
            <text x="3.6795%" y="201.50"></text>
        </g>
        <g>
            <title> (3,036,072 bytes, 0.27%)</title>
            <rect x="3.4295%" y="210" width="0.2675%" height="21" fill="rgb(255,242,242)" fg:x="38928252" fg:w="3036072"/>
            <text x="3.6795%" y="223.50"></text>
        </g>
        <g>
            <title>&lt;__array_function__ internals&gt;:200 (hstack) (3,036,072 bytes, 0.27%)</title>
            <rect x="3.4295%" y="232" width="0.2675%" height="21" fill="rgb(255,242,242)" fg:x="38928252" fg:w="3036072"/>
            <text x="3.6795%" y="245.50"></text>
        </g>
        <g>
            <title>&lt;__array_function__ internals&gt;:200 (concatenate) (41,952,992 bytes, 3.70%)</title>
            <rect x="0.0024%" y="144" width="3.6960%" height="21" fill="rgb(255,221,221)" fg:x="27124" fg:w="41952992"/>
            <text x="0.2524%" y="157.50">&lt;_..</text>
        </g>
        <g>
            <title>        data = np.empty_like(data_cat) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="166" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="179.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:488 (_stack_along_minor_axis) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="188" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="201.50">/h..</text>
        </g>
        <g>
            <title>            blocks = [[_stack_along_minor_axis(blocks[b, :], 1)] (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="210" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="223.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:627 (&lt;listcomp&gt;) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="232" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="245.50">/h..</text>
        </g>
        <g>
            <title>            blocks = [[_stack_along_minor_axis(blocks[b, :], 1)] (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="254" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="267.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:627 (bmat) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="276" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="289.50">/h..</text>
        </g>
        <g>
            <title>    return bmat([blocks], format=format, dtype=dtype) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="298" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="311.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:535 (hstack) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="320" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="333.50">/h..</text>
        </g>
        <g>
            <title>        return scipy.sparse.hstack(Xs, format=&apos;csr&apos;) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="342" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="355.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:41 (_hstack) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="364" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="377.50">/h..</text>
        </g>
        <g>
            <title>        return _hstack(np.fromiter(embeddings_iter, dtype=&apos;object&apos;)) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="386" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="399.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:256 (transform) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="408" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="421.50">/h..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="430" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="443.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="452" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="465.50">/h..</text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="474" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="487.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="496" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="509.50">/h..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="518" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="531.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="540" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="553.50">/h..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="562" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="575.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="584" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="597.50">/h..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="606" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="619.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="628" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="641.50">/h..</text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="650" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="663.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="672" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="685.50">/h..</text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="694" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="707.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="716" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="729.50">/h..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="738" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="751.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="760" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="773.50">/h..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="782" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="795.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="804" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="817.50">/h..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="826" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="839.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="848" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="861.50">/h..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="870" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="883.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="892" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="905.50">/h..</text>
        </g>
        <g>
            <title>        self.results = batch() (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="914" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="927.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="936" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="949.50">/h..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="958" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="971.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="980" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="993.50">/h..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1002" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1015.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1024" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1037.50">/h..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1046" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1059.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1068" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1081.50">/h..</text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1090" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1103.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1112" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1125.50">/h..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1134" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1147.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1156" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1169.50">/h..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1178" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1191.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1200" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1213.50">/h..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1222" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1235.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1244" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1257.50">/h..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1266" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1279.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1288" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1301.50">/h..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1310" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1323.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1332" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1345.50">/h..</text>
        </g>
        <g>
            <title>        output = self.func(*args, **kwargs) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1354" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1367.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:779 (call) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1376" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1389.50">/h..</text>
        </g>
        <g>
            <title>            out, metadata = self.call(*args, **kwargs) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1398" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1411.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:537 (_cached_call) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1420" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1433.50">/h..</text>
        </g>
        <g>
            <title>        return self._cached_call(args, kwargs)[0] (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1442" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1455.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:594 (__call__) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1464" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1477.50">/h..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1486" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1499.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1508" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1521.50">/h..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1530" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1543.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1552" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1565.50">/h..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1574" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1587.50"> ..</text>
        </g>
        <g>
            <title>estimators.py:186 (&lt;module&gt;) (38,901,144 bytes, 3.43%)</title>
            <rect x="3.6987%" y="1596" width="3.4271%" height="21" fill="rgb(255,222,222)" fg:x="41983636" fg:w="38901144"/>
            <text x="3.9487%" y="1609.50">es..</text>
        </g>
        <g>
            <title>        indices = np.empty_like(indices_cat) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="166" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="179.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:487 (_stack_along_minor_axis) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="188" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="201.50"></text>
        </g>
        <g>
            <title>            blocks = [[_stack_along_minor_axis(blocks[b, :], 1)] (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="210" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="223.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:627 (&lt;listcomp&gt;) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="232" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="245.50"></text>
        </g>
        <g>
            <title>            blocks = [[_stack_along_minor_axis(blocks[b, :], 1)] (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="254" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="267.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:627 (bmat) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="276" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="289.50"></text>
        </g>
        <g>
            <title>    return bmat([blocks], format=format, dtype=dtype) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="298" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="311.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:535 (hstack) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="320" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="333.50"></text>
        </g>
        <g>
            <title>        return scipy.sparse.hstack(Xs, format=&apos;csr&apos;) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="342" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="355.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:41 (_hstack) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="364" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="377.50"></text>
        </g>
        <g>
            <title>        return _hstack(np.fromiter(embeddings_iter, dtype=&apos;object&apos;)) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="386" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="399.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:256 (transform) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="408" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="421.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="430" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="443.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="452" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="465.50"></text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="474" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="487.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="496" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="509.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="518" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="531.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="540" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="553.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="562" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="575.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="584" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="597.50"></text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="606" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="619.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="628" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="641.50"></text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="650" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="663.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="672" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="685.50"></text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="694" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="707.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="716" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="729.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="738" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="751.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="760" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="773.50"></text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="782" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="795.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="804" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="817.50"></text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="826" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="839.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="848" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="861.50"></text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="870" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="883.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="892" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="905.50"></text>
        </g>
        <g>
            <title>        self.results = batch() (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="914" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="927.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="936" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="949.50"></text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="958" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="971.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="980" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="993.50"></text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1002" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1015.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1024" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1037.50"></text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1046" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1059.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1068" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1081.50"></text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1090" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1103.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1112" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1125.50"></text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1134" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1147.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1156" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1169.50"></text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1178" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1191.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1200" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1213.50"></text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1222" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1235.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1244" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1257.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1266" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1279.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1288" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1301.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1310" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1323.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1332" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1345.50"></text>
        </g>
        <g>
            <title>        output = self.func(*args, **kwargs) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1354" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1367.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:779 (call) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1376" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1389.50"></text>
        </g>
        <g>
            <title>            out, metadata = self.call(*args, **kwargs) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1398" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1411.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:537 (_cached_call) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1420" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1433.50"></text>
        </g>
        <g>
            <title>        return self._cached_call(args, kwargs)[0] (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1442" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1455.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:594 (__call__) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1464" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1477.50"></text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1486" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1499.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1508" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1521.50"></text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1530" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1543.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1552" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1565.50"></text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1574" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1587.50"></text>
        </g>
        <g>
            <title>estimators.py:186 (&lt;module&gt;) (19,450,612 bytes, 1.71%)</title>
            <rect x="7.1258%" y="1596" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="80884780" fg:w="19450612"/>
            <text x="7.3758%" y="1609.50"></text>
        </g>
        <g>
            <title>&lt;__array_function__ internals&gt;:200 (empty_like) (59,328,556 bytes, 5.23%)</title>
            <rect x="3.6987%" y="144" width="5.2267%" height="21" fill="rgb(255,215,215)" fg:x="41983636" fg:w="59328556"/>
            <text x="3.9487%" y="157.50">&lt;__a..</text>
        </g>
        <g>
            <title> (2,544,427 bytes, 0.22%)</title>
            <rect x="9.0124%" y="342" width="0.2242%" height="21" fill="rgb(255,242,242)" fg:x="102299081" fg:w="2544427"/>
            <text x="9.2624%" y="355.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,544,427 bytes, 0.22%)</title>
            <rect x="9.0124%" y="364" width="0.2242%" height="21" fill="rgb(255,242,242)" fg:x="102299081" fg:w="2544427"/>
            <text x="9.2624%" y="377.50"></text>
        </g>
        <g>
            <title> (2,544,427 bytes, 0.22%)</title>
            <rect x="9.0124%" y="386" width="0.2242%" height="21" fill="rgb(255,242,242)" fg:x="102299081" fg:w="2544427"/>
            <text x="9.2624%" y="399.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (5,430,888 bytes, 0.48%)</title>
            <rect x="8.9262%" y="144" width="0.4785%" height="21" fill="rgb(255,239,239)" fg:x="101321456" fg:w="5430888"/>
            <text x="9.1762%" y="157.50"></text>
        </g>
        <g>
            <title> (5,430,888 bytes, 0.48%)</title>
            <rect x="8.9262%" y="166" width="0.4785%" height="21" fill="rgb(255,239,239)" fg:x="101321456" fg:w="5430888"/>
            <text x="9.1762%" y="179.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:1184 (exec_module) (4,453,263 bytes, 0.39%)</title>
            <rect x="9.0124%" y="188" width="0.3923%" height="21" fill="rgb(255,240,240)" fg:x="102299081" fg:w="4453263"/>
            <text x="9.2624%" y="201.50"></text>
        </g>
        <g>
            <title> (4,453,263 bytes, 0.39%)</title>
            <rect x="9.0124%" y="210" width="0.3923%" height="21" fill="rgb(255,240,240)" fg:x="102299081" fg:w="4453263"/>
            <text x="9.2624%" y="223.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (4,453,263 bytes, 0.39%)</title>
            <rect x="9.0124%" y="232" width="0.3923%" height="21" fill="rgb(255,240,240)" fg:x="102299081" fg:w="4453263"/>
            <text x="9.2624%" y="245.50"></text>
        </g>
        <g>
            <title> (4,453,263 bytes, 0.39%)</title>
            <rect x="9.0124%" y="254" width="0.3923%" height="21" fill="rgb(255,240,240)" fg:x="102299081" fg:w="4453263"/>
            <text x="9.2624%" y="267.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (4,453,263 bytes, 0.39%)</title>
            <rect x="9.0124%" y="276" width="0.3923%" height="21" fill="rgb(255,240,240)" fg:x="102299081" fg:w="4453263"/>
            <text x="9.2624%" y="289.50"></text>
        </g>
        <g>
            <title> (4,453,263 bytes, 0.39%)</title>
            <rect x="9.0124%" y="298" width="0.3923%" height="21" fill="rgb(255,240,240)" fg:x="102299081" fg:w="4453263"/>
            <text x="9.2624%" y="311.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (4,453,263 bytes, 0.39%)</title>
            <rect x="9.0124%" y="320" width="0.3923%" height="21" fill="rgb(255,240,240)" fg:x="102299081" fg:w="4453263"/>
            <text x="9.2624%" y="333.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1078 (_handle_fromlist) (2,687,963 bytes, 0.24%)</title>
            <rect x="9.4175%" y="452" width="0.2368%" height="21" fill="rgb(255,242,242)" fg:x="106897617" fg:w="2687963"/>
            <text x="9.6675%" y="465.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (2,747,768 bytes, 0.24%)</title>
            <rect x="9.4175%" y="408" width="0.2421%" height="21" fill="rgb(255,242,242)" fg:x="106897617" fg:w="2747768"/>
            <text x="9.6675%" y="421.50"></text>
        </g>
        <g>
            <title> (2,747,768 bytes, 0.24%)</title>
            <rect x="9.4175%" y="430" width="0.2421%" height="21" fill="rgb(255,242,242)" fg:x="106897617" fg:w="2747768"/>
            <text x="9.6675%" y="443.50"></text>
        </g>
        <g>
            <title> (2,778,982 bytes, 0.24%)</title>
            <rect x="9.4157%" y="386" width="0.2448%" height="21" fill="rgb(255,242,242)" fg:x="106876915" fg:w="2778982"/>
            <text x="9.6657%" y="399.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:672 (_compile_bytecode) (18,339,565 bytes, 1.62%)</title>
            <rect x="9.4132%" y="144" width="1.6157%" height="21" fill="rgb(255,230,230)" fg:x="106848555" fg:w="18339565"/>
            <text x="9.6632%" y="157.50"></text>
        </g>
        <g>
            <title> (18,339,565 bytes, 1.62%)</title>
            <rect x="9.4132%" y="166" width="1.6157%" height="21" fill="rgb(255,230,230)" fg:x="106848555" fg:w="18339565"/>
            <text x="9.6632%" y="179.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:1012 (get_code) (18,339,565 bytes, 1.62%)</title>
            <rect x="9.4132%" y="188" width="1.6157%" height="21" fill="rgb(255,230,230)" fg:x="106848555" fg:w="18339565"/>
            <text x="9.6632%" y="201.50"></text>
        </g>
        <g>
            <title> (18,339,565 bytes, 1.62%)</title>
            <rect x="9.4132%" y="210" width="1.6157%" height="21" fill="rgb(255,230,230)" fg:x="106848555" fg:w="18339565"/>
            <text x="9.6632%" y="223.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:879 (exec_module) (18,339,565 bytes, 1.62%)</title>
            <rect x="9.4132%" y="232" width="1.6157%" height="21" fill="rgb(255,230,230)" fg:x="106848555" fg:w="18339565"/>
            <text x="9.6632%" y="245.50"></text>
        </g>
        <g>
            <title> (18,339,565 bytes, 1.62%)</title>
            <rect x="9.4132%" y="254" width="1.6157%" height="21" fill="rgb(255,230,230)" fg:x="106848555" fg:w="18339565"/>
            <text x="9.6632%" y="267.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:688 (_load_unlocked) (18,339,565 bytes, 1.62%)</title>
            <rect x="9.4132%" y="276" width="1.6157%" height="21" fill="rgb(255,230,230)" fg:x="106848555" fg:w="18339565"/>
            <text x="9.6632%" y="289.50"></text>
        </g>
        <g>
            <title> (18,339,565 bytes, 1.62%)</title>
            <rect x="9.4132%" y="298" width="1.6157%" height="21" fill="rgb(255,230,230)" fg:x="106848555" fg:w="18339565"/>
            <text x="9.6632%" y="311.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1006 (_find_and_load_unlocked) (18,339,565 bytes, 1.62%)</title>
            <rect x="9.4132%" y="320" width="1.6157%" height="21" fill="rgb(255,230,230)" fg:x="106848555" fg:w="18339565"/>
            <text x="9.6632%" y="333.50"></text>
        </g>
        <g>
            <title> (18,339,565 bytes, 1.62%)</title>
            <rect x="9.4132%" y="342" width="1.6157%" height="21" fill="rgb(255,230,230)" fg:x="106848555" fg:w="18339565"/>
            <text x="9.6632%" y="355.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1027 (_find_and_load) (18,339,565 bytes, 1.62%)</title>
            <rect x="9.4132%" y="364" width="1.6157%" height="21" fill="rgb(255,230,230)" fg:x="106848555" fg:w="18339565"/>
            <text x="9.6632%" y="377.50"></text>
        </g>
        <g>
            <title> (125,191,204 bytes, 11.03%)</title>
            <rect x="0.0006%" y="122" width="11.0291%" height="21" fill="rgb(255,200,200)" fg:x="7156" fg:w="125191204"/>
            <text x="0.2506%" y="135.50"></text>
        </g>
        <g>
            <title>    VBV = blockVectorV.T.conj() @ blockVectorBV (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="122" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="135.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_eigen/lobpcg/lobpcg.py:105 (_b_orthonormalize) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="144" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="157.50">/..</text>
        </g>
        <g>
            <title>    blockVectorX, blockVectorBX, _, _ = _b_orthonormalize( (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="166" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="179.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_eigen/lobpcg/lobpcg.py:516 (lobpcg) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="188" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="201.50">/..</text>
        </g>
        <g>
            <title>        _, eigvec = lobpcg(XH_X, X, tol=tol ** 2, maxiter=maxiter, (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="210" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="223.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_eigen/_svds.py:491 (svds) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="232" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="245.50">/..</text>
        </g>
        <g>
            <title>        U, Sigma, VT = svds(X, k=self.n_components, tol=self.tol, v0=v0, solver=&quot;lobpcg&quot;) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="254" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="267.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/_lobpcg_truncated_svd.py:57 (fit_transform) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="276" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="289.50">/..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="298" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="311.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="320" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="333.50">/..</text>
        </g>
        <g>
            <title>                return last_step.fit_transform(Xt, y, **fit_params_last_step) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="342" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="355.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:445 (fit_transform) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="364" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="377.50">/..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="386" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="399.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="408" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="421.50">/..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="430" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="443.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="452" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="465.50">/..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="474" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="487.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="496" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="509.50">/..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="518" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="531.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="540" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="553.50">/..</text>
        </g>
        <g>
            <title>        self.results = batch() (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="562" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="575.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="584" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="597.50">/..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="606" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="619.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="628" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="641.50">/..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="650" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="663.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="672" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="685.50">/..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="694" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="707.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="716" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="729.50">/..</text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="738" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="751.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="760" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="773.50">/..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="782" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="795.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="804" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="817.50">/..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="826" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="839.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="848" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="861.50">/..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="870" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="883.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="892" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="905.50">/..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="914" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="927.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="936" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="949.50">/..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="958" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="971.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="980" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="993.50">/..</text>
        </g>
        <g>
            <title>        output = self.func(*args, **kwargs) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="1002" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="1015.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:779 (call) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="1024" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="1037.50">/..</text>
        </g>
        <g>
            <title>            out, metadata = self.call(*args, **kwargs) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="1046" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="1059.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:537 (_cached_call) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="1068" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="1081.50">/..</text>
        </g>
        <g>
            <title>        return self._cached_call(args, kwargs)[0] (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="1090" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="1103.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:594 (__call__) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="1112" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="1125.50">/..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="1134" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="1147.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="1156" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="1169.50">/..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="1178" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="1191.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="1200" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="1213.50">/..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="1222" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="1235.50">..</text>
        </g>
        <g>
            <title>estimators.py:186 (&lt;module&gt;) (33,554,432 bytes, 2.96%)</title>
            <rect x="11.1873%" y="1244" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="126986711" fg:w="33554432"/>
            <text x="11.4373%" y="1257.50">e..</text>
        </g>
        <g>
            <title>    blockVectorX, blockVectorBX, _, _ = _b_orthonormalize( (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="254" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="267.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_eigen/lobpcg/lobpcg.py:516 (lobpcg) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="276" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="289.50">/..</text>
        </g>
        <g>
            <title>        _, eigvec = lobpcg(XH_X, X, tol=tol ** 2, maxiter=maxiter, (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="298" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="311.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_eigen/_svds.py:491 (svds) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="320" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="333.50">/..</text>
        </g>
        <g>
            <title>        U, Sigma, VT = svds(X, k=self.n_components, tol=self.tol, v0=v0, solver=&quot;lobpcg&quot;) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="342" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="355.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/_lobpcg_truncated_svd.py:57 (fit_transform) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="364" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="377.50">/..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="386" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="399.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="408" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="421.50">/..</text>
        </g>
        <g>
            <title>                return last_step.fit_transform(Xt, y, **fit_params_last_step) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="430" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="443.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:445 (fit_transform) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="452" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="465.50">/..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="474" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="487.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="496" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="509.50">/..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="518" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="531.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="540" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="553.50">/..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="562" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="575.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="584" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="597.50">/..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="606" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="619.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="628" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="641.50">/..</text>
        </g>
        <g>
            <title>        self.results = batch() (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="650" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="663.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="672" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="685.50">/..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="694" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="707.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="716" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="729.50">/..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="738" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="751.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="760" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="773.50">/..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="782" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="795.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="804" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="817.50">/..</text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="826" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="839.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="848" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="861.50">/..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="870" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="883.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="892" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="905.50">/..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="914" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="927.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="936" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="949.50">/..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="958" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="971.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="980" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="993.50">/..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="1002" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="1015.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="1024" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="1037.50">/..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="1046" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="1059.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="1068" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="1081.50">/..</text>
        </g>
        <g>
            <title>        output = self.func(*args, **kwargs) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="1090" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="1103.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:779 (call) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="1112" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="1125.50">/..</text>
        </g>
        <g>
            <title>            out, metadata = self.call(*args, **kwargs) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="1134" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="1147.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:537 (_cached_call) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="1156" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="1169.50">/..</text>
        </g>
        <g>
            <title>        return self._cached_call(args, kwargs)[0] (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="1178" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="1191.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:594 (__call__) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="1200" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="1213.50">/..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="1222" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="1235.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="1244" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="1257.50">/..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="1266" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="1279.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="1288" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="1301.50">/..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="1310" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="1323.50">..</text>
        </g>
        <g>
            <title>estimators.py:186 (&lt;module&gt;) (33,554,432 bytes, 2.96%)</title>
            <rect x="14.1478%" y="1332" width="2.9561%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33554432"/>
            <text x="14.3978%" y="1345.50">e..</text>
        </g>
        <g>
            <title>    c, info = potrf(a1, lower=lower, overwrite_a=overwrite_a, clean=clean) (33,557,992 bytes, 2.96%)</title>
            <rect x="14.1478%" y="122" width="2.9564%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33557992"/>
            <text x="14.3978%" y="135.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/linalg/_decomp_cholesky.py:35 (_cholesky) (33,557,992 bytes, 2.96%)</title>
            <rect x="14.1478%" y="144" width="2.9564%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33557992"/>
            <text x="14.3978%" y="157.50">/..</text>
        </g>
        <g>
            <title>    c, lower = _cholesky(a, lower=lower, overwrite_a=overwrite_a, clean=True, (33,557,992 bytes, 2.96%)</title>
            <rect x="14.1478%" y="166" width="2.9564%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33557992"/>
            <text x="14.3978%" y="179.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/linalg/_decomp_cholesky.py:89 (cholesky) (33,557,992 bytes, 2.96%)</title>
            <rect x="14.1478%" y="188" width="2.9564%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33557992"/>
            <text x="14.3978%" y="201.50">/..</text>
        </g>
        <g>
            <title>        VBV = cholesky(VBV, overwrite_a=True) (33,557,992 bytes, 2.96%)</title>
            <rect x="14.1478%" y="210" width="2.9564%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33557992"/>
            <text x="14.3978%" y="223.50">..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_eigen/lobpcg/lobpcg.py:108 (_b_orthonormalize) (33,557,992 bytes, 2.96%)</title>
            <rect x="14.1478%" y="232" width="2.9564%" height="21" fill="rgb(255,224,224)" fg:x="160591256" fg:w="33557992"/>
            <text x="14.3978%" y="245.50">/..</text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="694" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="707.50">         ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="716" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="729.50">/home/pedr..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="738" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="751.50">        r..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="760" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="773.50">/home/pedr..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="782" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="795.50">         ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="804" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="817.50">/home/pedr..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="826" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="839.50">        r..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="848" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="861.50">/home/pedr..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="870" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="883.50">        d..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="892" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="905.50">/home/pedr..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="914" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="927.50">         ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="936" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="949.50">/home/pedr..</text>
        </g>
        <g>
            <title>        output = self.func(*args, **kwargs) (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="958" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="971.50">        o..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:779 (call) (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="980" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="993.50">/home/pedr..</text>
        </g>
        <g>
            <title>            out, metadata = self.call(*args, **kwargs) (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="1002" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="1015.50">         ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:537 (_cached_call) (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="1024" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="1037.50">/home/pedr..</text>
        </g>
        <g>
            <title>        return self._cached_call(args, kwargs)[0] (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="1046" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="1059.50">        r..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:594 (__call__) (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="1068" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="1081.50">/home/pedr..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="1090" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="1103.50">         ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="1112" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="1125.50">/home/pedr..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="1134" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="1147.50">        X..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="1156" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="1169.50">/home/pedr..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="1178" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="1191.50">    casca..</text>
        </g>
        <g>
            <title>estimators.py:186 (&lt;module&gt;) (110,580,096 bytes, 9.74%)</title>
            <rect x="17.4813%" y="1200" width="9.7419%" height="21" fill="rgb(255,203,203)" fg:x="198429965" fg:w="110580096"/>
            <text x="17.7313%" y="1213.50">estimators..</text>
        </g>
        <g>
            <title>    u, s, v, info = gesXd(a1, compute_uv=compute_uv, lwork=lwork, (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="122" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="135.50">    u, s, v, i..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/linalg/_decomp_svd.py:127 (svd) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="144" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="157.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>    u, s, vh = svd(Av, full_matrices=False, overwrite_a=True) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="166" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="179.50">    u, s, vh =..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/linalg/_eigen/_svds.py:546 (svds) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="188" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="201.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>        U, Sigma, VT = svds(X, k=self.n_components, tol=self.tol, v0=v0, solver=&quot;lobpcg&quot;) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="210" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="223.50">        U, Sig..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/_lobpcg_truncated_svd.py:57 (fit_transform) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="232" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="245.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="254" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="267.50">        data_t..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="276" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="289.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>                return last_step.fit_transform(Xt, y, **fit_params_last_step) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="298" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="311.50">              ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:445 (fit_transform) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="320" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="333.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="342" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="355.50">            re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="364" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="377.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="386" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="399.50">            re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="408" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="421.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="430" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="443.50">            re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="452" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="465.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="474" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="487.50">            re..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="496" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="509.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>        self.results = batch() (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="518" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="531.50">        self.r..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="540" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="553.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="562" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="575.50">        result..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="584" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="597.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="606" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="619.50">            jo..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="628" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="641.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="650" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="663.50">              ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (160,614,432 bytes, 14.15%)</title>
            <rect x="17.4813%" y="672" width="14.1499%" height="21" fill="rgb(255,193,193)" fg:x="198429965" fg:w="160614432"/>
            <text x="17.7313%" y="685.50">/home/pedro/mes..</text>
        </g>
        <g>
            <title>            while self.dispatch_one_batch(iterator): (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="694" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="707.50">  ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1088 (__call__) (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="716" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="729.50">/ho..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="738" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="751.50">  ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="760" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="773.50">/ho..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="782" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="795.50">  ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="804" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="817.50">/ho..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="826" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="839.50">  ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="848" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="861.50">/ho..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="870" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="883.50">  ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="892" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="905.50">/ho..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="914" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="927.50">  ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="936" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="949.50">/ho..</text>
        </g>
        <g>
            <title>        output = self.func(*args, **kwargs) (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="958" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="971.50">  ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:779 (call) (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="980" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="993.50">/ho..</text>
        </g>
        <g>
            <title>            out, metadata = self.call(*args, **kwargs) (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="1002" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="1015.50">  ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:537 (_cached_call) (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="1024" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="1037.50">/ho..</text>
        </g>
        <g>
            <title>        return self._cached_call(args, kwargs)[0] (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="1046" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="1059.50">  ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:594 (__call__) (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="1068" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="1081.50">/ho..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="1090" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="1103.50">  ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="1112" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="1125.50">/ho..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="1134" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="1147.50">  ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="1156" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="1169.50">/ho..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="1178" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="1191.50">  ..</text>
        </g>
        <g>
            <title>estimators.py:186 (&lt;module&gt;) (50,034,336 bytes, 4.41%)</title>
            <rect x="27.2232%" y="1200" width="4.4079%" height="21" fill="rgb(255,218,218)" fg:x="309010061" fg:w="50034336"/>
            <text x="27.4732%" y="1213.50">est..</text>
        </g>
        <g>
            <title>        tree.fit(X, y, sample_weight=curr_sample_weight, check_input=False) (175,259,840 bytes, 15.44%)</title>
            <rect x="31.6455%" y="210" width="15.4401%" height="21" fill="rgb(255,191,191)" fg:x="359206996" fg:w="175259840"/>
            <text x="31.8955%" y="223.50">        tree.fit..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:184 (_parallel_build_trees) (175,259,840 bytes, 15.44%)</title>
            <rect x="31.6455%" y="232" width="15.4401%" height="21" fill="rgb(255,191,191)" fg:x="359206996" fg:w="175259840"/>
            <text x="31.8955%" y="245.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (175,259,840 bytes, 15.44%)</title>
            <rect x="31.6455%" y="254" width="15.4401%" height="21" fill="rgb(255,191,191)" fg:x="359206996" fg:w="175259840"/>
            <text x="31.8955%" y="267.50">            retu..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (175,259,840 bytes, 15.44%)</title>
            <rect x="31.6455%" y="276" width="15.4401%" height="21" fill="rgb(255,191,191)" fg:x="359206996" fg:w="175259840"/>
            <text x="31.8955%" y="289.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (175,259,840 bytes, 15.44%)</title>
            <rect x="31.6455%" y="298" width="15.4401%" height="21" fill="rgb(255,191,191)" fg:x="359206996" fg:w="175259840"/>
            <text x="31.8955%" y="311.50">            retu..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (175,259,840 bytes, 15.44%)</title>
            <rect x="31.6455%" y="320" width="15.4401%" height="21" fill="rgb(255,191,191)" fg:x="359206996" fg:w="175259840"/>
            <text x="31.8955%" y="333.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (175,259,840 bytes, 15.44%)</title>
            <rect x="31.6455%" y="342" width="15.4401%" height="21" fill="rgb(255,191,191)" fg:x="359206996" fg:w="175259840"/>
            <text x="31.8955%" y="355.50">            retu..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (175,259,840 bytes, 15.44%)</title>
            <rect x="31.6455%" y="364" width="15.4401%" height="21" fill="rgb(255,191,191)" fg:x="359206996" fg:w="175259840"/>
            <text x="31.8955%" y="377.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>        self.results = batch() (175,259,840 bytes, 15.44%)</title>
            <rect x="31.6455%" y="386" width="15.4401%" height="21" fill="rgb(255,191,191)" fg:x="359206996" fg:w="175259840"/>
            <text x="31.8955%" y="399.50">        self.res..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (175,259,840 bytes, 15.44%)</title>
            <rect x="31.6455%" y="408" width="15.4401%" height="21" fill="rgb(255,191,191)" fg:x="359206996" fg:w="175259840"/>
            <text x="31.8955%" y="421.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (175,259,840 bytes, 15.44%)</title>
            <rect x="31.6455%" y="430" width="15.4401%" height="21" fill="rgb(255,191,191)" fg:x="359206996" fg:w="175259840"/>
            <text x="31.8955%" y="443.50">        result =..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (175,259,840 bytes, 15.44%)</title>
            <rect x="31.6455%" y="452" width="15.4401%" height="21" fill="rgb(255,191,191)" fg:x="359206996" fg:w="175259840"/>
            <text x="31.8955%" y="465.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (175,259,840 bytes, 15.44%)</title>
            <rect x="31.6455%" y="474" width="15.4401%" height="21" fill="rgb(255,191,191)" fg:x="359206996" fg:w="175259840"/>
            <text x="31.8955%" y="487.50">            job ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (175,259,840 bytes, 15.44%)</title>
            <rect x="31.6455%" y="496" width="15.4401%" height="21" fill="rgb(255,191,191)" fg:x="359206996" fg:w="175259840"/>
            <text x="31.8955%" y="509.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (175,259,840 bytes, 15.44%)</title>
            <rect x="31.6455%" y="518" width="15.4401%" height="21" fill="rgb(255,191,191)" fg:x="359206996" fg:w="175259840"/>
            <text x="31.8955%" y="531.50">                ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (175,259,840 bytes, 15.44%)</title>
            <rect x="31.6455%" y="540" width="15.4401%" height="21" fill="rgb(255,191,191)" fg:x="359206996" fg:w="175259840"/>
            <text x="31.8955%" y="553.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            while self.dispatch_one_batch(iterator): (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="562" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="575.50">            whil..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1088 (__call__) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="584" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="597.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="606" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="619.50">        return s..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="628" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="641.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            trees = Parallel( (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="650" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="663.50">            tree..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:473 (fit) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="672" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="685.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>        self.estimator_.fit(X, y) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="694" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="707.50">        self.est..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:216 (fit) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="716" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="729.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="738" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="751.50">            retu..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="760" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="773.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="782" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="795.50">        data_to_..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="804" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="817.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="826" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="839.50">            res ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="848" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="861.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="870" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="883.50">        return s..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="892" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="905.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="914" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="927.50">            X, f..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="936" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="949.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="958" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="971.50">        Xt = sel..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="980" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="993.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1002" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1015.50">            res ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1024" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1037.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1046" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1059.50">            retu..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1068" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1081.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1090" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1103.50">            retu..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1112" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1125.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1134" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1147.50">            retu..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1156" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1169.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>        self.results = batch() (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1178" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1191.50">        self.res..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1200" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1213.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1222" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1235.50">        result =..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1244" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1257.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1266" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1279.50">            job ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1288" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1301.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1310" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1323.50">                ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1332" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1345.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            while self.dispatch_one_batch(iterator): (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1354" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1367.50">            whil..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1088 (__call__) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1376" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1389.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1398" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1411.50">        return s..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1420" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1433.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1442" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1455.50">            retu..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1464" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1477.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1486" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1499.50">        result =..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1508" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1521.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1530" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1543.50">        data_to_..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1552" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1565.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1574" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1587.50">            res ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1596" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1609.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>        output = self.func(*args, **kwargs) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1618" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1631.50">        output =..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:779 (call) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1640" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1653.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>            out, metadata = self.call(*args, **kwargs) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1662" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1675.50">            out,..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:537 (_cached_call) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1684" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1697.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>        return self._cached_call(args, kwargs)[0] (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1706" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1719.50">        return s..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:594 (__call__) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1728" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1741.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1750" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1763.50">                ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1772" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1785.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1794" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1807.50">        Xt, yt =..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1816" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1829.50">/home/pedro/mestr..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1838" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1851.50">    cascade = ca..</text>
        </g>
        <g>
            <title>estimators.py:186 (&lt;module&gt;) (173,504,520 bytes, 15.29%)</title>
            <rect x="31.8002%" y="1860" width="15.2854%" height="21" fill="rgb(255,191,191)" fg:x="360962316" fg:w="173504520"/>
            <text x="32.0502%" y="1873.50">estimators.py:186..</text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="562" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="575.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="584" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="597.50"></text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="606" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="619.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="628" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="641.50"></text>
        </g>
        <g>
            <title>            trees = Parallel( (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="650" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="663.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:473 (fit) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="672" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="685.50"></text>
        </g>
        <g>
            <title>        self.estimator_.fit(X, y) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="694" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="707.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:216 (fit) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="716" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="729.50"></text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="738" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="751.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="760" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="773.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="782" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="795.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="804" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="817.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="826" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="839.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="848" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="861.50"></text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="870" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="883.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="892" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="905.50"></text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="914" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="927.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="936" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="949.50"></text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="958" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="971.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="980" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="993.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1002" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1015.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1024" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1037.50"></text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1046" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1059.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1068" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1081.50"></text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1090" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1103.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1112" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1125.50"></text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1134" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1147.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1156" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1169.50"></text>
        </g>
        <g>
            <title>        self.results = batch() (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1178" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1191.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1200" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1213.50"></text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1222" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1235.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1244" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1257.50"></text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1266" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1279.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1288" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1301.50"></text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1310" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1323.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1332" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1345.50"></text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1354" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1367.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1376" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1389.50"></text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1398" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1411.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1420" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1433.50"></text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1442" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1455.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1464" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1477.50"></text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1486" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1499.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1508" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1521.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1530" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1543.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1552" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1565.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1574" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1587.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1596" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1609.50"></text>
        </g>
        <g>
            <title>        output = self.func(*args, **kwargs) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1618" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1631.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:779 (call) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1640" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1653.50"></text>
        </g>
        <g>
            <title>            out, metadata = self.call(*args, **kwargs) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1662" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1675.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:537 (_cached_call) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1684" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1697.50"></text>
        </g>
        <g>
            <title>        return self._cached_call(args, kwargs)[0] (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1706" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1719.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:594 (__call__) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1728" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1741.50"></text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1750" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1763.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1772" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1785.50"></text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1794" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1807.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1816" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1829.50"></text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1838" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1851.50"></text>
        </g>
        <g>
            <title>estimators.py:186 (&lt;module&gt;) (5,129,384 bytes, 0.45%)</title>
            <rect x="47.0856%" y="1860" width="0.4519%" height="21" fill="rgb(255,239,239)" fg:x="534466836" fg:w="5129384"/>
            <text x="47.3356%" y="1873.50"></text>
        </g>
        <g>
            <title>        builder.build(self.tree_, X, y, sample_weight) (690,843,784 bytes, 60.86%)</title>
            <rect x="31.6455%" y="122" width="60.8621%" height="21" fill="rgb(255,133,133)" fg:x="359206996" fg:w="690843784"/>
            <text x="31.8955%" y="135.50">        builder.build(self.tree_, X, y, sample_weight)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/tree/_classes.py:379 (fit) (690,843,784 bytes, 60.86%)</title>
            <rect x="31.6455%" y="144" width="60.8621%" height="21" fill="rgb(255,133,133)" fg:x="359206996" fg:w="690843784"/>
            <text x="31.8955%" y="157.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10..</text>
        </g>
        <g>
            <title>        super().fit( (690,843,784 bytes, 60.86%)</title>
            <rect x="31.6455%" y="166" width="60.8621%" height="21" fill="rgb(255,133,133)" fg:x="359206996" fg:w="690843784"/>
            <text x="31.8955%" y="179.50">        super().fit(</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/tree/_classes.py:889 (fit) (690,843,784 bytes, 60.86%)</title>
            <rect x="31.6455%" y="188" width="60.8621%" height="21" fill="rgb(255,133,133)" fg:x="359206996" fg:w="690843784"/>
            <text x="31.8955%" y="201.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10..</text>
        </g>
        <g>
            <title>        tree.fit(X, y, sample_weight=sample_weight, check_input=False) (515,583,944 bytes, 45.42%)</title>
            <rect x="47.0856%" y="210" width="45.4220%" height="21" fill="rgb(255,148,148)" fg:x="534466836" fg:w="515583944"/>
            <text x="47.3356%" y="223.50">        tree.fit(X, y, sample_weight=sample_weight, ch..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:186 (_parallel_build_trees) (515,583,944 bytes, 45.42%)</title>
            <rect x="47.0856%" y="232" width="45.4220%" height="21" fill="rgb(255,148,148)" fg:x="534466836" fg:w="515583944"/>
            <text x="47.3356%" y="245.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (515,583,944 bytes, 45.42%)</title>
            <rect x="47.0856%" y="254" width="45.4220%" height="21" fill="rgb(255,148,148)" fg:x="534466836" fg:w="515583944"/>
            <text x="47.3356%" y="267.50">            return self.function(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (515,583,944 bytes, 45.42%)</title>
            <rect x="47.0856%" y="276" width="45.4220%" height="21" fill="rgb(255,148,148)" fg:x="534466836" fg:w="515583944"/>
            <text x="47.3356%" y="289.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (515,583,944 bytes, 45.42%)</title>
            <rect x="47.0856%" y="298" width="45.4220%" height="21" fill="rgb(255,148,148)" fg:x="534466836" fg:w="515583944"/>
            <text x="47.3356%" y="311.50">            return [func(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (515,583,944 bytes, 45.42%)</title>
            <rect x="47.0856%" y="320" width="45.4220%" height="21" fill="rgb(255,148,148)" fg:x="534466836" fg:w="515583944"/>
            <text x="47.3356%" y="333.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (515,583,944 bytes, 45.42%)</title>
            <rect x="47.0856%" y="342" width="45.4220%" height="21" fill="rgb(255,148,148)" fg:x="534466836" fg:w="515583944"/>
            <text x="47.3356%" y="355.50">            return [func(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (515,583,944 bytes, 45.42%)</title>
            <rect x="47.0856%" y="364" width="45.4220%" height="21" fill="rgb(255,148,148)" fg:x="534466836" fg:w="515583944"/>
            <text x="47.3356%" y="377.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>        self.results = batch() (515,583,944 bytes, 45.42%)</title>
            <rect x="47.0856%" y="386" width="45.4220%" height="21" fill="rgb(255,148,148)" fg:x="534466836" fg:w="515583944"/>
            <text x="47.3356%" y="399.50">        self.results = batch()</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (515,583,944 bytes, 45.42%)</title>
            <rect x="47.0856%" y="408" width="45.4220%" height="21" fill="rgb(255,148,148)" fg:x="534466836" fg:w="515583944"/>
            <text x="47.3356%" y="421.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (515,583,944 bytes, 45.42%)</title>
            <rect x="47.0856%" y="430" width="45.4220%" height="21" fill="rgb(255,148,148)" fg:x="534466836" fg:w="515583944"/>
            <text x="47.3356%" y="443.50">        result = ImmediateResult(func)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (515,583,944 bytes, 45.42%)</title>
            <rect x="47.0856%" y="452" width="45.4220%" height="21" fill="rgb(255,148,148)" fg:x="534466836" fg:w="515583944"/>
            <text x="47.3356%" y="465.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (515,583,944 bytes, 45.42%)</title>
            <rect x="47.0856%" y="474" width="45.4220%" height="21" fill="rgb(255,148,148)" fg:x="534466836" fg:w="515583944"/>
            <text x="47.3356%" y="487.50">            job = self._backend.apply_async(batch, cal..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (515,583,944 bytes, 45.42%)</title>
            <rect x="47.0856%" y="496" width="45.4220%" height="21" fill="rgb(255,148,148)" fg:x="534466836" fg:w="515583944"/>
            <text x="47.3356%" y="509.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (515,583,944 bytes, 45.42%)</title>
            <rect x="47.0856%" y="518" width="45.4220%" height="21" fill="rgb(255,148,148)" fg:x="534466836" fg:w="515583944"/>
            <text x="47.3356%" y="531.50">                self._dispatch(tasks)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (515,583,944 bytes, 45.42%)</title>
            <rect x="47.0856%" y="540" width="45.4220%" height="21" fill="rgb(255,148,148)" fg:x="534466836" fg:w="515583944"/>
            <text x="47.3356%" y="553.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>            while self.dispatch_one_batch(iterator): (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="562" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="575.50">            while self.dispatch_one_batch(iterator):..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1088 (__call__) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="584" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="597.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="606" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="619.50">        return super().__call__(iterable_with_config)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="628" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="641.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>            trees = Parallel( (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="650" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="663.50">            trees = Parallel(..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/ensemble/_forest.py:473 (fit) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="672" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="685.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>        self.estimator_.fit(X, y) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="694" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="707.50">        self.estimator_.fit(X, y)</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:216 (fit) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="716" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="729.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="738" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="751.50">            return self.fit(X, y, **fit_params).transf..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="760" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="773.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="782" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="795.50">        data_to_wrap = f(self, X, *args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="804" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="817.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="826" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="839.50">            res = transformer.fit_transform(X, y, **fi..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="848" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="861.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="870" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="883.50">        return self.func(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="892" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="905.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="914" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="927.50">            X, fitted_transformer = fit_transform_one_..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="936" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="949.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="958" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="971.50">        Xt = self._fit(X, y, **fit_params_steps)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="980" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="993.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1002" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1015.50">            res = transformer.fit_transform(X, y, **fi..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1024" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1037.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1046" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1059.50">            return self.function(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1068" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1081.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1090" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1103.50">            return [func(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1112" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1125.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1134" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1147.50">            return [func(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1156" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1169.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>        self.results = batch() (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1178" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1191.50">        self.results = batch()</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1200" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1213.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1222" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1235.50">        result = ImmediateResult(func)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1244" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1257.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1266" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1279.50">            job = self._backend.apply_async(batch, cal..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1288" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1301.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1310" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1323.50">                self._dispatch(tasks)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1332" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1345.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1354" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1367.50">            if self.dispatch_one_batch(iterator):..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1376" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1389.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1398" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1411.50">        return super().__call__(iterable_with_config)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1420" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1433.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1442" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1455.50">            return Parallel(n_jobs=self.n_jobs)(..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1464" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1477.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1486" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1499.50">        result = self._fit_transform(X, y, _fit_transf..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1508" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1521.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1530" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1543.50">        data_to_wrap = f(self, X, *args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1552" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1565.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1574" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1587.50">            res = transformer.fit_transform(X, y, **fi..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1596" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1609.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>        output = self.func(*args, **kwargs) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1618" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1631.50">        output = self.func(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:779 (call) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1640" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1653.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>            out, metadata = self.call(*args, **kwargs) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1662" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1675.50">            out, metadata = self.call(*args, **kwargs)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:537 (_cached_call) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1684" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1697.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>        return self._cached_call(args, kwargs)[0] (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1706" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1719.50">        return self._cached_call(args, kwargs)[0]..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:594 (__call__) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1728" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1741.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1750" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1763.50">                new_X, fitted_transformer = fit_transf..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1772" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1785.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1794" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1807.50">        Xt, yt = self._fit(X, y, **fit_params_steps)..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1816" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1829.50">/home/pedro/mestrado/biomal_repo/scripts/cascade_forest..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1838" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1851.50">    cascade = cascade_weak_label_tree_embedder.fit(X, ..</text>
        </g>
        <g>
            <title>estimators.py:186 (&lt;module&gt;) (510,454,560 bytes, 44.97%)</title>
            <rect x="47.5375%" y="1860" width="44.9702%" height="21" fill="rgb(255,149,149)" fg:x="539596220" fg:w="510454560"/>
            <text x="47.7875%" y="1873.50">estimators.py:186 (&lt;module&gt;)</text>
        </g>
        <g>
            <title>        res_data = np.empty(nnz, dtype=self.dtype) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="122" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="135.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_compressed.py:776 (_minor_index_fancy) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="144" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="157.50">/h..</text>
        </g>
        <g>
            <title>        return self._major_slice(row)._minor_index_fancy(col) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="166" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="179.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_csr.py:321 (_get_sliceXarray) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="188" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="201.50">/h..</text>
        </g>
        <g>
            <title>                return self._get_sliceXarray(row, col) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="210" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="223.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_index.py:71 (__getitem__) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="232" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="245.50">/h..</text>
        </g>
        <g>
            <title>        Xt = Xt[:, node_size &lt;= max_node_size] (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="254" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="267.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:151 (embed_with_tree) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="276" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="289.50">/h..</text>
        </g>
        <g>
            <title>                return func(*args, **kwargs) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="298" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="311.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py:192 (wrapper) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="320" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="333.50">/h..</text>
        </g>
        <g>
            <title>            embed_with_tree( (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="342" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="355.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:247 (&lt;genexpr&gt;) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="364" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="377.50">/h..</text>
        </g>
        <g>
            <title>        return _hstack(np.fromiter(embeddings_iter, dtype=&apos;object&apos;)) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="386" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="399.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:256 (transform) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="408" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="421.50">/h..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="430" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="443.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="452" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="465.50">/h..</text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="474" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="487.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="496" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="509.50">/h..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="518" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="531.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="540" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="553.50">/h..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="562" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="575.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="584" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="597.50">/h..</text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="606" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="619.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="628" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="641.50">/h..</text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="650" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="663.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="672" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="685.50">/h..</text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="694" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="707.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="716" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="729.50">/h..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="738" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="751.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="760" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="773.50">/h..</text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="782" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="795.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="804" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="817.50">/h..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="826" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="839.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="848" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="861.50">/h..</text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="870" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="883.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="892" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="905.50">/h..</text>
        </g>
        <g>
            <title>        self.results = batch() (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="914" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="927.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="936" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="949.50">/h..</text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="958" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="971.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="980" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="993.50">/h..</text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1002" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1015.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1024" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1037.50">/h..</text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1046" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1059.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1068" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1081.50">/h..</text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1090" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1103.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1112" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1125.50">/h..</text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1134" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1147.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1156" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1169.50">/h..</text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1178" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1191.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1200" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1213.50">/h..</text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1222" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1235.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1244" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1257.50">/h..</text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1266" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1279.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1288" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1301.50">/h..</text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1310" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1323.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1332" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1345.50">/h..</text>
        </g>
        <g>
            <title>        output = self.func(*args, **kwargs) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1354" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1367.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:779 (call) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1376" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1389.50">/h..</text>
        </g>
        <g>
            <title>            out, metadata = self.call(*args, **kwargs) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1398" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1411.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:537 (_cached_call) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1420" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1433.50">/h..</text>
        </g>
        <g>
            <title>        return self._cached_call(args, kwargs)[0] (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1442" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1455.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:594 (__call__) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1464" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1477.50">/h..</text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1486" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1499.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1508" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1521.50">/h..</text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1530" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1543.50"> ..</text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1552" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1565.50">/h..</text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1574" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1587.50"> ..</text>
        </g>
        <g>
            <title>estimators.py:186 (&lt;module&gt;) (38,912,232 bytes, 3.43%)</title>
            <rect x="92.6947%" y="1596" width="3.4281%" height="21" fill="rgb(255,222,222)" fg:x="1052174251" fg:w="38912232"/>
            <text x="92.9447%" y="1609.50">es..</text>
        </g>
        <g>
            <title>        res_indices = np.empty(nnz, dtype=idx_dtype) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="122" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="135.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_compressed.py:775 (_minor_index_fancy) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="144" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="157.50"></text>
        </g>
        <g>
            <title>        return self._major_slice(row)._minor_index_fancy(col) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="166" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="179.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_csr.py:321 (_get_sliceXarray) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="188" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="201.50"></text>
        </g>
        <g>
            <title>                return self._get_sliceXarray(row, col) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="210" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="223.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_index.py:71 (__getitem__) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="232" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="245.50"></text>
        </g>
        <g>
            <title>        Xt = Xt[:, node_size &lt;= max_node_size] (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="254" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="267.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:151 (embed_with_tree) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="276" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="289.50"></text>
        </g>
        <g>
            <title>                return func(*args, **kwargs) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="298" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="311.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_param_validation.py:192 (wrapper) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="320" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="333.50"></text>
        </g>
        <g>
            <title>            embed_with_tree( (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="342" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="355.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:247 (&lt;genexpr&gt;) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="364" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="377.50"></text>
        </g>
        <g>
            <title>        return _hstack(np.fromiter(embeddings_iter, dtype=&apos;object&apos;)) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="386" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="399.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:256 (transform) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="408" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="421.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="430" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="443.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="452" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="465.50"></text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="474" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="487.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="496" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="509.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="518" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="531.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="540" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="553.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="562" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="575.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="584" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="597.50"></text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="606" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="619.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="628" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="641.50"></text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="650" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="663.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="672" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="685.50"></text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="694" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="707.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="716" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="729.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="738" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="751.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="760" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="773.50"></text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="782" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="795.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="804" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="817.50"></text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="826" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="839.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="848" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="861.50"></text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="870" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="883.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="892" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="905.50"></text>
        </g>
        <g>
            <title>        self.results = batch() (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="914" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="927.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="936" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="949.50"></text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="958" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="971.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="980" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="993.50"></text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1002" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1015.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1024" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1037.50"></text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1046" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1059.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1068" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1081.50"></text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1090" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1103.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1112" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1125.50"></text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1134" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1147.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1156" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1169.50"></text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1178" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1191.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1200" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1213.50"></text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1222" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1235.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1244" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1257.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1266" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1279.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1288" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1301.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1310" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1323.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1332" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1345.50"></text>
        </g>
        <g>
            <title>        output = self.func(*args, **kwargs) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1354" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1367.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:779 (call) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1376" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1389.50"></text>
        </g>
        <g>
            <title>            out, metadata = self.call(*args, **kwargs) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1398" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1411.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:537 (_cached_call) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1420" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1433.50"></text>
        </g>
        <g>
            <title>        return self._cached_call(args, kwargs)[0] (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1442" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1455.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:594 (__call__) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1464" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1477.50"></text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1486" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1499.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1508" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1521.50"></text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1530" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1543.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1552" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1565.50"></text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1574" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1587.50"></text>
        </g>
        <g>
            <title>estimators.py:186 (&lt;module&gt;) (19,461,732 bytes, 1.71%)</title>
            <rect x="96.1228%" y="1596" width="1.7145%" height="21" fill="rgb(255,230,230)" fg:x="1091086483" fg:w="19461732"/>
            <text x="96.3728%" y="1609.50"></text>
        </g>
        <g>
            <title>all (1,135,096,173 bytes, 100%)</title>
            <rect x="0.0000%" y="100" width="100.0000%" height="21" fill="rgb(255,100,100)" fg:x="0" fg:w="1135096173"/>
            <text x="0.2500%" y="113.50"></text>
        </g>
        <g>
            <title>                       .astype(idx_dtype)) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="122" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="135.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:485 (_stack_along_minor_axis) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="144" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="157.50"></text>
        </g>
        <g>
            <title>            blocks = [[_stack_along_minor_axis(blocks[b, :], 1)] (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="166" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="179.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:627 (&lt;listcomp&gt;) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="188" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="201.50"></text>
        </g>
        <g>
            <title>            blocks = [[_stack_along_minor_axis(blocks[b, :], 1)] (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="210" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="223.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:627 (bmat) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="232" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="245.50"></text>
        </g>
        <g>
            <title>    return bmat([blocks], format=format, dtype=dtype) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="254" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="267.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/scipy/sparse/_construct.py:535 (hstack) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="276" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="289.50"></text>
        </g>
        <g>
            <title>        return scipy.sparse.hstack(Xs, format=&apos;csr&apos;) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="298" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="311.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:41 (_hstack) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="320" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="333.50"></text>
        </g>
        <g>
            <title>        return _hstack(np.fromiter(embeddings_iter, dtype=&apos;object&apos;)) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="342" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="355.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/tree_embedder.py:256 (transform) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="364" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="377.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="386" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="399.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="408" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="421.50"></text>
        </g>
        <g>
            <title>            return self.fit(X, y, **fit_params).transform(X) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="430" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="443.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/base.py:881 (fit_transform) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="452" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="465.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="474" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="487.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="496" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="509.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="518" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="531.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="540" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="553.50"></text>
        </g>
        <g>
            <title>        return self.func(*args, **kwargs) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="562" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="575.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:349 (__call__) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="584" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="597.50"></text>
        </g>
        <g>
            <title>            X, fitted_transformer = fit_transform_one_cached( (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="606" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="619.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:359 (_fit) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="628" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="641.50"></text>
        </g>
        <g>
            <title>        Xt = self._fit(X, y, **fit_params_steps) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="650" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="663.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:437 (fit_transform) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="672" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="685.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="694" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="707.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="716" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="729.50"></text>
        </g>
        <g>
            <title>            return self.function(*args, **kwargs) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="738" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="751.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:123 (__call__) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="760" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="773.50"></text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="782" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="795.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (&lt;listcomp&gt;) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="804" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="817.50"></text>
        </g>
        <g>
            <title>            return [func(*args, **kwargs) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="826" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="839.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:288 (__call__) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="848" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="861.50"></text>
        </g>
        <g>
            <title>        self.results = batch() (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="870" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="883.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:597 (__init__) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="892" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="905.50"></text>
        </g>
        <g>
            <title>        result = ImmediateResult(func) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="914" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="927.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/_parallel_backends.py:208 (apply_async) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="936" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="949.50"></text>
        </g>
        <g>
            <title>            job = self._backend.apply_async(batch, callback=cb) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="958" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="971.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:819 (_dispatch) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="980" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="993.50"></text>
        </g>
        <g>
            <title>                self._dispatch(tasks) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1002" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1015.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:901 (dispatch_one_batch) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1024" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1037.50"></text>
        </g>
        <g>
            <title>            if self.dispatch_one_batch(iterator): (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1046" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1059.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/parallel.py:1085 (__call__) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1068" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1081.50"></text>
        </g>
        <g>
            <title>        return super().__call__(iterable_with_config) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1090" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1103.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/parallel.py:63 (__call__) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1112" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1125.50"></text>
        </g>
        <g>
            <title>            return Parallel(n_jobs=self.n_jobs)( (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1134" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1147.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:658 (_fit_transform) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1156" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1169.50"></text>
        </g>
        <g>
            <title>        result = self._fit_transform(X, y, _fit_transform_one) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1178" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1191.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:727 (fit_transform) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1200" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1213.50"></text>
        </g>
        <g>
            <title>        data_to_wrap = f(self, X, *args, **kwargs) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1222" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1235.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/utils/_set_output.py:140 (wrapped) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1244" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1257.50"></text>
        </g>
        <g>
            <title>            res = transformer.fit_transform(X, y, **fit_params) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1266" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1279.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/sklearn/pipeline.py:893 (_fit_transform_one) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1288" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1301.50"></text>
        </g>
        <g>
            <title>        output = self.func(*args, **kwargs) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1310" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1323.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:779 (call) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1332" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1345.50"></text>
        </g>
        <g>
            <title>            out, metadata = self.call(*args, **kwargs) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1354" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1367.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:537 (_cached_call) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1376" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1389.50"></text>
        </g>
        <g>
            <title>        return self._cached_call(args, kwargs)[0] (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1398" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1411.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/env/lib/python3.10/site-packages/joblib/memory.py:594 (__call__) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1420" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1433.50"></text>
        </g>
        <g>
            <title>                new_X, fitted_transformer = fit_transform_one_cached( (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1442" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1455.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:405 (_fit) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1464" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1477.50"></text>
        </g>
        <g>
            <title>        Xt, yt = self._fit(X, y, **fit_params_steps) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1486" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1499.50"></text>
        </g>
        <g>
            <title>/home/pedro/mestrado/biomal_repo/scripts/cascade_forests/deep_forest/cascade.py:327 (fit) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1508" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1521.50"></text>
        </g>
        <g>
            <title>    cascade = cascade_weak_label_tree_embedder.fit(X, y) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1530" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1543.50"></text>
        </g>
        <g>
            <title>estimators.py:186 (&lt;module&gt;) (19,450,612 bytes, 1.71%)</title>
            <rect x="98.2864%" y="1552" width="1.7136%" height="21" fill="rgb(255,230,230)" fg:x="1115645561" fg:w="19450612"/>
            <text x="98.5364%" y="1565.50"></text>
        </g>
    </svg>
</svg>