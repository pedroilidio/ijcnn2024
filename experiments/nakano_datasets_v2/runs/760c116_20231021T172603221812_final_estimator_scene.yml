active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb+AmZmZmZnpPwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QGZmZmZmEsDAmZmZmZkdQEBmZmZmZhbAgDMzMzMzA0AAnJmZmZnZPw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 17:26:12.252874
estimator:
  call: nakano_datasets_v2.estimators.final_estimator
  final_params:
    estimators:
    - - rf
      - call: sklearn.ensemble._forest.RandomForestClassifier
        params:
          bootstrap: true
          ccp_alpha: 0.0
          class_weight: null
          criterion: gini
          max_depth: null
          max_features: sqrt
          max_leaf_nodes: null
          max_samples: 0.9
          min_impurity_decrease: 0.0
          min_samples_leaf: 5
          min_samples_split: 2
          min_weight_fraction_leaf: 0.0
          n_estimators: 150
          n_jobs: 14
          oob_score: true
          random_state: 0
          verbose: true
          warm_start: false
    - - xt
      - call: sklearn.ensemble._forest.ExtraTreesClassifier
        params:
          bootstrap: true
          ccp_alpha: 0.0
          class_weight: null
          criterion: gini
          max_depth: null
          max_features: sqrt
          max_leaf_nodes: null
          max_samples: 0.9
          min_impurity_decrease: 0.0
          min_samples_leaf: 5
          min_samples_split: 2
          min_weight_fraction_leaf: 0.0
          n_estimators: 150
          n_jobs: 14
          oob_score: true
          random_state: 0
          verbose: true
          warm_start: false
  name: final_estimator
  params: {}
hash: 760c116d4b64df0c0529bf128b31638a14157cf07c374783d68521767796077d
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/760c116_20231021T172603221812_final_estimator_scene.yml
results:
  fit_time:
  - 1.3904931545257568
  - 1.422813892364502
  - 1.449927806854248
  - 1.425844430923462
  - 1.4208483695983887
  score_time:
  - 7.186890125274658
  - 7.15268611907959
  - 6.979693412780762
  - 7.078207015991211
  - 7.074518918991089
  test_average_precision_macro:
  - 0.8505209806459825
  - 0.8613182074788556
  - 0.844543304937733
  - 0.8543307418396568
  - 0.8626810758510569
  test_average_precision_micro:
  - 0.8604028590378922
  - 0.8586223539791009
  - 0.8476144635947445
  - 0.853054008861673
  - 0.8813638259129615
  test_average_precision_samples:
  - 0.8820644718792868
  - 0.8928621659634318
  - 0.8692676249144422
  - 0.8755393180236604
  - 0.893069993069993
  test_average_precision_weighted:
  - 0.840021406114146
  - 0.8527785166150078
  - 0.8342091150051699
  - 0.8456254517017382
  - 0.8521334206461365
  test_coverage_error:
  - -1.4074074074074074
  - -1.3924050632911393
  - -1.4229979466119096
  - -1.4258872651356993
  - -1.3596673596673596
  test_f1_macro:
  - 0.6362641192868939
  - 0.6188974134159637
  - 0.6186419381819012
  - 0.6043831592278591
  - 0.6442385311321336
  test_f1_micro:
  - 0.6411238825031929
  - 0.6262886597938144
  - 0.6298200514138818
  - 0.614596670934699
  - 0.6505717916137229
  test_f1_samples:
  - 0.49691358024691357
  - 0.4957805907172996
  - 0.4941820670773443
  - 0.48712595685455806
  - 0.516978516978517
  test_f1_weighted:
  - 0.6167106991453319
  - 0.6029471269094345
  - 0.598772658628011
  - 0.5863690533821249
  - 0.6253073396856386
  test_hamming_loss:
  - -0.09636488340192044
  - -0.1019690576652602
  - -0.09856262833675565
  - -0.10473208072373
  - -0.09528759528759528
  test_jaccard_macro:
  - 0.493763625238887
  - 0.47140578938606864
  - 0.47695269475410657
  - 0.45907879556427217
  - 0.5046442011631885
  test_jaccard_micro:
  - 0.4718045112781955
  - 0.45590994371482174
  - 0.4596622889305816
  - 0.4436229205175601
  - 0.4821092278719397
  test_jaccard_samples:
  - 0.49039780521262
  - 0.4883966244725738
  - 0.48973305954825463
  - 0.4801670146137787
  - 0.5103950103950103
  test_jaccard_weighted:
  - 0.47464161283143097
  - 0.45536305228632395
  - 0.4573713121304596
  - 0.4421048018763971
  - 0.48486205550159045
  test_label_ranking_average_precision_score:
  - 0.8820644718792865
  - 0.8928621659634316
  - 0.8692676249144419
  - 0.8755393180236601
  - 0.8930699930699929
  test_label_ranking_loss:
  - 0.06666666666666667
  - 0.059757383966244734
  - 0.07012320328542096
  - 0.06670146137787056
  - 0.05535343035343036
  test_matthews_corrcoef_macro:
  - 0.6359396218632584
  - 0.6212321699882414
  - 0.6277183235828646
  - 0.6033745778665157
  - 0.6424399444916825
  test_matthews_corrcoef_micro:
  - 0.6365627654381886
  - 0.6199446331794933
  - 0.6260517975398702
  - 0.6037976412014189
  - 0.64341740629071
  test_matthews_corrcoef_samples:
  - 0.48977657031297556
  - 0.4868467054993467
  - 0.48687000852242496
  - 0.4749487000889833
  - 0.5091484975938109
  test_matthews_corrcoef_weighted:
  - 0.6172021693865728
  - 0.6076976036193711
  - 0.6113465144508589
  - 0.5878146830263629
  - 0.6252441701752037
  test_ndgc:
  - 0.9129164821431386
  - 0.9209543993961959
  - 0.9037481780800728
  - 0.9087007308175874
  - 0.9214108326904288
  test_precision_macro:
  - 0.9313052538858991
  - 0.932953134633807
  - 0.9473004212026582
  - 0.9058546123763515
  - 0.9283655224541923
  test_precision_micro:
  - 0.9471698113207547
  - 0.9346153846153846
  - 0.9423076923076923
  - 0.9090909090909091
  - 0.9446494464944649
  test_precision_samples:
  - 0.5102880658436214
  - 0.510548523206751
  - 0.5030800821355236
  - 0.5010438413361169
  - 0.5301455301455301
  test_precision_weighted:
  - 0.9221272251226168
  - 0.932679088874125
  - 0.9477738947498683
  - 0.902886269861293
  - 0.9243965865772487
  test_recall_macro:
  - 0.5032657320929889
  - 0.48734047375364103
  - 0.49276980614593313
  - 0.4813308803451053
  - 0.5159588092736925
  test_recall_micro:
  - 0.48455598455598453
  - 0.47093023255813954
  - 0.47297297297297297
  - 0.46421663442940037
  - 0.49612403100775193
  test_recall_samples:
  - 0.49039780521262
  - 0.4883966244725738
  - 0.48973305954825463
  - 0.4801670146137787
  - 0.5103950103950103
  test_recall_weighted:
  - 0.48455598455598453
  - 0.47093023255813954
  - 0.47297297297297297
  - 0.46421663442940037
  - 0.49612403100775193
  test_roc_auc_macro:
  - 0.951501295179955
  - 0.9513081632621354
  - 0.9473272172550206
  - 0.948650115406028
  - 0.9558357598009432
  test_roc_auc_micro:
  - 0.9560154697769376
  - 0.9570205319800741
  - 0.9532756698938063
  - 0.9539422880444194
  - 0.9639641186667977
  test_roc_auc_samples:
  - 0.9333333333333332
  - 0.9402426160337554
  - 0.9298767967145791
  - 0.9332985386221294
  - 0.9446465696465697
  test_roc_auc_weighted:
  - 0.9477834876255864
  - 0.9465462409115473
  - 0.9425873817821978
  - 0.9442967114603432
  - 0.9512294793711794
start: 2023-10-21 17:26:03.221812
wrapper: null
