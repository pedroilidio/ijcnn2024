active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZvzQzMzMzM+M/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZAcAAMzMzMzPzvwCamZmZmek/AJqZmZmZ6T8AzczMzMz8Pw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 21:42:40.096088
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.9
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler:
            call: deep_forest.weak_labels.PositiveUnlabeledImputer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesClassifier
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  class_weight: null
                  criterion: gini
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: 0.9
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: true
                  random_state: 0
                  verbose: true
                  warm_start: false
              sampling_strategy: auto
              threshold: 0.8
              use_oob_proba: true
              verbose: true
              weight_proba: true
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding_weak
  params:
    memory: estimators_cache
hash: fe5146899265f23de5131afecd767d8e95a3801a582ec6b29db18cbc90b5bdfc
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/fe51468_20231127T214034328375_embedding_weak_Gram_positive.yml
results:
  fit_time:
  - 71.41004800796509
  - 65.05512070655823
  - 68.12257361412048
  - 65.21010184288025
  - 66.54504489898682
  score_time:
  - 53.46326422691345
  - 36.63813662528992
  - 47.189199447631836
  - 28.65902590751648
  - 42.20715641975403
  test_average_precision_macro:
  - 0.6729538119832783
  - 0.8608173334189968
  - 0.6488724526955807
  - 0.6337811024056237
  - 0.8062911128510446
  test_average_precision_micro:
  - 0.7150251930958083
  - 0.7667620400265607
  - 0.5407317454107131
  - 0.717344551732261
  - 0.7134202673871882
  test_average_precision_samples:
  - 0.9371069182389936
  - 0.8944444444444444
  - 0.8349514563106796
  - 0.837378640776699
  - 0.9223856209150326
  test_average_precision_weighted:
  - 0.7533706469285074
  - 0.8325226427365264
  - 0.812549401348344
  - 0.7952092769195475
  - 0.9261038272029576
  test_coverage_error:
  - -1.150943396226415
  - -1.2666666666666666
  - -1.3980582524271845
  - -1.3980582524271845
  - -1.1764705882352942
  test_f1_macro:
  - 0.277396389524536
  - 0.29165638283285344
  - 0.12359701894585616
  - 0.15868147656940762
  - 0.24175824175824176
  test_f1_micro:
  - 0.22764227642276422
  - 0.2459016393442623
  - 0.13675213675213674
  - 0.21487603305785125
  - 0.19512195121951217
  test_f1_samples:
  - 0.1320754716981132
  - 0.14285714285714285
  - 0.07119741100323625
  - 0.1262135922330097
  - 0.11764705882352941
  test_f1_weighted:
  - 0.21643183704407315
  - 0.22983372528322585
  - 0.13906936643446013
  - 0.21717400360470654
  - 0.17022400676246827
  test_hamming_loss:
  - -0.2240566037735849
  - -0.21904761904761905
  - -0.24514563106796117
  - -0.23058252427184467
  - -0.2426470588235294
  test_jaccard_macro:
  - 0.16666666666666669
  - 0.1798992673992674
  - 0.06967787114845939
  - 0.08977287391921539
  - 0.14451747439552318
  test_jaccard_micro:
  - 0.12844036697247707
  - 0.14018691588785046
  - 0.07339449541284404
  - 0.12037037037037036
  - 0.10810810810810811
  test_jaccard_samples:
  - 0.1320754716981132
  - 0.14285714285714285
  - 0.06796116504854369
  - 0.1262135922330097
  - 0.11764705882352941
  test_jaccard_weighted:
  - 0.12398921832884097
  - 0.1386066763425254
  - 0.07766990291262135
  - 0.12357549857549857
  - 0.09702797202797202
  test_label_ranking_average_precision_score:
  - 0.9371069182389936
  - 0.8944444444444444
  - 0.8349514563106796
  - 0.837378640776699
  - 0.9223856209150327
  test_label_ranking_loss:
  - 0.05031446540880503
  - 0.08571428571428572
  - 0.13268608414239483
  - 0.12944983818770225
  - 0.05392156862745097
  test_matthews_corrcoef_macro:
  - 0.327751601121295
  - 0.35317127441235996
  - 0.17192011084193973
  - 0.17712262059838613
  - 0.30201263090495367
  test_matthews_corrcoef_micro:
  - 0.27069629668909573
  - 0.31388234200992265
  - 0.13922150488638035
  - 0.2446455936215101
  - 0.1910195373447015
  test_matthews_corrcoef_samples:
  - 0.12264150943396226
  - 0.13968253968253969
  - 0.05651812820432931
  - 0.1132686084142395
  - 0.09477124183006537
  test_matthews_corrcoef_weighted:
  - 0.2875367680122262
  - 0.2894844974903023
  - 0.21382802063077763
  - 0.25349247045860634
  - 0.2430046552294776
  test_ndgc:
  - 0.953277717250676
  - 0.9215589819816552
  - 0.8774052179445659
  - 0.8792745001311322
  - 0.94271934026656
  test_precision_macro:
  - 0.85
  - 0.9722222222222222
  - 0.75
  - 0.625
  - 0.825
  test_precision_micro:
  - 0.8235294117647058
  - 0.9375
  - 0.5714285714285714
  - 0.7647058823529411
  - 0.631578947368421
  test_precision_samples:
  - 0.1320754716981132
  - 0.14285714285714285
  - 0.06796116504854369
  - 0.1262135922330097
  - 0.11764705882352941
  test_precision_weighted:
  - 0.9773584905660376
  - 0.9737945492662474
  - 0.970873786407767
  - 0.8509615384615384
  - 0.9730769230769231
  test_recall_macro:
  - 0.22023809523809523
  - 0.18297619047619046
  - 0.06967787114845939
  - 0.09125435540069687
  - 0.263835656213705
  test_recall_micro:
  - 0.1320754716981132
  - 0.14150943396226415
  - 0.07766990291262135
  - 0.125
  - 0.11538461538461539
  test_recall_samples:
  - 0.1320754716981132
  - 0.14285714285714285
  - 0.07766990291262135
  - 0.1262135922330097
  - 0.11764705882352941
  test_recall_weighted:
  - 0.1320754716981132
  - 0.14150943396226415
  - 0.07766990291262135
  - 0.125
  - 0.11538461538461539
  test_roc_auc_macro:
  - 0.910446231651894
  - 0.9205788926681784
  - 0.8116752349685329
  - 0.8888468688328688
  - 0.9649232547472691
  test_roc_auc_micro:
  - 0.9039990506704639
  - 0.9077634899651483
  - 0.8276934678103496
  - 0.8913274225774227
  - 0.9199455971659919
  test_roc_auc_samples:
  - 0.9496855345911949
  - 0.9142857142857143
  - 0.8673139158576053
  - 0.8705501618122978
  - 0.946078431372549
  test_roc_auc_weighted:
  - 0.891452491746839
  - 0.903255091344714
  - 0.8877971841971034
  - 0.8957007446040068
  - 0.9689346613246973
start: 2023-11-27 21:40:34.328375
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop90
  params:
    drop: 0.9
    random_state: 0
