active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMzA8CAmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+gmZmZmZn5Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wJmZmZmZ+T8gMzMzMzMLwMCZmZmZmfk/IDMzMzMzA8DgzMzMzMwEQA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 18:40:25.101174
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - rf
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.RandomForestRegressor
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        - - xt
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesRegressor
                params:
                  bootstrap: false
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: proba_weak
  params:
    memory: estimators_cache
hash: a9a83ee73a9f36b84f8f22b75c63077403a3cd0e477256712c9d94f00c90370a
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/a9a83ee_20231021T183927524032_proba_weak_emotions.yml
results:
  fit_time:
  - 40.18570804595947
  - 38.641260862350464
  - 41.02760314941406
  - 39.62217688560486
  - 41.25120806694031
  score_time:
  - 9.899354696273804
  - 7.23871636390686
  - 12.760773658752441
  - 9.958919763565063
  - 15.83427381515503
  test_average_precision_macro:
  - 0.7589394954376235
  - 0.7626263898354698
  - 0.7811825534652258
  - 0.7175614792318356
  - 0.7783148833890711
  test_average_precision_micro:
  - 0.7707938072592121
  - 0.7692583621678268
  - 0.7951336855194356
  - 0.7355116676213537
  - 0.7691503459220957
  test_average_precision_samples:
  - 0.8173076923076923
  - 0.8249544626593805
  - 0.8250712250712251
  - 0.7983471074380165
  - 0.8363984674329502
  test_average_precision_weighted:
  - 0.7568121180741356
  - 0.7655473167680787
  - 0.7814952203548573
  - 0.725642585765423
  - 0.7855056652168585
  test_coverage_error:
  - -2.7094017094017095
  - -2.6721311475409837
  - -2.606837606837607
  - -2.677685950413223
  - -2.5689655172413794
  test_f1_macro:
  - 0.6680868095038602
  - 0.6444728410663046
  - 0.7127812515360558
  - 0.6375821060031587
  - 0.70662592596304
  test_f1_micro:
  - 0.6822429906542056
  - 0.663551401869159
  - 0.7201834862385322
  - 0.657142857142857
  - 0.7303102625298329
  test_f1_samples:
  - 0.6259259259259258
  - 0.6240437158469945
  - 0.6783475783475784
  - 0.6308539944903581
  - 0.6741379310344826
  test_f1_weighted:
  - 0.6711440997901045
  - 0.6545818706269415
  - 0.7137436705064938
  - 0.6483123132325324
  - 0.7190345504097734
  test_hamming_loss:
  - -0.19373219373219372
  - -0.19672131147540983
  - -0.1737891737891738
  - -0.19834710743801653
  - -0.16235632183908047
  test_jaccard_macro:
  - 0.517227840728582
  - 0.48414288243055364
  - 0.5662577927521569
  - 0.47824162552423427
  - 0.5626421997438998
  test_jaccard_micro:
  - 0.5177304964539007
  - 0.4965034965034965
  - 0.5627240143369175
  - 0.48936170212765956
  - 0.575187969924812
  test_jaccard_samples:
  - 0.5462962962962963
  - 0.53551912568306
  - 0.6068376068376068
  - 0.5509641873278236
  - 0.6005747126436782
  test_jaccard_weighted:
  - 0.5187773326992027
  - 0.49529818203457593
  - 0.5660530137769723
  - 0.48967177815299007
  - 0.5774201788436938
  test_label_ranking_average_precision_score:
  - 0.817307692307692
  - 0.8249544626593805
  - 0.8250712250712248
  - 0.7983471074380164
  - 0.83639846743295
  test_label_ranking_loss:
  - 0.1455365622032289
  - 0.15152550091074685
  - 0.13181386514719848
  - 0.16414141414141414
  - 0.1184147509578544
  test_matthews_corrcoef_macro:
  - 0.5371481549800695
  - 0.5103166150993484
  - 0.5880538132181797
  - 0.5042953984016779
  - 0.6020390487319275
  test_matthews_corrcoef_micro:
  - 0.5445653922211566
  - 0.5255626129240875
  - 0.5943034188532004
  - 0.519555787852031
  - 0.6161740445423344
  test_matthews_corrcoef_samples:
  - 0.533886877893079
  - 0.5369601651160375
  - 0.5932718693173687
  - 0.5336175288270211
  - 0.5936435837028543
  test_matthews_corrcoef_weighted:
  - 0.5290899696539387
  - 0.5137289301928324
  - 0.5800663314974277
  - 0.5070120343989675
  - 0.6107394175816768
  test_ndgc:
  - 0.8751268147722573
  - 0.8816866369021273
  - 0.8786653407853133
  - 0.8594635409798699
  - 0.8878426449100458
  test_precision_macro:
  - 0.7213273769469094
  - 0.6838369963369964
  - 0.7264953254083689
  - 0.6915298303229337
  - 0.7628197902726205
  test_precision_micro:
  - 0.7156862745098039
  - 0.6893203883495146
  - 0.7302325581395349
  - 0.6934673366834171
  - 0.7688442211055276
  test_precision_samples:
  - 0.6581196581196582
  - 0.6680327868852459
  - 0.7008547008547007
  - 0.6735537190082644
  - 0.7227011494252874
  test_precision_weighted:
  - 0.7169179802735536
  - 0.685502673002673
  - 0.7259307875971264
  - 0.6910371575685977
  - 0.7672406230133503
  test_recall_macro:
  - 0.6436741323533777
  - 0.6207882906405017
  - 0.7088303790405308
  - 0.6048778706673442
  - 0.6777831118874847
  test_recall_micro:
  - 0.6517857142857143
  - 0.6396396396396397
  - 0.7104072398190046
  - 0.6244343891402715
  - 0.6954545454545454
  test_recall_samples:
  - 0.6524216524216525
  - 0.6530054644808743
  - 0.7108262108262109
  - 0.6473829201101928
  - 0.67816091954023
  test_recall_weighted:
  - 0.6517857142857143
  - 0.6396396396396397
  - 0.7104072398190046
  - 0.6244343891402715
  - 0.6954545454545454
  test_roc_auc_macro:
  - 0.8558544859612914
  - 0.8572159868222009
  - 0.874677809782141
  - 0.8456360806892776
  - 0.8872266586560524
  test_roc_auc_micro:
  - 0.878306186491333
  - 0.8693782017311429
  - 0.891487380175163
  - 0.8596209847229067
  - 0.899216959511077
  test_roc_auc_samples:
  - 0.8544634377967711
  - 0.8484744990892532
  - 0.8681861348528016
  - 0.8358585858585859
  - 0.8815852490421455
  test_roc_auc_weighted:
  - 0.8523232527952718
  - 0.8565305474807184
  - 0.872921243081753
  - 0.8470301075739989
  - 0.891845166417594
start: 2023-10-21 18:39:27.524032
wrapper: null
