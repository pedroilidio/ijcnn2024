active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+gmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzM/D+gmZmZmZnpP2hmZmZmZgZAmJmZmZmZCcCYmZmZmZkBwA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz8z8wMzMzMzPzP2hmZmZmZg7AMDMzMzMz8z+AmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzMDMDMzMzMzMwEwJiZmZmZmfm/MDMzMzMz47/NzMzMzMwgQA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZCUCamZmZmZkJQMzMzMzMzPy/ZmZmZmZmBsDMzMzMzMz8vw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZyb8AmZmZmZnJv+DMzMzMzPw/yMzMzMzMEMBwZmZmZmYGQA==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 21:00:54.100562
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.9
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler:
            call: deep_forest.weak_labels.PositiveUnlabeledImputer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesClassifier
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  class_weight: null
                  criterion: gini
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: 0.9
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: true
                  random_state: 0
                  verbose: true
                  warm_start: false
              sampling_strategy: auto
              threshold: 0.8
              use_oob_proba: true
              verbose: true
              weight_proba: true
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: proba_weak
  params:
    memory: estimators_cache
hash: bba4475b22f2872647e183456688a552ba9a1805a7a72c9a94043dcf939ca328
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/bba4475_20231127T205957580130_proba_weak_flags.yml
results:
  fit_time:
  - 41.28166437149048
  - 42.00770282745361
  - 42.12356185913086
  - 41.18202090263367
  - 43.81575107574463
  score_time:
  - 5.256723880767822
  - 6.409519910812378
  - 7.067930459976196
  - 6.41044282913208
  - 12.29813551902771
  test_average_precision_macro:
  - 0.577400378815636
  - 0.6662770012710287
  - 0.6604172090992486
  - 0.6304042967006939
  - 0.6609138937028453
  test_average_precision_micro:
  - 0.6169480239890666
  - 0.6063221125164406
  - 0.6619505906606431
  - 0.6122830057058049
  - 0.597148836278525
  test_average_precision_samples:
  - 0.6984859584859584
  - 0.7032580382580383
  - 0.7108612183612184
  - 0.6848532668881506
  - 0.6218342151675486
  test_average_precision_weighted:
  - 0.6560144384894363
  - 0.7211354086786229
  - 0.7270824641175695
  - 0.6749142994947204
  - 0.7694538363591733
  test_coverage_error:
  - -5.410256410256411
  - -5.487179487179487
  - -5.945945945945946
  - -5.534883720930233
  - -6.527777777777778
  test_f1_macro:
  - 0.0
  - 0.0
  - 0.023966165413533833
  - 0.042242703533026116
  - 0.0778061224489796
  test_f1_micro:
  - 0.0
  - 0.0
  - 0.028776978417266192
  - 0.04255319148936171
  - 0.10144927536231883
  test_f1_samples:
  - 0.0
  - 0.0
  - 0.022522522522522525
  - 0.027574750830564786
  - 0.061111111111111116
  test_f1_weighted:
  - 0.0
  - 0.0
  - 0.028178212074303405
  - 0.04069539282630877
  - 0.10086495535714286
  test_hamming_loss:
  - -0.46886446886446886
  - -0.4725274725274725
  - -0.5212355212355212
  - -0.4485049833887043
  - -0.49206349206349204
  test_jaccard_macro:
  - 0.0
  - 0.0
  - 0.012544802867383511
  - 0.02283922973578146
  - 0.04215671142666049
  test_jaccard_micro:
  - 0.0
  - 0.0
  - 0.014598540145985401
  - 0.021739130434782608
  - 0.05343511450381679
  test_jaccard_samples:
  - 0.0
  - 0.0
  - 0.014414414414414415
  - 0.01744186046511628
  - 0.04398148148148148
  test_jaccard_weighted:
  - 0.0
  - 0.0
  - 0.014705882352941176
  - 0.021897810218978103
  - 0.05443548387096774
  test_label_ranking_average_precision_score:
  - 0.6984859584859583
  - 0.7032580382580382
  - 0.7108612183612182
  - 0.6848532668881506
  - 0.6218342151675487
  test_label_ranking_loss:
  - 0.3611111111111111
  - 0.4034188034188035
  - 0.37837837837837845
  - 0.39534883720930225
  - 0.5421296296296297
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.012985457932450805
  - 0.024090032980082252
  - 0.03651478186249181
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.03068951783365303
  - 0.06871284414627177
  - 0.07809475220897141
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.012740662724081938
  - 0.014838864824597637
  - 0.0061411075164760215
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.02016936045158686
  - -0.0025035867263907743
  - 0.040967015329474415
  test_ndgc:
  - 0.808477698601985
  - 0.8197930644632079
  - 0.8241551075267138
  - 0.7975009182383683
  - 0.755560885709807
  test_precision_macro:
  - 0.0
  - 0.0
  - 0.2857142857142857
  - 0.2857142857142857
  - 0.5
  test_precision_micro:
  - 0.0
  - 0.0
  - 0.6666666666666666
  - 0.75
  - 0.7
  test_precision_samples:
  - 0.0
  - 0.0
  - 0.05405405405405406
  - 0.06976744186046512
  - 0.09722222222222222
  test_precision_weighted:
  - 0.0
  - 0.0
  - 0.3602941176470588
  - 0.291970802919708
  - 0.671875
  test_recall_macro:
  - 0.0
  - 0.0
  - 0.012544802867383511
  - 0.02283922973578146
  - 0.04231032125768968
  test_recall_micro:
  - 0.0
  - 0.0
  - 0.014705882352941176
  - 0.021897810218978103
  - 0.0546875
  test_recall_samples:
  - 0.0
  - 0.0
  - 0.014414414414414415
  - 0.01744186046511628
  - 0.046296296296296294
  test_recall_weighted:
  - 0.0
  - 0.0
  - 0.014705882352941176
  - 0.021897810218978103
  - 0.0546875
  test_roc_auc_macro:
  - 0.5752857258391886
  - 0.6672079433829525
  - 0.6151659642413682
  - 0.6495130498753124
  - 0.6374081835585493
  test_roc_auc_micro:
  - 0.6672413793103448
  - 0.6583225667527993
  - 0.6535150645624104
  - 0.6595825173580203
  - 0.5250756048387095
  test_roc_auc_samples:
  - 0.6388888888888887
  - 0.5965811965811967
  - .nan
  - 0.6046511627906976
  - 0.45787037037037037
  test_roc_auc_weighted:
  - 0.5606091745154245
  - 0.6457884928815162
  - 0.5879115067079463
  - 0.636609783160878
  - 0.6026501477027593
start: 2023-11-27 20:59:57.580130
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop90
  params:
    drop: 0.9
    random_state: 0
