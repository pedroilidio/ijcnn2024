active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjvzAzMzMzM+O/oJmZmZmZ2T9oZmZmZmb2Pw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ZmZmZmZm9r+YmZmZmZnZvzQzMzMzM+M/NDMzMzMz4z80MzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ+b8AMjMzMzPjv4DMzMzMzAzAwJmZmZmZGUAAMjMzMzPjvw==
      n_labels: 8
      n_samples: 1392
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_negative
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_negative.csv
directory: nakano_datasets_v2/runs
end: 2023-11-28 00:16:33.520447
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler:
            call: deep_forest.weak_labels.PositiveUnlabeledImputer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesClassifier
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  class_weight: null
                  criterion: gini
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: 0.9
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: true
                  random_state: 0
                  verbose: true
                  warm_start: false
              sampling_strategy: auto
              threshold: 0.8
              use_oob_proba: true
              verbose: true
              weight_proba: true
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding_weak
  params:
    memory: estimators_cache
hash: fd033e076d3c411b3eff2341cfdf43c8e23b3d660ef4d590c697e1b9540681cc
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/fd033e0_20231128T001129290355_embedding_weak_Gram_negative.yml
results:
  fit_time:
  - 214.49852299690247
  - 192.04187488555908
  - 201.44848132133484
  - 174.73027968406677
  - 190.59385442733765
  score_time:
  - 86.02473378181458
  - 13.912327766418457
  - 91.53771328926086
  - 47.64532208442688
  - 79.64706325531006
  test_average_precision_macro:
  - 0.7489716304999614
  - 0.9360166044633602
  - 0.7537274991568607
  - 0.8153818218879578
  - 0.7454337920160867
  test_average_precision_micro:
  - 0.8553728911255739
  - 0.9704801869613593
  - 0.8522638134680963
  - 0.9174677547512828
  - 0.8776845801964516
  test_average_precision_samples:
  - 0.952797619047619
  - 0.9697729988052567
  - 0.9661643026004727
  - 0.964001225490196
  - 0.9814814814814816
  test_average_precision_weighted:
  - 0.9553008677177148
  - 0.9740734867168587
  - 0.9561455361387647
  - 0.9662773887732297
  - 0.9737767823253661
  test_coverage_error:
  - -1.1642857142857144
  - -1.1397849462365592
  - -1.1418439716312057
  - -1.2169117647058822
  - -1.1218637992831542
  test_f1_macro:
  - 0.6651286925952902
  - 0.0052441910499139415
  - 0.6155415118946129
  - 0.6744019278593747
  - 0.6475140664880725
  test_f1_micro:
  - 0.7537878787878787
  - 0.013559322033898305
  - 0.7343173431734317
  - 0.749003984063745
  - 0.7630057803468208
  test_f1_samples:
  - 0.6664285714285715
  - 0.007168458781362007
  - 0.6497635933806147
  - 0.6475490196078431
  - 0.6635603345280764
  test_f1_weighted:
  - 0.7844637900292738
  - 0.013508691029353887
  - 0.7692151585969315
  - 0.7606142973548106
  - 0.781348776106781
  test_hamming_loss:
  - -0.05803571428571429
  - -0.1303763440860215
  - -0.06382978723404255
  - -0.057904411764705885
  - -0.05510752688172043
  test_jaccard_macro:
  - 0.5657422532422532
  - 0.0026505163700285654
  - 0.5277173248830226
  - 0.5595517625951307
  - 0.5762107516813842
  test_jaccard_micro:
  - 0.6048632218844985
  - 0.006825938566552901
  - 0.5801749271137027
  - 0.5987261146496815
  - 0.616822429906542
  test_jaccard_samples:
  - 0.6476190476190476
  - 0.007168458781362007
  - 0.6294326241134752
  - 0.6311274509803922
  - 0.6439665471923536
  test_jaccard_weighted:
  - 0.6598208267728816
  - 0.006825938566552901
  - 0.6531440635072857
  - 0.6282347798693264
  - 0.6729216962218171
  test_label_ranking_average_precision_score:
  - 0.952797619047619
  - 0.9697729988052568
  - 0.9661643026004727
  - 0.9640012254901962
  - 0.9814814814814816
  test_label_ranking_loss:
  - 0.017006802721088433
  - 0.011520737327188939
  - 0.014311043566362711
  - 0.01925770308123249
  - 0.009515275644307902
  test_matthews_corrcoef_macro:
  - 0.660219262177954
  - 0.02084338706784331
  - 0.6215394748636688
  - 0.6883135994886729
  - 0.6502820431919515
  test_matthews_corrcoef_micro:
  - 0.7265666385277302
  - 0.07704024596276107
  - 0.7007352592691246
  - 0.7290608472853566
  - 0.7383960073324133
  test_matthews_corrcoef_samples:
  - 0.6601312266736584
  - 0.007168458781362007
  - 0.6429635225072977
  - 0.6443471296138127
  - 0.6592570885101507
  test_matthews_corrcoef_weighted:
  - 0.7497981316007349
  - 0.05396942007150519
  - 0.7407508766281188
  - 0.7254188779265767
  - 0.7548022331586718
  test_ndgc:
  - 0.9651603808876767
  - 0.978267338241935
  - 0.9752519432591594
  - 0.9737750559731152
  - 0.9873800945789546
  test_precision_macro:
  - 0.7368831953071083
  - 0.25
  - 0.6700367647058824
  - 0.7564703399841043
  - 0.7120920745920746
  test_precision_micro:
  - 0.8432203389830508
  - 1.0
  - 0.7928286852589641
  - 0.8909952606635071
  - 0.8608695652173913
  test_precision_samples:
  - 0.656547619047619
  - 0.007168458781362007
  - 0.6329787234042553
  - 0.6458333333333334
  - 0.6535244922341696
  test_precision_weighted:
  - 0.9610299261654234
  - 0.658703071672355
  - 0.9564129775621589
  - 0.9722595671572236
  - 0.9807978641888676
  test_recall_macro:
  - 0.6954442035844475
  - 0.0026505163700285654
  - 0.7110744891232696
  - 0.7926935733643051
  - 0.7288472240835047
  test_recall_micro:
  - 0.6815068493150684
  - 0.006825938566552901
  - 0.6838487972508591
  - 0.6460481099656358
  - 0.6851211072664359
  test_recall_samples:
  - 0.6946428571428571
  - 0.007168458781362007
  - 0.6914893617021277
  - 0.6654411764705882
  - 0.6917562724014337
  test_recall_weighted:
  - 0.6815068493150684
  - 0.006825938566552901
  - 0.6838487972508591
  - 0.6460481099656358
  - 0.6851211072664359
  test_roc_auc_macro:
  - 0.9737903788743896
  - 0.9926286854408173
  - 0.9614462500829768
  - 0.984677288382672
  - 0.9745322474572795
  test_roc_auc_micro:
  - 0.9806413673314394
  - 0.9924963960522911
  - 0.9773493175240244
  - 0.9845606934835516
  - 0.9825814252921052
  test_roc_auc_samples:
  - 0.9829931972789118
  - 0.9884792626728113
  - 0.9856889564336373
  - 0.9807422969187675
  - 0.990484724355692
  test_roc_auc_weighted:
  - 0.9869036079473391
  - 0.9902809195203942
  - 0.985181036818173
  - 0.9859941892539335
  - 0.9868567154712002
start: 2023-11-28 00:11:29.290355
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
