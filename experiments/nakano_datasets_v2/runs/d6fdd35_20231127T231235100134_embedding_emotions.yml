active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzMBEBAMzMzMzPjP9DMzMzMzARAmJmZmZmZHcCgmZmZmZn5Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMzA8DgzMzMzMwEQODMzMzMzAxAQGZmZmZm9r8gMzMzMzMDwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 23:14:47.636916
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding
  params:
    memory: estimators_cache
hash: d6fdd3554f3df5a83a204708da95d713d539046656ad20f664cfbefd5997a25f
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/d6fdd35_20231127T231235100134_embedding_emotions.yml
results:
  fit_time:
  - 68.91902232170105
  - 69.8109564781189
  - 71.17686033248901
  - 65.6046679019928
  - 61.264665365219116
  score_time:
  - 53.49839162826538
  - 57.88072371482849
  - 58.75759267807007
  - 62.57876205444336
  - 56.9225378036499
  test_average_precision_macro:
  - 0.6737389413083913
  - 0.7185154150672529
  - 0.7126903763658444
  - 0.746187844842311
  - 0.6726480764337647
  test_average_precision_micro:
  - 0.671224858717311
  - 0.7220321147944073
  - 0.7254503007829167
  - 0.7248754455398506
  - 0.6930023583712186
  test_average_precision_samples:
  - 0.7939164370982553
  - 0.824090038314176
  - 0.7899758454106279
  - 0.8031944444444444
  - 0.7778007346189165
  test_average_precision_weighted:
  - 0.6759411964206854
  - 0.715210603282779
  - 0.7186572455115776
  - 0.7364864246055001
  - 0.6814135079732341
  test_coverage_error:
  - -2.7355371900826446
  - -2.75
  - -2.8173913043478263
  - -2.8666666666666667
  - -2.909090909090909
  test_f1_macro:
  - 0.01075268817204301
  - 0.0
  - 0.0
  - 0.03333333333333333
  - 0.011111111111111112
  test_f1_micro:
  - 0.00909090909090909
  - 0.0
  - 0.0
  - 0.03404255319148936
  - 0.0091324200913242
  test_f1_samples:
  - 0.005509641873278236
  - 0.0
  - 0.0
  - 0.02222222222222222
  - 0.005509641873278236
  test_f1_weighted:
  - 0.008837825894829872
  - 0.0
  - 0.0
  - 0.03043478260869565
  - 0.008868501529051987
  test_hamming_loss:
  - -0.3002754820936639
  - -0.31896551724137934
  - -0.3173913043478261
  - -0.31527777777777777
  - -0.2988980716253444
  test_jaccard_macro:
  - 0.005555555555555556
  - 0.0
  - 0.0
  - 0.018518518518518517
  - 0.005747126436781609
  test_jaccard_micro:
  - 0.0045662100456621
  - 0.0
  - 0.0
  - 0.017316017316017316
  - 0.0045871559633027525
  test_jaccard_samples:
  - 0.004132231404958678
  - 0.0
  - 0.0
  - 0.016666666666666666
  - 0.004132231404958678
  test_jaccard_weighted:
  - 0.0045662100456621
  - 0.0
  - 0.0
  - 0.016908212560386472
  - 0.0045871559633027525
  test_label_ranking_average_precision_score:
  - 0.7939164370982553
  - 0.8240900383141764
  - 0.789975845410628
  - 0.8031944444444441
  - 0.7778007346189163
  test_label_ranking_loss:
  - 0.1708677685950413
  - 0.13963122605363984
  - 0.16243961352657008
  - 0.15925925925925927
  - 0.19419191919191917
  test_matthews_corrcoef_macro:
  - 0.026498311150470716
  - 0.0
  - 0.0
  - 0.03886611949488385
  - 0.02709898604560459
  test_matthews_corrcoef_micro:
  - 0.056508388063960475
  - 0.0
  - 0.0
  - 0.08618786486197498
  - 0.056693674516198785
  test_matthews_corrcoef_samples:
  - 0.005226905223418809
  - 0.0
  - 0.0
  - 0.01941518440112253
  - 0.005226905223418809
  test_matthews_corrcoef_weighted:
  - 0.021779433822304697
  - 0.0
  - 0.0
  - 0.03548645693011134
  - 0.02162946592630825
  test_ndgc:
  - 0.8586162880427828
  - 0.884137609174791
  - 0.8549670226237507
  - 0.8707464724986153
  - 0.8483111488525878
  test_precision_macro:
  - 0.16666666666666666
  - 0.0
  - 0.0
  - 0.13333333333333333
  - 0.16666666666666666
  test_precision_micro:
  - 1.0
  - 0.0
  - 0.0
  - 0.8
  - 1.0
  test_precision_samples:
  - 0.008264462809917356
  - 0.0
  - 0.0
  - 0.03333333333333333
  - 0.008264462809917356
  test_precision_weighted:
  - 0.136986301369863
  - 0.0
  - 0.0
  - 0.12173913043478261
  - 0.13302752293577982
  test_recall_macro:
  - 0.005555555555555556
  - 0.0
  - 0.0
  - 0.019047619047619046
  - 0.005747126436781609
  test_recall_micro:
  - 0.0045662100456621
  - 0.0
  - 0.0
  - 0.017391304347826087
  - 0.0045871559633027525
  test_recall_samples:
  - 0.004132231404958678
  - 0.0
  - 0.0
  - 0.016666666666666666
  - 0.004132231404958678
  test_recall_weighted:
  - 0.0045662100456621
  - 0.0
  - 0.0
  - 0.017391304347826087
  - 0.0045871559633027525
  test_roc_auc_macro:
  - 0.8144170962371186
  - 0.837892090223929
  - 0.8424796948443456
  - 0.8442336607584654
  - 0.7985591835074085
  test_roc_auc_micro:
  - 0.8267091765511155
  - 0.8627266507013343
  - 0.8558686948007252
  - 0.8637267080745341
  - 0.8239091959835295
  test_roc_auc_samples:
  - 0.8291322314049587
  - 0.8603687739463601
  - 0.83756038647343
  - 0.8407407407407407
  - 0.8058080808080809
  test_roc_auc_weighted:
  - 0.8133767802594573
  - 0.8359082280037419
  - 0.8450505308448389
  - 0.8373286252253864
  - 0.803398487825297
start: 2023-11-27 23:12:35.100134
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
