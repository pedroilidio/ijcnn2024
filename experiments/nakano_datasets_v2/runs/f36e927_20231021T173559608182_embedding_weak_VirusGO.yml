active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjvyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz47+AZmZmZmb2PwCamZmZmdk/gGZmZmZm9j/AzMzMzMwEwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 17:37:52.807706
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: embedding_weak
  params:
    memory: estimators_cache
hash: f36e9276f3cb2215430e5c3b85766fbf0e41422d10df15f4151d91a980c7d732
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/f36e927_20231021T173559608182_embedding_weak_VirusGO.yml
results:
  fit_time:
  - 59.086944341659546
  - 64.4063172340393
  - 66.2816653251648
  - 66.7344000339508
  - 65.69092607498169
  score_time:
  - 29.968425989151
  - 44.59755516052246
  - 42.566015005111694
  - 45.92524337768555
  - 41.67270874977112
  test_average_precision_macro:
  - 0.9339493407399981
  - 0.9758614735913448
  - 0.9479165266362499
  - 0.9699572725547047
  - 0.9560453343304026
  test_average_precision_micro:
  - 0.8616211340388213
  - 0.9479971075299459
  - 0.9614853853523686
  - 0.9413752956711541
  - 0.9347891012687617
  test_average_precision_samples:
  - 0.8988095238095238
  - 0.9399999999999998
  - 0.9926829268292684
  - 0.9395833333333332
  - 0.9488636363636364
  test_average_precision_weighted:
  - 0.925251622656467
  - 0.9798218387219936
  - 0.9691680569932832
  - 0.9708868653455535
  - 0.9489276256658293
  test_coverage_error:
  - -1.5952380952380953
  - -1.55
  - -1.3414634146341464
  - -1.325
  - -1.3181818181818181
  test_f1_macro:
  - 0.41350441350441347
  - 0.7264852829368958
  - 0.43553658022348724
  - 0.703390522875817
  - 0.43529173829507534
  test_f1_micro:
  - 0.7659574468085107
  - 0.8444444444444444
  - 0.7816091954022988
  - 0.8181818181818182
  - 0.7073170731707317
  test_f1_samples:
  - 0.6785714285714286
  - 0.775
  - 0.7276422764227642
  - 0.7583333333333333
  - 0.6287878787878788
  test_f1_weighted:
  - 0.684406331465155
  - 0.807585532746823
  - 0.7121648907702038
  - 0.7805555555555556
  - 0.6616708206186711
  test_hamming_loss:
  - -0.0873015873015873
  - -0.058333333333333334
  - -0.07723577235772358
  - -0.06666666666666667
  - -0.09090909090909091
  test_jaccard_macro:
  - 0.35555555555555557
  - 0.6583820662768032
  - 0.3875661375661376
  - 0.6232943469785575
  - 0.3421840958605665
  test_jaccard_micro:
  - 0.6206896551724138
  - 0.7307692307692307
  - 0.6415094339622641
  - 0.6923076923076923
  - 0.5471698113207547
  test_jaccard_samples:
  - 0.6626984126984128
  - 0.75
  - 0.7154471544715447
  - 0.7375
  - 0.625
  test_jaccard_weighted:
  - 0.5990662931839402
  - 0.7276608187134502
  - 0.639957264957265
  - 0.6887183235867447
  - 0.5471132897603486
  test_label_ranking_average_precision_score:
  - 0.8988095238095238
  - 0.9399999999999998
  - 0.9926829268292684
  - 0.9395833333333332
  - 0.9488636363636364
  test_label_ranking_loss:
  - 0.06904761904761905
  - 0.04875
  - 0.008468834688346883
  - 0.026250000000000002
  - 0.03238636363636364
  test_matthews_corrcoef_macro:
  - 0.3838408343036866
  - 0.70574508604214
  - 0.41280607592411295
  - 0.6778229098243713
  - 0.42092923963871803
  test_matthews_corrcoef_micro:
  - 0.716695738003745
  - 0.8167200125791998
  - 0.7581680940059609
  - 0.7826237921249264
  - 0.6858238517979439
  test_matthews_corrcoef_samples:
  - 0.6511277760976435
  - 0.7648683298050514
  - 0.7246859673065197
  - 0.7461512473537886
  - 0.6189194439098563
  test_matthews_corrcoef_weighted:
  - 0.6254314234877631
  - 0.7608137107013895
  - 0.6691751423769206
  - 0.7244752220283202
  - 0.6187602364242509
  test_ndgc:
  - 0.927753650987067
  - 0.9587350531361741
  - 0.9967469077725406
  - 0.9554286354475774
  - 0.9629131797278995
  test_precision_macro:
  - 0.44035087719298244
  - 0.8121693121693122
  - 0.48809523809523814
  - 0.792279411764706
  - 0.6130952380952381
  test_precision_micro:
  - 0.8372093023255814
  - 0.95
  - 0.9714285714285714
  - 0.9
  - 0.9354838709677419
  test_precision_samples:
  - 0.6785714285714286
  - 0.8125
  - 0.7439024390243902
  - 0.7625
  - 0.6363636363636364
  test_precision_weighted:
  - 0.684623323013416
  - 0.8757142857142857
  - 0.7843406593406593
  - 0.8333333333333334
  - 0.8242296918767507
  test_recall_macro:
  - 0.4089635854341737
  - 0.6737472766884531
  - 0.39464674758792406
  - 0.6533905228758169
  - 0.3581932773109244
  test_recall_micro:
  - 0.7058823529411765
  - 0.76
  - 0.6538461538461539
  - 0.75
  - 0.5686274509803921
  test_recall_samples:
  - 0.6904761904761905
  - 0.7625
  - 0.7276422764227642
  - 0.775
  - 0.625
  test_recall_weighted:
  - 0.7058823529411765
  - 0.76
  - 0.6538461538461539
  - 0.75
  - 0.5686274509803921
  test_roc_auc_macro:
  - 0.94640866873065
  - 0.9938650141655256
  - 0.9867136043606631
  - 0.9890318257435825
  - 0.9816973836581679
  test_roc_auc_micro:
  - 0.9530777485123403
  - 0.9808421052631578
  - 0.9813639968279144
  - 0.982693142361111
  - 0.9812206572769954
  test_roc_auc_samples:
  - 0.9309523809523809
  - 0.9512499999999999
  - 0.9915311653116531
  - 0.9737500000000001
  - 0.9676136363636364
  test_roc_auc_weighted:
  - 0.9531888544891641
  - 0.9909442248572682
  - 0.9899489421548243
  - 0.9839535527375202
  - 0.9686941843804588
start: 2023-10-21 17:35:59.608182
wrapper: null
