active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AM3MzMzM/D8AmpmZmZnpPwCamZmZmek/ADMzMzMz87+AmZmZmZkBwA==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 18:09:02.182089
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_pvalue
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: embedding_weak_chi2
  params:
    memory: estimators_cache
hash: f7ce32671b3527c42822bda38577c293db7ec5b74210b2b8494b88075121f6d9
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/f7ce326_20231021T180647855991_embedding_weak_chi2_Gram_positive.yml
results:
  fit_time:
  - 71.2766637802124
  - 70.85166764259338
  - 75.38693499565125
  - 69.68360567092896
  - 65.20992493629456
  score_time:
  - 38.40324902534485
  - 54.18490743637085
  - 58.26473045349121
  - 38.16455626487732
  - 20.321979522705078
  test_average_precision_macro:
  - 0.8599976638857812
  - 0.945741391941392
  - 0.8659968758284542
  - 0.8987440860145779
  - 0.9495016797967815
  test_average_precision_micro:
  - 0.991409405362091
  - 0.9945619180022454
  - 0.9794800293255319
  - 0.9787335107664134
  - 0.9779466232249817
  test_average_precision_samples:
  - 0.9738562091503268
  - 0.9757281553398058
  - 0.9506472491909386
  - 0.9595238095238096
  - 0.9772012578616351
  test_average_precision_weighted:
  - 0.9744901122209604
  - 0.9888844275382737
  - 0.9625884168958618
  - 0.9712469523609062
  - 0.9764566499334095
  test_coverage_error:
  - -1.0784313725490196
  - -1.058252427184466
  - -1.1359223300970873
  - -1.0952380952380953
  - -1.0660377358490567
  test_f1_macro:
  - 0.7823978501674328
  - 0.8121424534863502
  - 0.6901773604590506
  - 0.7729511426319937
  - 0.9365618166739101
  test_f1_micro:
  - 0.9306930693069307
  - 0.9463414634146341
  - 0.9126213592233009
  - 0.9126213592233011
  - 0.957345971563981
  test_f1_samples:
  - 0.9183006535947712
  - 0.9385113268608414
  - 0.9093851132686083
  - 0.8952380952380953
  - 0.9528301886792453
  test_f1_weighted:
  - 0.9279723299760969
  - 0.9430372059039899
  - 0.895794310019662
  - 0.9121580547112463
  - 0.9567709698013448
  test_hamming_loss:
  - -0.03431372549019608
  - -0.02669902912621359
  - -0.043689320388349516
  - -0.04285714285714286
  - -0.02122641509433962
  test_jaccard_macro:
  - 0.7183333333333333
  - 0.7439024390243902
  - 0.6429070696312076
  - 0.6910122528543581
  - 0.8842338217338217
  test_jaccard_micro:
  - 0.8703703703703703
  - 0.8981481481481481
  - 0.8392857142857143
  - 0.8392857142857143
  - 0.9181818181818182
  test_jaccard_samples:
  - 0.9166666666666666
  - 0.9368932038834952
  - 0.9077669902912622
  - 0.8952380952380953
  - 0.9528301886792453
  test_jaccard_weighted:
  - 0.8837728937728937
  - 0.9059829059829059
  - 0.8424317411386377
  - 0.8517553142114546
  - 0.9179729075955491
  test_label_ranking_average_precision_score:
  - 0.9738562091503268
  - 0.9757281553398058
  - 0.9506472491909385
  - 0.9595238095238096
  - 0.9772012578616354
  test_label_ranking_loss:
  - 0.018790849673202614
  - 0.016181229773462782
  - 0.042071197411003236
  - 0.031746031746031744
  - 0.0220125786163522
  test_matthews_corrcoef_macro:
  - 0.7616378670705206
  - 0.7977447319503328
  - 0.6662095655754171
  - 0.7456476383126625
  - 0.9238493707077552
  test_matthews_corrcoef_micro:
  - 0.9086263021519996
  - 0.9287521522868792
  - 0.8835728358334574
  - 0.8845370692003675
  - 0.9432364387311124
  test_matthews_corrcoef_samples:
  - 0.9043531072142774
  - 0.9246991935520028
  - 0.8826279961409998
  - 0.873015873015873
  - 0.940251572327044
  test_matthews_corrcoef_weighted:
  - 0.9082507435180349
  - 0.9285653854761637
  - 0.8674530109196591
  - 0.884103684050156
  - 0.9371228059189532
  test_ndgc:
  - 0.9811212701667202
  - 0.9820839686199736
  - 0.9632646124223508
  - 0.9699731888864153
  - 0.9829484534454368
  test_precision_macro:
  - 0.8143939393939393
  - 0.846316425120773
  - 0.6817841880341879
  - 0.7903357903357904
  - 0.9733391608391608
  test_precision_micro:
  - 0.9591836734693877
  - 0.9603960396039604
  - 0.9215686274509803
  - 0.9306930693069307
  - 0.9619047619047619
  test_precision_samples:
  - 0.9215686274509803
  - 0.941747572815534
  - 0.912621359223301
  - 0.8952380952380953
  - 0.9528301886792453
  test_precision_weighted:
  - 0.953962703962704
  - 0.9553256224451876
  - 0.8886074128862591
  - 0.9322803322803322
  - 0.9639134450455205
  test_recall_macro:
  - 0.7546393557422969
  - 0.7872357723577235
  - 0.6994120209059234
  - 0.7583333333333333
  - 0.9101190476190476
  test_recall_micro:
  - 0.9038461538461539
  - 0.9326923076923077
  - 0.9038461538461539
  - 0.8952380952380953
  - 0.9528301886792453
  test_recall_samples:
  - 0.9166666666666666
  - 0.9368932038834952
  - 0.9077669902912622
  - 0.8952380952380953
  - 0.9528301886792453
  test_recall_weighted:
  - 0.9038461538461539
  - 0.9326923076923077
  - 0.9038461538461539
  - 0.8952380952380953
  - 0.9528301886792453
  test_roc_auc_macro:
  - 0.9920312657491352
  - 0.9963052143934497
  - 0.9877631882394573
  - 0.985701739028945
  - 0.9879788315952358
  test_roc_auc_micro:
  - 0.99709008097166
  - 0.9981580919080919
  - 0.992007992007992
  - 0.9889342403628117
  - 0.9898540405838375
  test_roc_auc_samples:
  - 0.9812091503267973
  - 0.9838187702265372
  - 0.9579288025889968
  - 0.9682539682539683
  - 0.9779874213836477
  test_roc_auc_weighted:
  - 0.9972879240453578
  - 0.9978171771667247
  - 0.9915668418940312
  - 0.9873874549819928
  - 0.9879171233261367
start: 2023-10-21 18:06:47.855991
wrapper: null
