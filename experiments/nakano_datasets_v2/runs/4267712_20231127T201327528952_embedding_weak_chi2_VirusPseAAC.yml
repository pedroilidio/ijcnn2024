active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z84MzMzMzPjP5CZmZmZmdm/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz478gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QDMzMzMzC0AAmpmZmZnZP8DMzMzMzATAwMzMzMzMBMCAZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 20:15:30.703109
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_pvalue
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: embedding_weak_chi2
  params:
    memory: estimators_cache
hash: 4267712905eb22c7d5bcc13587e0e7e2bde5f6b04200b558c7920d5f4918087f
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/4267712_20231127T201327528952_embedding_weak_chi2_VirusPseAAC.yml
results:
  fit_time:
  - 73.29891014099121
  - 68.33475279808044
  - 74.67339396476746
  - 72.44800329208374
  - 71.06481838226318
  score_time:
  - 46.911253690719604
  - 33.778587341308594
  - 47.897555112838745
  - 47.57651424407959
  - 29.938273906707764
  test_average_precision_macro:
  - 0.3172332018970912
  - 0.48360133411790995
  - 0.3885728414448339
  - 0.4566637962549059
  - 0.38098622232609053
  test_average_precision_micro:
  - 0.5014984092118432
  - 0.5085827570736114
  - 0.44295171727546684
  - 0.40729121549213215
  - 0.43546163872497495
  test_average_precision_samples:
  - 0.7211988304093567
  - 0.6926829268292682
  - 0.6916666666666665
  - 0.6465909090909091
  - 0.6891666666666667
  test_average_precision_weighted:
  - 0.4729334366451711
  - 0.5286607282375347
  - 0.4522792539243635
  - 0.43953634459215835
  - 0.43133210284412316
  test_coverage_error:
  - -2.289473684210526
  - -2.1951219512195124
  - -2.2045454545454546
  - -2.227272727272727
  - -2.275
  test_f1_macro:
  - 0.13952380952380952
  - 0.24490421455938693
  - 0.2481844589687727
  - 0.1372549019607843
  - 0.09128205128205129
  test_f1_micro:
  - 0.3235294117647059
  - 0.3333333333333333
  - 0.4
  - 0.3333333333333333
  - 0.20588235294117646
  test_f1_samples:
  - 0.25
  - 0.24796747967479674
  - 0.356060606060606
  - 0.303030303030303
  - 0.15833333333333333
  test_f1_weighted:
  - 0.29177142857142857
  - 0.30319585305386526
  - 0.34592592592592597
  - 0.28
  - 0.18256410256410255
  test_hamming_loss:
  - -0.20175438596491227
  - -0.1951219512195122
  - -0.18181818181818182
  - -0.21212121212121213
  - -0.225
  test_jaccard_macro:
  - 0.08886346300533943
  - 0.1681096681096681
  - 0.16517094017094017
  - 0.08641975308641975
  - 0.05303030303030303
  test_jaccard_micro:
  - 0.19298245614035087
  - 0.2
  - 0.25
  - 0.2
  - 0.11475409836065574
  test_jaccard_samples:
  - 0.23245614035087722
  - 0.2276422764227642
  - 0.3522727272727273
  - 0.29545454545454547
  - 0.15
  test_jaccard_weighted:
  - 0.18562929061784897
  - 0.19539937186996012
  - 0.22994871794871796
  - 0.17629629629629628
  - 0.10606060606060605
  test_label_ranking_average_precision_score:
  - 0.7211988304093567
  - 0.6926829268292684
  - 0.6916666666666667
  - 0.646590909090909
  - 0.6891666666666665
  test_label_ranking_loss:
  - 0.20350877192982456
  - 0.1929539295392954
  - 0.2107954545454545
  - 0.21704545454545457
  - 0.19437500000000002
  test_matthews_corrcoef_macro:
  - 0.057633288288706265
  - 0.1620544166285579
  - 0.15679536891754153
  - 0.013798111837327523
  - -0.004896405969619458
  test_matthews_corrcoef_micro:
  - 0.27723313825749724
  - 0.2744008772097649
  - 0.31430164810334554
  - 0.21820528824143112
  - 0.13449237512033538
  test_matthews_corrcoef_samples:
  - 0.20600927435747757
  - 0.2014831209175079
  - 0.29164671663712904
  - 0.21056616054698526
  - 0.10371708245126285
  test_matthews_corrcoef_weighted:
  - 0.11820184889730952
  - 0.13672539583519583
  - 0.17045887302756207
  - 0.028148148148148148
  - -0.009792811939238918
  test_ndgc:
  - 0.7933990061071494
  - 0.7710905853506124
  - 0.7702356165649777
  - 0.7370072709359298
  - 0.7712219651760809
  test_precision_macro:
  - 0.20833333333333334
  - 0.356060606060606
  - 0.267825311942959
  - 0.1372549019607843
  - 0.13657407407407407
  test_precision_micro:
  - 0.6111111111111112
  - 0.5714285714285714
  - 0.5333333333333333
  - 0.4117647058823529
  - 0.4117647058823529
  test_precision_samples:
  - 0.2894736842105263
  - 0.2804878048780488
  - 0.36363636363636365
  - 0.3181818181818182
  - 0.175
  test_precision_weighted:
  - 0.435
  - 0.4304812834224599
  - 0.3836363636363636
  - 0.28
  - 0.27314814814814814
  test_recall_macro:
  - 0.105119825708061
  - 0.18736383442265794
  - 0.23468137254901963
  - 0.1372549019607843
  - 0.06862745098039215
  test_recall_micro:
  - 0.22
  - 0.23529411764705882
  - 0.32
  - 0.28
  - 0.13725490196078433
  test_recall_samples:
  - 0.23245614035087722
  - 0.2398373983739837
  - 0.3522727272727273
  - 0.29545454545454547
  - 0.15
  test_recall_weighted:
  - 0.22
  - 0.23529411764705882
  - 0.32
  - 0.28
  - 0.13725490196078433
  test_roc_auc_macro:
  - 0.5185853526846175
  - 0.6881493888846829
  - 0.7215572058402939
  - 0.6536061797091208
  - 0.5969192255872832
  test_roc_auc_micro:
  - 0.7887640449438202
  - 0.8114630467571644
  - 0.7936448598130841
  - 0.7885981308411215
  - 0.7754953833385206
  test_roc_auc_samples:
  - 0.7964912280701754
  - 0.8070460704607046
  - 0.7892045454545453
  - 0.7829545454545456
  - 0.805625
  test_roc_auc_weighted:
  - 0.5847165285032933
  - 0.6694305650188004
  - 0.6717443157443158
  - 0.5986876876876877
  - 0.5648398554577044
start: 2023-11-27 20:13:27.528952
wrapper: null
