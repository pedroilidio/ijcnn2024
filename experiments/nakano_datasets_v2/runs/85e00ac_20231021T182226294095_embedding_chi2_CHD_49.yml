active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8gMzMzMzPzvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAA8L8AAAAAAAAQwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUQA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 18:24:45.419807
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_pvalue
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: embedding_chi2
  params:
    memory: estimators_cache
hash: 85e00ac9ced95e5d74e9045cca6cfcd6ee980d44d91e647d64b18d6fca705fd4
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/85e00ac_20231021T182226294095_embedding_chi2_CHD_49.yml
results:
  fit_time:
  - 63.18688774108887
  - 66.3018319606781
  - 58.37265586853027
  - 61.88062405586243
  - 63.06489944458008
  score_time:
  - 73.84508943557739
  - 63.26670551300049
  - 73.56594014167786
  - 66.50774121284485
  - 71.18681859970093
  test_average_precision_macro:
  - 0.5193939650557813
  - 0.4830733580417918
  - 0.5147841451128038
  - 0.49885196517831193
  - 0.549120037323051
  test_average_precision_micro:
  - 0.6694541979776443
  - 0.6467669610510379
  - 0.6931223093384552
  - 0.6807069842022009
  - 0.7354292104152569
  test_average_precision_samples:
  - 0.7825396825396825
  - 0.7798671497584541
  - 0.8008633633633633
  - 0.7940940940940941
  - 0.8075995807127883
  test_average_precision_weighted:
  - 0.6323418795892694
  - 0.5930814947331088
  - 0.6314847537341811
  - 0.6080230790211872
  - 0.6727991891945473
  test_coverage_error:
  - -3.7410714285714284
  - -3.617391304347826
  - -3.6036036036036037
  - -3.7027027027027026
  - -3.792452830188679
  test_f1_macro:
  - 0.45884759130970076
  - 0.4444159236029772
  - 0.489266897793855
  - 0.4593612935530018
  - 0.4206635415699744
  test_f1_micro:
  - 0.6585365853658537
  - 0.6310344827586206
  - 0.685025817555938
  - 0.6539130434782608
  - 0.6570397111913358
  test_f1_samples:
  - 0.6314200680272108
  - 0.6088612836438922
  - 0.6663020163020164
  - 0.6305448305448308
  - 0.6346810422282122
  test_f1_weighted:
  - 0.6127854867122615
  - 0.5882097628467015
  - 0.6450579059228451
  - 0.6094245747721818
  - 0.5851733799591248
  test_hamming_loss:
  - -0.2916666666666667
  - -0.3101449275362319
  - -0.2747747747747748
  - -0.2987987987987988
  - -0.29874213836477986
  test_jaccard_macro:
  - 0.34543941377274706
  - 0.32835295786474117
  - 0.3727189252189252
  - 0.346860200024757
  - 0.32945609920684865
  test_jaccard_micro:
  - 0.4909090909090909
  - 0.4609571788413098
  - 0.5209424083769634
  - 0.48578811369509045
  - 0.489247311827957
  test_jaccard_samples:
  - 0.5220238095238096
  - 0.5007246376811595
  - 0.5660660660660661
  - 0.5087087087087087
  - 0.5078616352201257
  test_jaccard_weighted:
  - 0.47944028779116493
  - 0.45181241480058565
  - 0.5099587481755314
  - 0.47978954357466247
  - 0.4754474780361948
  test_label_ranking_average_precision_score:
  - 0.7825396825396828
  - 0.7798671497584542
  - 0.8098723723723723
  - 0.7940940940940943
  - 0.8264675052410906
  test_label_ranking_loss:
  - 0.21192956349206352
  - 0.22200483091787437
  - 0.19727227227227226
  - 0.19914914914914914
  - 0.1732966457023061
  test_matthews_corrcoef_macro:
  - 0.10931576440137218
  - 0.07778592930568627
  - 0.14356168813723888
  - 0.10018843975561803
  - 0.07470666300311272
  test_matthews_corrcoef_micro:
  - 0.4040425938738366
  - 0.3636417541514021
  - 0.4416210541296826
  - 0.39103648478609115
  - 0.3938307967188498
  test_matthews_corrcoef_samples:
  - 0.42065648487747115
  - 0.3722652147192285
  - 0.46574422433908047
  - 0.42203557180140405
  - 0.4382961537598672
  test_matthews_corrcoef_weighted:
  - 0.10892129053236545
  - 0.07290256814526155
  - 0.14728608597779522
  - 0.10339344279976155
  - 0.08244865028732397
  test_ndgc:
  - 0.8585630257593845
  - 0.8528398560532299
  - 0.8671068023755886
  - 0.8681835610611258
  - 0.8708105685429992
  test_precision_macro:
  - 0.5278425026610144
  - 0.4860608345902464
  - 0.5400029334811943
  - 0.5064692351926393
  - 0.5179119339425854
  test_precision_micro:
  - 0.6539792387543253
  - 0.6245733788395904
  - 0.6745762711864407
  - 0.6527777777777778
  - 0.6816479400749064
  test_precision_samples:
  - 0.6688988095238094
  - 0.6355072463768116
  - 0.698948948948949
  - 0.6674174174174173
  - 0.714622641509434
  test_precision_weighted:
  - 0.637258471072589
  - 0.5986112758179379
  - 0.6561484948836727
  - 0.6194974350137816
  - 0.632722076307391
  test_recall_macro:
  - 0.47466175149305
  - 0.46074890765953236
  - 0.5057793045355234
  - 0.47154012423933117
  - 0.43901432626922826
  test_recall_micro:
  - 0.6631578947368421
  - 0.6376306620209059
  - 0.6958041958041958
  - 0.6550522648083623
  - 0.6341463414634146
  test_recall_samples:
  - 0.6480654761904762
  - 0.626086956521739
  - 0.6831831831831832
  - 0.6651651651651651
  - 0.6279874213836477
  test_recall_weighted:
  - 0.6631578947368421
  - 0.6376306620209059
  - 0.6958041958041958
  - 0.6550522648083623
  - 0.6341463414634146
  test_roc_auc_macro:
  - 0.5614771117907771
  - 0.5373879351201643
  - 0.6126223543541707
  - 0.5520236698839333
  - 0.5957918188287114
  test_roc_auc_micro:
  - 0.7919669975973526
  - 0.7677782485020879
  - 0.7935130658814868
  - 0.7851488880512628
  - 0.7965516208580015
  test_roc_auc_samples:
  - 0.7880704365079366
  - 0.7779951690821255
  - .nan
  - 0.8008508508508508
  - .nan
  test_roc_auc_weighted:
  - 0.5819299574192405
  - 0.5433266723845668
  - 0.5801793267088269
  - 0.5616082155640361
  - 0.5892032280585022
start: 2023-10-21 18:22:26.294095
wrapper: null
