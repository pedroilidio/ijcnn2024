active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz47+gmZmZmZkRQICZmZmZmfm/QDMzMzMzC0BgZmZmZmYWwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 20:11:43.496478
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - rf
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.RandomForestRegressor
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        - - xt
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesRegressor
                params:
                  bootstrap: false
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: proba_weak
  params:
    memory: estimators_cache
hash: 7d2a6901e90e075aef91eefbc15fe2447e366713a95dfe785bc413db37067e69
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/7d2a690_20231127T200953083565_proba_weak_VirusPseAAC.yml
results:
  fit_time:
  - 90.8008804321289
  - 87.87279963493347
  - 86.54574584960938
  - 87.4448127746582
  - 84.24410700798035
  score_time:
  - 19.17090368270874
  - 12.966797351837158
  - 14.649485349655151
  - 16.351234197616577
  - 8.825742244720459
  test_average_precision_macro:
  - 0.3784256922252107
  - 0.38634568952041787
  - 0.43751917689567404
  - 0.44143649539904833
  - 0.3776887159461704
  test_average_precision_micro:
  - 0.31122727191441313
  - 0.4563316358062415
  - 0.3980436713381064
  - 0.32780067417121544
  - 0.35181842886399856
  test_average_precision_samples:
  - 0.5327380952380952
  - 0.6906906906906907
  - 0.5697674418604651
  - 0.5399122807017543
  - 0.601418439716312
  test_average_precision_weighted:
  - 0.43026485207059356
  - 0.48118552657035635
  - 0.44174323167093926
  - 0.46181203985614744
  - 0.3974538853783737
  test_coverage_error:
  - -2.9285714285714284
  - -2.4324324324324325
  - -2.7209302325581395
  - -3.1052631578947367
  - -2.297872340425532
  test_f1_macro:
  - 0.11700336700336701
  - 0.04841269841269841
  - 0.1589506172839506
  - 0.14761904761904762
  - 0.19892473118279572
  test_f1_micro:
  - 0.10169491525423728
  - 0.10714285714285714
  - 0.2608695652173913
  - 0.10169491525423728
  - 0.22500000000000003
  test_f1_samples:
  - 0.06349206349206349
  - 0.05405405405405406
  - 0.1627906976744186
  - 0.05263157894736842
  - 0.15602836879432624
  test_f1_weighted:
  - 0.08694791047732224
  - 0.10079365079365081
  - 0.23783587509077705
  - 0.0773109243697479
  - 0.20177103099304236
  test_hamming_loss:
  - -0.21031746031746032
  - -0.22522522522522523
  - -0.19767441860465115
  - -0.2324561403508772
  - -0.2198581560283688
  test_jaccard_macro:
  - 0.07329598506069095
  - 0.02631578947368421
  - 0.09502164502164502
  - 0.09210526315789473
  - 0.13452380952380952
  test_jaccard_micro:
  - 0.05357142857142857
  - 0.05660377358490566
  - 0.15
  - 0.05357142857142857
  - 0.1267605633802817
  test_jaccard_samples:
  - 0.05952380952380952
  - 0.04054054054054054
  - 0.13953488372093023
  - 0.039473684210526314
  - 0.13829787234042554
  test_jaccard_weighted:
  - 0.04855275443510738
  - 0.05482456140350877
  - 0.14186401833460655
  - 0.044719642242862054
  - 0.12198879551820728
  test_label_ranking_average_precision_score:
  - 0.5327380952380953
  - 0.6906906906906906
  - 0.5697674418604649
  - 0.5399122807017543
  - 0.601418439716312
  test_label_ranking_loss:
  - 0.35582010582010587
  - 0.23873873873873874
  - 0.29593023255813955
  - 0.35621345029239765
  - 0.24095744680851058
  test_matthews_corrcoef_macro:
  - 0.08517282836183697
  - -0.01664726488587361
  - 0.0822873141737844
  - 0.09238405966474046
  - 0.0806773378869215
  test_matthews_corrcoef_micro:
  - 0.07779581242609859
  - 0.07457649793650202
  - 0.2079002318273404
  - 0.06924382130359888
  - 0.11390574334162237
  test_matthews_corrcoef_samples:
  - 0.043629893619849425
  - 0.029658556651379127
  - 0.13011007423725712
  - 0.039404384107921776
  - 0.08361323676882347
  test_matthews_corrcoef_weighted:
  - 0.03063977437073276
  - -0.03270448687170865
  - 0.08699646914104478
  - -0.009337515475473554
  - -0.03288213240588752
  test_ndgc:
  - 0.651806007938488
  - 0.7705482261810667
  - 0.682428111449968
  - 0.6573898790379212
  - 0.7032325517387891
  test_precision_macro:
  - 0.2833333333333333
  - 0.125
  - 0.25
  - 0.2222222222222222
  - 0.2664835164835165
  test_precision_micro:
  - 0.375
  - 0.375
  - 0.5
  - 0.375
  - 0.3103448275862069
  test_precision_samples:
  - 0.05952380952380952
  - 0.06756756756756757
  - 0.1744186046511628
  - 0.039473684210526314
  - 0.14893617021276595
  test_precision_weighted:
  - 0.41960784313725485
  - 0.2604166666666667
  - 0.38235294117647056
  - 0.2222222222222222
  - 0.23884938590820945
  test_recall_macro:
  - 0.10294117647058824
  - 0.03002450980392157
  - 0.11846405228758168
  - 0.13425925925925927
  - 0.16176470588235295
  test_recall_micro:
  - 0.058823529411764705
  - 0.0625
  - 0.17647058823529413
  - 0.058823529411764705
  - 0.17647058823529413
  test_recall_samples:
  - 0.07142857142857142
  - 0.05405405405405406
  - 0.1744186046511628
  - 0.07894736842105263
  - 0.18085106382978725
  test_recall_weighted:
  - 0.058823529411764705
  - 0.0625
  - 0.17647058823529413
  - 0.058823529411764705
  - 0.17647058823529413
  test_roc_auc_macro:
  - 0.6318527016069586
  - 0.6592416039403705
  - 0.6310895640307405
  - 0.6879756069094305
  - 0.583004455011979
  test_roc_auc_micro:
  - 0.6598380645790654
  - 0.7708333333333333
  - 0.7329733825897509
  - 0.6643403123961448
  - 0.7602919955861133
  test_roc_auc_samples:
  - 0.6441798941798942
  - 0.7612612612612613
  - 0.7040697674418606
  - 0.6437865497076022
  - 0.7590425531914892
  test_roc_auc_weighted:
  - 0.5893679050567596
  - 0.5967610048255209
  - 0.5891352438411261
  - 0.6167296003368667
  - 0.5730290824340072
start: 2023-11-27 20:09:53.083565
wrapper: null
