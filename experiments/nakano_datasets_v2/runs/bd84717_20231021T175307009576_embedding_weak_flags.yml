active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzM/L+AmZmZmZnJP4CZmZmZmck/MDMzMzMz8z+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+YmZmZmZkJwNDMzMzMzPw/gJmZmZmZyb/QzMzMzMz8Pw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZAUA0MzMzMzMTwJiZmZmZmQFAoJmZmZmZ6b8wMzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT9AMzMzMzPzPwCamZmZmck/AJqZmZmZyT/AzMzMzMz8vw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMzC0CgmZmZmZnZP2ZmZmZmZh7AoJmZmZmZ2T80MzMzMzMLQA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+amZmZmZkBQJiZmZmZmem/oJmZmZmZyT+YmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          4MzMzMzM/D/IzMzMzMwQwJCZmZmZmQnAcGZmZmZmBkBwZmZmZmYGQA==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 17:54:37.514270
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: embedding_weak
  params:
    memory: estimators_cache
hash: bd84717535ea98213c25daa53d4158c5934c1706a0db36f76ee7aa56b2a2ef5c
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/bd84717_20231021T175307009576_embedding_weak_flags.yml
results:
  fit_time:
  - 55.9407684803009
  - 55.40942025184631
  - 56.47364401817322
  - 53.22486162185669
  - 57.0194194316864
  score_time:
  - 33.64495348930359
  - 33.70606350898743
  - 32.97449040412903
  - 34.04051685333252
  - 33.008983850479126
  test_average_precision_macro:
  - 0.782984170391705
  - 0.6631874317900449
  - 0.7762863519248073
  - 0.7737089899320536
  - 0.7695046285602907
  test_average_precision_micro:
  - 0.8275824242238925
  - 0.7057172932016991
  - 0.7190414270043433
  - 0.8544139491525379
  - 0.8387504273440629
  test_average_precision_samples:
  - 0.8393447018447019
  - 0.7979577334809891
  - 0.7854988662131519
  - 0.8637334656084655
  - 0.8647652116402117
  test_average_precision_weighted:
  - 0.8346167942730729
  - 0.7481260480392122
  - 0.7839799703909355
  - 0.8433424613184927
  - 0.8256897177976159
  test_coverage_error:
  - -4.621621621621622
  - -4.511627906976744
  - -4.785714285714286
  - -4.75
  - -4.472222222222222
  test_f1_macro:
  - 0.612157748474884
  - 0.5036377189687294
  - 0.5592397915993418
  - 0.5995972495972496
  - 0.6677145059498001
  test_f1_micro:
  - 0.7727272727272727
  - 0.6789667896678967
  - 0.6940298507462687
  - 0.748031496062992
  - 0.8076923076923076
  test_f1_samples:
  - 0.751082251082251
  - 0.666703580657069
  - 0.6646138253281111
  - 0.7216928133594801
  - 0.7807195890529225
  test_f1_weighted:
  - 0.7412119770235515
  - 0.6338599917150849
  - 0.6286119494476894
  - 0.713248743633359
  - 0.7817994802246772
  test_hamming_loss:
  - -0.23166023166023167
  - -0.28903654485049834
  - -0.2789115646258503
  - -0.25396825396825395
  - -0.1984126984126984
  test_jaccard_macro:
  - 0.49924513123270886
  - 0.3825096240046406
  - 0.43983362575799545
  - 0.4780699459270888
  - 0.5614237614237614
  test_jaccard_micro:
  - 0.6296296296296297
  - 0.5139664804469274
  - 0.5314285714285715
  - 0.5974842767295597
  - 0.6774193548387096
  test_jaccard_samples:
  - 0.6422136422136422
  - 0.5511627906976743
  - 0.5488095238095237
  - 0.6066137566137565
  - 0.6728835978835979
  test_jaccard_weighted:
  - 0.6273291333958675
  - 0.49241767637287476
  - 0.5096720249185647
  - 0.5941943740020662
  - 0.6810375975730305
  test_label_ranking_average_precision_score:
  - 0.8393447018447019
  - 0.7979577334809893
  - 0.785498866213152
  - 0.8637334656084655
  - 0.8647652116402116
  test_label_ranking_loss:
  - 0.17972972972972973
  - 0.23139534883720927
  - 0.23650793650793647
  - 0.1638888888888889
  - 0.13518518518518519
  test_matthews_corrcoef_macro:
  - 0.22469945053615717
  - 0.15447460008339362
  - 0.23838991845533858
  - 0.21729355357457467
  - 0.3383484438773791
  test_matthews_corrcoef_micro:
  - 0.5373323549908923
  - 0.4161427909776186
  - 0.4380494321917165
  - 0.4928778872539202
  - 0.6036850021121846
  test_matthews_corrcoef_samples:
  - 0.490253769353682
  - 0.41071067228802316
  - 0.3933310235057436
  - 0.43776408657513866
  - 0.5737601840465086
  test_matthews_corrcoef_weighted:
  - 0.20023830931336198
  - 0.1407974401244419
  - 0.17684696049402962
  - 0.18039695311334292
  - 0.3221135889452588
  test_ndgc:
  - 0.9036753367249932
  - 0.8800031536928956
  - 0.8687646317482509
  - 0.9280527267089812
  - 0.9196827028476101
  test_precision_macro:
  - 0.6084724950271169
  - 0.6367768812951538
  - 0.6493197278911564
  - 0.7397674221203633
  - 0.6591623252171682
  test_precision_micro:
  - 0.7555555555555555
  - 0.6814814814814815
  - 0.7045454545454546
  - 0.7661290322580645
  - 0.7894736842105263
  test_precision_samples:
  - 0.7391891891891892
  - 0.6728682170542635
  - 0.6892857142857143
  - 0.7458333333333331
  - 0.7671296296296296
  test_precision_weighted:
  - 0.7139804526945429
  - 0.7032769309274097
  - 0.6262605042016807
  - 0.7791667809314867
  - 0.746488447317291
  test_recall_macro:
  - 0.6369047619047619
  - 0.5205708370304644
  - 0.5744047619047619
  - 0.5915745245466607
  - 0.6886087768440711
  test_recall_micro:
  - 0.7906976744186046
  - 0.6764705882352942
  - 0.6838235294117647
  - 0.7307692307692307
  - 0.8267716535433071
  test_recall_samples:
  - 0.777027027027027
  - 0.6771317829457364
  - 0.6626984126984127
  - 0.7173280423280424
  - 0.821494708994709
  test_recall_weighted:
  - 0.7906976744186046
  - 0.6764705882352942
  - 0.6838235294117647
  - 0.7307692307692307
  - 0.8267716535433071
  test_roc_auc_macro:
  - 0.7678932863467969
  - 0.7053795735643061
  - 0.7340466073085652
  - 0.7558242100496683
  - 0.7628451180553316
  test_roc_auc_micro:
  - 0.8406678592725104
  - 0.7807040998217468
  - 0.7788998510796724
  - 0.8478562421185373
  - 0.8617322834645669
  test_roc_auc_samples:
  - 0.8202702702702702
  - 0.7686046511627906
  - 0.7634920634920634
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.7269682791846421
  - 0.6802629233511586
  - 0.7034299442387679
  - 0.7565630470047997
  - 0.716116565284149
start: 2023-10-21 17:53:07.009576
wrapper: null
