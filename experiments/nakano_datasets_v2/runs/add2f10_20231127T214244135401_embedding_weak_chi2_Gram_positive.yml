active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZmBkAAmpmZmZnpPwCYmZmZmcm/ADMzMzMz87+AmZmZmZkBwA==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 21:45:00.728383
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_pvalue
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.9
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler:
            call: deep_forest.weak_labels.PositiveUnlabeledImputer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesClassifier
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  class_weight: null
                  criterion: gini
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: 0.9
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: true
                  random_state: 0
                  verbose: true
                  warm_start: false
              sampling_strategy: auto
              threshold: 0.8
              use_oob_proba: true
              verbose: true
              weight_proba: true
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 0.05
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 0.05
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding_weak_chi2
  params:
    memory: estimators_cache
hash: add2f10ae06d32ec517b8273c7daa9fe176d7135bf3a2a94292a591d862326ea
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/add2f10_20231127T214244135401_embedding_weak_chi2_Gram_positive.yml
results:
  fit_time:
  - 73.72234559059143
  - 66.13074898719788
  - 73.7928261756897
  - 75.30569171905518
  - 74.43527317047119
  score_time:
  - 57.33984327316284
  - 28.002722024917603
  - 61.96682119369507
  - 56.9988911151886
  - 49.72686219215393
  test_average_precision_macro:
  - 0.6967668449615254
  - 0.7976102447361534
  - 0.6785021377351486
  - 0.7702488333693446
  - 0.7589215048522415
  test_average_precision_micro:
  - 0.6650022563690182
  - 0.7942961666854952
  - 0.7330366013510384
  - 0.7245748450794697
  - 0.6930562555233095
  test_average_precision_samples:
  - 0.8960396039603961
  - 0.9288025889967637
  - 0.875
  - 0.9087301587301587
  - 0.8828616352201257
  test_average_precision_weighted:
  - 0.8307439063068892
  - 0.9167967633210048
  - 0.8810676691869289
  - 0.8542599039564016
  - 0.879513261913277
  test_coverage_error:
  - -1.2772277227722773
  - -1.1650485436893203
  - -1.3365384615384615
  - -1.2095238095238094
  - -1.2735849056603774
  test_f1_macro:
  - 0.2217432950191571
  - 0.273578811369509
  - 0.3028574467802199
  - 0.26479367406786763
  - 0.23817072118702554
  test_f1_micro:
  - 0.18333333333333335
  - 0.28571428571428575
  - 0.37410071942446044
  - 0.24590163934426232
  - 0.21875
  test_f1_samples:
  - 0.10891089108910891
  - 0.17475728155339806
  - 0.23397435897435898
  - 0.14285714285714285
  - 0.1320754716981132
  test_f1_weighted:
  - 0.1693584658097547
  - 0.2846787418008348
  - 0.39107884461109566
  - 0.23963033893909472
  - 0.20121839069234473
  test_hamming_loss:
  - -0.24257425742574257
  - -0.21844660194174756
  - -0.2091346153846154
  - -0.21904761904761905
  - -0.2358490566037736
  test_jaccard_macro:
  - 0.128554120835326
  - 0.15982142857142856
  - 0.18992673992673992
  - 0.15567363530778167
  - 0.14261904761904762
  test_jaccard_micro:
  - 0.10091743119266056
  - 0.16666666666666666
  - 0.23008849557522124
  - 0.14018691588785046
  - 0.12280701754385964
  test_jaccard_samples:
  - 0.10891089108910891
  - 0.17475728155339806
  - 0.22596153846153846
  - 0.14285714285714285
  - 0.1320754716981132
  test_jaccard_weighted:
  - 0.09445523193096009
  - 0.1675824175824176
  - 0.24505494505494504
  - 0.13968253968253969
  - 0.11949685534591196
  test_label_ranking_average_precision_score:
  - 0.8960396039603961
  - 0.9288025889967638
  - 0.8749999999999999
  - 0.9087301587301586
  - 0.8828616352201257
  test_label_ranking_loss:
  - 0.08498349834983497
  - 0.051779935275080895
  - 0.10897435897435896
  - 0.06984126984126984
  - 0.09119496855345911
  test_matthews_corrcoef_macro:
  - 0.2642719565178986
  - 0.31199573898360544
  - 0.30139879158963706
  - 0.3088463711529149
  - 0.28422797466714045
  test_matthews_corrcoef_micro:
  - 0.18856216244367224
  - 0.3093230933835308
  - 0.3518457793188673
  - 0.2999375533054164
  - 0.20873434946039787
  test_matthews_corrcoef_samples:
  - 0.0891089108910891
  - 0.16181229773462785
  - 0.22092372830216508
  - 0.13650793650793652
  - 0.1069182389937107
  test_matthews_corrcoef_weighted:
  - 0.2337493575333802
  - 0.3363088220809699
  - 0.40300187808182086
  - 0.3040060738601203
  - 0.2660098114978113
  test_ndgc:
  - 0.9232180218699686
  - 0.9472927868238592
  - 0.9068201686126401
  - 0.9323297415394787
  - 0.9130887936071663
  test_precision_macro:
  - 0.7714285714285714
  - 0.8
  - 0.71875
  - 0.8333333333333333
  - 0.8
  test_precision_micro:
  - 0.6470588235294118
  - 0.8181818181818182
  - 0.7647058823529411
  - 0.8823529411764706
  - 0.6363636363636364
  test_precision_samples:
  - 0.10891089108910891
  - 0.17475728155339806
  - 0.22596153846153846
  - 0.14285714285714285
  - 0.1320754716981132
  test_precision_weighted:
  - 0.9256588072122053
  - 0.9769230769230769
  - 0.9416666666666667
  - 0.9746031746031747
  - 0.969811320754717
  test_recall_macro:
  - 0.1996652319464371
  - 0.20744047619047618
  - 0.19261904761904763
  - 0.17650696864111498
  - 0.22595238095238096
  test_recall_micro:
  - 0.10679611650485436
  - 0.17307692307692307
  - 0.24761904761904763
  - 0.14285714285714285
  - 0.1320754716981132
  test_recall_samples:
  - 0.10891089108910891
  - 0.17475728155339806
  - 0.25
  - 0.14285714285714285
  - 0.1320754716981132
  test_recall_weighted:
  - 0.10679611650485436
  - 0.17307692307692307
  - 0.24761904761904763
  - 0.14285714285714285
  - 0.1320754716981132
  test_roc_auc_macro:
  - 0.9325024739257103
  - 0.9601398064413563
  - 0.835871662571607
  - 0.9404115099009901
  - 0.9405093591459797
  test_roc_auc_micro:
  - 0.9068799793568364
  - 0.9290084915084916
  - 0.8902771397948246
  - 0.8992592592592593
  - 0.9116530200545865
  test_roc_auc_samples:
  - 0.915016501650165
  - 0.9482200647249192
  - 0.891025641025641
  - 0.9301587301587302
  - 0.9088050314465408
  test_roc_auc_weighted:
  - 0.9381562214547722
  - 0.9588562753345307
  - 0.9289863239118181
  - 0.9349793729372937
  - 0.9458424680304598
start: 2023-11-27 21:42:44.135401
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop90
  params:
    drop: 0.9
    random_state: 0
