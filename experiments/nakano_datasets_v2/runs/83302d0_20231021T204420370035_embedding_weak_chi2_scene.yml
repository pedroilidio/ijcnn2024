active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/gJmZmZmZ6T8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjP4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QGZmZmZmGsCAMzMzMzMDQACZmZmZmfm/wJmZmZmZHUAAmZmZmZn5vw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 20:59:30.209186
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_pvalue
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: embedding_weak_chi2
  params:
    memory: estimators_cache
hash: 83302d0bc3a446f0094f5e897b45ddc30d1c4a79c7a9a7540d6cfa01ead27869
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/83302d0_20231021T204420370035_embedding_weak_chi2_scene.yml
results:
  fit_time:
  - 640.6491105556488
  - 582.0732634067535
  - 576.5305740833282
  - 633.8064961433411
  - 674.1431813240051
  score_time:
  - 139.34396815299988
  - 75.17402935028076
  - 78.79396963119507
  - 82.66868448257446
  - 208.11893558502197
  test_average_precision_macro:
  - 0.8188609437537981
  - 0.8355371944542668
  - 0.8238180525022628
  - 0.8172887213490633
  - 0.8233972755587856
  test_average_precision_micro:
  - 0.826453282889651
  - 0.8439730347500112
  - 0.8258889351247671
  - 0.8233676087044257
  - 0.8299683926514766
  test_average_precision_samples:
  - 0.854337431693989
  - 0.8686499652052889
  - 0.864872325741891
  - 0.8616209563994374
  - 0.862008281573499
  test_average_precision_weighted:
  - 0.8072451117030732
  - 0.8246848617051774
  - 0.8149873826110375
  - 0.8060840735891769
  - 0.8095986897638804
  test_coverage_error:
  - -1.459016393442623
  - -1.4509394572025052
  - -1.4658385093167703
  - -1.4978902953586497
  - -1.4596273291925466
  test_f1_macro:
  - 0.6377477067032347
  - 0.6409861293346176
  - 0.6013870687445001
  - 0.6324952239489737
  - 0.6520748835545493
  test_f1_micro:
  - 0.6577669902912621
  - 0.6576354679802955
  - 0.6132315521628499
  - 0.6481012658227847
  - 0.6658767772511849
  test_f1_samples:
  - 0.5382513661202185
  - 0.5414057063326374
  - 0.48481711525189786
  - 0.5196905766526019
  - 0.5659075224292616
  test_f1_weighted:
  - 0.6099148422767812
  - 0.6172864446560784
  - 0.5800513096299493
  - 0.6086535778878791
  - 0.6269827151639104
  test_hamming_loss:
  - -0.09631147540983606
  - -0.09672929714683368
  - -0.1048999309868875
  - -0.09774964838255977
  - -0.09730848861283643
  test_jaccard_macro:
  - 0.5140330865371819
  - 0.5108867649716934
  - 0.45967876599406005
  - 0.5014520491766356
  - 0.5209631404173556
  test_jaccard_micro:
  - 0.49005424954792043
  - 0.48990825688073397
  - 0.44220183486238535
  - 0.4794007490636704
  - 0.4991119005328597
  test_jaccard_samples:
  - 0.5317622950819673
  - 0.5334029227557411
  - 0.47791580400276057
  - 0.5116033755274262
  - 0.5579710144927537
  test_jaccard_weighted:
  - 0.48788367466644
  - 0.4882797486835099
  - 0.44034972643762144
  - 0.4779098418979986
  - 0.4969752613248135
  test_label_ranking_average_precision_score:
  - 0.8543374316939888
  - 0.8686499652052881
  - 0.8648723257418907
  - 0.8616209563994373
  - 0.8620082815734987
  test_label_ranking_loss:
  - 0.0778688524590164
  - 0.07265135699373694
  - 0.07717391304347827
  - 0.08027426160337552
  - 0.07562111801242237
  test_matthews_corrcoef_macro:
  - 0.6302476888482851
  - 0.6362126119455228
  - 0.5976766645168475
  - 0.6352013857729787
  - 0.6373550667038405
  test_matthews_corrcoef_micro:
  - 0.6351182020673537
  - 0.6385611478088079
  - 0.5994919530489534
  - 0.637068433779191
  - 0.6343042886146134
  test_matthews_corrcoef_samples:
  - 0.5227467773414406
  - 0.527829330836655
  - 0.47128656971450544
  - 0.5097684587990668
  - 0.544749527339008
  test_matthews_corrcoef_weighted:
  - 0.6063416775229847
  - 0.6160784175266756
  - 0.5783868375931983
  - 0.6142094783118595
  - 0.6162089522888373
  test_ndgc:
  - 0.8922512225060193
  - 0.9029881071331703
  - 0.9002898075314647
  - 0.898186197329388
  - 0.8983969672408334
  test_precision_macro:
  - 0.8828199691844517
  - 0.9011038702436552
  - 0.8870502455906184
  - 0.9245516945516945
  - 0.8683371760972068
  test_precision_micro:
  - 0.8885245901639345
  - 0.9050847457627119
  - 0.895910780669145
  - 0.9309090909090909
  - 0.8593272171253823
  test_precision_samples:
  - 0.5512295081967213
  - 0.55741127348643
  - 0.4989648033126294
  - 0.5358649789029536
  - 0.5817805383022774
  test_precision_weighted:
  - 0.8802321311811754
  - 0.8990478537405598
  - 0.8796232217337016
  - 0.9201664979820321
  - 0.8674826435301308
  test_recall_macro:
  - 0.5491798997803551
  - 0.5394794257359762
  - 0.4858985853692481
  - 0.5206476633171383
  - 0.5685976308825361
  test_recall_micro:
  - 0.5221579961464354
  - 0.5164410058027079
  - 0.4661508704061896
  - 0.4970873786407767
  - 0.5435203094777563
  test_recall_samples:
  - 0.5317622950819673
  - 0.5334029227557411
  - 0.47791580400276057
  - 0.5116033755274262
  - 0.5579710144927537
  test_recall_weighted:
  - 0.5221579961464354
  - 0.5164410058027079
  - 0.4661508704061896
  - 0.4970873786407767
  - 0.5435203094777563
  test_roc_auc_macro:
  - 0.9407222087161813
  - 0.9436336425756897
  - 0.9407323095291872
  - 0.9344897092216727
  - 0.9422095785387282
  test_roc_auc_micro:
  - 0.9477841204026968
  - 0.9508858341218265
  - 0.9451183897018385
  - 0.9399333853022466
  - 0.9469218352576856
  test_roc_auc_samples:
  - 0.9221311475409836
  - 0.9273486430062632
  - 0.9228260869565218
  - 0.9197257383966245
  - 0.9243788819875777
  test_roc_auc_weighted:
  - 0.9352262058498286
  - 0.938911956669559
  - 0.9364943136878543
  - 0.9293046895439866
  - 0.9355880402683008
start: 2023-10-21 20:44:20.370035
wrapper: null
