active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ6T8AzczMzMz8PwAzMzMzM/O/ADMzMzMz878AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 21:07:24.725635
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding
  params:
    memory: estimators_cache
hash: 9e7a851764afddba146dd99e68113e07bd95e6ce267027359083742f4fd64619
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/9e7a851_20231127T210530766361_embedding_Gram_positive.yml
results:
  fit_time:
  - 57.75540256500244
  - 56.85038876533508
  - 57.198012351989746
  - 54.39109969139099
  - 55.19119668006897
  score_time:
  - 53.85000967979431
  - 56.11817789077759
  - 54.78869652748108
  - 54.52559208869934
  - 53.68699884414673
  test_average_precision_macro:
  - 0.8433072171697942
  - 0.9944206699166841
  - 0.8756063896358549
  - 0.8895607519079096
  - 0.7061012570198826
  test_average_precision_micro:
  - 0.9652493490933859
  - 0.9935923719988387
  - 0.9834288659658983
  - 0.9663745046304747
  - 0.9046995908696315
  test_average_precision_samples:
  - 0.970873786407767
  - 0.9803921568627451
  - 0.9650793650793652
  - 0.9563492063492064
  - 0.939102564102564
  test_average_precision_weighted:
  - 0.9639261196317304
  - 0.9931913418757933
  - 0.967304813226096
  - 0.9668325566953406
  - 0.8952853376493536
  test_coverage_error:
  - -1.1262135922330097
  - -1.0490196078431373
  - -1.0761904761904761
  - -1.1142857142857143
  - -1.2019230769230769
  test_f1_macro:
  - 0.2530241935483871
  - 0.3032562162796153
  - 0.1858224621382516
  - 0.25265791119449654
  - 0.24285714285714285
  test_f1_micro:
  - 0.32
  - 0.4031007751937985
  - 0.26446280991735543
  - 0.33333333333333337
  - 0.31746031746031744
  test_f1_samples:
  - 0.1941747572815534
  - 0.2549019607843137
  - 0.1523809523809524
  - 0.2
  - 0.19230769230769232
  test_f1_weighted:
  - 0.31716589861751154
  - 0.3943878689741715
  - 0.2572899485180187
  - 0.3307722088209893
  - 0.31292517006802717
  test_hamming_loss:
  - -0.20631067961165048
  - -0.18872549019607843
  - -0.2119047619047619
  - -0.2
  - -0.20673076923076922
  test_jaccard_macro:
  - 0.1526829268292683
  - 0.19372096399535424
  - 0.10893557422969187
  - 0.1523809523809524
  - 0.14583333333333331
  test_jaccard_micro:
  - 0.19047619047619047
  - 0.2524271844660194
  - 0.1523809523809524
  - 0.2
  - 0.18867924528301888
  test_jaccard_samples:
  - 0.1941747572815534
  - 0.2549019607843137
  - 0.1523809523809524
  - 0.2
  - 0.19230769230769232
  test_jaccard_weighted:
  - 0.19047619047619047
  - 0.2524271844660194
  - 0.1523809523809524
  - 0.2
  - 0.1880952380952381
  test_label_ranking_average_precision_score:
  - 0.9708737864077669
  - 0.9803921568627451
  - 0.965079365079365
  - 0.9563492063492063
  - 0.9391025641025641
  test_label_ranking_loss:
  - 0.03398058252427184
  - 0.0130718954248366
  - 0.025396825396825397
  - 0.0380952380952381
  - 0.0641025641025641
  test_matthews_corrcoef_macro:
  - 0.2869382059786628
  - 0.3234811672582949
  - 0.23355267921668782
  - 0.2863787547577272
  - 0.2701174482045342
  test_matthews_corrcoef_micro:
  - 0.3862304432542886
  - 0.448937930101841
  - 0.3446909937728556
  - 0.39735970711951313
  - 0.3715467118042139
  test_matthews_corrcoef_samples:
  - 0.1941747572815534
  - 0.2549019607843137
  - 0.1523809523809524
  - 0.2
  - 0.18910256410256412
  test_matthews_corrcoef_weighted:
  - 0.359720505845355
  - 0.4167000928077758
  - 0.3114152857158716
  - 0.37023374872303244
  - 0.34366216715375936
  test_ndgc:
  - 0.9787173968292374
  - 0.9855266570028023
  - 0.97414836687075
  - 0.9674792888183874
  - 0.9542925504478789
  test_precision_macro:
  - 0.75
  - 0.75
  - 0.75
  - 0.75
  - 0.725
  test_precision_micro:
  - 1.0
  - 1.0
  - 1.0
  - 1.0
  - 0.9523809523809523
  test_precision_samples:
  - 0.1941747572815534
  - 0.2549019607843137
  - 0.1523809523809524
  - 0.2
  - 0.19230769230769232
  test_precision_weighted:
  - 0.9619047619047619
  - 0.970873786407767
  - 0.9619047619047619
  - 0.9714285714285714
  - 0.9285714285714286
  test_recall_macro:
  - 0.1526829268292683
  - 0.19372096399535424
  - 0.10893557422969187
  - 0.1523809523809524
  - 0.1476190476190476
  test_recall_micro:
  - 0.19047619047619047
  - 0.2524271844660194
  - 0.1523809523809524
  - 0.2
  - 0.19047619047619047
  test_recall_samples:
  - 0.1941747572815534
  - 0.2549019607843137
  - 0.1523809523809524
  - 0.2
  - 0.19230769230769232
  test_recall_weighted:
  - 0.19047619047619047
  - 0.2524271844660194
  - 0.1523809523809524
  - 0.2
  - 0.19047619047619047
  test_roc_auc_macro:
  - 0.9803010334748892
  - 0.9975321837077136
  - 0.991419378091496
  - 0.9858007703081233
  - 0.8729807820744007
  test_roc_auc_micro:
  - 0.9783775399410578
  - 0.9978990927900685
  - 0.9945275888133032
  - 0.9841572184429327
  - 0.9506966773847803
  test_roc_auc_samples:
  - 0.9660194174757282
  - 0.9869281045751634
  - 0.9746031746031747
  - 0.9619047619047619
  - 0.935897435897436
  test_roc_auc_weighted:
  - 0.9880552647156065
  - 0.9967759970943164
  - 0.9943721902371324
  - 0.9846361878084566
  - 0.9576236336516841
start: 2023-11-27 21:05:30.766361
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
