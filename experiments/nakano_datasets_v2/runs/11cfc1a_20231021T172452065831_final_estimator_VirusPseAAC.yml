active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz478gMzMzMzPjv8CZmZmZmdk/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz478AMzMzMzPjv4BmZmZmZvY/gJmZmZmZ+b+AZmZmZmb2Pw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 17:24:56.950511
estimator:
  call: nakano_datasets_v2.estimators.final_estimator
  final_params:
    estimators:
    - - rf
      - call: sklearn.ensemble._forest.RandomForestClassifier
        params:
          bootstrap: true
          ccp_alpha: 0.0
          class_weight: null
          criterion: gini
          max_depth: null
          max_features: sqrt
          max_leaf_nodes: null
          max_samples: 0.9
          min_impurity_decrease: 0.0
          min_samples_leaf: 5
          min_samples_split: 2
          min_weight_fraction_leaf: 0.0
          n_estimators: 150
          n_jobs: 14
          oob_score: true
          random_state: 0
          verbose: true
          warm_start: false
    - - xt
      - call: sklearn.ensemble._forest.ExtraTreesClassifier
        params:
          bootstrap: true
          ccp_alpha: 0.0
          class_weight: null
          criterion: gini
          max_depth: null
          max_features: sqrt
          max_leaf_nodes: null
          max_samples: 0.9
          min_impurity_decrease: 0.0
          min_samples_leaf: 5
          min_samples_split: 2
          min_weight_fraction_leaf: 0.0
          n_estimators: 150
          n_jobs: 14
          oob_score: true
          random_state: 0
          verbose: true
          warm_start: false
  name: final_estimator
  params: {}
hash: 11cfc1a8b2cf5f335acec351298a5a87257d542c846644044cf5aa35962e7546
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/11cfc1a_20231021T172452065831_final_estimator_VirusPseAAC.yml
results:
  fit_time:
  - 1.1861786842346191
  - 1.2045061588287354
  - 1.2474157810211182
  - 1.2311930656433105
  - 1.176889419555664
  score_time:
  - 3.346937894821167
  - 3.3553268909454346
  - 3.421631097793579
  - 3.5427656173706055
  - 3.396695137023926
  test_average_precision_macro:
  - 0.23263156188034526
  - 0.4398823114685904
  - 0.3209412235463149
  - 0.5176326545068267
  - 0.5206154086944521
  test_average_precision_micro:
  - 0.3971224767398952
  - 0.4268859758416209
  - 0.3995821262877805
  - 0.5136663194527468
  - 0.48606827769779637
  test_average_precision_samples:
  - 0.6561507936507937
  - 0.6988095238095239
  - 0.6530555555555555
  - 0.7058139534883722
  - 0.6827083333333333
  test_average_precision_weighted:
  - 0.3678392732219753
  - 0.43512324356239246
  - 0.3811001122600869
  - 0.5565500621750918
  - 0.5276275465653741
  test_coverage_error:
  - -2.357142857142857
  - -2.238095238095238
  - -2.35
  - -2.1627906976744184
  - -2.25
  test_f1_macro:
  - 0.03421052631578947
  - 0.0
  - 0.0
  - 0.018518518518518517
  - 0.051754385964912275
  test_f1_micro:
  - 0.07272727272727272
  - 0.0
  - 0.0
  - 0.038461538461538464
  - 0.1090909090909091
  test_f1_samples:
  - 0.047619047619047616
  - 0.0
  - 0.0
  - 0.023255813953488372
  - 0.06666666666666667
  test_f1_weighted:
  - 0.07038183694530444
  - 0.0
  - 0.0
  - 0.037037037037037035
  - 0.10557894736842105
  test_hamming_loss:
  - -0.20238095238095238
  - -0.20238095238095238
  - -0.21666666666666667
  - -0.1937984496124031
  - -0.20416666666666666
  test_jaccard_macro:
  - 0.018031189083820662
  - 0.0
  - 0.0
  - 0.00980392156862745
  - 0.028379772961816305
  test_jaccard_micro:
  - 0.03773584905660377
  - 0.0
  - 0.0
  - 0.0196078431372549
  - 0.057692307692307696
  test_jaccard_samples:
  - 0.047619047619047616
  - 0.0
  - 0.0
  - 0.023255813953488372
  - 0.0625
  test_jaccard_weighted:
  - 0.03709436991170737
  - 0.0
  - 0.0
  - 0.0196078431372549
  - 0.057894736842105256
  test_label_ranking_average_precision_score:
  - 0.6561507936507937
  - 0.6988095238095237
  - 0.6530555555555556
  - 0.705813953488372
  - 0.6827083333333333
  test_label_ranking_loss:
  - 0.23095238095238094
  - 0.21428571428571427
  - 0.21680555555555556
  - 0.19534883720930232
  - 0.20152777777777775
  test_matthews_corrcoef_macro:
  - 0.012610158797021062
  - -0.022541740866685808
  - -0.03287248166554766
  - 0.03180433488375555
  - 0.035674353788557225
  test_matthews_corrcoef_micro:
  - 0.09407674916446732
  - -0.031403095266735466
  - -0.04702564066699708
  - 0.12567055209189143
  - 0.14067506418768938
  test_matthews_corrcoef_samples:
  - 0.0380952380952381
  - -0.004761904761904762
  - -0.01
  - 0.023255813953488372
  - 0.05581138830084189
  test_matthews_corrcoef_weighted:
  - 0.025853158010089087
  - -0.048690160272041344
  - -0.06705986259771723
  - 0.0636086697675111
  - 0.07277568172865674
  test_ndgc:
  - 0.7438052784760193
  - 0.7737503987979554
  - 0.7446108224187546
  - 0.780139675559934
  - 0.7647499940828665
  test_precision_macro:
  - 0.16666666666666666
  - 0.0
  - 0.0
  - 0.16666666666666666
  - 0.2222222222222222
  test_precision_micro:
  - 0.5
  - 0.0
  - 0.0
  - 1.0
  - 0.6
  test_precision_samples:
  - 0.047619047619047616
  - 0.0
  - 0.0
  - 0.023255813953488372
  - 0.075
  test_precision_weighted:
  - 0.3431372549019608
  - 0.0
  - 0.0
  - 0.3333333333333333
  - 0.4533333333333333
  test_recall_macro:
  - 0.01906318082788671
  - 0.0
  - 0.0
  - 0.00980392156862745
  - 0.02941176470588235
  test_recall_micro:
  - 0.0392156862745098
  - 0.0
  - 0.0
  - 0.0196078431372549
  - 0.06
  test_recall_samples:
  - 0.047619047619047616
  - 0.0
  - 0.0
  - 0.023255813953488372
  - 0.0625
  test_recall_weighted:
  - 0.0392156862745098
  - 0.0
  - 0.0
  - 0.0196078431372549
  - 0.06
  test_roc_auc_macro:
  - 0.4468978048358125
  - 0.6287158869395711
  - 0.6200348639964504
  - 0.7089702568540445
  - 0.69133431809263
  test_roc_auc_micro:
  - 0.7586576919324943
  - 0.7782178217821782
  - 0.7787368421052632
  - 0.8103627924599791
  - 0.8030526315789474
  test_roc_auc_samples:
  - 0.7690476190476192
  - 0.7857142857142857
  - 0.7831944444444445
  - 0.8046511627906977
  - 0.7984722222222222
  test_roc_auc_weighted:
  - 0.5021675242625934
  - 0.5767836257309942
  - 0.5614124452221774
  - 0.6951812202888243
  - 0.6416820377689941
start: 2023-10-21 17:24:52.065831
wrapper: null
