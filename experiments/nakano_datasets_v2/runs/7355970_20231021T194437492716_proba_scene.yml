active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb+AmZmZmZnpPwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z+AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AGdmZmZm9j+AzMzMzMwEwEBmZmZmZhLAAJyZmZmZ2T/AmZmZmZkVQA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 19:45:48.957438
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - rf
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.RandomForestRegressor
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        - - xt
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesRegressor
                params:
                  bootstrap: false
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: proba
  params:
    memory: estimators_cache
hash: 7355970693189a2e5c0409af8465458323e029a6df69fee2c72ce785643f2380
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/7355970_20231021T194437492716_proba_scene.yml
results:
  fit_time:
  - 35.86003065109253
  - 35.340264320373535
  - 36.02488040924072
  - 35.49578619003296
  - 34.35840344429016
  score_time:
  - 28.638068675994873
  - 29.60912013053894
  - 34.446908712387085
  - 32.18558740615845
  - 34.70156979560852
  test_average_precision_macro:
  - 0.8512828933230128
  - 0.8502697978834702
  - 0.825679865791007
  - 0.8331972636840766
  - 0.8405421984389617
  test_average_precision_micro:
  - 0.8420799385995562
  - 0.8368423108431441
  - 0.805014504768282
  - 0.8226815178028658
  - 0.8322248942152827
  test_average_precision_samples:
  - 0.8928125
  - 0.8942837465564738
  - 0.8755144032921811
  - 0.8814968814968815
  - 0.8786064425770308
  test_average_precision_weighted:
  - 0.8410410148086694
  - 0.8373830320287413
  - 0.8136100573888851
  - 0.8212727504630914
  - 0.8305058426579938
  test_coverage_error:
  - -1.3875
  - -1.3987603305785123
  - -1.4218106995884774
  - -1.4137214137214138
  - -1.4642857142857142
  test_f1_macro:
  - 0.8017268120736755
  - 0.8061621608454201
  - 0.7818741790754641
  - 0.7868178019133901
  - 0.7917941454628014
  test_f1_micro:
  - 0.7932067932067932
  - 0.7960199004975124
  - 0.7686196623634559
  - 0.7766798418972332
  - 0.785498489425982
  test_f1_samples:
  - 0.7895833333333332
  - 0.7865013774104683
  - 0.7654320987654321
  - 0.773042273042273
  - 0.7755602240896358
  test_f1_weighted:
  - 0.7921448047369475
  - 0.7960980763542905
  - 0.7702943418236661
  - 0.7758597389797196
  - 0.7835373921379459
  test_hamming_loss:
  - -0.071875
  - -0.07059228650137742
  - -0.0799039780521262
  - -0.07830907830907831
  - -0.07457983193277311
  test_jaccard_macro:
  - 0.6777230517292852
  - 0.6847834021355803
  - 0.6558625282263575
  - 0.661273294632704
  - 0.6641413910746538
  test_jaccard_micro:
  - 0.6572847682119205
  - 0.6611570247933884
  - 0.6241935483870967
  - 0.6348949919224556
  - 0.6467661691542289
  test_jaccard_samples:
  - 0.7774305555555555
  - 0.7737603305785123
  - 0.7541152263374485
  - 0.7595287595287596
  - 0.7633053221288515
  test_jaccard_weighted:
  - 0.6647647605495416
  - 0.67072743469416
  - 0.6403777439426408
  - 0.6468063947133488
  - 0.653070653353597
  test_label_ranking_average_precision_score:
  - 0.8928124999999997
  - 0.8942837465564736
  - 0.8755144032921807
  - 0.8814968814968812
  - 0.8786064425770307
  test_label_ranking_loss:
  - 0.060833333333333336
  - 0.06410123966942148
  - 0.06990740740740739
  - 0.0675155925155925
  - 0.07384453781512607
  test_matthews_corrcoef_macro:
  - 0.7590031770161648
  - 0.7634899015419162
  - 0.7338333643794926
  - 0.7401159754261379
  - 0.7479348302068893
  test_matthews_corrcoef_micro:
  - 0.7504465641991269
  - 0.7539117713566109
  - 0.7207499456160275
  - 0.7294327862071053
  - 0.7412836332571652
  test_matthews_corrcoef_samples:
  - 0.754624089280335
  - 0.7531734372338402
  - 0.7239476893520115
  - 0.7337518231169006
  - 0.7390857243510389
  test_matthews_corrcoef_weighted:
  - 0.7466819048058404
  - 0.7503563154938406
  - 0.718687748032634
  - 0.7256176148777576
  - 0.737139867118206
  test_ndgc:
  - 0.9207674634997018
  - 0.9217714343847692
  - 0.9080705643844676
  - 0.912125050805586
  - 0.9102253375926911
  test_precision_macro:
  - 0.8302740138433352
  - 0.83222328409782
  - 0.8071048297220789
  - 0.8060076484305414
  - 0.8237207466431108
  test_precision_micro:
  - 0.8219461697722568
  - 0.8213552361396304
  - 0.789795918367347
  - 0.7923387096774194
  - 0.8176100628930818
  test_precision_samples:
  - 0.803125
  - 0.7964876033057852
  - 0.779835390946502
  - 0.7827442827442828
  - 0.792016806722689
  test_precision_weighted:
  - 0.8213699497267143
  - 0.8217126991429181
  - 0.794904498497927
  - 0.7941530436642558
  - 0.8157841224648148
  test_recall_macro:
  - 0.7765308164424525
  - 0.7818540301500341
  - 0.7595646854147456
  - 0.7717777196310358
  - 0.7643907112839212
  test_recall_micro:
  - 0.7664092664092664
  - 0.7722007722007722
  - 0.7485493230174082
  - 0.7616279069767442
  - 0.7558139534883721
  test_recall_samples:
  - 0.7881944444444445
  - 0.7892561983471075
  - 0.7623456790123457
  - 0.7765072765072765
  - 0.7710084033613446
  test_recall_weighted:
  - 0.7664092664092664
  - 0.7722007722007722
  - 0.7485493230174082
  - 0.7616279069767442
  - 0.7558139534883721
  test_roc_auc_macro:
  - 0.94799607762436
  - 0.9448608517191306
  - 0.9300076660190935
  - 0.9445277541242031
  - 0.9419165433314446
  test_roc_auc_micro:
  - 0.9513868228940203
  - 0.9479152844618057
  - 0.9345762217171403
  - 0.9467348640957707
  - 0.9445239515006957
  test_roc_auc_samples:
  - 0.9391666666666668
  - 0.9358987603305784
  - 0.9300925925925926
  - 0.9324844074844075
  - 0.926155462184874
  test_roc_auc_weighted:
  - 0.9435214784335837
  - 0.9394840530261823
  - 0.9232875721893095
  - 0.9396381453425986
  - 0.9371902102410958
start: 2023-10-21 19:44:37.492716
wrapper: null
