active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzM/L+YmZmZmZnpv6CZmZmZmck/NDMzMzMz8z80MzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAQA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 18:31:11.678188
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_pvalue
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: embedding_weak_chi2
  params:
    memory: estimators_cache
hash: 1bc39b519db5f68c6f3b3e5217ddf8e31eccfea7a0b9d1aacc8786b006a4a096
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/1bc39b5_20231021T182837540597_embedding_weak_chi2_CHD_49.yml
results:
  fit_time:
  - 77.88938522338867
  - 73.26993346214294
  - 73.90045809745789
  - 79.66767430305481
  - 77.26685070991516
  score_time:
  - 72.73265528678894
  - 71.35782313346863
  - 63.810991287231445
  - 71.14493727684021
  - 72.83439898490906
  test_average_precision_macro:
  - 0.5471789557764838
  - 0.5571855331780892
  - 0.5535718298183666
  - 0.5168415109723794
  - 0.5063229469248188
  test_average_precision_micro:
  - 0.7038894832137209
  - 0.7026869204576853
  - 0.7157912204203429
  - 0.6722365177231422
  - 0.6885708858947402
  test_average_precision_samples:
  - 0.8018018018018018
  - 0.7687312312312312
  - 0.7869744744744744
  - 0.780260570304818
  - 0.7998598369011214
  test_average_precision_weighted:
  - 0.661767097890976
  - 0.677650020026749
  - 0.6778259749062462
  - 0.6348176386472412
  - 0.6334212554898621
  test_coverage_error:
  - -3.7387387387387387
  - -3.90990990990991
  - -3.7117117117117115
  - -3.6814159292035398
  - -3.7981651376146788
  test_f1_macro:
  - 0.47164866555853235
  - 0.4465080710365157
  - 0.4639149411950901
  - 0.43982284545677874
  - 0.42353594720579496
  test_f1_micro:
  - 0.6893039049235993
  - 0.6788079470198675
  - 0.6607142857142857
  - 0.6499102333931778
  - 0.651877133105802
  test_f1_samples:
  - 0.666924066924067
  - 0.6458243958243959
  - 0.6228228228228229
  - 0.6181837336704593
  - 0.6320664045434689
  test_f1_weighted:
  - 0.6288258551523406
  - 0.612976567294912
  - 0.6114975352777983
  - 0.5919818428776867
  - 0.5932994808325951
  test_hamming_loss:
  - -0.2747747747747748
  - -0.2912912912912913
  - -0.2852852852852853
  - -0.28761061946902655
  - -0.3119266055045872
  test_jaccard_macro:
  - 0.36497662835818606
  - 0.34992134992135
  - 0.3491216821573964
  - 0.32978661826535793
  - 0.32634750802701296
  test_jaccard_micro:
  - 0.5259067357512953
  - 0.5137844611528822
  - 0.49333333333333335
  - 0.48138297872340424
  - 0.4835443037974684
  test_jaccard_samples:
  - 0.5519519519519519
  - 0.5531531531531532
  - 0.5114114114114113
  - 0.5169616519174041
  - 0.5074923547400612
  test_jaccard_weighted:
  - 0.5038920799959752
  - 0.4925457425457426
  - 0.4786906172145933
  - 0.461897145478987
  - 0.4734940219286451
  test_label_ranking_average_precision_score:
  - 0.8018018018018018
  - 0.7687312312312313
  - 0.8140015015015017
  - 0.780260570304818
  - 0.7998598369011212
  test_label_ranking_loss:
  - 0.19567067067067065
  - 0.2402652652652653
  - 0.18761261261261264
  - 0.2133480825958702
  - 0.20629459734964323
  test_matthews_corrcoef_macro:
  - 0.15123382639664032
  - 0.06584654050534561
  - 0.14077511397655065
  - 0.12094392408133735
  - 0.019412284463839875
  test_matthews_corrcoef_micro:
  - 0.4434075285315936
  - 0.4156381278292751
  - 0.41507882894438713
  - 0.4063993866428046
  - 0.3699670504168358
  test_matthews_corrcoef_samples:
  - 0.4601146449778926
  - 0.422047288831766
  - 0.4259431513752945
  - 0.41998753176558323
  - 0.4008112852029707
  test_matthews_corrcoef_weighted:
  - 0.15631567032146704
  - 0.06524779932108456
  - 0.13709481353153255
  - 0.1250391719542747
  - 0.01576780435429301
  test_ndgc:
  - 0.8735196901216425
  - 0.846770144136659
  - 0.8556613982650912
  - 0.8522775855807757
  - 0.8736980510344263
  test_precision_macro:
  - 0.5622596622596622
  - 0.41260826043434734
  - 0.58144329572901
  - 0.5322814094210228
  - 0.47236509517945025
  test_precision_micro:
  - 0.6766666666666666
  - 0.6446540880503144
  - 0.6751824817518248
  - 0.6654411764705882
  - 0.6366666666666667
  test_precision_samples:
  - 0.683933933933934
  - 0.6636636636636638
  - 0.674924924924925
  - 0.6777286135693215
  - 0.6536697247706423
  test_precision_weighted:
  - 0.6684755734928745
  - 0.5515628124323776
  - 0.6864075270668678
  - 0.6422613501309601
  - 0.5980941136022293
  test_recall_macro:
  - 0.5074697671960403
  - 0.5123539982030548
  - 0.46553485188797006
  - 0.44715569439623587
  - 0.4638960666092449
  test_recall_micro:
  - 0.7024221453287197
  - 0.7167832167832168
  - 0.6468531468531469
  - 0.6350877192982456
  - 0.6678321678321678
  test_recall_samples:
  - 0.7057057057057057
  - 0.6648648648648648
  - 0.6216216216216216
  - 0.6135693215339233
  - 0.6689602446483183
  test_recall_weighted:
  - 0.7024221453287197
  - 0.7167832167832168
  - 0.6468531468531469
  - 0.6350877192982456
  - 0.6678321678321678
  test_roc_auc_macro:
  - 0.585319832769471
  - 0.6040056159472053
  - 0.6130246132418743
  - 0.5865726370229037
  - 0.4916445621491925
  test_roc_auc_micro:
  - 0.7876974475232439
  - 0.7870905410379095
  - 0.7977088700772912
  - 0.7890183473952056
  - 0.78169656430526
  test_roc_auc_samples:
  - 0.8043293293293294
  - 0.759734734734735
  - .nan
  - 0.7866519174041297
  - 0.7937054026503568
  test_roc_auc_weighted:
  - 0.5887646658064102
  - 0.6172356431431107
  - 0.6420802579330583
  - 0.5939636443018116
  - 0.548946686503155
start: 2023-10-21 18:28:37.540597
wrapper: null
