active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ2T+AZmZmZmb2PwAzMzMzM+O/AJqZmZmZ2T+AmZmZmZn5vw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 20:17:39.058288
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler:
            call: deep_forest.weak_labels.PositiveUnlabeledImputer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesClassifier
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  class_weight: null
                  criterion: gini
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: 0.9
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: true
                  random_state: 0
                  verbose: true
                  warm_start: false
              sampling_strategy: auto
              threshold: 0.8
              use_oob_proba: true
              verbose: true
              weight_proba: true
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: proba_weak
  params:
    memory: estimators_cache
hash: d165577a2db83c2d72530b4315e53526a71a83417b89bfb369b1e46e019e5dff
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/d165577_20231127T201535818514_proba_weak_VirusPseAAC.yml
results:
  fit_time:
  - 97.44008946418762
  - 102.91597032546997
  - 104.2081708908081
  - 100.60884404182434
  - 99.47256684303284
  score_time:
  - 12.159645080566406
  - 15.136044979095459
  - 17.15582776069641
  - 22.174896001815796
  - 17.83012366294861
  test_average_precision_macro:
  - 0.40413990742477973
  - 0.40962001208403515
  - 0.528657806715534
  - 0.3544779135898746
  - 0.2831377832051084
  test_average_precision_micro:
  - 0.4255955857386511
  - 0.4224922229737831
  - 0.47728455448967916
  - 0.397141903116143
  - 0.37601502749319016
  test_average_precision_samples:
  - 0.6465447154471544
  - 0.6416666666666666
  - 0.696031746031746
  - 0.6121951219512195
  - 0.626937984496124
  test_average_precision_weighted:
  - 0.39647769335346483
  - 0.4309791555886737
  - 0.5048424901866626
  - 0.42057606126533165
  - 0.3886324940312255
  test_coverage_error:
  - -2.4146341463414633
  - -2.5
  - -2.238095238095238
  - -2.5121951219512195
  - -2.3488372093023258
  test_f1_macro:
  - 0.16666666666666666
  - 0.12962962962962962
  - 0.08333333333333333
  - 0.0
  - 0.0
  test_f1_micro:
  - 0.07407407407407407
  - 0.07692307692307693
  - 0.037037037037037035
  - 0.0
  - 0.0
  test_f1_samples:
  - 0.04878048780487805
  - 0.05
  - 0.023809523809523808
  - 0.0
  - 0.0
  test_f1_weighted:
  - 0.0392156862745098
  - 0.06444444444444444
  - 0.019230769230769232
  - 0.0
  - 0.0
  test_hamming_loss:
  - -0.2032520325203252
  - -0.2
  - -0.20634920634920634
  - -0.2032520325203252
  - -0.19767441860465115
  test_jaccard_macro:
  - 0.16666666666666666
  - 0.09313725490196079
  - 0.05555555555555555
  - 0.0
  - 0.0
  test_jaccard_micro:
  - 0.038461538461538464
  - 0.04
  - 0.018867924528301886
  - 0.0
  - 0.0
  test_jaccard_samples:
  - 0.04878048780487805
  - 0.05
  - 0.023809523809523808
  - 0.0
  - 0.0
  test_jaccard_weighted:
  - 0.0392156862745098
  - 0.04
  - 0.01282051282051282
  - 0.0
  - 0.0
  test_label_ranking_average_precision_score:
  - 0.6465447154471544
  - 0.6416666666666667
  - 0.696031746031746
  - 0.6121951219512195
  - 0.626937984496124
  test_label_ranking_loss:
  - 0.23719512195121956
  - 0.23743055555555553
  - 0.19133597883597883
  - 0.2634146341463414
  - 0.24127906976744182
  test_matthews_corrcoef_macro:
  - 0.14558481559887748
  - 0.14737285053393848
  - 0.07916666666666666
  - -0.004166666666666667
  - -0.02079514203937863
  test_matthews_corrcoef_micro:
  - 0.1259022641636465
  - 0.17869743453458892
  - 0.06490229342872016
  - -0.03186264939385831
  - -0.03058347099324425
  test_matthews_corrcoef_samples:
  - 0.04390243902439025
  - 0.05
  - 0.01904761904761905
  - -0.004878048780487805
  - -0.004651162790697674
  test_matthews_corrcoef_weighted:
  - -0.00046779808838750284
  - 0.09124588295360066
  - 0.018269230769230767
  - -0.0005102040816326531
  - -0.042422089760332404
  test_ndgc:
  - 0.7366293481837115
  - 0.7384479041154224
  - 0.7768219383659976
  - 0.7083183474765375
  - 0.7231525943270303
  test_precision_macro:
  - 0.16666666666666666
  - 0.3333333333333333
  - 0.08333333333333333
  - 0.0
  - 0.0
  test_precision_micro:
  - 0.6666666666666666
  - 1.0
  - 0.5
  - 0.0
  - 0.0
  test_precision_samples:
  - 0.04878048780487805
  - 0.05
  - 0.023809523809523808
  - 0.0
  - 0.0
  test_precision_weighted:
  - 0.0392156862745098
  - 0.38
  - 0.019230769230769232
  - 0.0
  - 0.0
  test_recall_macro:
  - 0.16666666666666666
  - 0.09313725490196079
  - 0.08333333333333333
  - 0.0
  - 0.0
  test_recall_micro:
  - 0.0392156862745098
  - 0.04
  - 0.019230769230769232
  - 0.0
  - 0.0
  test_recall_samples:
  - 0.04878048780487805
  - 0.05
  - 0.023809523809523808
  - 0.0
  - 0.0
  test_recall_weighted:
  - 0.0392156862745098
  - 0.04
  - 0.019230769230769232
  - 0.0
  - 0.0
  test_roc_auc_macro:
  - 0.6185609581997049
  - 0.64746186740651
  - 0.6880488101673418
  - 0.6251482575011986
  - 0.5605832076420312
  test_roc_auc_micro:
  - 0.7599798893916542
  - 0.7603157894736842
  - 0.7976923076923077
  - 0.7619392934838909
  - 0.7626923076923077
  test_roc_auc_samples:
  - 0.7628048780487805
  - 0.7625694444444445
  - 0.8086640211640211
  - 0.7365853658536586
  - 0.7587209302325582
  test_roc_auc_weighted:
  - 0.5757143573541949
  - 0.5653659831590913
  - 0.6192293233082707
  - 0.5422609198119402
  - 0.5695421245421245
start: 2023-11-27 20:15:35.818514
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
