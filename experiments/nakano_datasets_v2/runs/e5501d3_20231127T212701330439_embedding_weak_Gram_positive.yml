active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb+AmZmZmZkBwACYmZmZmcm/AM3MzMzM/D8AmpmZmZnpPw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 21:29:12.378323
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.7
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler:
            call: deep_forest.weak_labels.PositiveUnlabeledImputer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesClassifier
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  class_weight: null
                  criterion: gini
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: 0.9
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: true
                  random_state: 0
                  verbose: true
                  warm_start: false
              sampling_strategy: auto
              threshold: 0.8
              use_oob_proba: true
              verbose: true
              weight_proba: true
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding_weak
  params:
    memory: estimators_cache
hash: e5501d358dc18107d0b1e9b43e561233262fec1d50023b18dcb9453d8274df2a
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/e5501d3_20231127T212701330439_embedding_weak_Gram_positive.yml
results:
  fit_time:
  - 68.84071516990662
  - 74.20651531219482
  - 73.9819724559784
  - 71.40734457969666
  - 69.42813062667847
  score_time:
  - 52.84061026573181
  - 55.824814796447754
  - 55.4085533618927
  - 51.885414361953735
  - 46.513237714767456
  test_average_precision_macro:
  - 0.8307331809331325
  - 0.8884255831431432
  - 0.8509397889438874
  - 0.878884956846
  - 0.7717410616569926
  test_average_precision_micro:
  - 0.8770595125371716
  - 0.896613908040489
  - 0.9234229268270013
  - 0.8438128000956666
  - 0.8761069788271173
  test_average_precision_samples:
  - 0.9743589743589743
  - 0.9716981132075472
  - 0.9615384615384616
  - 0.9362745098039216
  - 0.9490291262135923
  test_average_precision_weighted:
  - 0.9086883516823575
  - 0.9366375493644183
  - 0.9529866859807798
  - 0.9220460871077527
  - 0.9356986109634049
  test_coverage_error:
  - -1.0673076923076923
  - -1.0754716981132075
  - -1.0865384615384615
  - -1.1666666666666667
  - -1.145631067961165
  test_f1_macro:
  - 0.31531084656084657
  - 0.388861803999185
  - 0.42455229955229956
  - 0.4099139357828534
  - 0.3337152021995647
  test_f1_micro:
  - 0.26229508196721313
  - 0.34848484848484845
  - 0.5442176870748299
  - 0.31746031746031744
  - 0.34375
  test_f1_samples:
  - 0.15384615384615385
  - 0.2169811320754717
  - 0.38461538461538464
  - 0.1895424836601307
  - 0.21359223300970873
  test_f1_weighted:
  - 0.2542642983119174
  - 0.33702011234973944
  - 0.5358237882047406
  - 0.30538728897715994
  - 0.34335498121983743
  test_hamming_loss:
  - -0.21634615384615385
  - -0.2028301886792453
  - -0.16105769230769232
  - -0.2107843137254902
  - -0.20388349514563106
  test_jaccard_macro:
  - 0.19839721254355402
  - 0.24716117216117217
  - 0.30278745644599303
  - 0.292032967032967
  - 0.20159313725490197
  test_jaccard_micro:
  - 0.1509433962264151
  - 0.21100917431192662
  - 0.37383177570093457
  - 0.18867924528301888
  - 0.20754716981132076
  test_jaccard_samples:
  - 0.15384615384615385
  - 0.2169811320754717
  - 0.38461538461538464
  - 0.18627450980392157
  - 0.21359223300970873
  test_jaccard_weighted:
  - 0.14857142857142858
  - 0.2077890662796323
  - 0.38095238095238093
  - 0.18934911242603553
  - 0.2087378640776699
  test_label_ranking_average_precision_score:
  - 0.9743589743589743
  - 0.9716981132075472
  - 0.9615384615384616
  - 0.9362745098039216
  - 0.9490291262135923
  test_label_ranking_loss:
  - 0.01923076923076923
  - 0.025157232704402514
  - 0.02564102564102564
  - 0.04901960784313725
  - 0.04854368932038834
  test_matthews_corrcoef_macro:
  - 0.3651137434423023
  - 0.4076372251752961
  - 0.4104863329154709
  - 0.43076112303696407
  - 0.3600132942357491
  test_matthews_corrcoef_micro:
  - 0.32728972936936224
  - 0.374589067462864
  - 0.5399967757169872
  - 0.35836665475744206
  - 0.36978938065676203
  test_matthews_corrcoef_samples:
  - 0.15064102564102566
  - 0.20754716981132076
  - 0.37820512820512814
  - 0.1877911817488162
  - 0.20388349514563106
  test_matthews_corrcoef_weighted:
  - 0.3159225256475248
  - 0.37183032682464795
  - 0.5247252080224805
  - 0.3309797424081865
  - 0.3813844521823833
  test_ndgc:
  - 0.9809972982142868
  - 0.9788854670485181
  - 0.9716099810439582
  - 0.9527290959033639
  - 0.9619185261713489
  test_precision_macro:
  - 0.9166666666666666
  - 0.8472222222222222
  - 0.75
  - 0.9166666666666666
  - 0.8125
  test_precision_micro:
  - 0.9411764705882353
  - 0.8846153846153846
  - 0.9523809523809523
  - 0.9090909090909091
  - 0.88
  test_precision_samples:
  - 0.15384615384615385
  - 0.2169811320754717
  - 0.38461538461538464
  - 0.18627450980392157
  - 0.21359223300970873
  test_precision_weighted:
  - 0.9873015873015872
  - 0.9549266247379455
  - 0.9619047619047619
  - 0.9230769230769231
  - 0.9781553398058253
  test_recall_macro:
  - 0.223397212543554
  - 0.2919047619047619
  - 0.30278745644599303
  - 0.29523809523809524
  - 0.24325980392156862
  test_recall_micro:
  - 0.1523809523809524
  - 0.2169811320754717
  - 0.38095238095238093
  - 0.19230769230769232
  - 0.21359223300970873
  test_recall_samples:
  - 0.15384615384615385
  - 0.2169811320754717
  - 0.38461538461538464
  - 0.19607843137254902
  - 0.21359223300970873
  test_recall_weighted:
  - 0.1523809523809524
  - 0.2169811320754717
  - 0.38095238095238093
  - 0.19230769230769232
  - 0.21359223300970873
  test_roc_auc_macro:
  - 0.9708447042370514
  - 0.9790380199908602
  - 0.9840453436017771
  - 0.9738278598819644
  - 0.9470806233389537
  test_roc_auc_micro:
  - 0.9719797887000459
  - 0.9742049365135873
  - 0.9811667432246209
  - 0.9561298076923077
  - 0.9573632450435164
  test_roc_auc_samples:
  - 0.9807692307692307
  - 0.9748427672955976
  - 0.9743589743589745
  - 0.9509803921568629
  - 0.9514563106796117
  test_roc_auc_weighted:
  - 0.9660499727317088
  - 0.9755972731350491
  - 0.9866856367447607
  - 0.9736639667896844
  - 0.9649358571479336
start: 2023-11-27 21:27:01.330439
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop70
  params:
    drop: 0.7
    random_state: 0
