active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwCYmZmZmdm/ADQzMzMz4z8AmJmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwA0MzMzM+M/AJiZmZmZ2b8AmJmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMzA0CAZmZmZmb2P4BmZmZmZvY/YGZmZmZmHsBAMzMzMzMDQA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMzA0BAMzMzMzMLQDAzMzMzMyfAAJqZmZmZ2T+gmZmZmZkVQA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            YGZmZmZm9r+gmZmZmZn5P2BmZmZmZva/MDMzMzMzC8BoZmZmZmYSQA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9gZmZmZmb2v0AzMzMzM+M/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/IzMzMzMwUwJCZmZmZmQHAIDMzMzMz87+cmZmZmZkhQA==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AmJmZmZnpvwCgmZmZmck/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZyb8AmJmZmZnJvwCYmZmZmcm/AJqZmZmZ6T8AmJmZmZnJvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZCcCYmZmZmZkJwNDMzMzMzPw/aGZmZmZmBkDQzMzMzMz8Pw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMzA0BAZmZmZmYewCAzMzMzMyvAwJmZmZmZFUDgzMzMzMwqQA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 17:26:39.362591
estimator:
  call: nakano_datasets_v2.estimators.final_estimator
  final_params:
    estimators:
    - - rf
      - call: sklearn.ensemble._forest.RandomForestClassifier
        params:
          bootstrap: true
          ccp_alpha: 0.0
          class_weight: null
          criterion: gini
          max_depth: null
          max_features: sqrt
          max_leaf_nodes: null
          max_samples: 0.9
          min_impurity_decrease: 0.0
          min_samples_leaf: 5
          min_samples_split: 2
          min_weight_fraction_leaf: 0.0
          n_estimators: 150
          n_jobs: 14
          oob_score: true
          random_state: 0
          verbose: true
          warm_start: false
    - - xt
      - call: sklearn.ensemble._forest.ExtraTreesClassifier
        params:
          bootstrap: true
          ccp_alpha: 0.0
          class_weight: null
          criterion: gini
          max_depth: null
          max_features: sqrt
          max_leaf_nodes: null
          max_samples: 0.9
          min_impurity_decrease: 0.0
          min_samples_leaf: 5
          min_samples_split: 2
          min_weight_fraction_leaf: 0.0
          n_estimators: 150
          n_jobs: 14
          oob_score: true
          random_state: 0
          verbose: true
          warm_start: false
  name: final_estimator
  params: {}
hash: 10b82907dc36b0b0cc104d94f1794fdc589f1cace05061af5c64b36004853c70
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/10b8290_20231021T172626623738_final_estimator_yeast.yml
results:
  fit_time:
  - 1.9337201118469238
  - 1.804924488067627
  - 1.919374704360962
  - 1.9385998249053955
  - 1.7896389961242676
  score_time:
  - 8.998940706253052
  - 10.27630066871643
  - 9.078423738479614
  - 9.216455936431885
  - 10.28697681427002
  test_average_precision_macro:
  - 0.5398528162659562
  - 0.5219710942093958
  - 0.537487762410594
  - 0.5302358233007032
  - 0.5519157341731105
  test_average_precision_micro:
  - 0.7181534852629587
  - 0.7083304545900061
  - 0.6978343440171784
  - 0.7261613650178522
  - 0.7481068790356947
  test_average_precision_samples:
  - 0.757425178972798
  - 0.7470617805762917
  - 0.7387286729804063
  - 0.76300022777664
  - 0.774657565894648
  test_average_precision_weighted:
  - 0.6993484915724651
  - 0.6839315431915867
  - 0.683715189217394
  - 0.7011493950587019
  - 0.7230473859660296
  test_coverage_error:
  - -7.214137214137214
  - -7.171079429735234
  - -7.132796780684105
  - -7.060669456066946
  - -7.004255319148936
  test_f1_macro:
  - 0.3065744082898485
  - 0.2981500820942785
  - 0.29974340993802867
  - 0.3086905077854893
  - 0.3086266051671373
  test_f1_micro:
  - 0.6124008228034087
  - 0.6025641025641025
  - 0.598438855160451
  - 0.6095406360424028
  - 0.6225519287833828
  test_f1_samples:
  - 0.5831251100481869
  - 0.5707895069402197
  - 0.5622996274907744
  - 0.5775553827855083
  - 0.5896323062280509
  test_f1_weighted:
  - 0.5183691148052827
  - 0.5072410868024049
  - 0.5037388652789424
  - 0.5171335998608764
  - 0.5306992330376177
  test_hamming_loss:
  - -0.19587169587169587
  - -0.19842886237998253
  - -0.19962632940500144
  - -0.19814704124327556
  - -0.19331306990881458
  test_jaccard_macro:
  - 0.22729452982475046
  - 0.22011539498405813
  - 0.2192659203888173
  - 0.22728778576205313
  - 0.23187497933938214
  test_jaccard_micro:
  - 0.4413384159254553
  - 0.43119266055045874
  - 0.42698019801980197
  - 0.4383735705209657
  - 0.45196036191296857
  test_jaccard_samples:
  - 0.4724730224730225
  - 0.4640974040668542
  - 0.4514965696052215
  - 0.4666193464833632
  - 0.4849400540357987
  test_jaccard_weighted:
  - 0.40777409542193577
  - 0.3963314484007842
  - 0.3911666770727243
  - 0.4052551988626516
  - 0.4213705372466264
  test_label_ranking_average_precision_score:
  - 0.7574251789727983
  - 0.7470617805762921
  - 0.7387286729804061
  - 0.7630002277766402
  - 0.7746575658946475
  test_label_ranking_loss:
  - 0.17252828475355947
  - 0.1677295121068761
  - 0.17681589872233736
  - 0.15780650370085514
  - 0.15542317780159726
  test_matthews_corrcoef_macro:
  - 0.1713622755658504
  - 0.16634136642913125
  - 0.17026906727784846
  - 0.1800915642332546
  - 0.16599888425150255
  test_matthews_corrcoef_micro:
  - 0.5073337583565866
  - 0.4936817531267918
  - 0.48749591750402643
  - 0.5041868158212944
  - 0.5188452062067281
  test_matthews_corrcoef_samples:
  - 0.5056173278169325
  - 0.49158455287490266
  - 0.48366539857956237
  - 0.5022425959885809
  - 0.5137218125030504
  test_matthews_corrcoef_weighted:
  - 0.1891469366364592
  - 0.18115188338415744
  - 0.18242371779004687
  - 0.19280714698580712
  - 0.18735255528727598
  test_ndgc:
  - 0.8504258191413114
  - 0.8449954478344723
  - 0.8371116304450972
  - 0.8558569887334735
  - 0.863023617046299
  test_precision_macro:
  - 0.542176941126521
  - 0.6142883639554529
  - 0.5925149663148146
  - 0.6255027891366394
  - 0.5529002560950466
  test_precision_micro:
  - 0.7695716395864106
  - 0.7492753623188406
  - 0.7392857142857143
  - 0.7712369597615499
  - 0.7810871183916605
  test_precision_samples:
  - 0.7668052668052668
  - 0.7362525458248472
  - 0.7352448021462107
  - 0.7601115760111576
  - 0.7689716312056737
  test_precision_weighted:
  - 0.7105697399025565
  - 0.7495046211494429
  - 0.7304034942659768
  - 0.7699104824795415
  - 0.7298901668393584
  test_recall_macro:
  - 0.27273911645615834
  - 0.26886333740877966
  - 0.2703344694259916
  - 0.271712226712399
  - 0.27520322064468933
  test_recall_micro:
  - 0.5085407515861395
  - 0.5038986354775828
  - 0.5026711996114619
  - 0.5038948393378773
  - 0.517513566847558
  test_recall_samples:
  - 0.5051958551958552
  - 0.5104548540393754
  - 0.49694146117687366
  - 0.5089684200039849
  - 0.5157978723404255
  test_recall_weighted:
  - 0.5085407515861395
  - 0.5038986354775828
  - 0.5026711996114619
  - 0.5038948393378773
  - 0.517513566847558
  test_roc_auc_macro:
  - 0.7364427127256038
  - 0.7268512613908278
  - 0.738625495028099
  - 0.7230606529414533
  - 0.7493184933704969
  test_roc_auc_micro:
  - 0.8420905530615189
  - 0.8398277914011721
  - 0.8390544858497154
  - 0.8472828079121166
  - 0.8590662342149918
  test_roc_auc_samples:
  - 0.8274717152464405
  - 0.8322704878931239
  - 0.8231841012776626
  - 0.8421934962991448
  - 0.8445768221984027
  test_roc_auc_weighted:
  - 0.7291014655219576
  - 0.7260857037343134
  - 0.7298085588744391
  - 0.7266918109062798
  - 0.745870988681714
start: 2023-10-21 17:26:26.623738
wrapper: null
