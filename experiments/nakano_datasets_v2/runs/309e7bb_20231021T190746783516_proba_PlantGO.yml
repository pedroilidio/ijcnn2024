active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP5CZmZmZmem/wJmZmZmZyT/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjvzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz479AMzMzMzPjv4CZmZmZmdk/gJmZmZmZ2T+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjvyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMzA8AAMzMzMzMDwACYmZmZmdm/gGZmZmZmEkAANDMzMzPjPw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 19:09:08.699248
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - rf
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.RandomForestRegressor
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        - - xt
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesRegressor
                params:
                  bootstrap: false
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: proba
  params:
    memory: estimators_cache
hash: 309e7bb5d1af1824899945a32f3af72a77391f4dd7e8b9bdbe69b80418fad08b
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/309e7bb_20231021T190746783516_proba_PlantGO.yml
results:
  fit_time:
  - 43.93500280380249
  - 42.72153973579407
  - 43.832322120666504
  - 44.253239154815674
  - 42.85846257209778
  score_time:
  - 25.453216075897217
  - 38.44999957084656
  - 19.278311729431152
  - 35.40060830116272
  - 37.23880338668823
  test_average_precision_macro:
  - 0.8528003954183414
  - 0.786963023113907
  - 0.7422032627282756
  - 0.8149664068029079
  - 0.8765605410844645
  test_average_precision_micro:
  - 0.8420749509833855
  - 0.840492330773617
  - 0.8012824613845906
  - 0.842902081105358
  - 0.8204100361680287
  test_average_precision_samples:
  - 0.889983164983165
  - 0.8854900010203041
  - 0.8774720602526724
  - 0.9004072134962187
  - 0.8914529914529914
  test_average_precision_weighted:
  - 0.8876804481687114
  - 0.8585603120482928
  - 0.8299840034509479
  - 0.8777964409506861
  - 0.892058051376285
  test_coverage_error:
  - -1.4141414141414141
  - -1.5151515151515151
  - -1.5204081632653061
  - -1.4136125654450262
  - -1.3846153846153846
  test_f1_macro:
  - 0.24341901543949215
  - 0.26072631464580615
  - 0.21827380952380956
  - 0.23940979846776947
  - 0.22816840600547006
  test_f1_micro:
  - 0.6377708978328174
  - 0.6666666666666666
  - 0.5723472668810289
  - 0.6372239747634069
  - 0.6031746031746031
  test_f1_samples:
  - 0.5117845117845118
  - 0.5404040404040404
  - 0.44387755102040816
  - 0.518324607329843
  - 0.4786324786324787
  test_f1_weighted:
  - 0.5460918420197048
  - 0.5762781050896658
  - 0.4944567404426559
  - 0.5458109280867758
  - 0.5187255807700888
  test_hamming_loss:
  - -0.04924242424242424
  - -0.046296296296296294
  - -0.05654761904761905
  - -0.05017452006980803
  - -0.053418803418803416
  test_jaccard_macro:
  - 0.201133335691379
  - 0.22138462475633527
  - 0.16731659544159547
  - 0.19519489247311828
  - 0.18115274365274367
  test_jaccard_micro:
  - 0.4681818181818182
  - 0.5
  - 0.4009009009009009
  - 0.4675925925925926
  - 0.4318181818181818
  test_jaccard_samples:
  - 0.5075757575757576
  - 0.5328282828282829
  - 0.4387755102040816
  - 0.5130890052356021
  - 0.47435897435897434
  test_jaccard_weighted:
  - 0.45970980096766223
  - 0.4911375579278385
  - 0.3880417118093174
  - 0.4562239543139373
  - 0.41688716688716687
  test_label_ranking_average_precision_score:
  - 0.889983164983165
  - 0.885490001020304
  - 0.8774720602526723
  - 0.9004072134962188
  - 0.8914529914529915
  test_label_ranking_loss:
  - 0.030234159779614325
  - 0.037531884501581465
  - 0.03529684601113173
  - 0.025712623618382776
  - 0.02827505827505828
  test_matthews_corrcoef_macro:
  - 0.24105356791777255
  - 0.2557947705374003
  - 0.21783529694887963
  - 0.23902256761271604
  - 0.22515819391188105
  test_matthews_corrcoef_micro:
  - 0.6530299986450818
  - 0.6759974385404864
  - 0.5940461317408511
  - 0.6519646436495831
  - 0.6145596067270228
  test_matthews_corrcoef_samples:
  - 0.5087607862421847
  - 0.5370733638126083
  - 0.4397096248725208
  - 0.515229505436732
  - 0.47323123190465183
  test_matthews_corrcoef_weighted:
  - 0.5383422828726679
  - 0.5619220605134209
  - 0.4862435414865723
  - 0.5418681317666966
  - 0.5048528152346274
  test_ndgc:
  - 0.91829039339497
  - 0.9153008335362803
  - 0.9104087269279673
  - 0.9273526282810736
  - 0.9196178792296202
  test_precision_macro:
  - 0.31376984126984125
  - 0.3157106782106782
  - 0.3168261562998405
  - 0.3192049808429119
  - 0.3079746642246642
  test_precision_micro:
  - 0.9363636363636364
  - 0.9322033898305084
  - 0.9081632653061225
  - 0.9351851851851852
  - 0.8878504672897196
  test_precision_samples:
  - 0.5202020202020202
  - 0.5555555555555556
  - 0.45408163265306123
  - 0.5287958115183246
  - 0.48717948717948717
  test_precision_weighted:
  - 0.6825061479991057
  - 0.6849434370660785
  - 0.6764202439517487
  - 0.6965847219930705
  - 0.668901891377853
  test_recall_macro:
  - 0.21059852956404682
  - 0.2313051591489622
  - 0.17728573225177638
  - 0.20526315789473684
  - 0.19556530214424953
  test_recall_micro:
  - 0.4835680751173709
  - 0.5188679245283019
  - 0.41784037558685444
  - 0.48325358851674644
  - 0.4567307692307692
  test_recall_samples:
  - 0.5075757575757576
  - 0.5328282828282829
  - 0.4387755102040816
  - 0.5130890052356021
  - 0.47435897435897434
  test_recall_weighted:
  - 0.4835680751173709
  - 0.5188679245283019
  - 0.41784037558685444
  - 0.48325358851674644
  - 0.4567307692307692
  test_roc_auc_macro:
  - 0.9779295455780938
  - 0.9654320166297259
  - 0.9643603381272277
  - 0.9779030177482092
  - 0.9829457806910814
  test_roc_auc_micro:
  - 0.9782231685691278
  - 0.9731389286087957
  - 0.9703823690154014
  - 0.9785975325430059
  - 0.978633731418675
  test_roc_auc_samples:
  - 0.9697658402203856
  - 0.9624681154984186
  - 0.9647031539888682
  - 0.9742873763816173
  - 0.9717249417249416
  test_roc_auc_weighted:
  - 0.9750283469209419
  - 0.9700243034337929
  - 0.9654476904702063
  - 0.9766994285449071
  - 0.9766044722094986
start: 2023-10-21 19:07:46.783516
wrapper: null
