active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZm9j8wMzMzMzPjvzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b9mZmZmZmb2vw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gDMzMzMzC0AAMjMzMzPjv4AzMzMzMwtAgMzMzMzMDMCAzMzMzMwEwA==
      n_labels: 8
      n_samples: 1392
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_negative
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_negative.csv
directory: nakano_datasets_v2/runs
end: 2023-11-28 01:17:08.660347
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_pvalue
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.9
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler:
            call: deep_forest.weak_labels.PositiveUnlabeledImputer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesClassifier
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  class_weight: null
                  criterion: gini
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: 0.9
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: true
                  random_state: 0
                  verbose: true
                  warm_start: false
              sampling_strategy: auto
              threshold: 0.8
              use_oob_proba: true
              verbose: true
              weight_proba: true
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 0.05
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 0.05
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding_weak_chi2
  params:
    memory: estimators_cache
hash: c4f512cf6782ce294f1940e2ee9a70f2a2661baf058ce087a805a24f8e354202
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/c4f512c_20231128T011219070471_embedding_weak_chi2_Gram_negative.yml
results:
  fit_time:
  - 187.61857962608337
  - 177.34519505500793
  - 176.52717685699463
  - 174.74294686317444
  - 4.300437927246094
  score_time:
  - 99.45887398719788
  - 44.67151212692261
  - 35.133646726608276
  - 34.72952461242676
  - 0.0
  test_average_precision_macro:
  - 0.6827855903882092
  - 0.7412357810864256
  - 0.7168247320832657
  - 0.7581702832414292
  - .nan
  test_average_precision_micro:
  - 0.5919958321418752
  - 0.6761694250156746
  - 0.6247515552096814
  - 0.7188678008484831
  - .nan
  test_average_precision_samples:
  - 0.8694891774891775
  - 0.928626898788189
  - 0.8543722943722944
  - 0.933046268152651
  - .nan
  test_average_precision_weighted:
  - 0.8584324152628247
  - 0.9341657652512753
  - 0.8906335791520125
  - 0.9457567501245395
  - .nan
  test_coverage_error:
  - -1.5127272727272727
  - -1.3118279569892473
  - -1.4981818181818183
  - -1.2553191489361701
  - .nan
  test_f1_macro:
  - 0.44043668112534684
  - 0.45139550407191836
  - 0.4263298807635006
  - 0.4298486254872371
  - .nan
  test_f1_micro:
  - 0.448780487804878
  - 0.3869346733668341
  - 0.3468834688346884
  - 0.31978319783197834
  - .nan
  test_f1_samples:
  - 0.3126060606060606
  - 0.24169653524492235
  - 0.20945454545454542
  - 0.18557919621749408
  - .nan
  test_f1_weighted:
  - 0.416608296697369
  - 0.34725204493981293
  - 0.28594302010940104
  - 0.26585684513018
  - .nan
  test_hamming_loss:
  - -0.10272727272727272
  - -0.10931899641577061
  - -0.10954545454545454
  - -0.11125886524822695
  - .nan
  test_jaccard_macro:
  - 0.33977373304848196
  - 0.35762429971988796
  - 0.3358019430580406
  - 0.31863921848677945
  - .nan
  test_jaccard_micro:
  - 0.2893081761006289
  - 0.2398753894080997
  - 0.2098360655737705
  - 0.19032258064516128
  - .nan
  test_jaccard_samples:
  - 0.30363636363636365
  - 0.2317801672640382
  - 0.203030303030303
  - 0.1773049645390071
  - .nan
  test_jaccard_weighted:
  - 0.305015756302521
  - 0.2490950718186818
  - 0.21011291114383898
  - 0.19163822525597268
  - .nan
  test_label_ranking_average_precision_score:
  - 0.8694891774891776
  - 0.9286268987881893
  - 0.8543722943722944
  - 0.9330462681526512
  - .nan
  test_label_ranking_loss:
  - 0.0629004329004329
  - 0.03392217101894521
  - 0.060735930735930733
  - 0.029677473826409995
  - .nan
  test_matthews_corrcoef_macro:
  - 0.46437985636398305
  - 0.4880513989521784
  - 0.4631449325834803
  - 0.4716244800249907
  - .nan
  test_matthews_corrcoef_micro:
  - 0.44767166156661103
  - 0.39438566919567913
  - 0.389482368565277
  - 0.3590474453737902
  - .nan
  test_matthews_corrcoef_samples:
  - 0.30515928971101053
  - 0.23651962330767962
  - 0.2055470987790138
  - 0.18319581281546596
  - .nan
  test_matthews_corrcoef_weighted:
  - 0.4518996521792441
  - 0.3952388992765526
  - 0.3545174844856535
  - 0.33155294650042094
  - .nan
  test_ndgc:
  - 0.9038815456827601
  - 0.9480618801127928
  - 0.8928281013827222
  - 0.9506937379201815
  - .nan
  test_precision_macro:
  - 0.6738211951447246
  - 0.7234477124183007
  - 0.76007326007326
  - 0.7770833333333333
  - .nan
  test_precision_micro:
  - 0.7540983606557377
  - 0.7264150943396226
  - 0.8205128205128205
  - 0.7763157894736842
  - .nan
  test_precision_samples:
  - 0.3042424242424242
  - 0.2341696535244922
  - 0.20848484848484847
  - 0.17907801418439717
  - .nan
  test_precision_weighted:
  - 0.9480602889303871
  - 0.9359835258304235
  - 0.9821947811638532
  - 0.9820250284414107
  - .nan
  test_recall_macro:
  - 0.48232005927127874
  - 0.48870620402632603
  - 0.4068998266559242
  - 0.4350082661058271
  - .nan
  test_recall_micro:
  - 0.3194444444444444
  - 0.2636986301369863
  - 0.21993127147766323
  - 0.20136518771331058
  - .nan
  test_recall_samples:
  - 0.3290909090909091
  - 0.2616487455197133
  - 0.21636363636363637
  - 0.20035460992907803
  - .nan
  test_recall_weighted:
  - 0.3194444444444444
  - 0.2636986301369863
  - 0.21993127147766323
  - 0.20136518771331058
  - .nan
  test_roc_auc_macro:
  - 0.9671509258330238
  - 0.9604750131477019
  - 0.966198509425799
  - 0.9663874645853446
  - .nan
  test_roc_auc_micro:
  - 0.9104132162366343
  - 0.9401955938426776
  - 0.9239260943370072
  - 0.9514464695849322
  - .nan
  test_roc_auc_samples:
  - 0.9370995670995671
  - 0.966077828981055
  - 0.9392640692640692
  - 0.97032252617359
  - .nan
  test_roc_auc_weighted:
  - 0.9474527141155902
  - 0.9695667883127657
  - 0.9597584496454263
  - 0.9748686187886318
  - .nan
start: 2023-11-28 01:12:19.070471
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop90
  params:
    drop: 0.9
    random_state: 0
