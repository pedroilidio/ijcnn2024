active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz87+AZmZmZmYGQACYmZmZmcm/AJiZmZmZyb8AMzMzMzPzvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 18:45:58.481860
estimator:
  call: nakano_datasets_v2.estimators.final_estimator
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.9
          random_state: 0
    - - estimator
      - call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
        params:
          estimators:
          - - rf
            - call: sklearn.ensemble._forest.RandomForestClassifier
              params:
                bootstrap: true
                ccp_alpha: 0.0
                class_weight: null
                criterion: gini
                max_depth: null
                max_features: sqrt
                max_leaf_nodes: null
                max_samples: 0.9
                min_impurity_decrease: 0.0
                min_samples_leaf: 5
                min_samples_split: 2
                min_weight_fraction_leaf: 0.0
                n_estimators: 150
                n_jobs: 14
                oob_score: true
                random_state: 0
                verbose: true
                warm_start: false
          - - xt
            - call: sklearn.ensemble._forest.ExtraTreesClassifier
              params:
                bootstrap: true
                ccp_alpha: 0.0
                class_weight: null
                criterion: gini
                max_depth: null
                max_features: sqrt
                max_leaf_nodes: null
                max_samples: 0.9
                min_impurity_decrease: 0.0
                min_samples_leaf: 5
                min_samples_split: 2
                min_weight_fraction_leaf: 0.0
                n_estimators: 150
                n_jobs: 14
                oob_score: true
                random_state: 0
                verbose: true
                warm_start: false
    verbose: false
  name: final_estimator
  params: {}
hash: db3343ee65011355d7cfabbc34a28dcb44cb82f5afaea0fee5a703f751b3f2fd
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/db3343e_20231127T184553357199_final_estimator_GrampositivePseAAC.yml
results:
  fit_time:
  - 0.9515683650970459
  - 1.0175693035125732
  - 0.944328784942627
  - 0.9509470462799072
  - 1.0906224250793457
  score_time:
  - 3.714115858078003
  - 3.8039989471435547
  - 3.7429652214050293
  - 3.6608479022979736
  - 3.8092634677886963
  test_average_precision_macro:
  - 0.2924967379122687
  - 0.30726286771944505
  - 0.2922293569804429
  - 0.3111598667126652
  - 0.33094853383099915
  test_average_precision_micro:
  - 0.3849012742878597
  - 0.40472299369243725
  - 0.401449094131193
  - 0.42786446404329814
  - 0.40566996268670336
  test_average_precision_samples:
  - 0.6785714285714284
  - 0.6773927392739273
  - 0.6666666666666666
  - 0.672275641025641
  - 0.6349206349206349
  test_average_precision_weighted:
  - 0.38226252958487705
  - 0.3998736729317136
  - 0.38036845644715556
  - 0.4040887025458926
  - 0.4205624057184277
  test_coverage_error:
  - -1.838095238095238
  - -1.8613861386138615
  - -1.8942307692307692
  - -1.9230769230769231
  - -1.9333333333333333
  test_f1_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_f1_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_f1_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_f1_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_hamming_loss:
  - -0.25
  - -0.25495049504950495
  - -0.25240384615384615
  - -0.25240384615384615
  - -0.25
  test_jaccard_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_jaccard_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_jaccard_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_jaccard_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_label_ranking_average_precision_score:
  - 0.6785714285714288
  - 0.6773927392739278
  - 0.6666666666666671
  - 0.6722756410256413
  - 0.6349206349206352
  test_label_ranking_loss:
  - 0.27936507936507937
  - 0.2797029702970297
  - 0.2932692307692308
  - 0.3036858974358974
  - 0.3111111111111111
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_ndgc:
  - 0.7604843050946226
  - 0.7601046814265696
  - 0.7521929552910905
  - 0.7556200760736412
  - 0.7281894892871608
  test_precision_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_precision_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_precision_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_precision_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_recall_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_recall_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_recall_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_recall_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_roc_auc_macro:
  - 0.5336162742874928
  - 0.5679471516086139
  - 0.5128152132171242
  - 0.5361804900367779
  - 0.5598546363456033
  test_roc_auc_micro:
  - 0.705275888133031
  - 0.701222462342354
  - 0.7171642933700813
  - 0.6973510947787476
  - 0.7019803476946334
  test_roc_auc_samples:
  - 0.7206349206349206
  - 0.7202970297029705
  - 0.7067307692307693
  - 0.6963141025641024
  - 0.688888888888889
  test_roc_auc_weighted:
  - 0.5521703125694722
  - 0.557508139082624
  - 0.5695481644738307
  - 0.5619695061048942
  - 0.575088696369637
start: 2023-11-27 18:45:53.357199
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop90
  params:
    drop: 0.9
    random_state: 0
