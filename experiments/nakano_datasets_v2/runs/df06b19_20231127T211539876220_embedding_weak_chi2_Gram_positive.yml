active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ6T8AmJmZmZnJvwCYmZmZmcm/AJqZmZmZ6T8AMzMzMzPzvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 21:18:01.022912
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_pvalue
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler:
            call: deep_forest.weak_labels.PositiveUnlabeledImputer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesClassifier
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  class_weight: null
                  criterion: gini
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: 0.9
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: true
                  random_state: 0
                  verbose: true
                  warm_start: false
              sampling_strategy: auto
              threshold: 0.8
              use_oob_proba: true
              verbose: true
              weight_proba: true
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 0.05
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 0.05
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding_weak_chi2
  params:
    memory: estimators_cache
hash: df06b1926ae6aef319876e071d3bef26b1f466dfb4a98845023f1cbef5cf91ef
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/df06b19_20231127T211539876220_embedding_weak_chi2_Gram_positive.yml
results:
  fit_time:
  - 78.04156231880188
  - 76.36624598503113
  - 66.95498394966125
  - 71.74326848983765
  - 76.03061103820801
  score_time:
  - 62.2139368057251
  - 50.673510789871216
  - 27.625442504882812
  - 44.71899175643921
  - 51.503865242004395
  test_average_precision_macro:
  - 0.9457807109688524
  - 0.8552332589733396
  - 0.9021405901980424
  - 0.9922953697107751
  - 0.8687658708434502
  test_average_precision_micro:
  - 0.9830045043165492
  - 0.9452492613410409
  - 0.9649783865466572
  - 0.9924616284606933
  - 0.9624126680828005
  test_average_precision_samples:
  - 0.982200647249191
  - 0.9623397435897435
  - 0.9711538461538461
  - 0.9951456310679612
  - 0.9642857142857143
  test_average_precision_weighted:
  - 0.9806575503284952
  - 0.9533426611800885
  - 0.9721615305098956
  - 0.9925005797934745
  - 0.9672996666035262
  test_coverage_error:
  - -1.058252427184466
  - -1.0961538461538463
  - -1.0673076923076923
  - -1.029126213592233
  - -1.0857142857142856
  test_f1_macro:
  - 0.6634187165060937
  - 0.6915945165945165
  - 0.5784165547096581
  - 0.7412705492544922
  - 0.6193248091510943
  test_f1_micro:
  - 0.7000000000000001
  - 0.718562874251497
  - 0.6193548387096774
  - 0.7116564417177914
  - 0.6540880503144655
  test_f1_samples:
  - 0.5436893203883495
  - 0.5769230769230769
  - 0.46153846153846156
  - 0.5631067961165048
  - 0.49523809523809526
  test_f1_weighted:
  - 0.6949307511884519
  - 0.6929695304695305
  - 0.6080392240490763
  - 0.7004836546572242
  - 0.6170720374415886
  test_hamming_loss:
  - -0.11650485436893204
  - -0.11298076923076923
  - -0.14182692307692307
  - -0.11407766990291263
  - -0.13095238095238096
  test_jaccard_macro:
  - 0.5080357142857143
  - 0.555952380952381
  - 0.41908246225319395
  - 0.6025140056022409
  - 0.4835423925667828
  test_jaccard_micro:
  - 0.5384615384615384
  - 0.5607476635514018
  - 0.4485981308411215
  - 0.5523809523809524
  - 0.48598130841121495
  test_jaccard_samples:
  - 0.5436893203883495
  - 0.5769230769230769
  - 0.46153846153846156
  - 0.5631067961165048
  - 0.49523809523809526
  test_jaccard_weighted:
  - 0.5384615384615384
  - 0.5615384615384615
  - 0.45079365079365075
  - 0.5523809523809524
  - 0.4888888888888888
  test_label_ranking_average_precision_score:
  - 0.9822006472491909
  - 0.9623397435897437
  - 0.9711538461538461
  - 0.9951456310679612
  - 0.9642857142857143
  test_label_ranking_loss:
  - 0.015372168284789644
  - 0.03205128205128205
  - 0.019230769230769232
  - 0.0032362459546925564
  - 0.02857142857142857
  test_matthews_corrcoef_macro:
  - 0.6528297475544576
  - 0.6683935665291798
  - 0.5625615310163425
  - 0.7188309118689102
  - 0.6056196269745724
  test_matthews_corrcoef_micro:
  - 0.6825393634904255
  - 0.6852594156577533
  - 0.6020719713410667
  - 0.6921287729637254
  - 0.6324448651500234
  test_matthews_corrcoef_samples:
  - 0.5436893203883495
  - 0.5673076923076923
  - 0.45512820512820507
  - 0.5631067961165048
  - 0.4888888888888888
  test_matthews_corrcoef_weighted:
  - 0.6574130653464663
  - 0.6663198545045398
  - 0.5885751280762087
  - 0.6681442323927705
  - 0.6087301968392386
  test_ndgc:
  - 0.9871998087018553
  - 0.9719742819801027
  - 0.9787074857829687
  - 0.9964167937239947
  - 0.973488143614306
  test_precision_macro:
  - 1.0
  - 0.8630952380952381
  - 0.875
  - 1.0
  - 0.875
  test_precision_micro:
  - 1.0
  - 0.9523809523809523
  - 0.96
  - 1.0
  - 0.9629629629629629
  test_precision_samples:
  - 0.5436893203883495
  - 0.5769230769230769
  - 0.46153846153846156
  - 0.5631067961165048
  - 0.49523809523809526
  test_precision_weighted:
  - 1.0
  - 0.9745879120879122
  - 0.9809523809523809
  - 1.0
  - 0.9809523809523809
  test_recall_macro:
  - 0.5080357142857143
  - 0.6309523809523809
  - 0.4607491289198606
  - 0.6025140056022409
  - 0.5252090592334495
  test_recall_micro:
  - 0.5384615384615384
  - 0.5769230769230769
  - 0.45714285714285713
  - 0.5523809523809524
  - 0.49523809523809526
  test_recall_samples:
  - 0.5436893203883495
  - 0.5769230769230769
  - 0.46153846153846156
  - 0.5631067961165048
  - 0.49523809523809526
  test_recall_weighted:
  - 0.5384615384615384
  - 0.5769230769230769
  - 0.45714285714285713
  - 0.5523809523809524
  - 0.49523809523809526
  test_roc_auc_macro:
  - 0.9923166883478853
  - 0.9788741856577401
  - 0.9912641595134011
  - 0.9972317530554082
  - 0.9872063277134085
  test_roc_auc_micro:
  - 0.9942869630369631
  - 0.9760848126232742
  - 0.9908742918389221
  - 0.9972700480843802
  - 0.9875434618291762
  test_roc_auc_samples:
  - 0.9846278317152104
  - 0.9679487179487178
  - 0.9807692307692307
  - 0.9967637540453074
  - 0.9714285714285714
  test_roc_auc_weighted:
  - 0.9933145547554505
  - 0.9760336016053193
  - 0.9940504573626675
  - 0.9972638433080344
  - 0.98932141173301
start: 2023-11-27 21:15:39.876220
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
