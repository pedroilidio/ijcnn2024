active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/gJmZmZmZ6T8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wJmZmZmZEUCAzMzMzMwEwACZmZmZmfm/wJmZmZmZFUBAZmZmZmYWwA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_v2/runs
end: 2023-11-28 03:30:15.380074
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding
  params:
    memory: estimators_cache
hash: c62bfdd9e370b362892d9300b6f232946aa50ba42f29e19260a93c4ecc5819c9
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/c62bfdd_20231128T031437370507_embedding_scene.yml
results:
  fit_time:
  - 690.5512821674347
  - 656.0317237377167
  - 662.7032337188721
  - 613.3299398422241
  - 647.4577543735504
  score_time:
  - 141.05531120300293
  - 217.2171928882599
  - 244.3168020248413
  - 204.17281651496887
  - 203.94909405708313
  test_average_precision_macro:
  - 0.8274457579334564
  - 0.8183123049506625
  - 0.7854205117047264
  - 0.7981656265490797
  - 0.8143462444777194
  test_average_precision_micro:
  - 0.8341920645499676
  - 0.8239244845380166
  - 0.8013984040089035
  - 0.812463314106326
  - 0.8108471977791812
  test_average_precision_samples:
  - 0.8813766596785464
  - 0.8603305785123967
  - 0.848447204968944
  - 0.8518207282913166
  - 0.8614647501711156
  test_average_precision_weighted:
  - 0.8130934248269102
  - 0.8084297894310933
  - 0.7715382169230345
  - 0.7839623779279149
  - 0.8014354665248544
  test_coverage_error:
  - -1.4088050314465408
  - -1.493801652892562
  - -1.5134575569358177
  - -1.495798319327731
  - -1.4558521560574949
  test_f1_macro:
  - 0.0495049504950495
  - 0.08440423774299989
  - 0.03397849462365592
  - 0.03904923599320883
  - 0.06197802197802197
  test_f1_micro:
  - 0.05649717514124294
  - 0.0885608856088561
  - 0.034155597722960146
  - 0.03809523809523809
  - 0.0670391061452514
  test_f1_samples:
  - 0.030747728860936407
  - 0.04820936639118457
  - 0.017253278122843337
  - 0.02100840336134454
  - 0.03559206023271731
  test_f1_weighted:
  - 0.0495049504950495
  - 0.08202948163169706
  - 0.03250882218624155
  - 0.036514085087444574
  - 0.0619474733760448
  test_hamming_loss:
  - -0.1750524109014675
  - -0.17011019283746556
  - -0.17563837129054521
  - -0.17682072829131654
  - -0.17145790554414783
  test_jaccard_macro:
  - 0.029069767441860465
  - 0.04753401883573425
  - 0.018132101518530317
  - 0.020753512132822477
  - 0.03449197860962567
  test_jaccard_micro:
  - 0.029069767441860465
  - 0.04633204633204633
  - 0.017374517374517374
  - 0.019417475728155338
  - 0.03468208092485549
  test_jaccard_samples:
  - 0.03039832285115304
  - 0.047520661157024795
  - 0.016563146997929608
  - 0.02100840336134454
  - 0.03490759753593429
  test_jaccard_weighted:
  - 0.029069767441860465
  - 0.04633204633204633
  - 0.017374517374517374
  - 0.019417475728155338
  - 0.03448578448578449
  test_label_ranking_average_precision_score:
  - 0.8813766596785466
  - 0.8603305785123962
  - 0.8484472049689437
  - 0.8518207282913164
  - 0.8614647501711153
  test_label_ranking_loss:
  - 0.06436058700209644
  - 0.08202479338842976
  - 0.08643892339544514
  - 0.07998949579831933
  - 0.07654004106776181
  test_matthews_corrcoef_macro:
  - 0.06403428202773792
  - 0.14968548255088832
  - 0.06889462493808778
  - 0.07616297937130877
  - 0.09412224706225751
  test_matthews_corrcoef_micro:
  - 0.15477152044248615
  - 0.19592042615514438
  - 0.11963853392348181
  - 0.126380376388325
  - 0.1631339391020448
  test_matthews_corrcoef_samples:
  - 0.030676007404682758
  - 0.048067998066254856
  - 0.017111617109870293
  - 0.02100840336134454
  - 0.03504088514182208
  test_matthews_corrcoef_weighted:
  - 0.06403428202773792
  - 0.1431962598944042
  - 0.06479343547285768
  - 0.07084683364137287
  - 0.09391126699700807
  test_ndgc:
  - 0.9124736357862315
  - 0.8968240399106217
  - 0.8878218438028168
  - 0.8911205691015166
  - 0.8979425218389468
  test_precision_macro:
  - 0.16666666666666666
  - 0.6666666666666666
  - 0.3333333333333333
  - 0.3333333333333333
  - 0.32051282051282054
  test_precision_micro:
  - 1.0
  - 1.0
  - 1.0
  - 1.0
  - 0.9473684210526315
  test_precision_samples:
  - 0.031446540880503145
  - 0.049586776859504134
  - 0.018633540372670808
  - 0.02100840336134454
  - 0.03696098562628337
  test_precision_weighted:
  - 0.16666666666666666
  - 0.6274131274131274
  - 0.30694980694980695
  - 0.3087378640776699
  - 0.3191268191268192
  test_recall_macro:
  - 0.029069767441860465
  - 0.04753401883573425
  - 0.018132101518530317
  - 0.020753512132822477
  - 0.03475321162947938
  test_recall_micro:
  - 0.029069767441860465
  - 0.04633204633204633
  - 0.017374517374517374
  - 0.019417475728155338
  - 0.03474903474903475
  test_recall_samples:
  - 0.03039832285115304
  - 0.047520661157024795
  - 0.016563146997929608
  - 0.02100840336134454
  - 0.03490759753593429
  test_recall_weighted:
  - 0.029069767441860465
  - 0.04633204633204633
  - 0.017374517374517374
  - 0.019417475728155338
  - 0.03474903474903475
  test_roc_auc_macro:
  - 0.9356747429875689
  - 0.9332067877637581
  - 0.9320748491942358
  - 0.9298257879429048
  - 0.9364414544053945
  test_roc_auc_micro:
  - 0.9470321411341752
  - 0.9399748209471597
  - 0.9402371759514617
  - 0.940304326007888
  - 0.9424575514425764
  test_roc_auc_samples:
  - 0.9356394129979035
  - 0.9179752066115703
  - 0.9135610766045549
  - 0.9200105042016806
  - 0.9234599589322382
  test_roc_auc_weighted:
  - 0.9284784032714132
  - 0.9281348543465356
  - 0.9263492038305405
  - 0.9233968221859878
  - 0.9305931495832729
start: 2023-11-28 03:14:37.370507
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
