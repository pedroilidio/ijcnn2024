active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzM/L+AmZmZmZnJP4CZmZmZmck/MDMzMzMz8z+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb8wMzMzMzPzv5iZmZmZmQnAaGZmZmZmBkDQzMzMzMz8Pw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+YmZmZmZkBQNDMzMzMzPy/0MzMzMzM/L8wMzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ+b9oZmZmZmb2P6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP2ZmZmZmZgbANDMzMzMz8z80MzMzMzPzPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          cGZmZmZmBkDIzMzMzMwQwMCZmZmZmek/AJmZmZmZyb/AmZmZmZnpPw==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 20:43:42.699124
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.7
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: proba
  params:
    memory: estimators_cache
hash: 505e0503dae883256ff17ab27fd1c831b629c250b54dc8787e07d21f60dea18c
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/505e050_20231127T204246217586_proba_flags.yml
results:
  fit_time:
  - 34.00904130935669
  - 33.50834250450134
  - 34.009673833847046
  - 33.84105038642883
  - 34.132057666778564
  score_time:
  - 21.390071153640747
  - 21.255329847335815
  - 20.83717393875122
  - 21.36187171936035
  - 21.936721563339233
  test_average_precision_macro:
  - 0.7247600959837587
  - 0.5081536301826725
  - 0.6378956151006069
  - 0.6752857790593739
  - 0.629585231130106
  test_average_precision_micro:
  - 0.7088260504114181
  - 0.5433105314152601
  - 0.6776882471863206
  - 0.658046272092984
  - 0.6361232463504621
  test_average_precision_samples:
  - 0.755104717813051
  - 0.631343669250646
  - 0.7358270676691728
  - 0.729624542124542
  - 0.702766290726817
  test_average_precision_weighted:
  - 0.7698546932746959
  - 0.5837993127924447
  - 0.7152672216114015
  - 0.7296031065416101
  - 0.7120588774973018
  test_coverage_error:
  - -5.527777777777778
  - -5.395348837209302
  - -5.5
  - -5.256410256410256
  - -5.631578947368421
  test_f1_macro:
  - 0.18818681318681316
  - 0.1502482073910645
  - 0.25500783724487
  - 0.19037824920177862
  - 0.20522069292833414
  test_f1_micro:
  - 0.25157232704402516
  - 0.20915032679738563
  - 0.3157894736842105
  - 0.23841059602649006
  - 0.3018867924528302
  test_f1_samples:
  - 0.21587301587301588
  - 0.17796234772978956
  - 0.29818295739348377
  - 0.20476190476190476
  - 0.24761904761904763
  test_f1_weighted:
  - 0.22643991580558742
  - 0.20161780083655084
  - 0.2930213229934508
  - 0.23102539655207235
  - 0.2806513012181617
  test_hamming_loss:
  - -0.4722222222222222
  - -0.4019933554817276
  - -0.4398496240601504
  - -0.42124542124542125
  - -0.41729323308270677
  test_jaccard_macro:
  - 0.12286924544989061
  - 0.08619275461380724
  - 0.16548029556650246
  - 0.11150759424004206
  - 0.12765536836744268
  test_jaccard_micro:
  - 0.14388489208633093
  - 0.11678832116788321
  - 0.1875
  - 0.13533834586466165
  - 0.17777777777777778
  test_jaccard_samples:
  - 0.14166666666666666
  - 0.12286821705426357
  - 0.21165413533834587
  - 0.13888888888888887
  - 0.168671679197995
  test_jaccard_weighted:
  - 0.14547351220437404
  - 0.11674765749601276
  - 0.18847122302158273
  - 0.13467381997014405
  - 0.1760834080940989
  test_label_ranking_average_precision_score:
  - 0.7551047178130511
  - 0.6313436692506459
  - 0.7358270676691728
  - 0.7296245421245422
  - 0.7027662907268171
  test_label_ranking_loss:
  - 0.3111111111111111
  - 0.40813953488372084
  - 0.3666666666666667
  - 0.32991452991453
  - 0.3548245614035088
  test_matthews_corrcoef_macro:
  - 0.04089547631827089
  - 0.034071414164020535
  - 0.13262046659579887
  - 0.10763460823107537
  - 0.045040452142987915
  test_matthews_corrcoef_micro:
  - 0.17840637494715242
  - 0.13073406785640326
  - 0.23779697832693764
  - 0.20497601556586825
  - 0.2129794120900828
  test_matthews_corrcoef_samples:
  - 0.13226401127340914
  - 0.0850869017276667
  - 0.19019620777788712
  - 0.14213686525274363
  - 0.1494828884745009
  test_matthews_corrcoef_weighted:
  - 0.03406490322707841
  - 0.04172440242564493
  - 0.1399035003349405
  - 0.0968792755088797
  - 0.039851071010562775
  test_ndgc:
  - 0.8515730364122112
  - 0.7730188504656492
  - 0.8347067644088363
  - 0.8343815009885208
  - 0.8160361412581322
  test_precision_macro:
  - 0.43650793650793646
  - 0.4304421768707483
  - 0.5687074829931973
  - 0.6071428571428571
  - 0.4610389610389611
  test_precision_micro:
  - 0.8
  - 0.64
  - 0.84375
  - 0.8181818181818182
  - 0.7741935483870968
  test_precision_samples:
  - 0.4722222222222222
  - 0.32558139534883723
  - 0.6052631578947368
  - 0.41025641025641024
  - 0.5
  test_precision_weighted:
  - 0.5522388059701493
  - 0.5618582589285714
  - 0.6929770469338814
  - 0.7403100775193798
  - 0.5931581439393939
  test_recall_macro:
  - 0.12572523262178434
  - 0.09292947063883025
  - 0.17122725119774979
  - 0.11504472756844673
  - 0.13497827755499678
  test_recall_micro:
  - 0.14925373134328357
  - 0.125
  - 0.19424460431654678
  - 0.13953488372093023
  - 0.1875
  test_recall_samples:
  - 0.1509259259259259
  - 0.12480620155038759
  - 0.21165413533834587
  - 0.13888888888888887
  - 0.168671679197995
  test_recall_weighted:
  - 0.14925373134328357
  - 0.125
  - 0.19424460431654678
  - 0.13953488372093023
  - 0.1875
  test_roc_auc_macro:
  - 0.6916899789413563
  - 0.572378229778297
  - 0.6096027556772415
  - 0.6728611523035299
  - 0.6181856541675108
  test_roc_auc_micro:
  - 0.7053503668100176
  - 0.6334447254335259
  - 0.6650427689344587
  - 0.6875538329026701
  - 0.6645153985507246
  test_roc_auc_samples:
  - 0.6888888888888888
  - 0.5918604651162791
  - .nan
  - 0.67008547008547
  - .nan
  test_roc_auc_weighted:
  - 0.6865666865365951
  - 0.5560850171357137
  - 0.5890145026835675
  - 0.6114475703689817
  - 0.6121402554077187
start: 2023-11-27 20:42:46.217586
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop70
  params:
    drop: 0.7
    random_state: 0
