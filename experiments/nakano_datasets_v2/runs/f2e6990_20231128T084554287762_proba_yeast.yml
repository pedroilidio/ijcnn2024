active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADQzMzMz4z8AmJmZmZnZvwA0MzMzM+M/AJiZmZmZ2b8AmJmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8AmJmZmZnZvwA0MzMzM+M/AJiZmZmZ2b8ANDMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzMIkCAmZmZmZn5v2BmZmZmZhbAYGZmZmZmHsCgmZmZmZkVQA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9oZmZmZmYWQEAzMzMzM+M/mJmZmZmZHcCgmZmZmZn5Pw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            cGZmZmZmDkCQmZmZmZkBwGRmZmZmZiDAcGZmZmZmDkBwZmZmZmYGQA==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AmJmZmZnpvwCgmZmZmck/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ6T+AmZmZmZkBwADNzMzMzPw/ADMzMzMz878AmpmZmZnpPw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+gmZmZmZnpP8zMzMzMzBDAMDMzMzMz879oZmZmZmYOQA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          4MzMzMzMIkAAMjMzMzPjv4AzMzMzMwtAIDMzMzMzIcCAzMzMzMwMwA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_v2/runs
end: 2023-11-28 08:46:57.699565
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.7
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: proba
  params:
    memory: estimators_cache
hash: f2e6990b3c9b1c9e11d50c4bbec38ad6ab942165dc92aa075dfb9e9b7f06075b
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/f2e6990_20231128T084554287762_proba_yeast.yml
results:
  fit_time:
  - 42.78233075141907
  - 39.396782636642456
  - 40.95479488372803
  - 42.09792113304138
  - 42.178513050079346
  score_time:
  - 19.116989374160767
  - 12.598684787750244
  - 10.448130369186401
  - 16.253050088882446
  - 13.429998636245728
  test_average_precision_macro:
  - 0.41252673580786386
  - 0.4846843309388705
  - 0.45253363843573774
  - 0.4755042568764916
  - 0.4438475335618432
  test_average_precision_micro:
  - 0.42175066514041326
  - 0.5891163450469774
  - 0.664484381883488
  - 0.5854575823711178
  - 0.5541610650440238
  test_average_precision_samples:
  - 0.501526931931703
  - 0.6708071362701059
  - 0.7391290446261924
  - 0.6720908025859874
  - 0.6486052666849211
  test_average_precision_weighted:
  - 0.5795386825099357
  - 0.634220263496486
  - 0.6178709833871094
  - 0.631633495138441
  - 0.612111053403676
  test_coverage_error:
  - -9.99367088607595
  - -8.617768595041323
  - -7.741666666666666
  - -8.386178861788618
  - -8.616016427104723
  test_f1_macro:
  - 0.05883887819932482
  - 0.04540721965665976
  - 0.01834205575064404
  - 0.043179588686692624
  - 0.03643041630148823
  test_f1_micro:
  - 0.08286252354048965
  - 0.05392620624408704
  - 0.02772466539196941
  - 0.05733082706766918
  - 0.051625239005736144
  test_f1_samples:
  - 0.06682405733038645
  - 0.04266692903056539
  - 0.023100198412698413
  - 0.04674151503419796
  - 0.04117872772903573
  test_f1_weighted:
  - 0.08090069736336976
  - 0.053289338178354066
  - 0.027517505983633863
  - 0.056189050733679746
  - 0.05101947201471827
  test_hamming_loss:
  - -0.2935503315250151
  - -0.29515938606847697
  - -0.3026785714285714
  - -0.29123112659698025
  - -0.29099442651804047
  test_jaccard_macro:
  - 0.03154551171507873
  - 0.02367043355350607
  - 0.009382935262597984
  - 0.022842740136031308
  - 0.01893482292585599
  test_jaccard_micro:
  - 0.043222003929273084
  - 0.02771025765678172
  - 0.014057198254968492
  - 0.029511369134010642
  - 0.02649656526005888
  test_jaccard_samples:
  - 0.0479992054359143
  - 0.02843368752459662
  - 0.014776785714285713
  - 0.03256387921022068
  - 0.027043610051823604
  test_jaccard_weighted:
  - 0.04318976969341432
  - 0.02772752641509235
  - 0.014056630249080534
  - 0.02954240179771438
  - 0.026484234524508155
  test_label_ranking_average_precision_score:
  - 0.501526931931703
  - 0.6708071362701061
  - 0.7391290446261926
  - 0.672090802585988
  - 0.6486052666849199
  test_label_ranking_loss:
  - 0.39721396913982815
  - 0.25261567273078483
  - 0.19096019184188828
  - 0.2349841465477354
  - 0.2630352763822989
  test_matthews_corrcoef_macro:
  - 0.09304594037401802
  - 0.08641648417957994
  - 0.045231002675933336
  - 0.07228409785079895
  - 0.06720808536234098
  test_matthews_corrcoef_micro:
  - 0.16899353851534035
  - 0.12695590175982874
  - 0.09580742871015137
  - 0.134205010254358
  - 0.12602846014635843
  test_matthews_corrcoef_samples:
  - 0.06783600998665501
  - 0.04284302096045376
  - 0.024712405947763128
  - 0.046871957113625275
  - 0.042275542295096113
  test_matthews_corrcoef_weighted:
  - 0.11930181602362225
  - 0.087144562844695
  - 0.06387693993268313
  - 0.08890696828451448
  - 0.08948258942730164
  test_ndgc:
  - 0.6698091836951788
  - 0.7993384068733668
  - 0.8436048489560826
  - 0.8041506758960536
  - 0.7866271606945074
  test_precision_macro:
  - 0.5588235294117647
  - 0.6494047619047619
  - 0.48214285714285715
  - 0.5198412698412699
  - 0.5325963718820862
  test_precision_micro:
  - 0.967032967032967
  - 0.9047619047619048
  - 0.9666666666666667
  - 0.9242424242424242
  - 0.9152542372881356
  test_precision_samples:
  - 0.13291139240506328
  - 0.0981404958677686
  - 0.05625
  - 0.09959349593495935
  - 0.09856262833675565
  test_precision_weighted:
  - 0.8045774138479789
  - 0.8087599544937428
  - 0.7487875848690592
  - 0.7498922297661386
  - 0.7906018941434583
  test_recall_macro:
  - 0.03160901516068506
  - 0.02371089242424141
  - 0.009388484980672306
  - 0.022866687390096792
  - 0.019007582749775875
  test_recall_micro:
  - 0.04328578455484506
  - 0.02779132130667967
  - 0.014064015518913677
  - 0.029582929194956354
  - 0.026561731431382195
  test_recall_samples:
  - 0.0479992054359143
  - 0.028778040141676505
  - 0.014776785714285713
  - 0.03256387921022068
  - 0.027043610051823604
  test_recall_weighted:
  - 0.04328578455484506
  - 0.02779132130667967
  - 0.014064015518913677
  - 0.029582929194956354
  - 0.026561731431382195
  test_roc_auc_macro:
  - 0.6059371418843351
  - 0.6715806371036284
  - 0.6610391427007526
  - 0.6806970970019991
  - 0.6299829242829198
  test_roc_auc_micro:
  - 0.6173119628668785
  - 0.756253834108539
  - 0.8156854138286748
  - 0.7572488657663007
  - 0.733713271254191
  test_roc_auc_samples:
  - 0.6027860308601719
  - 0.7473843272692151
  - 0.8090398081581118
  - 0.7650158534522645
  - 0.736964723617701
  test_roc_auc_weighted:
  - 0.6012329206790687
  - 0.6583219106664495
  - 0.6590876514280702
  - 0.6680060687463986
  - 0.6412360887466221
start: 2023-11-28 08:45:54.287762
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop70
  params:
    drop: 0.7
    random_state: 0
