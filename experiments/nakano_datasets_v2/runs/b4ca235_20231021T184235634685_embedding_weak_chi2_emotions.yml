active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZEcBAMzMzMzPjP0AzMzMzM+M/oJmZmZmZ+T+gmZmZmZn5Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMzC8A4MzMzMzMhQIAzMzMzM+M/wJmZmZmZ+T+QmZmZmZkdwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 18:45:01.378594
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_pvalue
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: embedding_weak_chi2
  params:
    memory: estimators_cache
hash: b4ca235b31eb2107792c8d6096ebc449c8fb455735703c98eb7f6c245297185f
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/b4ca235_20231021T184235634685_embedding_weak_chi2_emotions.yml
results:
  fit_time:
  - 79.36117243766785
  - 81.18591403961182
  - 74.42057013511658
  - 68.3477988243103
  - 75.33591604232788
  score_time:
  - 60.82561445236206
  - 61.98187780380249
  - 44.001259565353394
  - 16.13164472579956
  - 38.66986012458801
  test_average_precision_macro:
  - 0.72603254025679
  - 0.7299870145877313
  - 0.7822679861472044
  - 0.7159340468578455
  - 0.7108918525434245
  test_average_precision_micro:
  - 0.7197597505415347
  - 0.7171735746715036
  - 0.7793728473418963
  - 0.7388382787810434
  - 0.6923465990386691
  test_average_precision_samples:
  - 0.8015027322404371
  - 0.8106565656565656
  - 0.8192796610169492
  - 0.7833333333333332
  - 0.8070105820105821
  test_average_precision_weighted:
  - 0.7248740900082088
  - 0.7407845745010544
  - 0.7853104990594504
  - 0.724879238013295
  - 0.7042203607397851
  test_coverage_error:
  - -2.7459016393442623
  - -2.9272727272727272
  - -2.6440677966101696
  - -2.888888888888889
  - -2.5714285714285716
  test_f1_macro:
  - 0.6156947346613252
  - 0.6261520087193905
  - 0.6104677272553859
  - 0.5585503001178981
  - 0.5872819717032792
  test_f1_micro:
  - 0.6585365853658536
  - 0.6787564766839378
  - 0.6700507614213198
  - 0.6108108108108108
  - 0.6331658291457286
  test_f1_samples:
  - 0.594808743169399
  - 0.631818181818182
  - 0.5898305084745763
  - 0.5148148148148147
  - 0.5740740740740742
  test_f1_weighted:
  - 0.627089557997866
  - 0.6415897705955274
  - 0.6273761453221259
  - 0.5780205944205804
  - 0.5999423458638237
  test_hamming_loss:
  - -0.1912568306010929
  - -0.18787878787878787
  - -0.18361581920903955
  - -0.20512820512820512
  - -0.1931216931216931
  test_jaccard_macro:
  - 0.46255473284885046
  - 0.4886888574388575
  - 0.4743263064952292
  - 0.4096668212739641
  - 0.4388596972489729
  test_jaccard_micro:
  - 0.4909090909090909
  - 0.5137254901960784
  - 0.5038167938931297
  - 0.4396887159533074
  - 0.4632352941176471
  test_jaccard_samples:
  - 0.5157103825136612
  - 0.5507575757575758
  - 0.5211864406779662
  - 0.4401709401709402
  - 0.5132275132275131
  test_jaccard_weighted:
  - 0.47435825554768285
  - 0.504254060247211
  - 0.4907358942970376
  - 0.4288229465339855
  - 0.4504941421367094
  test_label_ranking_average_precision_score:
  - 0.8015027322404371
  - 0.8106565656565659
  - 0.8192796610169489
  - 0.7833333333333334
  - 0.807010582010582
  test_label_ranking_loss:
  - 0.15774134790528233
  - 0.16053030303030302
  - 0.14133709981167608
  - 0.1741215574548908
  - 0.15443121693121695
  test_matthews_corrcoef_macro:
  - 0.5343393713327921
  - 0.5464111256652499
  - 0.5295656256805027
  - 0.4655540621100613
  - 0.5032934580006986
  test_matthews_corrcoef_micro:
  - 0.5337342744979311
  - 0.5594539450444164
  - 0.5532984276516744
  - 0.4943958025555741
  - 0.5099947782027124
  test_matthews_corrcoef_samples:
  - 0.512559487058385
  - 0.557554382272554
  - 0.5255394848510803
  - 0.45741248913134575
  - 0.48842329655532885
  test_matthews_corrcoef_weighted:
  - 0.5351151318858233
  - 0.5527919051458192
  - 0.5355770222855952
  - 0.4730723067283501
  - 0.49993312853207444
  test_ndgc:
  - 0.8642150136173655
  - 0.8752262984117858
  - 0.8765831014941541
  - 0.8531245804594385
  - 0.8633027284453008
  test_precision_macro:
  - 0.8051058130922923
  - 0.8250200534759359
  - 0.8028814526462424
  - 0.7506640113409034
  - 0.7767400388269422
  test_precision_micro:
  - 0.7377049180327869
  - 0.7844311377245509
  - 0.7630057803468208
  - 0.7533333333333333
  - 0.711864406779661
  test_precision_samples:
  - 0.6680327868852459
  - 0.7181818181818181
  - 0.6398305084745762
  - 0.6011396011396012
  - 0.6322751322751323
  test_precision_weighted:
  - 0.7943216731056412
  - 0.823228314571989
  - 0.7953425588640367
  - 0.746842978596465
  - 0.7571661337106598
  test_recall_macro:
  - 0.5698645557596391
  - 0.5796999529633767
  - 0.5710306523379717
  - 0.48456463127515753
  - 0.538921287459644
  test_recall_micro:
  - 0.5947136563876652
  - 0.5981735159817352
  - 0.5972850678733032
  - 0.5136363636363637
  - 0.5701357466063348
  test_recall_samples:
  - 0.5874316939890709
  - 0.6181818181818182
  - 0.597457627118644
  - 0.5085470085470085
  - 0.5687830687830687
  test_recall_weighted:
  - 0.5947136563876652
  - 0.5981735159817352
  - 0.5972850678733032
  - 0.5136363636363637
  - 0.5701357466063348
  test_roc_auc_macro:
  - 0.8427376198014259
  - 0.8464841017665589
  - 0.8751819787012773
  - 0.8388882091764396
  - 0.8435929765706551
  test_roc_auc_micro:
  - 0.8615169887032756
  - 0.8601559345199268
  - 0.8850567236845772
  - 0.8551961523953224
  - 0.8654374762126275
  test_roc_auc_samples:
  - 0.8422586520947176
  - 0.839469696969697
  - 0.8586629001883239
  - 0.8258784425451092
  - 0.845568783068783
  test_roc_auc_weighted:
  - 0.8403718630295426
  - 0.8509532582674795
  - 0.8754474841545643
  - 0.8422593250878344
  - 0.8386999308115932
start: 2023-10-21 18:42:35.634685
wrapper: null
