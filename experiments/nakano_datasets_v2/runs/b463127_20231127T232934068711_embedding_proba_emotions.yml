active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv2BmZmZmZva/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMzC8DgzMzMzMwMQODMzMzMzAxAcGZmZmZmFkDIzMzMzMwiwA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 23:32:02.006875
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.7
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding_proba
  params:
    memory: estimators_cache
hash: b463127837ca5062462662a686848ea5c9a5b9a3b41283dfe1f728b5e316f34a
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/b463127_20231127T232934068711_embedding_proba_emotions.yml
results:
  fit_time:
  - 70.49966812133789
  - 63.60515999794006
  - 67.72104930877686
  - 71.34125232696533
  - 65.10753726959229
  score_time:
  - 72.8797721862793
  - 79.12599682807922
  - 70.88935685157776
  - 72.12333583831787
  - 81.21131992340088
  test_average_precision_macro:
  - 0.6255200314260444
  - 0.5274280798657695
  - 0.5434644217939986
  - 0.5759250315126899
  - 0.49687380077619664
  test_average_precision_micro:
  - 0.5996607351455147
  - 0.5295318867472626
  - 0.5319306983730996
  - 0.5717862275834869
  - 0.4932223573649239
  test_average_precision_samples:
  - 0.7035063752276868
  - 0.6995169082125603
  - 0.6524879227053141
  - 0.7389872173058014
  - 0.6387369791666666
  test_average_precision_weighted:
  - 0.6137895943095397
  - 0.5356377987653081
  - 0.5465049553658632
  - 0.5724869851581602
  - 0.5083369161851795
  test_coverage_error:
  - -3.2131147540983607
  - -3.4956521739130433
  - -3.617391304347826
  - -3.353982300884956
  - -3.5078125
  test_f1_macro:
  - 0.20831869638479183
  - 0.14287267563129633
  - 0.101333194096352
  - 0.14742275268591057
  - 0.11916912759936016
  test_f1_micro:
  - 0.21176470588235297
  - 0.14166666666666666
  - 0.10084033613445377
  - 0.14107883817427386
  - 0.125
  test_f1_samples:
  - 0.13087431693989068
  - 0.1
  - 0.07217391304347827
  - 0.09292035398230089
  - 0.08203125
  test_f1_weighted:
  - 0.20522744830528744
  - 0.13874481064136238
  - 0.10051829873637756
  - 0.1391014154172049
  - 0.12291857709094374
  test_hamming_loss:
  - -0.27459016393442626
  - -0.2985507246376812
  - -0.3101449275362319
  - -0.3053097345132743
  - -0.2734375
  test_jaccard_macro:
  - 0.12199312501036637
  - 0.07860423985294987
  - 0.0537925037925038
  - 0.08085386023982515
  - 0.06434307610778199
  test_jaccard_micro:
  - 0.11842105263157894
  - 0.07623318385650224
  - 0.05309734513274336
  - 0.07589285714285714
  - 0.06666666666666667
  test_jaccard_samples:
  - 0.1051912568306011
  - 0.08115942028985508
  - 0.06231884057971014
  - 0.07964601769911504
  - 0.06640625
  test_jaccard_weighted:
  - 0.11925659425659427
  - 0.0759392167286904
  - 0.053319425965165874
  - 0.07603436770103437
  - 0.06640927694960168
  test_label_ranking_average_precision_score:
  - 0.7035063752276866
  - 0.6995169082125604
  - 0.6524879227053143
  - 0.7389872173058012
  - 0.6387369791666669
  test_label_ranking_loss:
  - 0.25778688524590165
  - 0.28654589371980677
  - 0.3233816425120773
  - 0.25127826941986237
  - 0.3294704861111111
  test_matthews_corrcoef_macro:
  - 0.22668263479658532
  - 0.1977943254707053
  - 0.14978821498875605
  - 0.20918072237013152
  - 0.15989763319261255
  test_matthews_corrcoef_micro:
  - 0.24338478175618738
  - 0.1969206706072986
  - 0.1519773156095088
  - 0.20526746661909726
  - 0.17650739178834765
  test_matthews_corrcoef_samples:
  - 0.11160994571371811
  - 0.08662423477552145
  - 0.06286857737191835
  - 0.086162601581433
  - 0.07020724202580468
  test_matthews_corrcoef_weighted:
  - 0.21787142024419076
  - 0.18949503009062202
  - 0.14342017301510107
  - 0.19463733846149225
  - 0.16519313603422023
  test_ndgc:
  - 0.792378754455772
  - 0.7937482472139921
  - 0.7543553506666678
  - 0.8235738725459516
  - 0.7427759450477468
  test_precision_macro:
  - 0.7611111111111111
  - 0.8833333333333333
  - 0.7916666666666666
  - 0.9027777777777777
  - 0.6777777777777777
  test_precision_micro:
  - 0.8181818181818182
  - 0.85
  - 0.8
  - 0.8947368421052632
  - 0.7894736842105263
  test_precision_samples:
  - 0.1885245901639344
  - 0.14782608695652175
  - 0.09565217391304348
  - 0.12389380530973451
  - 0.1171875
  test_precision_weighted:
  - 0.7546546546546548
  - 0.8737878787878788
  - 0.7791479820627802
  - 0.8810060060060059
  - 0.7031674208144797
  test_recall_macro:
  - 0.12397043449614599
  - 0.08003211078338332
  - 0.05421972345858086
  - 0.08136715430657834
  - 0.06586220796747112
  test_recall_micro:
  - 0.12162162162162163
  - 0.07727272727272727
  - 0.053811659192825115
  - 0.07657657657657657
  - 0.06787330316742081
  test_recall_samples:
  - 0.1051912568306011
  - 0.08115942028985508
  - 0.06231884057971014
  - 0.07964601769911504
  - 0.06640625
  test_recall_weighted:
  - 0.12162162162162163
  - 0.07727272727272727
  - 0.053811659192825115
  - 0.07657657657657657
  - 0.06787330316742081
  test_roc_auc_macro:
  - 0.7372285068935759
  - 0.651009701152974
  - 0.6359493943202145
  - 0.685639603656707
  - 0.6552401913758935
  test_roc_auc_micro:
  - 0.7512188659247483
  - 0.6673791102514507
  - 0.6505602980574414
  - 0.7045894578789316
  - 0.6660269507887532
  test_roc_auc_samples:
  - 0.7422131147540982
  - 0.7134541062801932
  - 0.6766183574879227
  - 0.7487217305801377
  - 0.6705295138888889
  test_roc_auc_weighted:
  - 0.7229409868710687
  - 0.6508387867982339
  - 0.6346749858008683
  - 0.6771714369605936
  - 0.6601620109103239
start: 2023-11-27 23:29:34.068711
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop70
  params:
    drop: 0.7
    random_state: 0
