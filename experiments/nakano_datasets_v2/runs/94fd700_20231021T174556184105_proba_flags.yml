active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6b+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZmBkCgmZmZmZnpP5iZmZmZmQHAMDMzMzMz87+AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMzE8CYmZmZmZkBQDAzMzMzM/M/NDMzMzMzE8DMzMzMzMwYQA==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            YGZmZmZmBsBAMzMzMzPzP0AzMzMzM/M/QDMzMzMz8z+AmZmZmZnpvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ+b+amZmZmZkRQGhmZmZmZvY/ZmZmZmZmEsCgmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+YmZmZmZnpv8zMzMzMzPy/NDMzMzMz8z+amZmZmZkBQA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          4MzMzMzM/D8AmZmZmZnJv+DMzMzMzPw/kJmZmZmZCcAAmZmZmZnJvw==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 17:46:54.397903
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - rf
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.RandomForestRegressor
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        - - xt
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesRegressor
                params:
                  bootstrap: false
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: proba
  params:
    memory: estimators_cache
hash: 94fd700e00226730c1015fb0b90ff32e417a20de30bf44644f98f3df680c8132
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/94fd700_20231021T174556184105_proba_flags.yml
results:
  fit_time:
  - 35.05533027648926
  - 35.021156787872314
  - 36.302440881729126
  - 34.861323595047
  - 35.067647218704224
  score_time:
  - 22.614593982696533
  - 21.96973705291748
  - 20.976994514465332
  - 22.61070942878723
  - 22.049485445022583
  test_average_precision_macro:
  - 0.7322135810918006
  - 0.7435214484899706
  - 0.7241636206862857
  - 0.6546610036111682
  - 0.6522991788611019
  test_average_precision_micro:
  - 0.7854814094695604
  - 0.7670762387571826
  - 0.7968379913760462
  - 0.7181582772119994
  - 0.7066212975841216
  test_average_precision_samples:
  - 0.8519026169026169
  - 0.7846072446072446
  - 0.8212891462891463
  - 0.7876606198034769
  - 0.7930301180301179
  test_average_precision_weighted:
  - 0.7944758962866288
  - 0.7916057998556162
  - 0.7716765187400662
  - 0.7261332881163671
  - 0.7180336651397894
  test_coverage_error:
  - -4.972972972972973
  - -4.564102564102564
  - -4.864864864864865
  - -4.785714285714286
  - -4.435897435897436
  test_f1_macro:
  - 0.6352805904825489
  - 0.6925080558539205
  - 0.6748541253355117
  - 0.6353959836861381
  - 0.6447865193781709
  test_f1_micro:
  - 0.7608695652173912
  - 0.749003984063745
  - 0.7596899224806201
  - 0.7266187050359713
  - 0.6987951807228915
  test_f1_samples:
  - 0.7474571974571975
  - 0.7011488511488512
  - 0.7313713313713314
  - 0.7040678897821755
  - 0.6794871794871795
  test_f1_weighted:
  - 0.7444658614458637
  - 0.7435051843317972
  - 0.7478174573126508
  - 0.7069155423075865
  - 0.6983038731545845
  test_hamming_loss:
  - -0.2548262548262548
  - -0.23076923076923078
  - -0.23938223938223938
  - -0.2585034013605442
  - -0.27472527472527475
  test_jaccard_macro:
  - 0.5193098664527237
  - 0.5397503499007258
  - 0.5410614730891229
  - 0.4938602970043133
  - 0.4892164142164142
  test_jaccard_micro:
  - 0.6140350877192983
  - 0.5987261146496815
  - 0.6125
  - 0.5706214689265536
  - 0.5370370370370371
  test_jaccard_samples:
  - 0.6246460746460747
  - 0.608058608058608
  - 0.6289575289575291
  - 0.6056689342403628
  - 0.5763125763125763
  test_jaccard_weighted:
  - 0.6232950768202568
  - 0.5986975319530498
  - 0.6199895278324237
  - 0.5676938599656652
  - 0.5478655680268583
  test_label_ranking_average_precision_score:
  - 0.8519026169026168
  - 0.7846072446072446
  - 0.8212891462891462
  - 0.7876606198034769
  - 0.793030118030118
  test_label_ranking_loss:
  - 0.19369369369369369
  - 0.2162393162393162
  - 0.209009009009009
  - 0.2420634920634921
  - 0.22521367521367525
  test_matthews_corrcoef_macro:
  - 0.21449401581120325
  - 0.34883548723301266
  - 0.3609855616099947
  - 0.34813126943481637
  - 0.27026368166619286
  test_matthews_corrcoef_micro:
  - 0.4882316718739704
  - 0.5356321658276698
  - 0.5215913194691714
  - 0.4815263117762168
  - 0.4462895790803956
  test_matthews_corrcoef_samples:
  - 0.4495696063134672
  - 0.4841821983136536
  - 0.46050445667252443
  - 0.4622423608603121
  - 0.4228446753686727
  test_matthews_corrcoef_weighted:
  - 0.19978433912502624
  - 0.2557104270034219
  - 0.3464643266432026
  - 0.3501334842619219
  - 0.14809072019743605
  test_ndgc:
  - 0.9173388437700191
  - 0.863071651784006
  - 0.8907797875694604
  - 0.8651598660355729
  - 0.8670217639148091
  test_precision_macro:
  - 0.6506711286665203
  - 0.7159498568167298
  - 0.7161614246974707
  - 0.6896825396825398
  - 0.7131707972928673
  test_precision_micro:
  - 0.7664233576642335
  - 0.7401574803149606
  - 0.7716535433070866
  - 0.7318840579710145
  - 0.696
  test_precision_samples:
  - 0.7536036036036037
  - 0.7021367521367521
  - 0.7445945945945946
  - 0.7154761904761905
  - 0.6799145299145299
  test_precision_weighted:
  - 0.7473273915429869
  - 0.7412191171678838
  - 0.7612814608536964
  - 0.7248412698412698
  - 0.7129792164846593
  test_recall_macro:
  - 0.6369440625220341
  - 0.6841207762108805
  - 0.6614997514157176
  - 0.6265083499505459
  - 0.6339477726574501
  test_recall_micro:
  - 0.7553956834532374
  - 0.7580645161290323
  - 0.7480916030534351
  - 0.7214285714285714
  - 0.7016129032258065
  test_recall_samples:
  - 0.7589446589446591
  - 0.7106837606837606
  - 0.7254182754182754
  - 0.7130952380952381
  - 0.6901709401709402
  test_recall_weighted:
  - 0.7553956834532374
  - 0.7580645161290323
  - 0.7480916030534351
  - 0.7214285714285714
  - 0.7016129032258065
  test_roc_auc_macro:
  - 0.7054411258487302
  - 0.7287324327913177
  - 0.7168370059347503
  - 0.7047154151879941
  - 0.6697321359705212
  test_roc_auc_micro:
  - 0.8014388489208634
  - 0.8179800822688894
  - 0.8122614503816794
  - 0.7762291280148423
  - 0.7776033773544058
  test_roc_auc_samples:
  - .nan
  - 0.7837606837606838
  - .nan
  - 0.757936507936508
  - 0.7747863247863248
  test_roc_auc_weighted:
  - 0.6766397020632341
  - 0.6864240860822208
  - 0.6974210334997801
  - 0.6952172322943001
  - 0.5992047520079398
start: 2023-10-21 17:45:56.184105
wrapper: null
