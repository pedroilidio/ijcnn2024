active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz878AmpmZmZnpPwCamZmZmek/AJiZmZmZyb8AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 21:40:29.965226
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.9
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler:
            call: deep_forest.weak_labels.PositiveUnlabeledImputer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesClassifier
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  class_weight: null
                  criterion: gini
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: 0.9
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: true
                  random_state: 0
                  verbose: true
                  warm_start: false
              sampling_strategy: auto
              threshold: 0.8
              use_oob_proba: true
              verbose: true
              weight_proba: true
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: proba_weak
  params:
    memory: estimators_cache
hash: c8638c6990026c6e17e253f2eaa5e625130baeebb84171ed880265c35742923e
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/c8638c6_20231127T213929142216_proba_weak_Gram_positive.yml
results:
  fit_time:
  - 41.52206468582153
  - 44.315407514572144
  - 40.974130630493164
  - 43.183348417282104
  - 42.239985704422
  score_time:
  - 9.625428915023804
  - 15.912204504013062
  - 7.3182268142700195
  - 13.550478219985962
  - 11.383028507232666
  test_average_precision_macro:
  - 0.8375193890197284
  - 0.6455154658781742
  - 0.7683727015043771
  - 0.9599670686549587
  - 0.8294543127415779
  test_average_precision_micro:
  - 0.8187869790323855
  - 0.6165932004753296
  - 0.9159744403068094
  - 0.8544273055479812
  - 0.7925043226885818
  test_average_precision_samples:
  - 0.9285714285714286
  - 0.8648867313915859
  - 0.953074433656958
  - 0.9326923076923077
  - 0.8541666666666666
  test_average_precision_weighted:
  - 0.8748045403627992
  - 0.8450025204534599
  - 0.9226174844436984
  - 0.9902755573412224
  - 0.8851021427663252
  test_coverage_error:
  - -1.2
  - -1.3300970873786409
  - -1.145631067961165
  - -1.1442307692307692
  - -1.3942307692307692
  test_f1_macro:
  - 0.0
  - 0.07115009746588694
  - 0.0
  - 0.019230769230769232
  - 0.08
  test_f1_micro:
  - 0.0
  - 0.08771929824561403
  - 0.0
  - 0.01886792452830189
  - 0.14159292035398233
  test_f1_samples:
  - 0.0
  - 0.04530744336569579
  - 0.0
  - 0.009615384615384616
  - 0.07692307692307693
  test_f1_weighted:
  - 0.0
  - 0.08675410208368817
  - 0.0
  - 0.018315018315018316
  - 0.128
  test_hamming_loss:
  - -0.2523809523809524
  - -0.2524271844660194
  - -0.2524271844660194
  - -0.25
  - -0.23317307692307693
  test_jaccard_macro:
  - 0.0
  - 0.03902714932126697
  - 0.0
  - 0.01
  - 0.047619047619047616
  test_jaccard_micro:
  - 0.0
  - 0.045871559633027525
  - 0.0
  - 0.009523809523809525
  - 0.0761904761904762
  test_jaccard_samples:
  - 0.0
  - 0.043689320388349516
  - 0.0
  - 0.009615384615384616
  - 0.07692307692307693
  test_jaccard_weighted:
  - 0.0
  - 0.04779686333084392
  - 0.0
  - 0.009523809523809525
  - 0.0761904761904762
  test_label_ranking_average_precision_score:
  - 0.9285714285714286
  - 0.8648867313915859
  - 0.953074433656958
  - 0.9326923076923077
  - 0.8541666666666665
  test_label_ranking_loss:
  - 0.0626984126984127
  - 0.11003236245954694
  - 0.04530744336569579
  - 0.044871794871794865
  - 0.12740384615384615
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0731596145383818
  - 0.0
  - 0.04378899094698735
  - 0.08768404680152521
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.07823720971445669
  - 0.0
  - 0.08448147671652198
  - 0.2409907964195249
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.029993363082301366
  - 0.0
  - 0.009615384615384616
  - 0.07692307692307693
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.10308690401929893
  - 0.0
  - 0.04170380090189271
  - 0.14029447488244032
  test_ndgc:
  - 0.947232777975601
  - 0.8995774987260988
  - 0.9649036129168216
  - 0.950317466826927
  - 0.8917790404698734
  test_precision_macro:
  - 0.0
  - 0.3333333333333333
  - 0.0
  - 0.25
  - 0.25
  test_precision_micro:
  - 0.0
  - 0.45454545454545453
  - 0.0
  - 1.0
  - 1.0
  test_precision_samples:
  - 0.0
  - 0.043689320388349516
  - 0.0
  - 0.009615384615384616
  - 0.07692307692307693
  test_precision_weighted:
  - 0.0
  - 0.4077669902912621
  - 0.0
  - 0.23809523809523808
  - 0.4
  test_recall_macro:
  - 0.0
  - 0.03982843137254902
  - 0.0
  - 0.01
  - 0.047619047619047616
  test_recall_micro:
  - 0.0
  - 0.04854368932038835
  - 0.0
  - 0.009523809523809525
  - 0.0761904761904762
  test_recall_samples:
  - 0.0
  - 0.04854368932038835
  - 0.0
  - 0.009615384615384616
  - 0.07692307692307693
  test_recall_weighted:
  - 0.0
  - 0.04854368932038835
  - 0.0
  - 0.009523809523809525
  - 0.0761904761904762
  test_roc_auc_macro:
  - 0.9528401341834863
  - 0.9120616850951971
  - 0.969343994645171
  - 0.9966008095084685
  - 0.9686065777111253
  test_roc_auc_micro:
  - 0.9468212955173657
  - 0.8899362176768152
  - 0.9633803696303695
  - 0.9632521819016996
  - 0.9280967692543256
  test_roc_auc_samples:
  - 0.9373015873015873
  - 0.8899676375404532
  - 0.9546925566343043
  - 0.9551282051282052
  - 0.8725961538461539
  test_roc_auc_weighted:
  - 0.9364375487413971
  - 0.9563393949183314
  - 0.9823886459000131
  - 0.9977904048062078
  - 0.9629419786323771
start: 2023-11-27 21:39:29.142216
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop90
  params:
    drop: 0.9
    random_state: 0
