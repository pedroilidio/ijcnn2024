active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            oJmZmZmZEUAwMzMzMzMtwKCZmZmZmRFAoJmZmZmZEUCAZmZmZmb2Pw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwCYmZmZmdm/ADQzMzMz4z8AmJmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwCYmZmZmdm/AJiZmZmZ2b8ANDMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMzA0BgZmZmZmYawIBmZmZmZvY/0MzMzMzMIEBgZmZmZmYWwA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            YGZmZmZm9r9oZmZmZmYWQEAzMzMzM+M/mJmZmZmZFcBAMzMzMzPjPw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZHcCgmZmZmZn5P6CZmZmZmfk/oJmZmZmZ+T/QzMzMzMwEQA==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ZGZmZmZmJMAAmZmZmZnJv+DMzMzMzPw/nJmZmZmZKUDIzMzMzMwQwA==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ6b8AoJmZmZnJPwCgmZmZmck/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZyb8AzczMzMz8PwAzMzMzM/O/gJmZmZmZAcAAzczMzMz8Pw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP5iZmZmZmQHAoJmZmZmZ6T+gmZmZmZnpPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gMzMzMzMDMDgzMzMzMwkQJCZmZmZmTvAcGZmZmZmN0CAzMzMzMwEwA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 21:29:47.977664
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: embedding
  params:
    memory: estimators_cache
hash: 5b11be7b5a754b1b0f80206c6fb8505713afde51def8fd948ffde9b8f80e95dd
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/5b11be7_20231021T211354664759_embedding_yeast.yml
results:
  fit_time:
  - 702.2603120803833
  - 665.4881649017334
  - 701.1317057609558
  - 689.4108581542969
  - 721.1293501853943
  score_time:
  - 206.33597373962402
  - 8.810072898864746
  - 9.72962236404419
  - 10.4483482837677
  - 9.012062311172485
  test_average_precision_macro:
  - 0.5015921455178798
  - 0.5563784915471424
  - 0.5284061204519953
  - 0.5514179318153222
  - 0.49990583145450257
  test_average_precision_micro:
  - 0.6807812585745947
  - 0.7287339803766499
  - 0.7028060892632771
  - 0.7538264845357662
  - 0.7033836883070583
  test_average_precision_samples:
  - 0.7422899865739285
  - 0.768568669455612
  - 0.7288059860487025
  - 0.7827845883915371
  - 0.7453533031380619
  test_average_precision_weighted:
  - 0.6496481146378398
  - 0.7197852216931685
  - 0.6924875936518039
  - 0.7201557329045726
  - 0.6673555053238214
  test_coverage_error:
  - -7.312114989733059
  - -7.171247357293869
  - -6.984344422700587
  - -7.123913043478261
  - -7.205761316872428
  test_f1_macro:
  - 0.24992059686539378
  - 0.2967979202672562
  - 0.31743870173674166
  - 0.2938506933153235
  - 0.2913908064894722
  test_f1_micro:
  - 0.5689238210399032
  - 0.6089781453041937
  - 0.6115515288788222
  - 0.6131386861313869
  - 0.5890611289850833
  test_f1_samples:
  - 0.5366620146907621
  - 0.5769095128503161
  - 0.5676767568157
  - 0.5923133267698484
  - 0.5603233757554746
  test_f1_weighted:
  - 0.4503903802496134
  - 0.511501977245418
  - 0.5247702108152947
  - 0.5149812655730618
  - 0.49422851712113297
  test_hamming_loss:
  - -0.2091522440598416
  - -0.1999395952884325
  - -0.1917808219178082
  - -0.19751552795031055
  - -0.20649617871840095
  test_jaccard_macro:
  - 0.1875614148437788
  - 0.22190520413999865
  - 0.23223681625575737
  - 0.22173045674648859
  - 0.2118214912729346
  test_jaccard_micro:
  - 0.3975496408956485
  - 0.437791932059448
  - 0.44045676998368677
  - 0.4421052631578947
  - 0.41749585406301826
  test_jaccard_samples:
  - 0.4243627978227567
  - 0.4656607604282023
  - 0.46618625449349516
  - 0.475746204278813
  - 0.45070873342478285
  test_jaccard_weighted:
  - 0.35756237879570946
  - 0.40434488618256803
  - 0.4049253305798338
  - 0.4123352057441024
  - 0.3837704379752741
  test_label_ranking_average_precision_score:
  - 0.742289986573929
  - 0.7685686694556125
  - 0.7288059860487025
  - 0.7827845883915366
  - 0.7453533031380628
  test_label_ranking_loss:
  - 0.1818902293234942
  - 0.16122220718641742
  - 0.17941061400314964
  - 0.15175668965265235
  - 0.1737671128433915
  test_matthews_corrcoef_macro:
  - 0.12149543495297144
  - 0.1619704207541536
  - 0.1841518446118096
  - 0.15430762940899773
  - 0.15891916045310128
  test_matthews_corrcoef_micro:
  - 0.46615927280591013
  - 0.5040004081455786
  - 0.49901629896819644
  - 0.5147139310791737
  - 0.47532805598748196
  test_matthews_corrcoef_samples:
  - 0.45983253956809444
  - 0.49771180424173384
  - 0.4858777788814093
  - 0.5221258343539852
  - 0.47677035255840705
  test_matthews_corrcoef_weighted:
  - 0.1386218039349621
  - 0.1844083693565722
  - 0.19810831684816116
  - 0.17305729304979958
  - 0.16493762113851063
  test_ndgc:
  - 0.8425156402607739
  - 0.8596707030962691
  - 0.826703116810658
  - 0.871056134040564
  - 0.8444836053940742
  test_precision_macro:
  - 0.4722849387800759
  - 0.5608684078246322
  - 0.6000448011809006
  - 0.559145282961435
  - 0.60038718389392
  test_precision_micro:
  - 0.7552166934189406
  - 0.7769404672192917
  - 0.7248322147651006
  - 0.7987321711568938
  - 0.7366495976591075
  test_precision_samples:
  - 0.7455509924709103
  - 0.7614517265680056
  - 0.710078277886497
  - 0.7987318840579709
  - 0.7359739368998629
  test_precision_weighted:
  - 0.6630326837699216
  - 0.737384968901628
  - 0.7312288482456567
  - 0.7378634705493566
  - 0.7367922287985473
  test_recall_macro:
  - 0.2310578165104881
  - 0.26563865284044
  - 0.2894758610777958
  - 0.25917248582917424
  - 0.2609638873042197
  test_recall_micro:
  - 0.45635305528612996
  - 0.5007285089849441
  - 0.5288932419196866
  - 0.49753208292201384
  - 0.49074074074074076
  test_recall_samples:
  - 0.45053127342655064
  - 0.49982298063693414
  - 0.5160969493650511
  - 0.5115148378191856
  - 0.4924080606179372
  test_recall_weighted:
  - 0.45635305528612996
  - 0.5007285089849441
  - 0.5288932419196866
  - 0.49753208292201384
  - 0.49074074074074076
  test_roc_auc_macro:
  - 0.7041787487627279
  - 0.73287536071522
  - 0.7397891080905878
  - 0.7481792731798038
  - 0.7101880764560239
  test_roc_auc_micro:
  - 0.8249922095444908
  - 0.8518246039447518
  - 0.842084132283088
  - 0.8580870522804807
  - 0.8360967127414495
  test_roc_auc_samples:
  - 0.8181097706765058
  - 0.8387777928135826
  - 0.8205893859968503
  - 0.8482433103473477
  - 0.8262328871566086
  test_roc_auc_weighted:
  - 0.6815559155681092
  - 0.7296994330415613
  - 0.7447056342982794
  - 0.7389354344131228
  - 0.7120799415096281
start: 2023-10-21 21:13:54.664759
wrapper: null
