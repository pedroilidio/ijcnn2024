active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb8AmpmZmZnpPwCamZmZmek/AJiZmZmZyb8AMzMzMzPzvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 18:45:40.899745
estimator:
  call: nakano_datasets_v2.estimators.final_estimator
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.9
          random_state: 0
    - - estimator
      - call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
        params:
          estimators:
          - - rf
            - call: sklearn.ensemble._forest.RandomForestClassifier
              params:
                bootstrap: true
                ccp_alpha: 0.0
                class_weight: null
                criterion: gini
                max_depth: null
                max_features: sqrt
                max_leaf_nodes: null
                max_samples: 0.9
                min_impurity_decrease: 0.0
                min_samples_leaf: 5
                min_samples_split: 2
                min_weight_fraction_leaf: 0.0
                n_estimators: 150
                n_jobs: 14
                oob_score: true
                random_state: 0
                verbose: true
                warm_start: false
          - - xt
            - call: sklearn.ensemble._forest.ExtraTreesClassifier
              params:
                bootstrap: true
                ccp_alpha: 0.0
                class_weight: null
                criterion: gini
                max_depth: null
                max_features: sqrt
                max_leaf_nodes: null
                max_samples: 0.9
                min_impurity_decrease: 0.0
                min_samples_leaf: 5
                min_samples_split: 2
                min_weight_fraction_leaf: 0.0
                n_estimators: 150
                n_jobs: 14
                oob_score: true
                random_state: 0
                verbose: true
                warm_start: false
    verbose: false
  name: final_estimator
  params: {}
hash: 336adec70fb93d68f2a8621287c2026d88856bfa2d582efc3f334a53bc6819a0
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/336adec_20231127T184535664568_final_estimator_Gram_positive.yml
results:
  fit_time:
  - 1.112488031387329
  - 1.0849676132202148
  - 1.0956180095672607
  - 1.1075794696807861
  - 1.3564376831054688
  score_time:
  - 3.184394121170044
  - 3.217916250228882
  - 3.191070079803467
  - 3.215468406677246
  - 3.6520886421203613
  test_average_precision_macro:
  - 0.7582286192947902
  - 0.7694915910223014
  - 0.9035199046950992
  - 0.891593570840062
  - 0.8482104185694905
  test_average_precision_micro:
  - 0.920743466717922
  - 0.9244500668934134
  - 0.9067365361733237
  - 0.8850191554168865
  - 0.9228796893501068
  test_average_precision_samples:
  - 0.9415064102564104
  - 0.9425566343042071
  - 0.9239482200647249
  - 0.9278846153846154
  - 0.9253968253968254
  test_average_precision_weighted:
  - 0.9300598623266887
  - 0.9165159035259496
  - 0.9221547780986056
  - 0.9226030148581512
  - 0.9135767226192277
  test_coverage_error:
  - -1.1826923076923077
  - -1.1650485436893203
  - -1.233009708737864
  - -1.2115384615384615
  - -1.2285714285714286
  test_f1_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_f1_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_f1_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_f1_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_hamming_loss:
  - -0.25240384615384615
  - -0.25
  - -0.2524271844660194
  - -0.25240384615384615
  - -0.2523809523809524
  test_jaccard_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_jaccard_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_jaccard_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_jaccard_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_label_ranking_average_precision_score:
  - 0.9415064102564101
  - 0.9425566343042072
  - 0.9239482200647249
  - 0.9278846153846154
  - 0.9253968253968254
  test_label_ranking_loss:
  - 0.05608974358974358
  - 0.055016181229773455
  - 0.07362459546925566
  - 0.0673076923076923
  - 0.073015873015873
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_ndgc:
  - 0.956962951470323
  - 0.95706415723931
  - 0.9435909228156643
  - 0.9461641732157374
  - 0.9441829953075599
  test_precision_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_precision_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_precision_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_precision_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_recall_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_recall_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_recall_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_recall_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_roc_auc_macro:
  - 0.9594710194898421
  - 0.9609459614797328
  - 0.9734568666513578
  - 0.971108260493889
  - 0.9688023179018582
  test_roc_auc_micro:
  - 0.9578012555504517
  - 0.9580544820435479
  - 0.9539522977022978
  - 0.9495329964783341
  - 0.9543624564355245
  test_roc_auc_samples:
  - 0.9439102564102565
  - 0.9449838187702266
  - 0.9263754045307444
  - 0.9326923076923077
  - 0.926984126984127
  test_roc_auc_weighted:
  - 0.9750380164459233
  - 0.964380239816296
  - 0.9720419608082786
  - 0.9664520470179656
  - 0.9667796243910104
start: 2023-11-27 18:45:35.664568
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop90
  params:
    drop: 0.9
    random_state: 0
