active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T+AmZmZmZn5vwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADQzMzMz4z8AmJmZmZnZvwCYmZmZmdm/AJiZmZmZ2b8ANDMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADQzMzMz4z8AmJmZmZnZvwCYmZmZmdm/AJiZmZmZ2b8ANDMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T+AZmZmZmb2P2BmZmZmZhLAgGZmZmZm9j+AZmZmZmb2Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzMKEAwMzMzMzMtwKCZmZmZmRFAwMzMzMzMDMCAZmZmZmb2Pw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b/QzMzMzMwEQICZmZmZmdm/YGZmZmZm9r+AmZmZmZnZvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjPzAzMzMzMwvAoJmZmZmZ+T9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb9wZmZmZmYGQMjMzMzMzBTAcGZmZmZmDkAgMzMzMzPzvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AoJmZmZnJPwCgmZmZmck/AKCZmZmZyT8AmJmZmZnpvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZyb8AmpmZmZnpPwCYmZmZmcm/AJiZmZmZyb8AmJmZmZnJvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZAcCgmZmZmZnpP5iZmZmZmQHANDMzMzMzE0AwMzMzMzPzvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wJmZmZmZGUAAZ2ZmZmb2P0BmZmZmZhbAgDMzMzMzA0BAZmZmZmYSwA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 22:32:08.824370
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_pvalue
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: embedding_weak_chi2
  params:
    memory: estimators_cache
hash: df0804deb29f550df822aa6fb2d29e850f356c30808a10ba902098d286ad6ae2
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/df0804d_20231021T221832556387_embedding_weak_chi2_yeast.yml
results:
  fit_time:
  - 682.6839554309845
  - 705.5148508548737
  - 679.5034012794495
  - 717.3455898761749
  - 698.9105696678162
  score_time:
  - 9.52757740020752
  - 9.85422396659851
  - 9.483359336853027
  - 10.369600296020508
  - 10.243976831436157
  test_average_precision_macro:
  - 0.539544416709315
  - 0.526468196721434
  - 0.5592172365938054
  - 0.5224439566683098
  - 0.5310985247865656
  test_average_precision_micro:
  - 0.721249788994008
  - 0.7212223298992276
  - 0.7256755757510707
  - 0.7179940361811257
  - 0.720049523850557
  test_average_precision_samples:
  - 0.7601975743698904
  - 0.7589995069252503
  - 0.7516179795686077
  - 0.7563851319826594
  - 0.7481231147374541
  test_average_precision_weighted:
  - 0.701517891038113
  - 0.700172480418259
  - 0.7162845000350858
  - 0.6848773716843514
  - 0.6954486152592372
  test_coverage_error:
  - -7.09853249475891
  - -7.1120331950207465
  - -7.122699386503068
  - -7.17047817047817
  - -7.151639344262295
  test_f1_macro:
  - 0.3123387662470364
  - 0.29705008565790314
  - 0.3123454005112857
  - 0.28123578322552084
  - 0.30942318075390485
  test_f1_micro:
  - 0.6171091445427728
  - 0.6049237983587339
  - 0.6097845078625509
  - 0.5945784927018172
  - 0.6104160605178935
  test_f1_samples:
  - 0.5887124289640013
  - 0.5724778448844838
  - 0.5745515220975344
  - 0.5653819153819153
  - 0.57383019985479
  test_f1_weighted:
  - 0.5252781215747208
  - 0.5078123076972735
  - 0.5186185140719043
  - 0.49418829478937243
  - 0.5197449148396049
  test_hamming_loss:
  - -0.1943695717280623
  - -0.1997628927089508
  - -0.19573473561203622
  - -0.2021087021087021
  - -0.19598946135831383
  test_jaccard_macro:
  - 0.231086717677538
  - 0.22053157420105365
  - 0.22942699423574123
  - 0.20891130235707855
  - 0.22824427346228685
  test_jaccard_micro:
  - 0.4462457337883959
  - 0.4336134453781513
  - 0.43862589023879345
  - 0.42306061890631624
  - 0.43927973199329984
  test_jaccard_samples:
  - 0.4769569761708126
  - 0.46317509714812616
  - 0.4689859447528159
  - 0.4535301785301785
  - 0.4661112737444704
  test_jaccard_weighted:
  - 0.4133786638048677
  - 0.3990899302949792
  - 0.4044141126543195
  - 0.3885842670913225
  - 0.4061901876110848
  test_label_ranking_average_precision_score:
  - 0.7601975743698905
  - 0.7589995069252503
  - 0.7516179795686074
  - 0.7563851319826597
  - 0.7481231147374545
  test_label_ranking_loss:
  - 0.16448001517633146
  - 0.16753890415716144
  - 0.1661604767323435
  - 0.1661809426919317
  - 0.17070495411757122
  test_matthews_corrcoef_macro:
  - 0.17668252980698812
  - 0.161688427418116
  - 0.18752021997676488
  - 0.13879421433322472
  - 0.17339659152166195
  test_matthews_corrcoef_micro:
  - 0.5121311642052656
  - 0.4973918515297832
  - 0.5036263880346091
  - 0.4885287870380349
  - 0.5020439354484307
  test_matthews_corrcoef_samples:
  - 0.5146352372153974
  - 0.49287838053239186
  - 0.494546156860481
  - 0.4865009276148907
  - 0.4989384723768997
  test_matthews_corrcoef_weighted:
  - 0.19155581018610232
  - 0.1809837111760083
  - 0.1997242144674
  - 0.15950193239934474
  - 0.18821759817977407
  test_ndgc:
  - 0.8539468984034944
  - 0.8512180617316546
  - 0.8479836764225698
  - 0.8517272136973614
  - 0.8429223282730702
  test_precision_macro:
  - 0.5486001323177673
  - 0.5445747174838845
  - 0.6240582426757417
  - 0.47200679359109593
  - 0.5854125025298865
  test_precision_micro:
  - 0.7719557195571956
  - 0.7616236162361624
  - 0.7614545454545455
  - 0.7595129375951294
  - 0.7546762589928058
  test_precision_samples:
  - 0.7693920335429769
  - 0.7513831258644535
  - 0.7416496250852078
  - 0.7536382536382537
  - 0.7457991803278688
  test_precision_weighted:
  - 0.7170648168870369
  - 0.7164274691218552
  - 0.7609822488071774
  - 0.6710888075840294
  - 0.7337813117962512
  test_recall_macro:
  - 0.276628504139074
  - 0.2673883592553376
  - 0.27607165170777687
  - 0.2534466855283119
  - 0.27657978436284786
  test_recall_micro:
  - 0.514004914004914
  - 0.5017015070491007
  - 0.508499271491015
  - 0.4884973078805678
  - 0.512457254518808
  test_recall_samples:
  - 0.5195088047289305
  - 0.4993685371797405
  - 0.5081020547278216
  - 0.4895002145002145
  - 0.5118201925578973
  test_recall_weighted:
  - 0.514004914004914
  - 0.5017015070491007
  - 0.508499271491015
  - 0.4884973078805678
  - 0.512457254518808
  test_roc_auc_macro:
  - 0.7163668698957834
  - 0.7384987613586415
  - 0.7531184165606504
  - 0.7292606702211311
  - 0.7321616945874797
  test_roc_auc_micro:
  - 0.8460398761497189
  - 0.847195785597572
  - 0.8470235631896448
  - 0.8442635959570158
  - 0.8445875121683285
  test_roc_auc_samples:
  - 0.8355199848236685
  - 0.8324610958428386
  - 0.8338395232676564
  - 0.8338190573080683
  - 0.8292950458824289
  test_roc_auc_weighted:
  - 0.7202081694864064
  - 0.7338502266868399
  - 0.7574616267785649
  - 0.7246173311650679
  - 0.7382389126190962
start: 2023-10-21 22:18:32.556387
wrapper: null
