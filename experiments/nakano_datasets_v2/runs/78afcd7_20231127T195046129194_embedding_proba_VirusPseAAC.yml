active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMz4z+QmZmZmZnZv5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ2T9AMzMzMzMDQIBmZmZmZvY/wMzMzMzMDMAAMzMzMzPjvw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 19:52:33.290034
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding_proba
  params:
    memory: estimators_cache
hash: 78afcd75738ee43e9700fc433a30375e9cade9a19a1cb3b2ff279ff7e9759b10
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/78afcd7_20231127T195046129194_embedding_proba_VirusPseAAC.yml
results:
  fit_time:
  - 49.92645788192749
  - 49.294320821762085
  - 49.32831001281738
  - 50.12936568260193
  - 53.19704532623291
  score_time:
  - 56.09696817398071
  - 57.199949502944946
  - 56.3713800907135
  - 25.323564529418945
  - 52.53027653694153
  test_average_precision_macro:
  - 0.3015459316993317
  - 0.4075254181920132
  - 0.38279211984908307
  - 0.4952332084952087
  - 0.3457577018953395
  test_average_precision_micro:
  - 0.33165827243381063
  - 0.35029508692070827
  - 0.4065775775362692
  - 0.4096249049548063
  - 0.3801739174083402
  test_average_precision_samples:
  - 0.6312330623306233
  - 0.638034188034188
  - 0.6804166666666667
  - 0.6922222222222222
  - 0.6144179894179894
  test_average_precision_weighted:
  - 0.38760307870174265
  - 0.4161409200563116
  - 0.4617684086365298
  - 0.47664877194522226
  - 0.4134784656056548
  test_coverage_error:
  - -2.5121951219512195
  - -2.58974358974359
  - -2.425
  - -2.1555555555555554
  - -2.4761904761904763
  test_f1_macro:
  - 0.016666666666666666
  - 0.0
  - 0.017543859649122806
  - 0.036062378167641324
  - 0.018518518518518517
  test_f1_micro:
  - 0.03846153846153846
  - 0.0
  - 0.037037037037037035
  - 0.07547169811320754
  - 0.038461538461538464
  test_f1_samples:
  - 0.024390243902439025
  - 0.0
  - 0.025
  - 0.044444444444444446
  - 0.023809523809523808
  test_f1_weighted:
  - 0.034693877551020415
  - 0.0
  - 0.03643724696356275
  - 0.07418873982341474
  - 0.037037037037037035
  test_hamming_loss:
  - -0.2032520325203252
  - -0.2094017094017094
  - -0.21666666666666667
  - -0.1814814814814815
  - -0.1984126984126984
  test_jaccard_macro:
  - 0.008771929824561403
  - 0.0
  - 0.009259259259259259
  - 0.01906318082788671
  - 0.00980392156862745
  test_jaccard_micro:
  - 0.0196078431372549
  - 0.0
  - 0.018867924528301886
  - 0.0392156862745098
  - 0.0196078431372549
  test_jaccard_samples:
  - 0.024390243902439025
  - 0.0
  - 0.025
  - 0.044444444444444446
  - 0.023809523809523808
  test_jaccard_weighted:
  - 0.018259935553168634
  - 0.0
  - 0.019230769230769232
  - 0.0392156862745098
  - 0.0196078431372549
  test_label_ranking_average_precision_score:
  - 0.6312330623306234
  - 0.638034188034188
  - 0.6804166666666667
  - 0.6922222222222221
  - 0.6144179894179894
  test_label_ranking_loss:
  - 0.2676151761517615
  - 0.2611823361823361
  - 0.23062500000000002
  - 0.195
  - 0.25138888888888883
  test_matthews_corrcoef_macro:
  - -0.007727984501036907
  - 0.0
  - 0.006560307498018951
  - 0.06301895565949547
  - 0.03156475079494043
  test_matthews_corrcoef_micro:
  - 0.037319883327000286
  - 0.0
  - 0.06304560774232984
  - 0.17901299975847712
  - 0.12530721563100888
  test_matthews_corrcoef_samples:
  - 0.014634146341463414
  - 0.0
  - 0.02
  - 0.044444444444444446
  - 0.023809523809523808
  test_matthews_corrcoef_weighted:
  - -0.01608682487970948
  - 0.0
  - 0.016272686531651242
  - 0.12965824928897132
  - 0.06312950158988086
  test_ndgc:
  - 0.7238227719790064
  - 0.7329114013319992
  - 0.7621023770997609
  - 0.7742480328169218
  - 0.7150631775183476
  test_precision_macro:
  - 0.05555555555555555
  - 0.0
  - 0.16666666666666666
  - 0.3333333333333333
  - 0.16666666666666666
  test_precision_micro:
  - 0.3333333333333333
  - 0.0
  - 0.5
  - 1.0
  - 1.0
  test_precision_samples:
  - 0.024390243902439025
  - 0.0
  - 0.025
  - 0.044444444444444446
  - 0.023809523809523808
  test_precision_weighted:
  - 0.11564625850340135
  - 0.0
  - 0.34615384615384615
  - 0.6862745098039216
  - 0.3333333333333333
  test_recall_macro:
  - 0.00980392156862745
  - 0.0
  - 0.009259259259259259
  - 0.01906318082788671
  - 0.00980392156862745
  test_recall_micro:
  - 0.02040816326530612
  - 0.0
  - 0.019230769230769232
  - 0.0392156862745098
  - 0.0196078431372549
  test_recall_samples:
  - 0.024390243902439025
  - 0.0
  - 0.025
  - 0.044444444444444446
  - 0.023809523809523808
  test_recall_weighted:
  - 0.02040816326530612
  - 0.0
  - 0.019230769230769232
  - 0.0392156862745098
  - 0.0196078431372549
  test_roc_auc_macro:
  - 0.6122293511999394
  - 0.5892870290408654
  - 0.6007821676274697
  - 0.6844221161931986
  - 0.5980864056148775
  test_roc_auc_micro:
  - 0.7289961669947167
  - 0.7228902371759515
  - 0.7525572831423896
  - 0.7790312472020772
  - 0.7384645400448737
  test_roc_auc_samples:
  - 0.7323848238482386
  - 0.7388176638176638
  - 0.7693749999999999
  - 0.8049999999999998
  - 0.7486111111111111
  test_roc_auc_weighted:
  - 0.5564343498016967
  - 0.5523129155671302
  - 0.5758690362523314
  - 0.6163946712727201
  - 0.5645971546513341
start: 2023-11-27 19:50:46.129194
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
