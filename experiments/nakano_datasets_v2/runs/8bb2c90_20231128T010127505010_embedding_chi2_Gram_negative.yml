active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZP6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+YmZmZmZn5v6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wJmZmZmZGUAAZ2ZmZmb2P0BmZmZmZhLAAJyZmZmZ2T+AzMzMzMwMwA==
      n_labels: 8
      n_samples: 1392
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_negative
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_negative.csv
directory: nakano_datasets_v2/runs
end: 2023-11-28 01:06:04.981845
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_pvalue
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.9
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 0.05
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 0.05
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding_chi2
  params:
    memory: estimators_cache
hash: 8bb2c90171e62b6127533b3636fb2b4468a38ce865662fdb6177b4cf5cefef9f
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/8bb2c90_20231128T010127505010_embedding_chi2_Gram_negative.yml
results:
  fit_time:
  - 140.66261744499207
  - 143.3620743751526
  - 150.27814769744873
  - 156.6117615699768
  - 152.98762249946594
  score_time:
  - 111.9387526512146
  - 112.2397813796997
  - 116.56868171691895
  - 119.1081440448761
  - 116.24922776222229
  test_average_precision_macro:
  - 0.49066194786700434
  - 0.5051208733323607
  - 0.45897070154288166
  - 0.4964703499773413
  - 0.4790378976586076
  test_average_precision_micro:
  - 0.520391540903831
  - 0.5534485436618704
  - 0.5839899830788433
  - 0.5947036312263573
  - 0.5549676449417319
  test_average_precision_samples:
  - 0.8284663865546219
  - 0.8178442496132027
  - 0.8520318021201413
  - 0.8294707091469682
  - 0.8171141506247889
  test_average_precision_weighted:
  - 0.5237454301060465
  - 0.5575356403843468
  - 0.5816254628289359
  - 0.5864040718863218
  - 0.553445932991856
  test_coverage_error:
  - -1.6139705882352942
  - -1.6570397111913358
  - -1.4911660777385158
  - -1.5575539568345325
  - -1.599290780141844
  test_f1_macro:
  - 0.0
  - 0.007436826953833031
  - 0.0
  - 0.0052441910499139415
  - 0.0
  test_f1_micro:
  - 0.0
  - 0.02033898305084746
  - 0.0
  - 0.013745704467353952
  - 0.0
  test_f1_samples:
  - 0.0
  - 0.010830324909747292
  - 0.0
  - 0.007194244604316547
  - 0.0
  test_f1_weighted:
  - 0.0
  - 0.020222969706441232
  - 0.0
  - 0.013695662531490273
  - 0.0
  test_hamming_loss:
  - -0.13373161764705882
  - -0.13041516245487364
  - -0.12897526501766785
  - -0.12904676258992806
  - -0.12987588652482268
  test_jaccard_macro:
  - 0.0
  - 0.0037766424961546913
  - 0.0
  - 0.0026505163700285654
  - 0.0
  test_jaccard_micro:
  - 0.0
  - 0.010273972602739725
  - 0.0
  - 0.006920415224913495
  - 0.0
  test_jaccard_samples:
  - 0.0
  - 0.010830324909747292
  - 0.0
  - 0.007194244604316547
  - 0.0
  test_jaccard_weighted:
  - 0.0
  - 0.010273972602739725
  - 0.0
  - 0.006920415224913495
  - 0.0
  test_label_ranking_average_precision_score:
  - 0.8284663865546222
  - 0.8178442496132027
  - 0.8520318021201413
  - 0.8294707091469683
  - 0.8171141506247888
  test_label_ranking_loss:
  - 0.07348564425770308
  - 0.08161423414130994
  - 0.06255258287060406
  - 0.0712572798903734
  - 0.07729652144545761
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.02463908747445756
  - 0.0
  - 0.02082385243571143
  - -0.0047747295949222435
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.09451071060090464
  - 0.0
  - 0.07763088439863787
  - -0.008119838864397655
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.010830324909747292
  - 0.0
  - 0.007194244604316547
  - -0.0005065856129685916
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0657111000087199
  - 0.0
  - 0.054663304164479336
  - -0.010726789774893808
  test_ndgc:
  - 0.8739259056445057
  - 0.865603066751793
  - 0.8909054280714606
  - 0.8738854935915013
  - 0.8646495331352133
  test_precision_macro:
  - 0.0
  - 0.25
  - 0.0
  - 0.25
  - 0.0
  test_precision_micro:
  - 0.0
  - 1.0
  - 0.0
  - 1.0
  - 0.0
  test_precision_samples:
  - 0.0
  - 0.010830324909747292
  - 0.0
  - 0.007194244604316547
  - 0.0
  test_precision_weighted:
  - 0.0
  - 0.660958904109589
  - 0.0
  - 0.6678200692041523
  - 0.0
  test_recall_macro:
  - 0.0
  - 0.0037766424961546913
  - 0.0
  - 0.0026505163700285654
  - 0.0
  test_recall_micro:
  - 0.0
  - 0.010273972602739725
  - 0.0
  - 0.006920415224913495
  - 0.0
  test_recall_samples:
  - 0.0
  - 0.010830324909747292
  - 0.0
  - 0.007194244604316547
  - 0.0
  test_recall_weighted:
  - 0.0
  - 0.010273972602739725
  - 0.0
  - 0.006920415224913495
  - 0.0
  test_roc_auc_macro:
  - 0.8477831918560168
  - 0.8567617694412297
  - 0.8603766917324194
  - 0.8485928210801192
  - 0.797274418264549
  test_roc_auc_micro:
  - 0.885895157100276
  - 0.8909449491641271
  - 0.8979036997415878
  - 0.9000402349722378
  - 0.8845538180397846
  test_roc_auc_samples:
  - 0.9265143557422969
  - 0.9183857658586901
  - 0.9374474171293959
  - 0.9287427201096267
  - 0.922998986828774
  test_roc_auc_weighted:
  - 0.7653418122994138
  - 0.784763645339576
  - 0.7930993505600147
  - 0.7945100447827924
  - 0.7688669794554887
start: 2023-11-28 01:01:27.505010
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop90
  params:
    drop: 0.9
    random_state: 0
