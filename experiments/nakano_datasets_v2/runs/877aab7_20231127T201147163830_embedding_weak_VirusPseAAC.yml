active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz47/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz47+AmZmZmZn5v4BmZmZmZvY/AJqZmZmZ2T8AmpmZmZnZPw==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 20:13:22.529938
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: embedding_weak
  params:
    memory: estimators_cache
hash: 877aab7643a5e31ac8468a29f424866fbc4af2378a541014681030c405209aa0
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/877aab7_20231127T201147163830_embedding_weak_VirusPseAAC.yml
results:
  fit_time:
  - 55.125616788864136
  - 55.6645233631134
  - 59.68771815299988
  - 58.192177534103394
  - 56.30078482627869
  score_time:
  - 19.224289894104004
  - 34.06560516357422
  - 35.06395864486694
  - 29.51082491874695
  - 28.005869150161743
  test_average_precision_macro:
  - 0.29969973718836734
  - 0.39944065020037894
  - 0.40348065291610763
  - 0.3934715602587095
  - 0.3918678010374033
  test_average_precision_micro:
  - 0.4416401219921222
  - 0.47102359390427195
  - 0.42386405499503627
  - 0.4828618495904825
  - 0.45937005318528434
  test_average_precision_samples:
  - 0.620436507936508
  - 0.7031007751937984
  - 0.6241666666666668
  - 0.7098915989159891
  - 0.6997967479674796
  test_average_precision_weighted:
  - 0.44324822072631964
  - 0.47630741848521413
  - 0.40254096008555806
  - 0.4952984939117336
  - 0.4420939387155679
  test_coverage_error:
  - -2.4523809523809526
  - -2.1627906976744184
  - -2.375
  - -2.2195121951219514
  - -2.1707317073170733
  test_f1_macro:
  - 0.10579710144927539
  - 0.1423611111111111
  - 0.24294670846394986
  - 0.2830409356725146
  - 0.16402116402116398
  test_f1_micro:
  - 0.23188405797101447
  - 0.3287671232876712
  - 0.22535211267605634
  - 0.4473684210526316
  - 0.3950617283950617
  test_f1_samples:
  - 0.18253968253968256
  - 0.2558139534883721
  - 0.16666666666666666
  - 0.3780487804878048
  - 0.35772357723577236
  test_f1_weighted:
  - 0.2155157715260017
  - 0.2847222222222222
  - 0.19561128526645766
  - 0.3820350877192983
  - 0.33460317460317457
  test_hamming_loss:
  - -0.21031746031746032
  - -0.18992248062015504
  - -0.22916666666666666
  - -0.17073170731707318
  - -0.1991869918699187
  test_jaccard_macro:
  - 0.06481481481481481
  - 0.09052631578947368
  - 0.21
  - 0.20192307692307696
  - 0.10955710955710955
  test_jaccard_micro:
  - 0.13114754098360656
  - 0.19672131147540983
  - 0.12698412698412698
  - 0.288135593220339
  - 0.24615384615384617
  test_jaccard_samples:
  - 0.17857142857142858
  - 0.2441860465116279
  - 0.15
  - 0.36178861788617883
  - 0.34146341463414637
  test_jaccard_weighted:
  - 0.1318082788671024
  - 0.18105263157894738
  - 0.12840000000000001
  - 0.2661538461538462
  - 0.2234965034965035
  test_label_ranking_average_precision_score:
  - 0.6204365079365078
  - 0.7031007751937984
  - 0.6241666666666668
  - 0.7098915989159891
  - 0.6997967479674796
  test_label_ranking_loss:
  - 0.25059523809523804
  - 0.1851421188630491
  - 0.22562500000000002
  - 0.20115176151761516
  - 0.19878048780487806
  test_matthews_corrcoef_macro:
  - 0.021372563862963923
  - 0.06573505025377353
  - 0.1305033866777378
  - 0.22896281677479358
  - 0.05774356432074551
  test_matthews_corrcoef_micro:
  - 0.16709945833480347
  - 0.2666303272199826
  - 0.1316211694539647
  - 0.3849310321720534
  - 0.2952278505637436
  test_matthews_corrcoef_samples:
  - 0.13410608409603988
  - 0.2069155022349076
  - 0.10243416490252569
  - 0.33523366320978015
  - 0.27554552673417143
  test_matthews_corrcoef_weighted:
  - 0.038270270229970614
  - 0.13147010050754707
  - -0.01389039424196619
  - 0.26924845166019634
  - 0.12579687121432084
  test_ndgc:
  - 0.7160943533780282
  - 0.7823226401848998
  - 0.720936714557473
  - 0.7843915671238657
  - 0.7755986912524953
  test_precision_macro:
  - 0.18055555555555558
  - 0.19682539682539682
  - 0.2888888888888889
  - 0.43333333333333335
  - 0.17862838915470491
  test_precision_micro:
  - 0.4444444444444444
  - 0.5454545454545454
  - 0.38095238095238093
  - 0.6538461538461539
  - 0.5161290322580645
  test_precision_samples:
  - 0.19047619047619047
  - 0.27906976744186046
  - 0.175
  - 0.4024390243902439
  - 0.3902439024390244
  test_precision_weighted:
  - 0.36601307189542487
  - 0.39365079365079364
  - 0.28933333333333333
  - 0.576
  - 0.36440191387559806
  test_recall_macro:
  - 0.07679738562091504
  - 0.1176470588235294
  - 0.22549019607843138
  - 0.23611111111111108
  - 0.1568627450980392
  test_recall_micro:
  - 0.1568627450980392
  - 0.23529411764705882
  - 0.16
  - 0.34
  - 0.32
  test_recall_samples:
  - 0.17857142857142858
  - 0.2441860465116279
  - 0.175
  - 0.37398373983739835
  - 0.34146341463414637
  test_recall_weighted:
  - 0.1568627450980392
  - 0.23529411764705882
  - 0.16
  - 0.34
  - 0.32
  test_roc_auc_macro:
  - 0.5165518884537602
  - 0.686302648013552
  - 0.5707054560954817
  - 0.6337578010404098
  - 0.6847070810306105
  test_roc_auc_micro:
  - 0.7745585796507657
  - 0.8100786208203087
  - 0.7717894736842105
  - 0.7884693877551021
  - 0.7970408163265306
  test_roc_auc_samples:
  - 0.7494047619047619
  - 0.8148578811369508
  - 0.774375
  - 0.7988482384823848
  - 0.801219512195122
  test_roc_auc_weighted:
  - 0.5801701228202021
  - 0.6688892567658709
  - 0.5299744245524297
  - 0.6244772700077048
  - 0.6203134605193429
start: 2023-11-27 20:11:47.163830
wrapper: null
