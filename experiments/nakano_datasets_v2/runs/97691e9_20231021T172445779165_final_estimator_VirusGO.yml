active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b+QmZmZmZnZvzgzMzMzM+M/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjv8CZmZmZmdk/IDMzMzMz47/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gJmZmZmZ+b9AMzMzMzMLQKCZmZmZmRFAwMzMzMzMDMDAzMzMzMwEwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 17:24:51.171360
estimator:
  call: nakano_datasets_v2.estimators.final_estimator
  final_params:
    estimators:
    - - rf
      - call: sklearn.ensemble._forest.RandomForestClassifier
        params:
          bootstrap: true
          ccp_alpha: 0.0
          class_weight: null
          criterion: gini
          max_depth: null
          max_features: sqrt
          max_leaf_nodes: null
          max_samples: 0.9
          min_impurity_decrease: 0.0
          min_samples_leaf: 5
          min_samples_split: 2
          min_weight_fraction_leaf: 0.0
          n_estimators: 150
          n_jobs: 14
          oob_score: true
          random_state: 0
          verbose: true
          warm_start: false
    - - xt
      - call: sklearn.ensemble._forest.ExtraTreesClassifier
        params:
          bootstrap: true
          ccp_alpha: 0.0
          class_weight: null
          criterion: gini
          max_depth: null
          max_features: sqrt
          max_leaf_nodes: null
          max_samples: 0.9
          min_impurity_decrease: 0.0
          min_samples_leaf: 5
          min_samples_split: 2
          min_weight_fraction_leaf: 0.0
          n_estimators: 150
          n_jobs: 14
          oob_score: true
          random_state: 0
          verbose: true
          warm_start: false
  name: final_estimator
  params: {}
hash: 97691e9114daada43a50dc3e4bcb6f951896dc2e11a73f74b600189d2fc43e1d
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/97691e9_20231021T172445779165_final_estimator_VirusGO.yml
results:
  fit_time:
  - 1.298692226409912
  - 1.2803239822387695
  - 1.2917943000793457
  - 1.3050615787506104
  - 1.2772064208984375
  score_time:
  - 3.0687758922576904
  - 2.839606523513794
  - 3.04404354095459
  - 2.985771894454956
  - 2.8641178607940674
  test_average_precision_macro:
  - 0.8996103841692077
  - 0.924340312144646
  - 0.9116334945811588
  - 0.929328984880295
  - 0.9789849515778507
  test_average_precision_micro:
  - 0.7431942642372412
  - 0.7799252343321581
  - 0.7742180006357469
  - 0.7306153261860656
  - 0.7924396206667847
  test_average_precision_samples:
  - 0.8040697674418605
  - 0.8394736842105261
  - 0.8288288288288288
  - 0.7859259259259259
  - 0.8768939393939396
  test_average_precision_weighted:
  - 0.8806018056018056
  - 0.9096488760281863
  - 0.9143620018770078
  - 0.9110049739337321
  - 0.9571293012188152
  test_coverage_error:
  - -1.8372093023255813
  - -1.9210526315789473
  - -1.945945945945946
  - -1.8666666666666667
  - -1.5227272727272727
  test_f1_macro:
  - 0.24548440065681443
  - 0.10894660894660894
  - 0.09999999999999999
  - 0.20047619047619047
  - 0.16604010025062657
  test_f1_micro:
  - 0.5675675675675675
  - 0.23728813559322037
  - 0.21428571428571427
  - 0.46376811594202894
  - 0.41269841269841273
  test_f1_samples:
  - 0.46511627906976744
  - 0.1754385964912281
  - 0.15315315315315314
  - 0.35555555555555557
  - 0.2803030303030303
  test_f1_weighted:
  - 0.4909688013136289
  - 0.2232408114761056
  - 0.2020408163265306
  - 0.4119327731092437
  - 0.33872180451127826
  test_hamming_loss:
  - -0.12403100775193798
  - -0.19736842105263158
  - -0.1981981981981982
  - -0.13703703703703704
  - -0.14015151515151514
  test_jaccard_macro:
  - 0.19444444444444445
  - 0.06553147574819401
  - 0.05882352941176471
  - 0.14376218323586745
  - 0.12745098039215688
  test_jaccard_micro:
  - 0.39622641509433965
  - 0.1346153846153846
  - 0.12
  - 0.3018867924528302
  - 0.26
  test_jaccard_samples:
  - 0.45348837209302323
  - 0.17105263157894737
  - 0.14864864864864866
  - 0.35555555555555557
  - 0.2727272727272727
  test_jaccard_weighted:
  - 0.38888888888888895
  - 0.13415892672858618
  - 0.11884753901560625
  - 0.2951496388028896
  - 0.26
  test_label_ranking_average_precision_score:
  - 0.8040697674418603
  - 0.8394736842105261
  - 0.8288288288288288
  - 0.7859259259259258
  - 0.8768939393939394
  test_label_ranking_loss:
  - 0.12790697674418605
  - 0.11249999999999999
  - 0.11584084084084086
  - 0.13500000000000004
  - 0.07386363636363637
  test_matthews_corrcoef_macro:
  - 0.21324204692836077
  - 0.09517236527902324
  - 0.09089375587928537
  - 0.17372203450509846
  - 0.16710273736957704
  test_matthews_corrcoef_micro:
  - 0.5619654098534703
  - 0.2980494916980995
  - 0.2768897951859255
  - 0.47795899675449743
  - 0.47082194805776456
  test_matthews_corrcoef_samples:
  - 0.458078292932582
  - 0.16927514557983359
  - 0.14682312248739665
  - 0.3466666666666667
  - 0.27874797872880347
  test_matthews_corrcoef_weighted:
  - 0.42648409385672154
  - 0.19406657664807245
  - 0.18465286334939424
  - 0.3577510784815272
  - 0.3408895842339372
  test_ndgc:
  - 0.85660918604809
  - 0.8815888288668665
  - 0.8751324211076581
  - 0.8442188370365216
  - 0.9098176737161974
  test_precision_macro:
  - 0.3042929292929293
  - 0.2916666666666667
  - 0.2916666666666667
  - 0.30303030303030304
  - 0.3333333333333333
  test_precision_micro:
  - 0.9130434782608695
  - 0.875
  - 0.8571428571428571
  - 0.8888888888888888
  - 1.0
  test_precision_samples:
  - 0.47674418604651164
  - 0.18421052631578946
  - 0.16216216216216217
  - 0.35555555555555557
  - 0.29545454545454547
  test_precision_weighted:
  - 0.6085858585858586
  - 0.5980392156862745
  - 0.5918367346938775
  - 0.625668449197861
  - 0.68
  test_recall_macro:
  - 0.2058823529411765
  - 0.06699346405228758
  - 0.06066176470588236
  - 0.15305010893246188
  - 0.12745098039215688
  test_recall_micro:
  - 0.4117647058823529
  - 0.13725490196078433
  - 0.12244897959183673
  - 0.3137254901960784
  - 0.26
  test_recall_samples:
  - 0.46511627906976744
  - 0.17105263157894737
  - 0.14864864864864866
  - 0.35555555555555557
  - 0.2727272727272727
  test_recall_weighted:
  - 0.4117647058823529
  - 0.13725490196078433
  - 0.12244897959183673
  - 0.3137254901960784
  - 0.26
  test_roc_auc_macro:
  - 0.9631544925662573
  - 0.9469667078300854
  - 0.9728566842181642
  - 0.9750461173590724
  - 0.9847494553376906
  test_roc_auc_micro:
  - 0.8995926873164725
  - 0.9060595989808352
  - 0.9125870001179662
  - 0.9040200555107888
  - 0.9199065420560748
  test_roc_auc_samples:
  - 0.872093023255814
  - 0.8875000000000001
  - 0.8841591591591591
  - 0.8650000000000001
  - 0.9261363636363636
  test_roc_auc_weighted:
  - 0.9389140271493213
  - 0.9233199035464914
  - 0.9593070743169492
  - 0.9608041917343687
  - 0.9688888888888889
start: 2023-10-21 17:24:45.779165
wrapper: null
