active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ+T8wMzMzMzMDwEAzMzMzM+M/oJmZmZmZ+T9gZmZmZmb2vw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ2b9AZmZmZmb2vwCZmZmZmdm/IDMzMzMzA8BwZmZmZmYSQA==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 23:46:03.035618
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.9
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding_proba
  params:
    memory: estimators_cache
hash: 48063ae290ebd6e7986c0eb54e3aa12467de22700bcf0b64a199f5fe8c0b99a7
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/48063ae_20231127T234348218951_embedding_proba_emotions.yml
results:
  fit_time:
  - 57.986544370651245
  - 60.69867920875549
  - 61.470553159713745
  - 59.52457141876221
  - 61.98229122161865
  score_time:
  - 73.22702264785767
  - 53.78141188621521
  - 59.80814075469971
  - 74.40189814567566
  - 60.90980553627014
  test_average_precision_macro:
  - 0.39747961322371145
  - 0.36215882578554986
  - 0.339107462298121
  - 0.36598722262703015
  - 0.37073258559005423
  test_average_precision_micro:
  - 0.3711626741551525
  - 0.3375179137332358
  - 0.32283088933744647
  - 0.3489560359160018
  - 0.3598865069246881
  test_average_precision_samples:
  - 0.5112511671335199
  - 0.4852777777777778
  - 0.5129551820728291
  - 0.44981634527089065
  - 0.454556530214425
  test_average_precision_weighted:
  - 0.4078777956937487
  - 0.3672565079828773
  - 0.3453755723812711
  - 0.3728156165371022
  - 0.3780157969230839
  test_coverage_error:
  - -4.873949579831932
  - -5.075
  - -4.697478991596639
  - -5.024793388429752
  - -5.333333333333333
  test_f1_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_f1_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_f1_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_f1_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_hamming_loss:
  - -0.31092436974789917
  - -0.3111111111111111
  - -0.3081232492997199
  - -0.30165289256198347
  - -0.3260233918128655
  test_jaccard_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_jaccard_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_jaccard_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_jaccard_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_label_ranking_average_precision_score:
  - 0.5112511671335201
  - 0.48527777777777786
  - 0.5129551820728293
  - 0.4498163452708907
  - 0.4545565302144251
  test_label_ranking_loss:
  - 0.6216853408029879
  - 0.6486805555555556
  - 0.5736461251167133
  - 0.6719237832874196
  - 0.7537768031189084
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_ndgc:
  - 0.703654510257632
  - 0.6848980676025926
  - 0.6874392277296707
  - 0.6653920245424728
  - 0.6842763963988763
  test_precision_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_precision_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_precision_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_precision_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_recall_macro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_recall_micro:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_recall_samples:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_recall_weighted:
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  - 0.0
  test_roc_auc_macro:
  - 0.5384037969100175
  - 0.5299363746316176
  - 0.5254529791981283
  - 0.5370310348450137
  - 0.5161905424890999
  test_roc_auc_micro:
  - 0.5383752655094118
  - 0.5354262672811061
  - 0.5183106367316894
  - 0.5466618032476831
  - 0.517582171726506
  test_roc_auc_samples:
  - 0.580718954248366
  - 0.5390625
  - 0.5528244631185809
  - 0.548048668503214
  - 0.5266203703703703
  test_roc_auc_weighted:
  - 0.5384820846093901
  - 0.5277502712432044
  - 0.515923803489291
  - 0.5292838486867393
  - 0.510848236220544
start: 2023-11-27 23:43:48.218951
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop90
  params:
    drop: 0.9
    random_state: 0
