active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            YGZmZmZmGsBAMzMzMzMDQIBmZmZmZvY/gGZmZmZm9j+AZmZmZmb2Pw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8AmJmZmZnZvwCYmZmZmdm/ADQzMzMz4z8ANDMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADQzMzMz4z8AmJmZmZnZvwCYmZmZmdm/ADQzMzMz4z8AmJmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gGZmZmZm9j+AZmZmZmb2P0AzMzMzMwNAYGZmZmZmEsAAMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            YGZmZmZmHsCgmZmZmZkdQGBmZmZmZh7AQDMzMzMzC0CgmZmZmZkRQA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzMBECgmZmZmZn5P0AzMzMzM+M/YGZmZmZm9r8wMzMzMzMLwA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMzA8BAMzMzMzPjP0AzMzMzM+M/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            yMzMzMzMFMCQmZmZmZkBwACZmZmZmcm/ODMzMzMzF0DgzMzMzMz8Pw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ6b8AoJmZmZnJPwCgmZmZmck/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZyb+AZmZmZmYGQACYmZmZmcm/ADMzMzMz878AMzMzMzPzvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP6CZmZmZmek/zMzMzMzMFMBoZmZmZmYOQA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ+b9AZmZmZmYSwACZmZmZmfm/gDMzMzMzC0DAmZmZmZkRQA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_v2/runs
end: 2023-11-28 10:38:51.238519
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.9
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: proba
  params:
    memory: estimators_cache
hash: ba489d92694ed621b2c2dde00e14e41c563d2944bb9beadf02c76ad654129625
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/ba489d9_20231128T103754333773_proba_yeast.yml
results:
  fit_time:
  - 42.24871015548706
  - 42.8628146648407
  - 41.546465158462524
  - 42.82874608039856
  - 39.62389802932739
  score_time:
  - 13.352307319641113
  - 10.490626573562622
  - 10.57490348815918
  - 10.585760354995728
  - 10.421207189559937
  test_average_precision_macro:
  - 0.4088462559040165
  - 0.40736592007414923
  - 0.4207136491412625
  - 0.4082708205514934
  - 0.425172173922599
  test_average_precision_micro:
  - 0.566151588669435
  - 0.5490498831408791
  - 0.564471987805786
  - 0.573779707281114
  - 0.599590646106021
  test_average_precision_samples:
  - 0.6861667383091379
  - 0.6642212360144517
  - 0.673823241014699
  - 0.6845231505501223
  - 0.6875877935238333
  test_average_precision_weighted:
  - 0.5599110750634393
  - 0.5608475012659093
  - 0.5754027206833081
  - 0.5665873041395868
  - 0.5936446734839441
  test_coverage_error:
  - -8.494845360824742
  - -8.702868852459016
  - -8.34020618556701
  - -8.50625
  - -8.24634655532359
  test_f1_macro:
  - 0.00039138943248532296
  - 0.0016326530612244896
  - 0.0008257638315441783
  - 0.0003946329913180742
  - 0.0
  test_f1_micro:
  - 0.0009675858732462506
  - 0.0019636720667648502
  - 0.0009746588693957114
  - 0.0009760858955588092
  - 0.0
  test_f1_samples:
  - 0.0008247422680412372
  - 0.001639344262295082
  - 0.0008247422680412372
  - 0.0008333333333333334
  - 0.0
  test_f1_weighted:
  - 0.0009654020077179118
  - 0.001943137943137943
  - 0.0009694974677515268
  - 0.0009738648135359116
  - 0.0
  test_hamming_loss:
  - -0.30412371134020616
  - -0.29757025761124123
  - -0.3019145802650957
  - -0.3046130952380952
  - -0.3043543095735163
  test_jaccard_macro:
  - 0.00019623233908948196
  - 0.0008257638315441783
  - 0.0004152823920265781
  - 0.00019786307874950534
  - 0.0
  test_jaccard_micro:
  - 0.000484027105517909
  - 0.0009828009828009828
  - 0.00048756704046806434
  - 0.00048828125
  - 0.0
  test_jaccard_samples:
  - 0.0005154639175257732
  - 0.0010245901639344263
  - 0.0005154639175257732
  - 0.0005208333333333333
  - 0.0
  test_jaccard_weighted:
  - 0.000484027105517909
  - 0.0009828009828009828
  - 0.00048756704046806434
  - 0.00048828125
  - 0.0
  test_label_ranking_average_precision_score:
  - 0.6861667383091372
  - 0.6642212360144517
  - 0.6738232410146981
  - 0.6845231505501226
  - 0.687587793523833
  test_label_ranking_loss:
  - 0.22875005047317268
  - 0.2466628028652326
  - 0.22849882117555168
  - 0.2291266401422651
  - 0.21914026218007726
  test_matthews_corrcoef_macro:
  - 0.0018719372084319969
  - 0.006183025716907069
  - 0.00437982974606702
  - 0.0018738036792395074
  - 0.0
  test_matthews_corrcoef_micro:
  - 0.018352147096698527
  - 0.02627285678388584
  - 0.018448353840686212
  - 0.01842612955383933
  - 0.0
  test_matthews_corrcoef_samples:
  - 0.0009041835250587931
  - 0.0017972500395635846
  - 0.0009041835250587931
  - 0.0009136021034448222
  - 0.0
  test_matthews_corrcoef_weighted:
  - 0.0046173243050190976
  - 0.007358864022775883
  - 0.005142189189921688
  - 0.004624122946717026
  - 0.0
  test_ndgc:
  - 0.8139707949091602
  - 0.797973371734934
  - 0.8039775866213699
  - 0.8126878482786302
  - 0.8129793561233913
  test_precision_macro:
  - 0.07142857142857142
  - 0.07142857142857142
  - 0.07142857142857142
  - 0.07142857142857142
  - 0.0
  test_precision_micro:
  - 1.0
  - 1.0
  - 1.0
  - 1.0
  - 0.0
  test_precision_samples:
  - 0.002061855670103093
  - 0.004098360655737705
  - 0.002061855670103093
  - 0.0020833333333333333
  - 0.0
  test_precision_weighted:
  - 0.17618586640851888
  - 0.08501228501228501
  - 0.08386153096050707
  - 0.17626953125
  - 0.0
  test_recall_macro:
  - 0.00019623233908948196
  - 0.0008257638315441783
  - 0.0004152823920265781
  - 0.00019786307874950534
  - 0.0
  test_recall_micro:
  - 0.000484027105517909
  - 0.0009828009828009828
  - 0.00048756704046806434
  - 0.00048828125
  - 0.0
  test_recall_samples:
  - 0.0005154639175257732
  - 0.0010245901639344263
  - 0.0005154639175257732
  - 0.0005208333333333333
  - 0.0
  test_recall_weighted:
  - 0.000484027105517909
  - 0.0009828009828009828
  - 0.00048756704046806434
  - 0.00048828125
  - 0.0
  test_roc_auc_macro:
  - 0.6183894424174883
  - 0.6217859149176386
  - 0.6335923878996953
  - 0.6072743793498692
  - 0.6325964890152636
  test_roc_auc_micro:
  - 0.7580322986656262
  - 0.7494877275365079
  - 0.7636628085528251
  - 0.7617139424363227
  - 0.7703759426924888
  test_roc_auc_samples:
  - 0.7712499495268273
  - 0.7533371971347674
  - 0.7715011788244485
  - 0.7708733598577349
  - 0.7808597378199226
  test_roc_auc_weighted:
  - 0.602595538131956
  - 0.598969651126766
  - 0.6195985427736397
  - 0.6001517620410791
  - 0.6357557403635651
start: 2023-11-28 10:37:54.333773
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop90
  params:
    drop: 0.9
    random_state: 0
