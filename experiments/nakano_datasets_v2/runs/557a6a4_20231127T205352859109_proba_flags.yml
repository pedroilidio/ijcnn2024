active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP6CZmZmZmem/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T8wMzMzMzPzv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz8z+YmZmZmZkBQDQzMzMzMxfAmJmZmZmZAUCAmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/QDMzMzMz8z+AmZmZmZnpvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T80MzMzMzMDQGZmZmZmZhrAmpmZmZmZEUAwMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zczMzMzMEEBmZmZmZmYGwJiZmZmZmem/oJmZmZmZyT+YmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          cGZmZmZmBkCQmZmZmZkBwJCZmZmZmQHAAJmZmZmZyb/gzMzMzMz8Pw==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 20:54:48.728131
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.9
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: proba
  params:
    memory: estimators_cache
hash: 557a6a493670f8408a902744fe76a4d9dd6a77a43ff27988b7b4d51eef13d4e2
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/557a6a4_20231127T205352859109_proba_flags.yml
results:
  fit_time:
  - 33.394131898880005
  - 34.716551065444946
  - 35.77883005142212
  - 34.092891454696655
  - 34.27168583869934
  score_time:
  - 18.97061800956726
  - 20.753907203674316
  - 14.064661026000977
  - 12.949975490570068
  - 17.92364811897278
  test_average_precision_macro:
  - 0.7599928540348344
  - 0.6270885277943267
  - 0.5724612963919322
  - 0.6172706371417505
  - 0.6161734861690935
  test_average_precision_micro:
  - 0.6786033223291545
  - 0.564422105453553
  - 0.5926369503326991
  - 0.6092058683408471
  - 0.6081532576581723
  test_average_precision_samples:
  - 0.7135703262786595
  - 0.6292895857530003
  - 0.6666366627951993
  - 0.6378093203093201
  - 0.6961229086229086
  test_average_precision_weighted:
  - 0.7606692529501766
  - 0.6961258342773845
  - 0.6268866123331358
  - 0.6936263608785962
  - 0.6983358532500152
  test_coverage_error:
  - -5.333333333333333
  - -5.439024390243903
  - -5.585365853658536
  - -5.384615384615385
  - -5.72972972972973
  test_f1_macro:
  - 0.008928571428571428
  - 0.0
  - 0.04306722689075631
  - 0.027709359605911327
  - 0.026785714285714284
  test_f1_micro:
  - 0.015748031496062992
  - 0.0
  - 0.06578947368421052
  - 0.047619047619047616
  - 0.043795620437956206
  test_f1_samples:
  - 0.007936507936507936
  - 0.0
  - 0.04680603948896632
  - 0.035897435897435895
  - 0.03783783783783783
  test_f1_weighted:
  - 0.015376984126984126
  - 0.0
  - 0.062298549556809024
  - 0.04618727221754976
  - 0.04276315789473684
  test_hamming_loss:
  - -0.49603174603174605
  - -0.4564459930313589
  - -0.49477351916376305
  - -0.43956043956043955
  - -0.5057915057915058
  test_jaccard_macro:
  - 0.004608294930875576
  - 0.0
  - 0.023348694316436252
  - 0.014625850340136054
  - 0.0141321044546851
  test_jaccard_micro:
  - 0.007936507936507936
  - 0.0
  - 0.034013605442176874
  - 0.024390243902439025
  - 0.022388059701492536
  test_jaccard_samples:
  - 0.004629629629629629
  - 0.0
  - 0.029268292682926824
  - 0.023504273504273504
  - 0.02477477477477477
  test_jaccard_weighted:
  - 0.007936507936507936
  - 0.0
  - 0.033789954337899546
  - 0.024390243902439025
  - 0.022556390977443608
  test_label_ranking_average_precision_score:
  - 0.7135703262786596
  - 0.6292895857530002
  - 0.6666366627951995
  - 0.6378093203093201
  - 0.6961229086229086
  test_label_ranking_loss:
  - 0.33749999999999997
  - 0.4365853658536586
  - 0.43577235772357714
  - 0.3901709401709402
  - 0.3864864864864865
  test_matthews_corrcoef_macro:
  - 0.00969777476145901
  - -0.018070158058105024
  - 0.019211480561287908
  - 0.03271722352247162
  - 0.0037960271739770385
  test_matthews_corrcoef_micro:
  - 0.06311944030978033
  - -0.05380700677417883
  - 0.09488488564534452
  - 0.1164050492949297
  - 0.05925908009375507
  test_matthews_corrcoef_samples:
  - 0.004629629629629629
  - -0.011497671238805652
  - 0.030483499214588622
  - 0.033240062363470185
  - 0.025481325448163877
  test_matthews_corrcoef_weighted:
  - 0.01670172320029052
  - -0.015568136173136635
  - 0.028897928433060778
  - 0.054205379076351555
  - 0.0211815512602632
  test_ndgc:
  - 0.8179682680435679
  - 0.7582590882149061
  - 0.7782062262734093
  - 0.7617665867080441
  - 0.8080833903487903
  test_precision_macro:
  - 0.14285714285714285
  - 0.0
  - 0.23809523809523808
  - 0.2857142857142857
  - 0.2857142857142857
  test_precision_micro:
  - 1.0
  - 0.0
  - 0.8333333333333334
  - 1.0
  - 0.75
  test_precision_samples:
  - 0.027777777777777776
  - 0.0
  - 0.12195121951219512
  - 0.07692307692307693
  - 0.08108108108108109
  test_precision_weighted:
  - 0.24603174603174602
  - 0.0
  - 0.34474885844748854
  - 0.4715447154471545
  - 0.45864661654135336
  test_recall_macro:
  - 0.004608294930875576
  - 0.0
  - 0.023677101541395202
  - 0.014625850340136054
  - 0.0141321044546851
  test_recall_micro:
  - 0.007936507936507936
  - 0.0
  - 0.03424657534246575
  - 0.024390243902439025
  - 0.022556390977443608
  test_recall_samples:
  - 0.004629629629629629
  - 0.0
  - 0.029268292682926824
  - 0.023504273504273504
  - 0.02477477477477477
  test_recall_weighted:
  - 0.007936507936507936
  - 0.0
  - 0.03424657534246575
  - 0.024390243902439025
  - 0.022556390977443608
  test_roc_auc_macro:
  - 0.6327837100332856
  - 0.6592305026367459
  - 0.539121896263708
  - 0.6222966620020636
  - 0.6094224960099323
  test_roc_auc_micro:
  - 0.6527462836986646
  - 0.6109505144536992
  - 0.5985135529000292
  - 0.6283468834688346
  - 0.6151688745673708
  test_roc_auc_samples:
  - .nan
  - 0.5634146341463414
  - 0.5642276422764229
  - 0.6098290598290599
  - .nan
  test_roc_auc_weighted:
  - 0.5510702346615659
  - 0.650690280733759
  - 0.5190529169326511
  - 0.6028236275356166
  - 0.5897686294880469
start: 2023-11-27 20:53:52.859109
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop90
  params:
    drop: 0.9
    random_state: 0
