active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb8AmJmZmZnJvwCamZmZmek/AJiZmZmZyb8AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 21:25:40.766298
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_pvalue
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.7
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 0.05
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 0.05
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding_chi2
  params:
    memory: estimators_cache
hash: 468e1147a2edbd538e84b38ca13d8237221e8a398ceffd8a5b3c82518c20b739
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/468e114_20231127T212326649075_embedding_chi2_Gram_positive.yml
results:
  fit_time:
  - 60.47776794433594
  - 66.22129845619202
  - 61.95854830741882
  - 60.99213147163391
  - 60.87064719200134
  score_time:
  - 68.75308990478516
  - 63.96718168258667
  - 71.1840455532074
  - 68.52265691757202
  - 65.87887597084045
  test_average_precision_macro:
  - 0.8062764008889941
  - 0.7857555283567149
  - 0.7717441975150006
  - 0.7532858940147473
  - 0.6863922113995056
  test_average_precision_micro:
  - 0.9227740639543968
  - 0.9363812776937837
  - 0.9221955180748218
  - 0.8888306678532595
  - 0.8699723976768267
  test_average_precision_samples:
  - 0.9583333333333334
  - 0.9431089743589743
  - 0.9514563106796117
  - 0.9342948717948718
  - 0.9495192307692307
  test_average_precision_weighted:
  - 0.9282163255270022
  - 0.9361186620768245
  - 0.919735585043408
  - 0.8855048306146814
  - 0.8734697954116574
  test_coverage_error:
  - -1.1634615384615385
  - -1.1730769230769231
  - -1.1650485436893203
  - -1.1730769230769231
  - -1.1826923076923077
  test_f1_macro:
  - 0.06410256410256411
  - 0.09923799397483608
  - 0.06797979797979797
  - 0.09815497315497315
  - 0.036616161616161616
  test_f1_micro:
  - 0.0909090909090909
  - 0.125
  - 0.09174311926605505
  - 0.12612612612612611
  - 0.05555555555555556
  test_f1_samples:
  - 0.04807692307692308
  - 0.0673076923076923
  - 0.04854368932038835
  - 0.0673076923076923
  - 0.028846153846153848
  test_f1_weighted:
  - 0.08302808302808304
  - 0.12426858391770673
  - 0.09091686091686091
  - 0.12575381325381324
  - 0.054882154882154886
  test_hamming_loss:
  - -0.2403846153846154
  - -0.23557692307692307
  - -0.24029126213592233
  - -0.23317307692307693
  - -0.24519230769230768
  test_jaccard_macro:
  - 0.03676470588235294
  - 0.05333333333333333
  - 0.03585220673635307
  - 0.05257839721254355
  - 0.019047619047619046
  test_jaccard_micro:
  - 0.047619047619047616
  - 0.06666666666666667
  - 0.04807692307692308
  - 0.0673076923076923
  - 0.02857142857142857
  test_jaccard_samples:
  - 0.04807692307692308
  - 0.0673076923076923
  - 0.04854368932038835
  - 0.0673076923076923
  - 0.028846153846153848
  test_jaccard_weighted:
  - 0.047619047619047616
  - 0.06666666666666667
  - 0.04807692307692308
  - 0.0673076923076923
  - 0.02857142857142857
  test_label_ranking_average_precision_score:
  - 0.9583333333333333
  - 0.9431089743589745
  - 0.9514563106796117
  - 0.9342948717948718
  - 0.9495192307692307
  test_label_ranking_loss:
  - 0.05128205128205128
  - 0.052884615384615384
  - 0.0517799352750809
  - 0.057692307692307696
  - 0.057692307692307696
  test_matthews_corrcoef_macro:
  - 0.08061520728665572
  - 0.16525934936829545
  - 0.13266192708325142
  - 0.1647917624492241
  - 0.07711993259353198
  test_matthews_corrcoef_micro:
  - 0.18982335116113436
  - 0.22515049752613767
  - 0.19074206767919966
  - 0.2265937847256266
  - 0.14668008282191813
  test_matthews_corrcoef_samples:
  - 0.04807692307692308
  - 0.0673076923076923
  - 0.04854368932038835
  - 0.0673076923076923
  - 0.028846153846153848
  test_matthews_corrcoef_weighted:
  - 0.10441588753319217
  - 0.20798134163686335
  - 0.1718708045205862
  - 0.2102257863265893
  - 0.11416871284296157
  test_ndgc:
  - 0.9684875599258997
  - 0.9582218914085099
  - 0.9635575266658195
  - 0.9510460686992158
  - 0.9619824235680898
  test_precision_macro:
  - 0.25
  - 0.75
  - 0.75
  - 0.75
  - 0.5
  test_precision_micro:
  - 1.0
  - 1.0
  - 1.0
  - 1.0
  - 1.0
  test_precision_samples:
  - 0.04807692307692308
  - 0.0673076923076923
  - 0.04854368932038835
  - 0.0673076923076923
  - 0.028846153846153848
  test_precision_weighted:
  - 0.3238095238095238
  - 0.9714285714285714
  - 0.9615384615384616
  - 0.9711538461538461
  - 0.7333333333333333
  test_recall_macro:
  - 0.03676470588235294
  - 0.05333333333333333
  - 0.03585220673635307
  - 0.05257839721254355
  - 0.019047619047619046
  test_recall_micro:
  - 0.047619047619047616
  - 0.06666666666666667
  - 0.04807692307692308
  - 0.0673076923076923
  - 0.02857142857142857
  test_recall_samples:
  - 0.04807692307692308
  - 0.0673076923076923
  - 0.04854368932038835
  - 0.0673076923076923
  - 0.028846153846153848
  test_recall_weighted:
  - 0.047619047619047616
  - 0.06666666666666667
  - 0.04807692307692308
  - 0.0673076923076923
  - 0.02857142857142857
  test_roc_auc_macro:
  - 0.9607959502706759
  - 0.9484467040359325
  - 0.9633617199578264
  - 0.9609528418358184
  - 0.854610246360115
  test_roc_auc_micro:
  - 0.9587505741846577
  - 0.9676925432552441
  - 0.959883866133866
  - 0.9629252958579881
  - 0.941234114224468
  test_roc_auc_samples:
  - 0.9487179487179488
  - 0.9471153846153846
  - 0.948220064724919
  - 0.9423076923076923
  - 0.9423076923076923
  test_roc_auc_weighted:
  - 0.9697251745124347
  - 0.974013789776828
  - 0.9727754472000322
  - 0.9619812056350633
  - 0.9464966495247001
start: 2023-11-27 21:23:26.649075
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop70
  params:
    drop: 0.7
    random_state: 0
