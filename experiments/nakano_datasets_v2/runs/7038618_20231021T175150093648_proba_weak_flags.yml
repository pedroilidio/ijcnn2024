active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/oJmZmZmZ6b+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv2hmZmZmZg5AmJmZmZmZCcCAmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+gmZmZmZnpv4CZmZmZmck/oJmZmZmZ6b8wMzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZm9j+gmZmZmZnZP8zMzMzMzAzAoJmZmZmZ2T9oZmZmZmb2Pw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZAUDMzMzMzMz8v5iZmZmZmem/NDMzMzMz8z+YmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          yMzMzMzMEMAgMzMzMzPzv+DMzMzMzPw/cGZmZmZmBkDAmZmZmZnpPw==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 17:53:03.611937
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - rf
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.RandomForestRegressor
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        - - xt
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesRegressor
                params:
                  bootstrap: false
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: proba_weak
  params:
    memory: estimators_cache
hash: 703861804ef856d4cc4426ff22eba6b4b12711f7f31a2581827870243a7f0040
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/7038618_20231021T175150093648_proba_weak_flags.yml
results:
  fit_time:
  - 47.54075789451599
  - 48.405938148498535
  - 46.706289291381836
  - 48.16805148124695
  - 49.908183336257935
  score_time:
  - 18.502220630645752
  - 20.50628685951233
  - 16.4838387966156
  - 18.7237606048584
  - 23.219362497329712
  test_average_precision_macro:
  - 0.6129923508645699
  - 0.7398334603673493
  - 0.7925266857947015
  - 0.786887068930935
  - 0.6570125960890492
  test_average_precision_micro:
  - 0.6602602456286871
  - 0.7934518532994743
  - 0.8223671347732513
  - 0.8457178520050499
  - 0.7841215443603442
  test_average_precision_samples:
  - 0.7292543373938722
  - 0.7879305555555555
  - 0.8405534105534106
  - 0.8629563492063492
  - 0.8086695906432748
  test_average_precision_weighted:
  - 0.6859499039959938
  - 0.7841328198083414
  - 0.8214472400151328
  - 0.8478607155439125
  - 0.7578766207125106
  test_coverage_error:
  - -4.837209302325581
  - -4.875
  - -4.837837837837838
  - -4.75
  - -4.684210526315789
  test_f1_macro:
  - 0.548703254043147
  - 0.6774102250846435
  - 0.6916053870941089
  - 0.7701510420100296
  - 0.6465959328028292
  test_f1_micro:
  - 0.6739926739926742
  - 0.7601476014760149
  - 0.7404580152671756
  - 0.8015267175572519
  - 0.7388059701492536
  test_f1_samples:
  - 0.655857579113393
  - 0.7193431568431569
  - 0.7163894663894664
  - 0.7810202143535476
  - 0.720289359763044
  test_f1_weighted:
  - 0.6562049635922764
  - 0.7447138740896391
  - 0.737840229945493
  - 0.7982767216004902
  - 0.7362959940148269
  test_hamming_loss:
  - -0.2956810631229236
  - -0.23214285714285715
  - -0.2625482625482625
  - -0.20634920634920634
  - -0.2631578947368421
  test_jaccard_macro:
  - 0.41376259706824486
  - 0.5443825222396651
  - 0.540696739520269
  - 0.6351959664984873
  - 0.5111134361134362
  test_jaccard_micro:
  - 0.5082872928176796
  - 0.6130952380952381
  - 0.5878787878787879
  - 0.6687898089171974
  - 0.5857988165680473
  test_jaccard_samples:
  - 0.5377076411960132
  - 0.6089880952380953
  - 0.6037966537966537
  - 0.6853174603174604
  - 0.6174185463659149
  test_jaccard_weighted:
  - 0.5071206288866172
  - 0.6169827040127793
  - 0.5953938535845843
  - 0.6755528095724175
  - 0.6057483317098702
  test_label_ranking_average_precision_score:
  - 0.7292543373938724
  - 0.7879305555555554
  - 0.8405534105534105
  - 0.8629563492063492
  - 0.8086695906432749
  test_label_ranking_loss:
  - 0.28062015503875964
  - 0.24041666666666667
  - 0.19504504504504502
  - 0.16296296296296295
  - 0.2210526315789474
  test_matthews_corrcoef_macro:
  - 0.15503514769844104
  - 0.3879183979931749
  - 0.3180458403787409
  - 0.48919180549094726
  - 0.3091849086537501
  test_matthews_corrcoef_micro:
  - 0.40802950280566863
  - 0.5357246750968103
  - 0.47492098332804605
  - 0.5882557448256769
  - 0.47498873133190017
  test_matthews_corrcoef_samples:
  - 0.38256576061176667
  - 0.46833221758417964
  - 0.4286441713292477
  - 0.5393087164826296
  - 0.4276672765945253
  test_matthews_corrcoef_weighted:
  - 0.11800223682159616
  - 0.37460438282974073
  - 0.23349964735379258
  - 0.4473637126414199
  - 0.3206220504700935
  test_ndgc:
  - 0.8263598493679711
  - 0.8704620745585325
  - 0.9068994590905429
  - 0.9160132823059411
  - 0.8765807133621114
  test_precision_macro:
  - 0.5251433349259436
  - 0.7025350140056023
  - 0.7942376950780312
  - 0.7960289166171519
  - 0.6325293753865182
  test_precision_micro:
  - 0.6344827586206897
  - 0.7463768115942029
  - 0.7461538461538462
  - 0.8267716535433071
  - 0.717391304347826
  test_precision_samples:
  - 0.6299557032115171
  - 0.7151190476190475
  - 0.7256756756756756
  - 0.8189814814814815
  - 0.7017543859649124
  test_precision_weighted:
  - 0.6220912155100334
  - 0.736453634085213
  - 0.778905653170359
  - 0.827315566705545
  - 0.7217782217782218
  test_recall_macro:
  - 0.5958463548563661
  - 0.6821964599511917
  - 0.6659438617864647
  - 0.7519569162787028
  - 0.6704948646125116
  test_recall_micro:
  - 0.71875
  - 0.7744360902255639
  - 0.7348484848484849
  - 0.7777777777777778
  - 0.7615384615384615
  test_recall_samples:
  - 0.7054263565891472
  - 0.7474999999999999
  - 0.7141570141570142
  - 0.7608465608465608
  - 0.7504385964912281
  test_recall_weighted:
  - 0.71875
  - 0.7744360902255639
  - 0.7348484848484849
  - 0.7777777777777778
  - 0.7615384615384615
  test_roc_auc_macro:
  - 0.6611641803954418
  - 0.7168014181969328
  - 0.723712526482217
  - 0.770463228352692
  - 0.714926933417045
  test_roc_auc_micro:
  - 0.7669797687861272
  - 0.80834739911002
  - 0.8268313051777618
  - 0.8568534346312123
  - 0.807522624434389
  test_roc_auc_samples:
  - 0.7193798449612403
  - 0.7595833333333333
  - .nan
  - .nan
  - 0.7789473684210527
  test_roc_auc_weighted:
  - 0.6191012723023992
  - 0.6964537968297366
  - 0.6836383607186183
  - 0.7431915415738946
  - 0.7178203286177424
start: 2023-10-21 17:51:50.093648
wrapper: null
