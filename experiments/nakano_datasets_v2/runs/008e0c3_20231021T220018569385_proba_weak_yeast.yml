active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADQzMzMz4z8AmJmZmZnZvwA0MzMzM+M/AJiZmZmZ2b8AmJmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADQzMzMz4z8AmJmZmZnZvwA0MzMzM+M/AJiZmZmZ2b8AmJmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wMzMzMzMBMBAMzMzMzMDQEAzMzMzMwNAYGZmZmZmFsBAMzMzMzMLQA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzMJEBgZmZmZmYewICZmZmZmfm/oJmZmZmZGUBgZmZmZmYewA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMzA8BAMzMzMzPjP9DMzMzMzARANDMzMzMzJUDMzMzMzMwmwA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z8wMzMzMzMDwKCZmZmZmfk/oJmZmZmZ+T9gZmZmZmb2vw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            cGZmZmZmDkDIzMzMzMwQwODMzMzMzPw/AJmZmZmZyb8gMzMzMzPzvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AoJmZmZnJPwCgmZmZmck/AJiZmZmZ6b8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz878AmpmZmZnpPwAzMzMzM/O/gJmZmZmZAcCAZmZmZmYOQA==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzM/D/MzMzMzMwUwDQzMzMzMxNAMDMzMzMz87+AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QGZmZmZmEsCAzMzMzMwMwIDMzMzMzATA4MzMzMzMKEAAmZmZmZn5vw==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 22:01:27.619481
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - rf
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.RandomForestRegressor
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        - - xt
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesRegressor
                params:
                  bootstrap: false
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: proba_weak
  params:
    memory: estimators_cache
hash: 008e0c38bb4ab80444ad57eb7b9932500eec8345d7dd3a9833ef4b7ac25936c2
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/008e0c3_20231021T220018569385_proba_weak_yeast.yml
results:
  fit_time:
  - 49.52368426322937
  - 50.98184847831726
  - 50.464802742004395
  - 50.490840435028076
  - 50.384960651397705
  score_time:
  - 13.106862783432007
  - 16.45865774154663
  - 14.523123979568481
  - 14.60386323928833
  - 14.519428491592407
  test_average_precision_macro:
  - 0.5373500509773849
  - 0.5413361717432807
  - 0.5184789312099495
  - 0.5500530346230005
  - 0.5203388396123257
  test_average_precision_micro:
  - 0.7389734173938514
  - 0.7249551294057576
  - 0.7285442134213345
  - 0.7499754348718993
  - 0.7134542511406128
  test_average_precision_samples:
  - 0.7746212742888924
  - 0.7652242107453802
  - 0.7632439506008974
  - 0.7927690550256863
  - 0.7588331222451251
  test_average_precision_weighted:
  - 0.6967061955067713
  - 0.6934877047938995
  - 0.6877933082540193
  - 0.7126746453857534
  - 0.6724616816496531
  test_coverage_error:
  - -6.813524590163935
  - -7.219712525667351
  - -7.288065843621399
  - -7.1252653927813165
  - -7.435051546391753
  test_f1_macro:
  - 0.4210659308199499
  - 0.4472192357501067
  - 0.44120243607015996
  - 0.46525595435325107
  - 0.44085295328684915
  test_f1_micro:
  - 0.6643835616438356
  - 0.6589958158995814
  - 0.663422131147541
  - 0.6859092101810548
  - 0.6568077511473738
  test_f1_samples:
  - 0.6345467601615142
  - 0.621113309460332
  - 0.6300174448322596
  - 0.6641760103543544
  - 0.6320967692101713
  test_f1_weighted:
  - 0.6167661950442631
  - 0.6212257665515573
  - 0.6271333708312192
  - 0.652280115042296
  - 0.6161275474409658
  test_hamming_loss:
  - -0.1864754098360656
  - -0.19125843355822822
  - -0.1931216931216931
  - -0.18152866242038215
  - -0.19823269513991162
  test_jaccard_macro:
  - 0.3132211279517323
  - 0.3270297831006262
  - 0.32349731273304094
  - 0.347055691216047
  - 0.3225655336738697
  test_jaccard_micro:
  - 0.49743589743589745
  - 0.4914196567862715
  - 0.4963587581448831
  - 0.521964856230032
  - 0.48899012908124523
  test_jaccard_samples:
  - 0.536272931303669
  - 0.5281118607607315
  - 0.5308661274710658
  - 0.5695037269878034
  - 0.5355359188348879
  test_jaccard_weighted:
  - 0.48353469149331574
  - 0.48051725731249006
  - 0.4896849578129725
  - 0.5156787141468653
  - 0.47766000251275387
  test_label_ranking_average_precision_score:
  - 0.7746212742888929
  - 0.7652242107453798
  - 0.7632439506008972
  - 0.7927690550256857
  - 0.7588331222451243
  test_label_ranking_loss:
  - 0.15400590212870655
  - 0.16639730295127772
  - 0.16820942627820937
  - 0.1532954277381029
  - 0.17738112607405687
  test_matthews_corrcoef_macro:
  - 0.26022384010135285
  - 0.2748842137778683
  - 0.26640329253779615
  - 0.29732038017537743
  - 0.2570570852057036
  test_matthews_corrcoef_micro:
  - 0.5390032904211898
  - 0.5304932283965207
  - 0.5293286507885299
  - 0.5619683315880241
  - 0.5193588363993713
  test_matthews_corrcoef_samples:
  - 0.5417225079298641
  - 0.5257166460753643
  - 0.525946328272589
  - 0.566669597542366
  - 0.5215113738149361
  test_matthews_corrcoef_weighted:
  - 0.26992849040110795
  - 0.2861948726399256
  - 0.29358003377011527
  - 0.317380583216573
  - 0.25845133151755456
  test_ndgc:
  - 0.8608711730210787
  - 0.856578199135055
  - 0.8567289563130034
  - 0.8750900466301751
  - 0.8555124879601185
  test_precision_macro:
  - 0.6296439608468573
  - 0.573059369812173
  - 0.5582206355488432
  - 0.6097134789448168
  - 0.565323798793955
  test_precision_micro:
  - 0.7168845935190449
  - 0.7159090909090909
  - 0.693254817987152
  - 0.7384180790960452
  - 0.692845615922539
  test_precision_samples:
  - 0.7078503122560499
  - 0.7017796030116359
  - 0.6816627474034882
  - 0.7353907592761095
  - 0.6855130093274424
  test_precision_weighted:
  - 0.7025316007808226
  - 0.685402038337325
  - 0.665412601075096
  - 0.7158598575839995
  - 0.6626989852129312
  test_recall_macro:
  - 0.3927036490254433
  - 0.40777306162191956
  - 0.41691947593738066
  - 0.42646975496125084
  - 0.4147037439912755
  test_recall_micro:
  - 0.6190476190476191
  - 0.6104651162790697
  - 0.6360510805500982
  - 0.6403723664870161
  - 0.6243334949103247
  test_recall_samples:
  - 0.6316354410616705
  - 0.608554968873244
  - 0.6366271474296165
  - 0.6483144303207997
  - 0.6310849288168876
  test_recall_weighted:
  - 0.6190476190476191
  - 0.6104651162790697
  - 0.6360510805500982
  - 0.6403723664870161
  - 0.6243334949103247
  test_roc_auc_macro:
  - 0.7405768883181322
  - 0.7264013621881873
  - 0.7346698081386677
  - 0.7401754140262273
  - 0.7123310816717472
  test_roc_auc_micro:
  - 0.8595545494892967
  - 0.8466952961683838
  - 0.8438711415988712
  - 0.8596083172193836
  - 0.8368004023051742
  test_roc_auc_samples:
  - 0.8459940978712934
  - 0.8336026970487223
  - 0.8317905737217907
  - 0.8467045722618971
  - 0.8226188739259431
  test_roc_auc_weighted:
  - 0.7350855784089159
  - 0.726828291010458
  - 0.7282260364863021
  - 0.7324924784019274
  - 0.708298169489704
start: 2023-10-21 22:00:18.569385
wrapper: null
