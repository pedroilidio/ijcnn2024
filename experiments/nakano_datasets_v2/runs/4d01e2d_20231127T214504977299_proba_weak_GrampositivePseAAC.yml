active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz878AmpmZmZnpPwCamZmZmek/AJiZmZmZyb8AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 21:46:12.261442
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - rf
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.RandomForestRegressor
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        - - xt
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesRegressor
                params:
                  bootstrap: false
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: proba_weak
  params:
    memory: estimators_cache
hash: 4d01e2daa9bb06016d702bffd1b53bc340a0d0bec73b879aff85ae22d1435582
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/4d01e2d_20231127T214504977299_proba_weak_GrampositivePseAAC.yml
results:
  fit_time:
  - 42.58210515975952
  - 41.49908375740051
  - 38.893230676651
  - 38.58316230773926
  - 37.71428823471069
  score_time:
  - 23.966431856155396
  - 25.017454385757446
  - 17.934145212173462
  - 15.651239395141602
  - 10.283360242843628
  test_average_precision_macro:
  - 0.4421348449286149
  - 0.3688808847286163
  - 0.4732234874265406
  - 0.3384938810627009
  - 0.36200533420130754
  test_average_precision_micro:
  - 0.4814234178795369
  - 0.491000167174485
  - 0.6038260092101507
  - 0.4365481448222343
  - 0.5088515870356275
  test_average_precision_samples:
  - 0.7071428571428572
  - 0.7119741100323623
  - 0.7322006472491909
  - 0.6875
  - 0.6979166666666666
  test_average_precision_weighted:
  - 0.4913303504807486
  - 0.4859484841460734
  - 0.6008774279270116
  - 0.43577902727918744
  - 0.47473816283290343
  test_coverage_error:
  - -1.7619047619047619
  - -1.766990291262136
  - -1.7281553398058251
  - -1.8365384615384615
  - -1.7596153846153846
  test_f1_macro:
  - 0.2765006385696041
  - 0.2898524815933048
  - 0.32445451250453067
  - 0.24807686595978498
  - 0.2427360774818402
  test_f1_micro:
  - 0.4137931034482759
  - 0.44318181818181823
  - 0.4855491329479769
  - 0.38150289017341044
  - 0.3930635838150289
  test_f1_samples:
  - 0.34285714285714286
  - 0.37540453074433655
  - 0.401294498381877
  - 0.3173076923076923
  - 0.3269230769230769
  test_f1_weighted:
  - 0.3791765492914918
  - 0.41068912548334136
  - 0.4531241478106284
  - 0.3517661761446846
  - 0.35148537902775195
  test_hamming_loss:
  - -0.24285714285714285
  - -0.23786407766990292
  - -0.21601941747572814
  - -0.25721153846153844
  - -0.25240384615384615
  test_jaccard_macro:
  - 0.17550808566433568
  - 0.19104912893776657
  - 0.2177981552981553
  - 0.15909238649955795
  - 0.16120507399577166
  test_jaccard_micro:
  - 0.2608695652173913
  - 0.2846715328467153
  - 0.32061068702290074
  - 0.2357142857142857
  - 0.2446043165467626
  test_jaccard_samples:
  - 0.34285714285714286
  - 0.3737864077669903
  - 0.39805825242718446
  - 0.3173076923076923
  - 0.3269230769230769
  test_jaccard_weighted:
  - 0.24355748418248416
  - 0.27330063943970107
  - 0.3077066862781148
  - 0.2264238309924513
  - 0.23274109611318913
  test_label_ranking_average_precision_score:
  - 0.7071428571428574
  - 0.7119741100323624
  - 0.7322006472491909
  - 0.6875000000000001
  - 0.6979166666666666
  test_label_ranking_loss:
  - 0.25396825396825395
  - 0.24838187702265374
  - 0.23462783171521034
  - 0.2788461538461538
  - 0.2532051282051282
  test_matthews_corrcoef_macro:
  - 0.15745868859543036
  - 0.14827708290615502
  - 0.2199019484253349
  - 0.09211846704173647
  - 0.08696096743541677
  test_matthews_corrcoef_micro:
  - 0.2782419013725741
  - 0.30830761104808363
  - 0.37014095526797464
  - 0.23506644497820695
  - 0.2499912986276169
  test_matthews_corrcoef_samples:
  - 0.23809523809523808
  - 0.2709775107041065
  - 0.31541780457973384
  - 0.20192307692307693
  - 0.21474358974358973
  test_matthews_corrcoef_weighted:
  - 0.19849286953279557
  - 0.20843935113119524
  - 0.2970619576846788
  - 0.12579600269258023
  - 0.12759089331383106
  test_ndgc:
  - 0.7817999288361186
  - 0.7858942427698619
  - 0.8010855560269056
  - 0.7669020151800283
  - 0.7751964295419236
  test_precision_macro:
  - 0.444078947368421
  - 0.3724120082815735
  - 0.47996453900709224
  - 0.32045454545454544
  - 0.2713178294573643
  test_precision_micro:
  - 0.5217391304347826
  - 0.5492957746478874
  - 0.6176470588235294
  - 0.4782608695652174
  - 0.4927536231884058
  test_precision_samples:
  - 0.34285714285714286
  - 0.3786407766990291
  - 0.4077669902912621
  - 0.3173076923076923
  - 0.3269230769230769
  test_precision_weighted:
  - 0.5492481203007519
  - 0.5013112491373362
  - 0.6292131036811889
  - 0.433041958041958
  - 0.3893858079904592
  test_recall_macro:
  - 0.24167247386759583
  - 0.2569047619047619
  - 0.27761904761904765
  - 0.21910014005602238
  - 0.2240418118466899
  test_recall_micro:
  - 0.34285714285714286
  - 0.37142857142857144
  - 0.4
  - 0.3173076923076923
  - 0.3269230769230769
  test_recall_samples:
  - 0.34285714285714286
  - 0.3737864077669903
  - 0.39805825242718446
  - 0.3173076923076923
  - 0.3269230769230769
  test_recall_weighted:
  - 0.34285714285714286
  - 0.37142857142857144
  - 0.4
  - 0.3173076923076923
  - 0.3269230769230769
  test_roc_auc_macro:
  - 0.6220250501764338
  - 0.6209402033196633
  - 0.6983788912790841
  - 0.5851212289351224
  - 0.612614377924641
  test_roc_auc_micro:
  - 0.7456386999244141
  - 0.7702187063750583
  - 0.7965565379246161
  - 0.7148052268244575
  - 0.7589681952662722
  test_roc_auc_samples:
  - 0.7460317460317459
  - 0.7516181229773463
  - 0.7653721682847897
  - 0.7211538461538461
  - 0.7467948717948718
  test_roc_auc_weighted:
  - 0.6476548713544825
  - 0.6713807887173364
  - 0.7166866972093587
  - 0.6044063496986882
  - 0.6429190389924085
start: 2023-11-27 21:45:04.977299
wrapper: null
