active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb8AmpmZmZnpPwCYmZmZmcm/AJqZmZmZ6T8AMzMzMzPzvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 21:52:15.125089
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: proba
  params:
    memory: estimators_cache
hash: 492bf9957b2de5da27f0bcf2ca77c25c95076661482cfd4710082f3187bab276
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/492bf99_20231127T215126608683_proba_GrampositivePseAAC.yml
results:
  fit_time:
  - 28.847596168518066
  - 30.086467027664185
  - 30.77215838432312
  - 27.752461433410645
  - 27.737448692321777
  score_time:
  - 17.331694841384888
  - 6.33490777015686
  - 17.226882696151733
  - 5.93962287902832
  - 5.882724046707153
  test_average_precision_macro:
  - 0.35772914098720365
  - 0.4261113974949894
  - 0.37429929806087914
  - 0.40846034651894025
  - 0.392995404516573
  test_average_precision_micro:
  - 0.4570411848631867
  - 0.5072511393046198
  - 0.46478204637593035
  - 0.5470645255359244
  - 0.5153475485045522
  test_average_precision_samples:
  - 0.7043269230769231
  - 0.7119741100323623
  - 0.7163461538461539
  - 0.6941747572815533
  - 0.7126984126984128
  test_average_precision_weighted:
  - 0.4643467498795919
  - 0.4990195472699374
  - 0.4667107729005192
  - 0.5312927069222473
  - 0.49436795144547796
  test_coverage_error:
  - -1.8076923076923077
  - -1.766990291262136
  - -1.6923076923076923
  - -1.8155339805825244
  - -1.7428571428571429
  test_f1_macro:
  - 0.011904761904761904
  - 0.0
  - 0.0
  - 0.0
  - 0.014285714285714287
  test_f1_micro:
  - 0.01904761904761905
  - 0.0
  - 0.0
  - 0.0
  - 0.01886792452830189
  test_f1_samples:
  - 0.009615384615384616
  - 0.0
  - 0.0
  - 0.0
  - 0.009523809523809525
  test_f1_weighted:
  - 0.018772893772893772
  - 0.0
  - 0.0
  - 0.0
  - 0.01850340136054422
  test_hamming_loss:
  - -0.24759615384615385
  - -0.25485436893203883
  - -0.25
  - -0.25485436893203883
  - -0.24761904761904763
  test_jaccard_macro:
  - 0.006097560975609756
  - 0.0
  - 0.0
  - 0.0
  - 0.007352941176470588
  test_jaccard_micro:
  - 0.009615384615384616
  - 0.0
  - 0.0
  - 0.0
  - 0.009523809523809525
  test_jaccard_samples:
  - 0.009615384615384616
  - 0.0
  - 0.0
  - 0.0
  - 0.009523809523809525
  test_jaccard_weighted:
  - 0.009615384615384616
  - 0.0
  - 0.0
  - 0.0
  - 0.009523809523809525
  test_label_ranking_average_precision_score:
  - 0.7043269230769232
  - 0.7119741100323624
  - 0.7163461538461539
  - 0.6941747572815534
  - 0.7126984126984126
  test_label_ranking_loss:
  - 0.2692307692307692
  - 0.2475728155339806
  - 0.23076923076923078
  - 0.26375404530744334
  - 0.24761904761904763
  test_matthews_corrcoef_macro:
  - 0.030535127847745962
  - 0.0
  - 0.0
  - 0.0
  - 0.0354252606909621
  test_matthews_corrcoef_micro:
  - 0.08502303018977037
  - 0.0
  - 0.0
  - 0.0
  - 0.08461621909897774
  test_matthews_corrcoef_samples:
  - 0.009615384615384616
  - 0.0
  - 0.0
  - 0.0
  - 0.009523809523809525
  test_matthews_corrcoef_weighted:
  - 0.04815154775990709
  - 0.0
  - 0.0
  - 0.0
  - 0.04588414718067472
  test_ndgc:
  - 0.7792457163386615
  - 0.786154611392352
  - 0.7891810023530699
  - 0.7730940514717173
  - 0.7859751068204534
  test_precision_macro:
  - 0.25
  - 0.0
  - 0.0
  - 0.0
  - 0.25
  test_precision_micro:
  - 1.0
  - 0.0
  - 0.0
  - 0.0
  - 1.0
  test_precision_samples:
  - 0.009615384615384616
  - 0.0
  - 0.0
  - 0.0
  - 0.009523809523809525
  test_precision_weighted:
  - 0.3942307692307692
  - 0.0
  - 0.0
  - 0.0
  - 0.3238095238095238
  test_recall_macro:
  - 0.006097560975609756
  - 0.0
  - 0.0
  - 0.0
  - 0.007352941176470588
  test_recall_micro:
  - 0.009615384615384616
  - 0.0
  - 0.0
  - 0.0
  - 0.009523809523809525
  test_recall_samples:
  - 0.009615384615384616
  - 0.0
  - 0.0
  - 0.0
  - 0.009523809523809525
  test_recall_weighted:
  - 0.009615384615384616
  - 0.0
  - 0.0
  - 0.0
  - 0.009523809523809525
  test_roc_auc_macro:
  - 0.6544929068853377
  - 0.6895307946633887
  - 0.7013916452052719
  - 0.6337960884863922
  - 0.659028314526976
  test_roc_auc_micro:
  - 0.7475036982248521
  - 0.7694431518535754
  - 0.7652243589743589
  - 0.7644175585543664
  - 0.7701587301587302
  test_roc_auc_samples:
  - 0.7307692307692307
  - 0.7524271844660193
  - 0.7692307692307693
  - 0.7362459546925567
  - 0.7523809523809524
  test_roc_auc_weighted:
  - 0.6478782656187202
  - 0.6676464559762536
  - 0.6712432314062748
  - 0.6618951281561294
  - 0.6727801915479465
start: 2023-11-27 21:51:26.608683
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
