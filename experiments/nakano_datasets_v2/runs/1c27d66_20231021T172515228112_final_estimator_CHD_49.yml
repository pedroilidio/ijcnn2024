active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT9mZmZmZmYGwDQzMzMzM/M/oJmZmZmZyT80MzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAADwPw==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 17:25:21.317902
estimator:
  call: nakano_datasets_v2.estimators.final_estimator
  final_params:
    estimators:
    - - rf
      - call: sklearn.ensemble._forest.RandomForestClassifier
        params:
          bootstrap: true
          ccp_alpha: 0.0
          class_weight: null
          criterion: gini
          max_depth: null
          max_features: sqrt
          max_leaf_nodes: null
          max_samples: 0.9
          min_impurity_decrease: 0.0
          min_samples_leaf: 5
          min_samples_split: 2
          min_weight_fraction_leaf: 0.0
          n_estimators: 150
          n_jobs: 14
          oob_score: true
          random_state: 0
          verbose: true
          warm_start: false
    - - xt
      - call: sklearn.ensemble._forest.ExtraTreesClassifier
        params:
          bootstrap: true
          ccp_alpha: 0.0
          class_weight: null
          criterion: gini
          max_depth: null
          max_features: sqrt
          max_leaf_nodes: null
          max_samples: 0.9
          min_impurity_decrease: 0.0
          min_samples_leaf: 5
          min_samples_split: 2
          min_weight_fraction_leaf: 0.0
          n_estimators: 150
          n_jobs: 14
          oob_score: true
          random_state: 0
          verbose: true
          warm_start: false
  name: final_estimator
  params: {}
hash: 1c27d66675fc5cd86fe3620f635cb3b84a368f3891b21f7de539dd00106fab57
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/1c27d66_20231021T172515228112_final_estimator_CHD_49.yml
results:
  fit_time:
  - 1.3934757709503174
  - 1.3814384937286377
  - 1.3898544311523438
  - 1.3559067249298096
  - 1.3624279499053955
  score_time:
  - 4.509119033813477
  - 4.532188892364502
  - 4.48609471321106
  - 4.41288948059082
  - 4.506561040878296
  test_average_precision_macro:
  - 0.5306036206435997
  - 0.5257451893185298
  - 0.5266021420048839
  - 0.5640485290615721
  - 0.5818128694713299
  test_average_precision_micro:
  - 0.7057550629972762
  - 0.6824036753810372
  - 0.6979607031376479
  - 0.714981979453251
  - 0.7204965581099866
  test_average_precision_samples:
  - 0.790815815815816
  - 0.7784659659659661
  - 0.794632132132132
  - 0.8046875
  - 0.7996464646464646
  test_average_precision_weighted:
  - 0.6630797789564956
  - 0.6313159121281348
  - 0.6474740665553241
  - 0.6891186347979075
  - 0.6875529131147583
  test_coverage_error:
  - -3.6936936936936937
  - -3.810810810810811
  - -3.684684684684685
  - -3.5982142857142856
  - -3.6454545454545455
  test_f1_macro:
  - 0.42231067538889816
  - 0.4446020397975093
  - 0.4629234354533604
  - 0.4423713043936203
  - 0.4335763652724148
  test_f1_micro:
  - 0.6531365313653138
  - 0.6596491228070176
  - 0.6737967914438502
  - 0.6595744680851064
  - 0.6642984014209592
  test_f1_samples:
  - 0.6252538252538254
  - 0.6242385242385243
  - 0.6477906477906479
  - 0.6274234693877551
  - 0.632987012987013
  test_f1_weighted:
  - 0.5803166008032998
  - 0.5975691054564379
  - 0.6232282689594897
  - 0.602421133832507
  - 0.6002913798517092
  test_hamming_loss:
  - -0.2822822822822823
  - -0.2912912912912913
  - -0.2747747747747748
  - -0.2857142857142857
  - -0.2863636363636364
  test_jaccard_macro:
  - 0.32230457730457734
  - 0.3388859372192705
  - 0.3537254220811057
  - 0.33703185328185326
  - 0.33406034731335943
  test_jaccard_micro:
  - 0.4849315068493151
  - 0.49214659685863876
  - 0.5080645161290323
  - 0.49206349206349204
  - 0.4973404255319149
  test_jaccard_samples:
  - 0.5103603603603604
  - 0.5132132132132131
  - 0.5430930930930931
  - 0.5130952380952382
  - 0.5216666666666666
  test_jaccard_weighted:
  - 0.45980149527517955
  - 0.47315477253621585
  - 0.4934955806822449
  - 0.4758287416881167
  - 0.47951820616373575
  test_label_ranking_average_precision_score:
  - 0.7908158158158157
  - 0.796483983983984
  - 0.794632132132132
  - 0.8046875000000002
  - 0.8087373737373738
  test_label_ranking_loss:
  - 0.2066316316316316
  - 0.2078078078078078
  - 0.20665665665665667
  - 0.1883184523809524
  - 0.18467171717171718
  test_matthews_corrcoef_macro:
  - 0.12200397720408007
  - 0.11402480981615554
  - 0.1344534895526502
  - 0.1048768409282838
  - 0.11144548963073664
  test_matthews_corrcoef_micro:
  - 0.4178129194902258
  - 0.40552763954040494
  - 0.43652702245936265
  - 0.41389062052910486
  - 0.4147934198655121
  test_matthews_corrcoef_samples:
  - 0.4258608863810925
  - 0.4124722358442587
  - 0.4476247893139112
  - 0.42371939755081506
  - 0.43179569309111854
  test_matthews_corrcoef_weighted:
  - 0.13294448009357165
  - 0.11624641084022323
  - 0.1468367040442805
  - 0.11377095101568283
  - 0.12350921570826248
  test_ndgc:
  - 0.8628512201448666
  - 0.8540054453326877
  - 0.8659175867091254
  - 0.8730952598968694
  - 0.8680345524626495
  test_precision_macro:
  - 0.5398594344414778
  - 0.5496659222890122
  - 0.5235865797186552
  - 0.5076236263736263
  - 0.5416892135642136
  test_precision_micro:
  - 0.688715953307393
  - 0.6738351254480287
  - 0.6798561151079137
  - 0.6739130434782609
  - 0.6726618705035972
  test_precision_samples:
  - 0.6876876876876877
  - 0.668918918918919
  - 0.6884384384384384
  - 0.6696428571428571
  - 0.6787878787878788
  test_precision_weighted:
  - 0.6589008885342599
  - 0.6576058187604928
  - 0.6500245989645282
  - 0.6307315514346765
  - 0.6588361054150528
  test_recall_macro:
  - 0.43100856277753713
  - 0.4605963057057448
  - 0.4761643669734337
  - 0.4548084091517744
  - 0.4553454715219421
  test_recall_micro:
  - 0.6210526315789474
  - 0.6460481099656358
  - 0.6678445229681979
  - 0.6458333333333334
  - 0.656140350877193
  test_recall_samples:
  - 0.6198198198198198
  - 0.623873873873874
  - 0.6561561561561561
  - 0.6428571428571429
  - 0.6401515151515152
  test_recall_weighted:
  - 0.6210526315789474
  - 0.6460481099656358
  - 0.6678445229681979
  - 0.6458333333333334
  - 0.656140350877193
  test_roc_auc_macro:
  - 0.5748078321153011
  - 0.5625830664498356
  - 0.6209310596667151
  - 0.66786574278603
  - 0.635333488951136
  test_roc_auc_micro:
  - 0.7899894092185844
  - 0.7812783505154639
  - 0.7956250172988033
  - 0.8037380642361112
  - 0.8061847953216374
  test_roc_auc_samples:
  - 0.7933683683683684
  - .nan
  - 0.7933433433433434
  - 0.8116815476190476
  - .nan
  test_roc_auc_weighted:
  - 0.6135491897934329
  - 0.5558029930232066
  - 0.6183232083619135
  - 0.6434385266927377
  - 0.6263113557313764
start: 2023-10-21 17:25:15.228112
wrapper: null
