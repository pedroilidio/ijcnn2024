active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            wJmZmZmZyT/AmZmZmZnJP8CZmZmZmck/kJmZmZmZ6b/AmZmZmZnJPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz479AMzMzMzPjv4CZmZmZmdk/gJmZmZmZ2T+AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZP8CZmZmZmdk/IDMzMzMz478gMzMzMzPjvw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AGZmZmZm9r8AzczMzMwMQACamZmZmfk/gJmZmZmZFcAAmpmZmZn5Pw==
      n_labels: 12
      n_samples: 978
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: PlantGO
  params:
    path: nakano_datasets_v2/datasets/MLC/PlantGO.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 17:25:49.501635
estimator:
  call: nakano_datasets_v2.estimators.final_estimator
  final_params:
    estimators:
    - - rf
      - call: sklearn.ensemble._forest.RandomForestClassifier
        params:
          bootstrap: true
          ccp_alpha: 0.0
          class_weight: null
          criterion: gini
          max_depth: null
          max_features: sqrt
          max_leaf_nodes: null
          max_samples: 0.9
          min_impurity_decrease: 0.0
          min_samples_leaf: 5
          min_samples_split: 2
          min_weight_fraction_leaf: 0.0
          n_estimators: 150
          n_jobs: 14
          oob_score: true
          random_state: 0
          verbose: true
          warm_start: false
    - - xt
      - call: sklearn.ensemble._forest.ExtraTreesClassifier
        params:
          bootstrap: true
          ccp_alpha: 0.0
          class_weight: null
          criterion: gini
          max_depth: null
          max_features: sqrt
          max_leaf_nodes: null
          max_samples: 0.9
          min_impurity_decrease: 0.0
          min_samples_leaf: 5
          min_samples_split: 2
          min_weight_fraction_leaf: 0.0
          n_estimators: 150
          n_jobs: 14
          oob_score: true
          random_state: 0
          verbose: true
          warm_start: false
  name: final_estimator
  params: {}
hash: f996ef96e6e42cffe21f6baf08d6f78e5d4975921660df701d10eda2bb083902
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/f996ef9_20231021T172539603733_final_estimator_PlantGO.yml
results:
  fit_time:
  - 1.944321632385254
  - 1.9490034580230713
  - 1.9798109531402588
  - 1.8863730430603027
  - 1.869704008102417
  score_time:
  - 7.4162139892578125
  - 7.390947103500366
  - 7.491631746292114
  - 7.2580649852752686
  - 7.264771223068237
  test_average_precision_macro:
  - 0.8065315697806072
  - 0.7916135323247988
  - 0.7682057514033556
  - 0.7707701388430346
  - 0.8084788913900812
  test_average_precision_micro:
  - 0.7833857326677364
  - 0.7707003042277525
  - 0.7257697148260228
  - 0.7425036462804632
  - 0.7353277641690409
  test_average_precision_samples:
  - 0.856248489243413
  - 0.8285300925925925
  - 0.8086258386516116
  - 0.8447208402432284
  - 0.8112686139747995
  test_average_precision_weighted:
  - 0.8690539500965914
  - 0.8653650436913592
  - 0.8310403099435945
  - 0.8215907801300333
  - 0.8458844611894002
  test_coverage_error:
  - -1.6243654822335025
  - -1.7447916666666667
  - -1.768041237113402
  - -1.6417910447761195
  - -1.7783505154639174
  test_f1_macro:
  - 0.12773268398268398
  - 0.11244834821684917
  - 0.11995577286918054
  - 0.1144244587640814
  - 0.10354390223130643
  test_f1_micro:
  - 0.43478260869565216
  - 0.3849056603773585
  - 0.3955223880597015
  - 0.39272727272727276
  - 0.3805970149253732
  test_f1_samples:
  - 0.29949238578680204
  - 0.2621527777777778
  - 0.26804123711340205
  - 0.263681592039801
  - 0.26288659793814434
  test_f1_weighted:
  - 0.3280649972037532
  - 0.2995487448997886
  - 0.30802320545459344
  - 0.29916883278562784
  - 0.28453954865284364
  test_hamming_loss:
  - -0.06598984771573604
  - -0.07074652777777778
  - -0.06958762886597938
  - -0.06923714759535655
  - -0.07130584192439862
  test_jaccard_macro:
  - 0.09878472222222223
  - 0.08273765568847535
  - 0.0894115890083632
  - 0.08612891737891737
  - 0.08032871083718542
  test_jaccard_micro:
  - 0.2777777777777778
  - 0.2383177570093458
  - 0.24651162790697675
  - 0.24434389140271492
  - 0.2350230414746544
  test_jaccard_samples:
  - 0.2969543147208122
  - 0.2604166666666667
  - 0.2654639175257732
  - 0.26119402985074625
  - 0.26288659793814434
  test_jaccard_weighted:
  - 0.2630083732057416
  - 0.23005464480874316
  - 0.2370199692780338
  - 0.2310310581437342
  - 0.23101147546122483
  test_label_ranking_average_precision_score:
  - 0.856248489243413
  - 0.8285300925925925
  - 0.8086258386516116
  - 0.8447208402432279
  - 0.8112686139747998
  test_label_ranking_loss:
  - 0.04708677297509785
  - 0.05546611952861954
  - 0.06073796383074734
  - 0.05045228403437359
  - 0.05944236176194939
  test_matthews_corrcoef_macro:
  - 0.13449399835332343
  - 0.13116656568690102
  - 0.1341894321409096
  - 0.11753148558078914
  - 0.1118762855606868
  test_matthews_corrcoef_micro:
  - 0.48555886891473177
  - 0.45430058749572916
  - 0.4595373954527294
  - 0.44803252421829726
  - 0.4509314116037042
  test_matthews_corrcoef_samples:
  - 0.29637683223871114
  - 0.26033730917338604
  - 0.2658147120249704
  - 0.2601757555229702
  - 0.2610121836925961
  test_matthews_corrcoef_weighted:
  - 0.33166561293092117
  - 0.3274933525206175
  - 0.3266542060509567
  - 0.29745167663852395
  - 0.29327662152865264
  test_ndgc:
  - 0.8934413944650175
  - 0.8733040781053751
  - 0.8576145665641225
  - 0.884682512263127
  - 0.8597135490308074
  test_precision_macro:
  - 0.23899371069182393
  - 0.3259259259259259
  - 0.32407407407407407
  - 0.2314369658119658
  - 0.22256728778467907
  test_precision_micro:
  - 0.8955223880597015
  - 0.9272727272727272
  - 0.9137931034482759
  - 0.8709677419354839
  - 0.9272727272727272
  test_precision_samples:
  - 0.30456852791878175
  - 0.265625
  - 0.27319587628865977
  - 0.26865671641791045
  - 0.26288659793814434
  test_precision_weighted:
  - 0.523788029249797
  - 0.7092063492063492
  - 0.6984126984126984
  - 0.5359485975683158
  - 0.5007727524567696
  test_recall_macro:
  - 0.10614035087719298
  - 0.086668247194563
  - 0.09412768031189084
  - 0.09348092530795533
  - 0.08332390115072627
  test_recall_micro:
  - 0.28708133971291866
  - 0.24285714285714285
  - 0.2523809523809524
  - 0.2535211267605634
  - 0.23943661971830985
  test_recall_samples:
  - 0.2969543147208122
  - 0.2604166666666667
  - 0.2654639175257732
  - 0.26119402985074625
  - 0.26288659793814434
  test_recall_weighted:
  - 0.28708133971291866
  - 0.24285714285714285
  - 0.2523809523809524
  - 0.2535211267605634
  - 0.23943661971830985
  test_roc_auc_macro:
  - 0.9714766424357072
  - 0.9696589146373263
  - 0.9751896594114647
  - 0.9681597382563166
  - 0.9724343325439228
  test_roc_auc_micro:
  - 0.9584942106373294
  - 0.9565606949561104
  - 0.9537052025720582
  - 0.956093999192975
  - 0.9550760829753937
  test_roc_auc_samples:
  - 0.9529132270249021
  - 0.9445338804713804
  - 0.9392620361692527
  - 0.9495477159656264
  - 0.9405576382380505
  test_roc_auc_weighted:
  - 0.9740925380744957
  - 0.9719050248561396
  - 0.9681594453145576
  - 0.9664609686001074
  - 0.9734179720676234
start: 2023-10-21 17:25:39.603733
wrapper: null
