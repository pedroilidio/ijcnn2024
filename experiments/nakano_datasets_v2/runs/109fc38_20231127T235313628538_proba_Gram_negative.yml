active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz479oZmZmZmb2P2hmZmZmZvY/aGZmZmZm9j/MzMzMzMwMwA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gMzMzMzMDMCAzMzMzMwEwACZmZmZmfm/wJmZmZmZHUAAnJmZmZnZPw==
      n_labels: 8
      n_samples: 1392
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_negative
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_negative.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 23:54:30.983475
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: proba
  params:
    memory: estimators_cache
hash: 109fc384afd325d06a0fe891c0943ae6f554ba08cc740bdaadf86c3c0afb1ee8
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/109fc38_20231127T235313628538_proba_Gram_negative.yml
results:
  fit_time:
  - 39.03901219367981
  - 38.43312668800354
  - 39.06610631942749
  - 38.56991958618164
  - 39.72770571708679
  score_time:
  - 37.48089361190796
  - 34.12828469276428
  - 37.385841846466064
  - 33.96600103378296
  - 28.454806804656982
  test_average_precision_macro:
  - 0.9849456683481127
  - 0.9916261013490428
  - 0.9868087477932794
  - 0.9891831994259033
  - 0.9490802055702289
  test_average_precision_micro:
  - 0.9705821996305719
  - 0.976703306507486
  - 0.9770138897948956
  - 0.972679501086029
  - 0.9393241737264298
  test_average_precision_samples:
  - 0.9660165484633568
  - 0.9702592780884595
  - 0.9766071428571428
  - 0.9690651906519065
  - 0.9593525179856115
  test_average_precision_weighted:
  - 0.9812624641033914
  - 0.9896883658618347
  - 0.9862381378672523
  - 0.985871713311056
  - 0.9505682295863778
  test_coverage_error:
  - -1.127659574468085
  - -1.1423487544483986
  - -1.1107142857142858
  - -1.1586715867158672
  - -1.2338129496402879
  test_f1_macro:
  - 0.0
  - 0.0022321428571428575
  - 0.045241105291674195
  - 0.0030120481927710845
  - 0.036422915696320446
  test_f1_micro:
  - 0.0
  - 0.006872852233676977
  - 0.11726384364820845
  - 0.006872852233676977
  - 0.09061488673139159
  test_f1_samples:
  - 0.0
  - 0.0035587188612099642
  - 0.0630952380952381
  - 0.0036900369003690036
  - 0.050359712230215826
  test_f1_weighted:
  - 0.0
  - 0.006834975369458129
  - 0.10624468423496415
  - 0.006813460739509764
  - 0.08279459711224965
  test_hamming_loss:
  - -0.12943262411347517
  - -0.12855871886120995
  - -0.12098214285714286
  - -0.13330258302583026
  - -0.12634892086330934
  test_jaccard_macro:
  - 0.0
  - 0.0011261261261261261
  - 0.02664249615469128
  - 0.001524390243902439
  - 0.020933144599303136
  test_jaccard_micro:
  - 0.0
  - 0.0034482758620689655
  - 0.06228373702422145
  - 0.0034482758620689655
  - 0.04745762711864407
  test_jaccard_samples:
  - 0.0
  - 0.0035587188612099642
  - 0.0625
  - 0.0036900369003690036
  - 0.050359712230215826
  test_jaccard_weighted:
  - 0.0
  - 0.0034482758620689655
  - 0.06228373702422145
  - 0.0034482758620689655
  - 0.04745762711864407
  test_label_ranking_average_precision_score:
  - 0.966016548463357
  - 0.9702592780884595
  - 0.976607142857143
  - 0.9690651906519065
  - 0.9593525179856117
  test_label_ranking_loss:
  - 0.012749071259709557
  - 0.013853584138281645
  - 0.010161564625850338
  - 0.010894394658232297
  - 0.019741349777320998
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.009244724399079142
  - 0.060900564678110974
  - 0.011549205441997445
  - 0.05194711377854784
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.054815806543863886
  - 0.2338535346493228
  - 0.05466625707556142
  - 0.20352744788250943
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.0035587188612099642
  - 0.06305233453824279
  - 0.0036900369003690036
  - 0.050359712230215826
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.02830798367718027
  - 0.148740022930313
  - 0.026125099206725257
  - 0.12295511946034363
  test_ndgc:
  - 0.9749946309167125
  - 0.9783602437039244
  - 0.9830978381410002
  - 0.9780733565726009
  - 0.9719019281272466
  test_precision_macro:
  - 0.0
  - 0.125
  - 0.25
  - 0.125
  - 0.25
  test_precision_micro:
  - 0.0
  - 1.0
  - 1.0
  - 1.0
  - 1.0
  test_precision_samples:
  - 0.0
  - 0.0035587188612099642
  - 0.06428571428571428
  - 0.0036900369003690036
  - 0.050359712230215826
  test_precision_weighted:
  - 0.0
  - 0.38275862068965516
  - 0.6678200692041523
  - 0.2827586206896552
  - 0.6576271186440678
  test_recall_macro:
  - 0.0
  - 0.0011261261261261261
  - 0.02664249615469128
  - 0.001524390243902439
  - 0.020933144599303136
  test_recall_micro:
  - 0.0
  - 0.0034482758620689655
  - 0.06228373702422145
  - 0.0034482758620689655
  - 0.04745762711864407
  test_recall_samples:
  - 0.0
  - 0.0035587188612099642
  - 0.0625
  - 0.0036900369003690036
  - 0.050359712230215826
  test_recall_weighted:
  - 0.0
  - 0.0034482758620689655
  - 0.06228373702422145
  - 0.0034482758620689655
  - 0.04745762711864407
  test_roc_auc_macro:
  - 0.9952996365614055
  - 0.9974769356960591
  - 0.9951762194002929
  - 0.9961012772714635
  - 0.9875449474104481
  test_roc_auc_micro:
  - 0.9940321331919761
  - 0.9935683843471522
  - 0.9934254281807395
  - 0.993287062539018
  - 0.9841104989851597
  test_roc_auc_samples:
  - 0.9872509287402905
  - 0.9861464158617185
  - 0.9898384353741497
  - 0.9891056053417676
  - 0.9802586502226792
  test_roc_auc_weighted:
  - 0.9923707476437672
  - 0.9952525260288225
  - 0.9930650230560691
  - 0.993792499292542
  - 0.9814021412392275
start: 2023-11-27 23:53:13.628538
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
