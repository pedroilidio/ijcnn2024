active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T+AmZmZmZn5vwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8AmJmZmZnZvwCYmZmZmdm/ADQzMzMz4z8ANDMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8AmJmZmZnZvwCYmZmZmdm/ADQzMzMz4z8ANDMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wMzMzMzMBMAAmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T+AZmZmZmb2Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMzIcCAmZmZmZn5v2BmZmZmZh7AQDMzMzMzC0DQzMzMzMwsQA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzMBEBAMzMzMzPjPzAzMzMzMwPAMDMzMzMzA8CgmZmZmZn5Pw==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z8wMzMzMzMDwEAzMzMzM+M/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            yMzMzMzMEMDIzMzMzMwUwJCZmZmZmQHAnJmZmZmZKUAgMzMzMzPzvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AmJmZmZnpvwCgmZmZmck/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZyb8AmpmZmZnpP4BmZmZmZgZAgJmZmZmZAcAAMzMzMzPzvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzM/D+YmZmZmZkJwNDMzMzMzPw/oJmZmZmZ6T8wMzMzMzPzvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QGZmZmZmEsDgzMzMzMwkQCAzMzMzMyfA4MzMzMzMJkBAZmZmZmYWwA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_v2/runs
end: 2023-11-28 09:50:39.977415
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.7
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler:
            call: deep_forest.weak_labels.PositiveUnlabeledImputer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesClassifier
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  class_weight: null
                  criterion: gini
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: 0.9
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: true
                  random_state: 0
                  verbose: true
                  warm_start: false
              sampling_strategy: auto
              threshold: 0.8
              use_oob_proba: true
              verbose: true
              weight_proba: true
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: proba_weak
  params:
    memory: estimators_cache
hash: 56cf2db487dbb0e9682dd95e5c2b88c013393431e689cc07748ce52c426445d0
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/56cf2db_20231128T094935363491_proba_weak_yeast.yml
results:
  fit_time:
  - 47.40097618103027
  - 50.39880394935608
  - 50.49520969390869
  - 50.354430198669434
  - 50.32190132141113
  score_time:
  - 12.166178464889526
  - 10.472685098648071
  - 11.561307907104492
  - 10.51835322380066
  - 10.637211799621582
  test_average_precision_macro:
  - 0.4753190993059762
  - 0.5049443934662
  - 0.4895722653255558
  - 0.4837471716155357
  - 0.4773440402112596
  test_average_precision_micro:
  - 0.6691665848120458
  - 0.6991817645348579
  - 0.6877306032194852
  - 0.6899907253616131
  - 0.6780260419457018
  test_average_precision_samples:
  - 0.7333862254670582
  - 0.75242239634757
  - 0.7414679054689275
  - 0.7444325303448084
  - 0.7512173362069009
  test_average_precision_weighted:
  - 0.6327201529418511
  - 0.6665965725736824
  - 0.6483781686873958
  - 0.6510469326911396
  - 0.638081902788826
  test_coverage_error:
  - -7.702868852459017
  - -7.7716701902748415
  - -7.313131313131313
  - -7.459745762711864
  - -7.325153374233129
  test_f1_macro:
  - 0.017979028012765023
  - 0.01982176030820306
  - 0.02063924286618629
  - 0.02524227750071253
  - 0.017112001885684944
  test_f1_micro:
  - 0.030592734225621414
  - 0.029608404966571154
  - 0.032567049808429116
  - 0.03857280617164899
  - 0.028128031037827354
  test_f1_samples:
  - 0.024463309914129587
  - 0.0242474579683882
  - 0.023690877024210355
  - 0.02978712671509282
  - 0.0221459408575973
  test_f1_weighted:
  - 0.030109367939599688
  - 0.0293972180432482
  - 0.03236792920488502
  - 0.03813627814274431
  - 0.027691018949623687
  test_hamming_loss:
  - -0.2968384074941452
  - -0.3068559347629115
  - -0.29148629148629146
  - -0.30175544794188863
  - -0.2927256792287467
  test_jaccard_macro:
  - 0.009245119175914527
  - 0.010136433585898762
  - 0.010555408943129776
  - 0.013025909176892114
  - 0.00881889905686531
  test_jaccard_micro:
  - 0.015533980582524271
  - 0.015026660203587009
  - 0.016553067185978577
  - 0.01966568338249754
  - 0.01426463354648303
  test_jaccard_samples:
  - 0.01612021857923497
  - 0.016321856438135506
  - 0.014974346641013308
  - 0.020066585956416465
  - 0.014167308492461865
  test_jaccard_weighted:
  - 0.015533980582524271
  - 0.015027304253085846
  - 0.016553067185978577
  - 0.01966049199202175
  - 0.014268934615217298
  test_label_ranking_average_precision_score:
  - 0.7333862254670579
  - 0.7524223963475694
  - 0.741467905468927
  - 0.7444325303448082
  - 0.7512173362069005
  test_label_ranking_loss:
  - 0.1907447507930529
  - 0.1805909005924107
  - 0.1759739006384028
  - 0.17503307326249212
  - 0.17420556445534535
  test_matthews_corrcoef_macro:
  - 0.042717653251255434
  - 0.050323349501610985
  - 0.05212551722527831
  - 0.054395629456984736
  - 0.03702480182132208
  test_matthews_corrcoef_micro:
  - 0.10440880860673264
  - 0.09892371845301685
  - 0.10818634805141983
  - 0.11435619903352977
  - 0.09727383802245665
  test_matthews_corrcoef_samples:
  - 0.02589938244159967
  - 0.024962658136365053
  - 0.025586180234189897
  - 0.03066039251993624
  - 0.023619589218389928
  test_matthews_corrcoef_weighted:
  - 0.06271574999215886
  - 0.06487216527154263
  - 0.07604412442719363
  - 0.07225417926953345
  - 0.05141078202559629
  test_ndgc:
  - 0.8396672778907606
  - 0.8538610248676157
  - 0.8404705414692315
  - 0.8464572472183823
  - 0.8498970350373954
  test_precision_macro:
  - 0.42857142857142855
  - 0.5595238095238095
  - 0.5
  - 0.49404761904761907
  - 0.40476190476190477
  test_precision_micro:
  - 1.0
  - 0.96875
  - 1.0
  - 0.975609756097561
  - 0.9666666666666667
  test_precision_samples:
  - 0.055327868852459015
  - 0.052854122621564484
  - 0.06464646464646465
  - 0.0635593220338983
  - 0.05725971370143149
  test_precision_weighted:
  - 0.6640776699029126
  - 0.8042353701907534
  - 0.7755598831548198
  - 0.7258976881455976
  - 0.6233595800524935
  test_recall_macro:
  - 0.009245119175914527
  - 0.010139121700132864
  - 0.010555408943129776
  - 0.013031855611409977
  - 0.008819992223046245
  test_recall_micro:
  - 0.015533980582524271
  - 0.015033947623666343
  - 0.016553067185978577
  - 0.019675356615838663
  - 0.014271653543307087
  test_recall_samples:
  - 0.01612021857923497
  - 0.016321856438135506
  - 0.014974346641013308
  - 0.020066585956416465
  - 0.014167308492461865
  test_recall_weighted:
  - 0.015533980582524271
  - 0.015033947623666343
  - 0.016553067185978577
  - 0.019675356615838663
  - 0.014271653543307087
  test_roc_auc_macro:
  - 0.6796969321107654
  - 0.6796691941128045
  - 0.6901707660259513
  - 0.6874920464794624
  - 0.6707696603487442
  test_roc_auc_micro:
  - 0.8190077230446212
  - 0.8255017165245802
  - 0.8307853660757578
  - 0.827142853303014
  - 0.8228569313910543
  test_roc_auc_samples:
  - 0.8092552492069471
  - 0.8194090994075892
  - 0.8240260993615972
  - 0.8249669267375079
  - 0.8257944355446546
  test_roc_auc_weighted:
  - 0.6665297619524506
  - 0.6748613918245024
  - 0.6884047792123255
  - 0.6739425589526978
  - 0.6722615413418043
start: 2023-11-28 09:49:35.363491
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop70
  params:
    drop: 0.7
    random_state: 0
