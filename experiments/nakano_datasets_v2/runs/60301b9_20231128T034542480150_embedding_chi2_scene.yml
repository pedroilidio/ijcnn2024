active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb+AmZmZmZnpPwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADIzMzMz478AnJmZmZnZP4DMzMzMzATAgDMzMzMzA0AAnJmZmZnZPw==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_v2/runs
end: 2023-11-28 04:01:32.065010
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_pvalue
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 0.05
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 0.05
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding_chi2
  params:
    memory: estimators_cache
hash: 60301b9eea98e7746fd97fd6830266d13f7b4530e0a02afd36ab8e91bf5075de
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/60301b9_20231128T034542480150_embedding_chi2_scene.yml
results:
  fit_time:
  - 646.4453222751617
  - 644.7722959518433
  - 608.3506033420563
  - 606.0108003616333
  - 661.0678236484528
  score_time:
  - 227.58264756202698
  - 232.65631318092346
  - 225.61136317253113
  - 265.22161626815796
  - 257.79325771331787
  test_average_precision_macro:
  - 0.810589710802842
  - 0.7991809129420164
  - 0.8244037759697062
  - 0.7859827939606733
  - 0.7649576106826642
  test_average_precision_micro:
  - 0.8251660788087505
  - 0.8041278579345011
  - 0.8246529453508947
  - 0.8104100838941947
  - 0.782872381050495
  test_average_precision_samples:
  - 0.8909405255878285
  - 0.8475051975051975
  - 0.8739325068870524
  - 0.8522268615170495
  - 0.8562716562716562
  test_average_precision_weighted:
  - 0.7979909234218852
  - 0.7876514718728092
  - 0.8121214839307725
  - 0.7729390798697726
  - 0.7459473173114172
  test_coverage_error:
  - -1.4128630705394192
  - -1.498960498960499
  - -1.4297520661157024
  - -1.501043841336117
  - -1.4906444906444907
  test_f1_macro:
  - 0.028070175438596495
  - 0.017121212121212117
  - 0.0038314176245210726
  - 0.01924119241192412
  - 0.014814814814814814
  test_f1_micro:
  - 0.030360531309297913
  - 0.015355086372360846
  - 0.0038759689922480615
  - 0.019157088122605363
  - 0.015355086372360846
  test_f1_samples:
  - 0.016597510373443983
  - 0.008316008316008316
  - 0.001377410468319559
  - 0.010438413361169102
  - 0.00693000693000693
  test_f1_weighted:
  - 0.028232430787952546
  - 0.014965711271320554
  - 0.0038388572703939292
  - 0.01876680662357881
  - 0.01478615946701053
  test_hamming_loss:
  - -0.17669432918395575
  - -0.17775467775467776
  - -0.17699724517906337
  - -0.1781489213639527
  - -0.17775467775467776
  test_jaccard_macro:
  - 0.01532567049808429
  - 0.008860153256704981
  - 0.001937984496124031
  - 0.009913793103448277
  - 0.007751937984496124
  test_jaccard_micro:
  - 0.015414258188824663
  - 0.007736943907156673
  - 0.001941747572815534
  - 0.009671179883945842
  - 0.007736943907156673
  test_jaccard_samples:
  - 0.016597510373443983
  - 0.008316008316008316
  - 0.0010330578512396695
  - 0.010438413361169102
  - 0.006237006237006237
  test_jaccard_weighted:
  - 0.015414258188824663
  - 0.007736943907156673
  - 0.001941747572815534
  - 0.009671179883945842
  - 0.007736943907156673
  test_label_ranking_average_precision_score:
  - 0.8909405255878282
  - 0.8475051975051974
  - 0.8739325068870522
  - 0.8522268615170491
  - 0.856271656271656
  test_label_ranking_loss:
  - 0.06415975103734439
  - 0.08191268191268193
  - 0.07143595041322315
  - 0.08225469728601252
  - 0.08118503118503118
  test_matthews_corrcoef_macro:
  - 0.04613637769652221
  - 0.04765844484178277
  - 0.016314264330784735
  - 0.05218756990125264
  - 0.03270912134411611
  test_matthews_corrcoef_micro:
  - 0.11261923051838141
  - 0.07974808557817868
  - 0.03997430690270274
  - 0.08913622713164371
  - 0.07974808557817868
  test_matthews_corrcoef_samples:
  - 0.016597510373443983
  - 0.008316008316008316
  - 0.0013067263058547023
  - 0.010438413361169102
  - 0.006787756889952915
  test_matthews_corrcoef_weighted:
  - 0.046403061960663954
  - 0.04264109620850765
  - 0.016345942513951307
  - 0.05073432101972374
  - 0.03264585418484316
  test_ndgc:
  - 0.9199870562645415
  - 0.8879115502491037
  - 0.906789733310325
  - 0.891014899247403
  - 0.8942522963225622
  test_precision_macro:
  - 0.16666666666666666
  - 0.3333333333333333
  - 0.16666666666666666
  - 0.3333333333333333
  - 0.16666666666666666
  test_precision_micro:
  - 1.0
  - 1.0
  - 1.0
  - 1.0
  - 1.0
  test_precision_samples:
  - 0.016597510373443983
  - 0.008316008316008316
  - 0.002066115702479339
  - 0.010438413361169102
  - 0.008316008316008316
  test_precision_weighted:
  - 0.1676300578034682
  - 0.30754352030947774
  - 0.1669902912621359
  - 0.3230174081237911
  - 0.16634429400386846
  test_recall_macro:
  - 0.01532567049808429
  - 0.008860153256704981
  - 0.001937984496124031
  - 0.009913793103448277
  - 0.007751937984496124
  test_recall_micro:
  - 0.015414258188824663
  - 0.007736943907156673
  - 0.001941747572815534
  - 0.009671179883945842
  - 0.007736943907156673
  test_recall_samples:
  - 0.016597510373443983
  - 0.008316008316008316
  - 0.0010330578512396695
  - 0.010438413361169102
  - 0.006237006237006237
  test_recall_weighted:
  - 0.015414258188824663
  - 0.007736943907156673
  - 0.001941747572815534
  - 0.009671179883945842
  - 0.007736943907156673
  test_roc_auc_macro:
  - 0.9394388998799569
  - 0.9287596112853986
  - 0.9386204765040462
  - 0.9267891064693486
  - 0.9203147060009623
  test_roc_auc_micro:
  - 0.9465949218366222
  - 0.9344188678228538
  - 0.9448264090674492
  - 0.9374249632150498
  - 0.9316093676134272
  test_roc_auc_samples:
  - 0.9358402489626556
  - 0.9180873180873181
  - 0.9285640495867767
  - 0.9177453027139876
  - 0.9188149688149689
  test_roc_auc_weighted:
  - 0.9344996846358119
  - 0.9226370487433971
  - 0.9333389132107344
  - 0.9208110513550085
  - 0.912108969421109
start: 2023-11-28 03:45:42.480150
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
