active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T/AmZmZmZnpP5CZmZmZmQHAwJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP2ZmZmZmZgbANDMzMzMz8z80MzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAEMAAAAAAAAAAQA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 18:46:04.972588
estimator:
  call: nakano_datasets_v2.estimators.final_estimator
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
        params:
          estimators:
          - - rf
            - call: sklearn.ensemble._forest.RandomForestClassifier
              params:
                bootstrap: true
                ccp_alpha: 0.0
                class_weight: null
                criterion: gini
                max_depth: null
                max_features: sqrt
                max_leaf_nodes: null
                max_samples: 0.9
                min_impurity_decrease: 0.0
                min_samples_leaf: 5
                min_samples_split: 2
                min_weight_fraction_leaf: 0.0
                n_estimators: 150
                n_jobs: 14
                oob_score: true
                random_state: 0
                verbose: true
                warm_start: false
          - - xt
            - call: sklearn.ensemble._forest.ExtraTreesClassifier
              params:
                bootstrap: true
                ccp_alpha: 0.0
                class_weight: null
                criterion: gini
                max_depth: null
                max_features: sqrt
                max_leaf_nodes: null
                max_samples: 0.9
                min_impurity_decrease: 0.0
                min_samples_leaf: 5
                min_samples_split: 2
                min_weight_fraction_leaf: 0.0
                n_estimators: 150
                n_jobs: 14
                oob_score: true
                random_state: 0
                verbose: true
                warm_start: false
    verbose: false
  name: final_estimator
  params: {}
hash: b1db6a7055e6bfc2f5569281764c4077f0d552774831b195ae16dd30a39ac42d
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/b1db6a7_20231127T184559233883_final_estimator_CHD_49.yml
results:
  fit_time:
  - 1.2467987537384033
  - 1.3550176620483398
  - 1.277245044708252
  - 1.2058441638946533
  - 1.2660658359527588
  score_time:
  - 4.278599500656128
  - 4.265440225601196
  - 4.234505891799927
  - 4.338972330093384
  - 4.314014673233032
  test_average_precision_macro:
  - 0.5033640513798406
  - 0.535671591670449
  - 0.5465576865283754
  - 0.5302099572435809
  - 0.5408065322698429
  test_average_precision_micro:
  - 0.6693924589256287
  - 0.7108846465532832
  - 0.6989457701178501
  - 0.7031567673038778
  - 0.7043736744822237
  test_average_precision_samples:
  - 0.7812312312312312
  - 0.7999490316004078
  - 0.8012012012012014
  - 0.770277777777778
  - 0.8073394495412842
  test_average_precision_weighted:
  - 0.619936229329274
  - 0.6648739421572679
  - 0.6533463256443546
  - 0.6625126364888811
  - 0.6663020850769932
  test_coverage_error:
  - -3.7027027027027026
  - -3.688073394495413
  - -3.810810810810811
  - -3.6782608695652175
  - -3.7339449541284404
  test_f1_macro:
  - 0.0
  - 0.011363636363636362
  - 0.007751937984496124
  - 0.0
  - 0.003787878787878788
  test_f1_micro:
  - 0.0
  - 0.020761245674740487
  - 0.013605442176870748
  - 0.0
  - 0.006920415224913495
  test_f1_samples:
  - 0.0
  - 0.017431192660550456
  - 0.01051051051051051
  - 0.0
  - 0.003669724770642202
  test_f1_weighted:
  - 0.0
  - 0.020263827082008898
  - 0.0133800573431029
  - 0.0
  - 0.0067546090273363
  test_hamming_loss:
  - -0.4264264264264264
  - -0.4327217125382263
  - -0.43543543543543545
  - -0.4115942028985507
  - -0.43883792048929665
  test_jaccard_macro:
  - 0.0
  - 0.0058823529411764705
  - 0.003968253968253968
  - 0.0
  - 0.0019157088122605363
  test_jaccard_micro:
  - 0.0
  - 0.01048951048951049
  - 0.00684931506849315
  - 0.0
  - 0.003472222222222222
  test_jaccard_samples:
  - 0.0
  - 0.014525993883792047
  - 0.007507507507507507
  - 0.0
  - 0.0022935779816513763
  test_jaccard_weighted:
  - 0.0
  - 0.01048951048951049
  - 0.00684931506849315
  - 0.0
  - 0.003416124105779278
  test_label_ranking_average_precision_score:
  - 0.8082582582582584
  - 0.7999490316004074
  - 0.8012012012012014
  - 0.7702777777777778
  - 0.8073394495412842
  test_label_ranking_loss:
  - 0.1949449449449449
  - 0.20040774719673804
  - 0.2007007007007007
  - 0.22342995169082128
  - 0.1956931702344546
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.014898845011808956
  - 0.012799492126228447
  - 0.0
  - -0.03021154682950149
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.07700359937464671
  - 0.062111974230383636
  - 0.0
  - -0.01422892597140211
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.01617836111483299
  - 0.009726748896699404
  - 0.0
  - -0.0007685526053501108
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.026567870475603383
  - 0.022092274080887455
  - 0.0
  - -0.053873737353306854
  test_ndgc:
  - 0.8544920498710743
  - 0.8671077170200313
  - 0.8746791531602721
  - 0.8456104828664628
  - 0.8757986278829163
  test_precision_macro:
  - 0.0
  - 0.16666666666666666
  - 0.16666666666666666
  - 0.0
  - 0.05555555555555555
  test_precision_micro:
  - 0.0
  - 1.0
  - 1.0
  - 0.0
  - 0.3333333333333333
  test_precision_samples:
  - 0.0
  - 0.027522935779816515
  - 0.018018018018018018
  - 0.0
  - 0.009174311926605505
  test_precision_weighted:
  - 0.0
  - 0.2972027972027972
  - 0.2876712328767123
  - 0.0
  - 0.09906759906759906
  test_recall_macro:
  - 0.0
  - 0.0058823529411764705
  - 0.003968253968253968
  - 0.0
  - 0.00196078431372549
  test_recall_micro:
  - 0.0
  - 0.01048951048951049
  - 0.00684931506849315
  - 0.0
  - 0.0034965034965034965
  test_recall_samples:
  - 0.0
  - 0.014525993883792047
  - 0.007507507507507507
  - 0.0
  - 0.0022935779816513763
  test_recall_weighted:
  - 0.0
  - 0.01048951048951049
  - 0.00684931506849315
  - 0.0
  - 0.0034965034965034965
  test_roc_auc_macro:
  - 0.60395052195208
  - 0.5995523241553933
  - 0.618248816641597
  - 0.5882146866348762
  - 0.5955376650412124
  test_roc_auc_micro:
  - 0.7813583069095199
  - 0.792898677409547
  - 0.7777360632920666
  - 0.7966852841185041
  - 0.7877109303739739
  test_roc_auc_samples:
  - .nan
  - 0.7995922528032621
  - 0.7992992992992993
  - 0.7765700483091789
  - 0.8043068297655455
  test_roc_auc_weighted:
  - 0.5749388156271137
  - 0.587510775631932
  - 0.596930517368047
  - 0.6483660282270107
  - 0.5939405829805151
start: 2023-11-27 18:45:59.233883
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
