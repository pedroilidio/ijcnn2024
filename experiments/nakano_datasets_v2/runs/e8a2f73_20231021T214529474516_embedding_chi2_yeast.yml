active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gGZmZmZm9j+AmZmZmZn5vwCamZmZmdk/gJmZmZmZ+b+AZmZmZmb2Pw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADQzMzMz4z8AmJmZmZnZvwA0MzMzM+M/AJiZmZmZ2b8AmJmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8AmJmZmZnZvwCYmZmZmdm/ADQzMzMz4z8ANDMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wMzMzMzMDMCAZmZmZmb2PwAzMzMzM+O/gGZmZmZm9j+AZmZmZmb2Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8wMzMzMzMhwEAzMzMzMwNAYGZmZmZmFsDQzMzMzMwmQA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z+AMzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z8wMzMzMzMDwNDMzMzMzAxAmJmZmZmZHcBoZmZmZmYWQA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb84MzMzMzMTQACZmZmZmcm/cGZmZmZmBkDIzMzMzMwcwA==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AoJmZmZnJPwCgmZmZmck/AKCZmZmZyT8AmJmZmZnpvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AM3MzMzM/D8AmJmZmZnJvwCYmZmZmcm/AJiZmZmZyb8AMzMzMzPzvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+YmZmZmZkJwGhmZmZmZgZAaGZmZmZmBkCYmZmZmZkJwA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gMzMzMzMBMAAnJmZmZnZP+DMzMzMzCZAgMzMzMzMDMBAZmZmZmYWwA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 21:59:19.413113
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_pvalue
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: embedding_chi2
  params:
    memory: estimators_cache
hash: e8a2f73c56c6da67c24e4c02c561e6ddd88cedecaa54fc1676a027aafda417fa
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/e8a2f73_20231021T214529474516_embedding_chi2_yeast.yml
results:
  fit_time:
  - 657.5535752773285
  - 758.7823786735535
  - 734.7095115184784
  - 736.9019107818604
  - 716.0675349235535
  score_time:
  - 9.072945594787598
  - 10.2455735206604
  - 9.693115949630737
  - 10.297104835510254
  - 9.8816237449646
  test_average_precision_macro:
  - 0.5407840329615797
  - 0.5378183377080973
  - 0.5401217957471441
  - 0.5252827847890549
  - 0.535953935723662
  test_average_precision_micro:
  - 0.7243013864258725
  - 0.7233173377102502
  - 0.7327544533859317
  - 0.7074537409050584
  - 0.7132160688075321
  test_average_precision_samples:
  - 0.7577937112880406
  - 0.7554170395579495
  - 0.7682607601936445
  - 0.7450998228830804
  - 0.7493998790493425
  test_average_precision_weighted:
  - 0.7041687157136527
  - 0.7006647693397132
  - 0.7071590367292724
  - 0.6812710261998431
  - 0.6952330385740854
  test_coverage_error:
  - -7.053497942386831
  - -7.202898550724638
  - -7.101694915254237
  - -7.209445585215605
  - -7.118609406952965
  test_f1_macro:
  - 0.32061905056432366
  - 0.294256332210124
  - 0.3112935655134998
  - 0.2990702414986652
  - 0.2892100028017074
  test_f1_micro:
  - 0.6190476190476192
  - 0.6031094162511
  - 0.6162998215348008
  - 0.5995905235448962
  - 0.5991784037558685
  test_f1_samples:
  - 0.5860122387900165
  - 0.5748407217351316
  - 0.5877677524923288
  - 0.5631645333904062
  - 0.5628708714598285
  test_f1_weighted:
  - 0.5309821410771648
  - 0.5059119342480822
  - 0.524928187827172
  - 0.5054302909653947
  - 0.5018620750744867
  test_hamming_loss:
  - -0.19282774838330394
  - -0.20008873114463177
  - -0.1952179176755448
  - -0.2007920211205632
  - -0.1995325737657026
  test_jaccard_macro:
  - 0.23701262561807637
  - 0.21875656286558368
  - 0.23019027629724315
  - 0.21941142268518
  - 0.21384278041523314
  test_jaccard_micro:
  - 0.4482758620689655
  - 0.43175136497270056
  - 0.4453998280309544
  - 0.42815371762740184
  - 0.4277335567658148
  test_jaccard_samples:
  - 0.4795594094976811
  - 0.465631469979296
  - 0.4772674535916061
  - 0.45507887617743886
  - 0.4531148469798777
  test_jaccard_weighted:
  - 0.4152425871046644
  - 0.3972308438791809
  - 0.41353899606919053
  - 0.39427857666500227
  - 0.39306037711846875
  test_label_ranking_average_precision_score:
  - 0.7577937112880402
  - 0.7554170395579495
  - 0.7682607601936442
  - 0.7450998228830801
  - 0.7493998790493431
  test_label_ranking_loss:
  - 0.1635139482471934
  - 0.17022375485108404
  - 0.16108610039073112
  - 0.17295949055995993
  - 0.169181538265675
  test_matthews_corrcoef_macro:
  - 0.1893539224707587
  - 0.1531412177993389
  - 0.1825304858329886
  - 0.16703933757308212
  - 0.15035704522893836
  test_matthews_corrcoef_micro:
  - 0.5122705095324414
  - 0.4961187141546051
  - 0.5139816384029927
  - 0.4903411143120395
  - 0.4900237473928186
  test_matthews_corrcoef_samples:
  - 0.5103864889891376
  - 0.4941156390322873
  - 0.5164701664634692
  - 0.4804938953636781
  - 0.48393227848979387
  test_matthews_corrcoef_weighted:
  - 0.20487893212213737
  - 0.1752979864606326
  - 0.1965405047310675
  - 0.1787136723375478
  - 0.16652736756108347
  test_ndgc:
  - 0.851978882822594
  - 0.8507011477451752
  - 0.8574169811886886
  - 0.8437855020117532
  - 0.8456267929907666
  test_precision_macro:
  - 0.6164799478248408
  - 0.48242016974760554
  - 0.6264491380148199
  - 0.5974426013706485
  - 0.5359773644281292
  test_precision_micro:
  - 0.7630637079455977
  - 0.7620459599703484
  - 0.783068783068783
  - 0.7509157509157509
  - 0.7468910021945867
  test_precision_samples:
  - 0.7518861454046638
  - 0.7543478260869565
  - 0.776659604519774
  - 0.7369952087611225
  - 0.7392638036809815
  test_precision_weighted:
  - 0.7595378681564664
  - 0.6797128331448536
  - 0.7769138632640572
  - 0.7385681553365798
  - 0.6947839951637916
  test_recall_macro:
  - 0.28489105030024015
  - 0.2647811817807989
  - 0.2723766738155989
  - 0.26712932740993617
  - 0.26227393851135267
  test_recall_micro:
  - 0.5207620908646801
  - 0.49902912621359224
  - 0.5080922020598333
  - 0.4990262901655307
  - 0.5002449779519843
  test_recall_samples:
  - 0.5250163302632438
  - 0.5003951822274804
  - 0.5171534503631962
  - 0.4907931618917245
  - 0.49360970204528487
  test_recall_weighted:
  - 0.5207620908646801
  - 0.49902912621359224
  - 0.5080922020598333
  - 0.4990262901655307
  - 0.5002449779519843
  test_roc_auc_macro:
  - 0.7378625274551803
  - 0.731013387891891
  - 0.741294312277769
  - 0.7174515978733685
  - 0.7395203438972587
  test_roc_auc_micro:
  - 0.8475196966309594
  - 0.8443425231155509
  - 0.8515235464794573
  - 0.8394934174435498
  - 0.8450363796082495
  test_roc_auc_samples:
  - 0.8364860517528064
  - 0.8297762451489158
  - 0.8389138996092689
  - 0.82704050944004
  - 0.8308184617343249
  test_roc_auc_weighted:
  - 0.7421372106333899
  - 0.7345370048785143
  - 0.735750954996482
  - 0.7109944573191183
  - 0.7321265896909784
start: 2023-10-21 21:45:29.474516
wrapper: null
