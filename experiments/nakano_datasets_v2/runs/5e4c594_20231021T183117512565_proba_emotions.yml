active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          kJmZmZmZEcDAmZmZmZn5PyAzMzMzMwPAcGZmZmZmFkAAmZmZmZnZvw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 18:32:22.036344
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - rf
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.RandomForestRegressor
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        - - xt
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesRegressor
                params:
                  bootstrap: false
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: proba
  params:
    memory: estimators_cache
hash: 5e4c5947d14026aa9a84ffa2ccaf2addaf5157e1c2096316df9b3c2a75740eea
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/5e4c594_20231021T183117512565_proba_emotions.yml
results:
  fit_time:
  - 32.841076374053955
  - 31.61869978904724
  - 32.24437427520752
  - 33.58385252952576
  - 31.894506216049194
  score_time:
  - 28.390198469161987
  - 30.901976346969604
  - 31.813366651535034
  - 28.784517526626587
  - 30.99775743484497
  test_average_precision_macro:
  - 0.7604315088255514
  - 0.7330058738446592
  - 0.6874874688737759
  - 0.7445392864572181
  - 0.7653867798980656
  test_average_precision_micro:
  - 0.748038248312319
  - 0.7442848883423945
  - 0.7052068433114079
  - 0.7458385373546353
  - 0.7510611074560114
  test_average_precision_samples:
  - 0.8039521228545619
  - 0.8264245014245015
  - 0.7872819100091828
  - 0.8275811209439528
  - 0.8010737628384688
  test_average_precision_weighted:
  - 0.7657129935434046
  - 0.7383969964946097
  - 0.6936124804278831
  - 0.7541257727069532
  - 0.7658477507063047
  test_coverage_error:
  - -2.6666666666666665
  - -2.717948717948718
  - -2.7851239669421486
  - -2.7079646017699117
  - -2.689075630252101
  test_f1_macro:
  - 0.6618923785804722
  - 0.6639629083609854
  - 0.6453071661985808
  - 0.6713383035690645
  - 0.6905666500356852
  test_f1_micro:
  - 0.6730310262529833
  - 0.6908212560386474
  - 0.6542056074766355
  - 0.6985645933014353
  - 0.7036144578313254
  test_f1_samples:
  - 0.6319783197831977
  - 0.6413105413105414
  - 0.6231404958677687
  - 0.6589970501474925
  - 0.6605042016806721
  test_f1_weighted:
  - 0.6677749631122545
  - 0.6724901624381554
  - 0.6505616749243504
  - 0.6837352326394258
  - 0.694748020112027
  test_hamming_loss:
  - -0.1856368563685637
  - -0.18233618233618235
  - -0.20385674931129477
  - -0.18584070796460178
  - -0.1722689075630252
  test_jaccard_macro:
  - 0.5073244607920687
  - 0.5147344397650374
  - 0.4846149163720968
  - 0.5189387743006164
  - 0.5389927734395137
  test_jaccard_micro:
  - 0.5071942446043165
  - 0.5276752767527675
  - 0.4861111111111111
  - 0.5367647058823529
  - 0.5427509293680297
  test_jaccard_samples:
  - 0.5609756097560974
  - 0.5598290598290598
  - 0.53099173553719
  - 0.5818584070796461
  - 0.5931372549019609
  test_jaccard_weighted:
  - 0.5127938384656189
  - 0.5231813461770298
  - 0.49002490965618767
  - 0.5329106592303186
  - 0.5428879999711357
  test_label_ranking_average_precision_score:
  - 0.8039521228545617
  - 0.8264245014245015
  - 0.7872819100091825
  - 0.8275811209439526
  - 0.8010737628384685
  test_label_ranking_loss:
  - 0.1588301716350497
  - 0.14406457739791073
  - 0.1668273645546373
  - 0.13780727630285153
  - 0.1565592903828198
  test_matthews_corrcoef_macro:
  - 0.5392100660421297
  - 0.5500677102699721
  - 0.5007725151982769
  - 0.5502799694186971
  - 0.5791073862082584
  test_matthews_corrcoef_micro:
  - 0.5455649092433228
  - 0.5649602661053968
  - 0.5109445563965324
  - 0.5668256496513029
  - 0.5858651565288718
  test_matthews_corrcoef_samples:
  - 0.5372565992939085
  - 0.5528612679923112
  - 0.5260109213701769
  - 0.5587953029980293
  - 0.5720123573220051
  test_matthews_corrcoef_weighted:
  - 0.5362839675145602
  - 0.5489464572791042
  - 0.49930321697820806
  - 0.5564539803032803
  - 0.5761112162388315
  test_ndgc:
  - 0.8648723320768142
  - 0.8828055045016996
  - 0.8553385246156174
  - 0.8838574036776494
  - 0.858915076995261
  test_precision_macro:
  - 0.7250084964965652
  - 0.73993798993799
  - 0.6764488017429193
  - 0.7313205501098582
  - 0.7569391004264953
  test_precision_micro:
  - 0.7121212121212122
  - 0.7409326424870466
  - 0.6829268292682927
  - 0.7411167512690355
  - 0.7564766839378239
  test_precision_samples:
  - 0.6693766937669378
  - 0.7065527065527065
  - 0.6680440771349861
  - 0.7153392330383481
  - 0.7212885154061626
  test_precision_weighted:
  - 0.720417969464388
  - 0.7365292365292365
  - 0.6784817843430347
  - 0.7359713462654638
  - 0.7552483918030136
  test_recall_macro:
  - 0.6238773918282067
  - 0.629552294509662
  - 0.6197668047803307
  - 0.643802783425425
  - 0.6502751634330582
  test_recall_micro:
  - 0.6380090497737556
  - 0.6470588235294118
  - 0.6278026905829597
  - 0.6606334841628959
  - 0.6576576576576577
  test_recall_samples:
  - 0.643631436314363
  - 0.6396011396011395
  - 0.6528925619834711
  - 0.6607669616519174
  - 0.6498599439775912
  test_recall_weighted:
  - 0.6380090497737556
  - 0.6470588235294118
  - 0.6278026905829597
  - 0.6606334841628959
  - 0.6576576576576577
  test_roc_auc_macro:
  - 0.8616545572416049
  - 0.8522228597296483
  - 0.8381971375703934
  - 0.8629316025720413
  - 0.8648835940704888
  test_roc_auc_micro:
  - 0.8737145207733443
  - 0.8677811121250035
  - 0.8549153509436653
  - 0.8747289523451193
  - 0.8759613271808394
  test_roc_auc_samples:
  - 0.8411698283649504
  - 0.8559354226020892
  - 0.8331726354453628
  - 0.8621927236971485
  - 0.8434407096171802
  test_roc_auc_weighted:
  - 0.8625241104944523
  - 0.8514306643482412
  - 0.8383710260962115
  - 0.8650174975829822
  - 0.8642214568586146
start: 2023-10-21 18:31:17.512565
wrapper: null
