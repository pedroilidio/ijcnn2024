active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6T+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzMBMBoZmZmZmb2P6CZmZmZmdk/aGZmZmZm9j8wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gMzMzMzMBMCAzMzMzMwEwABnZmZmZvY/AGdmZmZm9j+AMzMzMzMDQA==
      n_labels: 8
      n_samples: 1392
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_negative
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_negative.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 18:50:51.429244
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: embedding
  params:
    memory: estimators_cache
hash: 5e379ad0e4444654ecad13234aa9298045d9f72a4c7bef0c0ce5105755e4802f
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/5e379ad_20231021T184629238985_embedding_Gram_negative.yml
results:
  fit_time:
  - 175.0972204208374
  - 159.8000717163086
  - 166.3887722492218
  - 143.33196258544922
  - 145.40302681922913
  score_time:
  - 82.76833486557007
  - 93.28105998039246
  - 92.76370310783386
  - 87.16051292419434
  - 88.26980352401733
  test_average_precision_macro:
  - 0.9003635083090515
  - 0.8889055356706773
  - 0.8643656690051349
  - 0.8577328856515948
  - 0.9835578653711619
  test_average_precision_micro:
  - 0.974209661086743
  - 0.970592543007894
  - 0.9741759189483912
  - 0.9741829791452234
  - 0.9831135373963641
  test_average_precision_samples:
  - 0.9694882223351974
  - 0.9708778173190984
  - 0.9690734055354993
  - 0.9704314938971978
  - 0.9726449275362319
  test_average_precision_weighted:
  - 0.9794101939535185
  - 0.9738835510356704
  - 0.9731703083691604
  - 0.9726350172402707
  - 0.9878686283111557
  test_coverage_error:
  - -1.1459074733096086
  - -1.1423487544483986
  - -1.184115523465704
  - -1.1299638989169676
  - -1.144927536231884
  test_f1_macro:
  - 0.6943736989035281
  - 0.6785191828303649
  - 0.6780862415886001
  - 0.6770683371039458
  - 0.6756260161667149
  test_f1_micro:
  - 0.9326241134751773
  - 0.9392857142857144
  - 0.9258589511754068
  - 0.9153153153153154
  - 0.9280575539568345
  test_f1_samples:
  - 0.9240806642941873
  - 0.9252669039145908
  - 0.9121540312876053
  - 0.901323706377858
  - 0.9154589371980675
  test_f1_weighted:
  - 0.922358325887844
  - 0.9331861971700867
  - 0.9177923927326229
  - 0.9090012753652187
  - 0.9192546065853624
  test_hamming_loss:
  - -0.016903914590747332
  - -0.015124555160142349
  - -0.018501805054151624
  - -0.021209386281588447
  - -0.018115942028985508
  test_jaccard_macro:
  - 0.6475564163759311
  - 0.6229628124364966
  - 0.6215679600635353
  - 0.6243830895864045
  - 0.6179975558265032
  test_jaccard_micro:
  - 0.8737541528239202
  - 0.8855218855218855
  - 0.8619528619528619
  - 0.8438538205980066
  - 0.8657718120805369
  test_jaccard_samples:
  - 0.9181494661921709
  - 0.9199288256227758
  - 0.9061371841155235
  - 0.8953068592057761
  - 0.907608695652174
  test_jaccard_weighted:
  - 0.8726463329126876
  - 0.8853099475725629
  - 0.8617403175076833
  - 0.8431264615234105
  - 0.865462472978695
  test_label_ranking_average_precision_score:
  - 0.9694882223351974
  - 0.9708778173190984
  - 0.9690734055354993
  - 0.9704314938971978
  - 0.972644927536232
  test_label_ranking_loss:
  - 0.013345195729537367
  - 0.013557024233180814
  - 0.014913185490802817
  - 0.011517964586556646
  - 0.010697032436162872
  test_matthews_corrcoef_macro:
  - 0.6869602657832048
  - 0.6734278098547581
  - 0.671069074477725
  - 0.667487206306942
  - 0.669043780435884
  test_matthews_corrcoef_micro:
  - 0.9237331054081923
  - 0.9316008077120542
  - 0.9172087528394636
  - 0.9042310799024615
  - 0.9192507140071811
  test_matthews_corrcoef_samples:
  - 0.9195860482712549
  - 0.9218318155844446
  - 0.9091417003349966
  - 0.8947012671220003
  - 0.9117875176161624
  test_matthews_corrcoef_weighted:
  - 0.9047437495559426
  - 0.9206347025038141
  - 0.9030898908492213
  - 0.887286656942577
  - 0.90224153425616
  test_ndgc:
  - 0.9778502175123134
  - 0.9788108868820387
  - 0.9784321392368325
  - 0.9783317852451889
  - 0.9806426566673141
  test_precision_macro:
  - 0.735710277376944
  - 0.7354065205627706
  - 0.7378807214031743
  - 0.7207790865596614
  - 0.7350147999149619
  test_precision_micro:
  - 0.9669117647058824
  - 0.9776951672862454
  - 0.9808429118773946
  - 0.9548872180451128
  - 0.9772727272727273
  test_precision_samples:
  - 0.9341637010676157
  - 0.9359430604982206
  - 0.924187725631769
  - 0.9133574007220217
  - 0.9311594202898551
  test_precision_weighted:
  - 0.9482386377363546
  - 0.9677667693131611
  - 0.9675261751669152
  - 0.9499454870061408
  - 0.9606768690087115
  test_recall_macro:
  - 0.6603585292609683
  - 0.6345508291392438
  - 0.6298842875977022
  - 0.6452092805751342
  - 0.629578335790226
  test_recall_micro:
  - 0.9006849315068494
  - 0.9037800687285223
  - 0.8767123287671232
  - 0.8788927335640139
  - 0.8835616438356164
  test_recall_samples:
  - 0.9199288256227758
  - 0.9199288256227758
  - 0.9061371841155235
  - 0.8953068592057761
  - 0.907608695652174
  test_recall_weighted:
  - 0.9006849315068494
  - 0.9037800687285223
  - 0.8767123287671232
  - 0.8788927335640139
  - 0.8835616438356164
  test_roc_auc_macro:
  - 0.9933458264579662
  - 0.9910544164797954
  - 0.9852105315812241
  - 0.9837337661154301
  - 0.9953442865311584
  test_roc_auc_micro:
  - 0.9932224696753229
  - 0.9898900238284631
  - 0.9906355908068236
  - 0.9930490588127556
  - 0.9952696470958331
  test_roc_auc_samples:
  - 0.9866548042704626
  - 0.986442975766819
  - 0.9850868145091973
  - 0.9884820354134435
  - 0.9893029675638371
  test_roc_auc_weighted:
  - 0.9940807943630938
  - 0.985881789239959
  - 0.9908258512677696
  - 0.9889213111829758
  - 0.9944762772909813
start: 2023-10-21 18:46:29.238985
wrapper: null
