active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz478wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+YmZmZmZn5v2hmZmZmZvY/aGZmZmZm9j8wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z9mZmZmZmb2v2ZmZmZmZva/mpmZmZmZ+T80MzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gMzMzMzMDMAAMjMzMzPjv8CZmZmZmRVAAJmZmZmZ+b8AnJmZmZnZPw==
      n_labels: 8
      n_samples: 1392
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_negative
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_negative.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 18:46:25.614530
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - rf
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.RandomForestRegressor
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        - - xt
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesRegressor
                params:
                  bootstrap: false
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: proba
  params:
    memory: estimators_cache
hash: ce8f5a378575574cbc7549a14f77f15bc284aa12c5f4a7317bc52ecbad2350ad
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/ce8f5a3_20231021T184507155539_proba_Gram_negative.yml
results:
  fit_time:
  - 39.76019859313965
  - 39.74339008331299
  - 41.41321158409119
  - 42.32058119773865
  - 42.37797689437866
  score_time:
  - 35.63778805732727
  - 35.697514295578
  - 32.87650775909424
  - 35.23351216316223
  - 35.414440870285034
  test_average_precision_macro:
  - 0.9823737712163274
  - 0.9929218441766638
  - 0.913014346178562
  - 0.8613418760559162
  - 0.9769525772684818
  test_average_precision_micro:
  - 0.9718012700888591
  - 0.9701175102363542
  - 0.9608219387007283
  - 0.9730092666796218
  - 0.9678079267803896
  test_average_precision_samples:
  - 0.9726359338061464
  - 0.9790322580645162
  - 0.9696319553462411
  - 0.9666666666666668
  - 0.971642685851319
  test_average_precision_weighted:
  - 0.9817039943723619
  - 0.9915776395000562
  - 0.9685272210151529
  - 0.9815828852626886
  - 0.975745239141556
  test_coverage_error:
  - -1.1170212765957446
  - -1.1612903225806452
  - -1.1978021978021978
  - -1.1214285714285714
  - -1.1330935251798562
  test_f1_macro:
  - 0.5197967047127937
  - 0.4999092422800235
  - 0.4979159599728629
  - 0.5105028350582386
  - 0.500855898784678
  test_f1_micro:
  - 0.8880597014925373
  - 0.8721804511278195
  - 0.8813559322033898
  - 0.8783269961977187
  - 0.8625954198473282
  test_f1_samples:
  - 0.83451536643026
  - 0.8219832735961767
  - 0.8437118437118436
  - 0.8190476190476191
  - 0.802158273381295
  test_f1_weighted:
  - 0.8634205310307114
  - 0.838135942912137
  - 0.8509475740420155
  - 0.8580783956125954
  - 0.8394056091310946
  test_hamming_loss:
  - -0.026595744680851064
  - -0.03046594982078853
  - -0.028846153846153848
  - -0.02857142857142857
  - -0.03237410071942446
  test_jaccard_macro:
  - 0.4561651473454879
  - 0.43697005892658064
  - 0.44084048192226405
  - 0.4455539591315454
  - 0.4333306558384642
  test_jaccard_micro:
  - 0.7986577181208053
  - 0.7733333333333333
  - 0.7878787878787878
  - 0.7830508474576271
  - 0.7583892617449665
  test_jaccard_samples:
  - 0.8297872340425532
  - 0.8172043010752689
  - 0.836996336996337
  - 0.8160714285714286
  - 0.7967625899280576
  test_jaccard_weighted:
  - 0.7968462614073832
  - 0.7705074576414416
  - 0.7869933290229397
  - 0.7805814974457216
  - 0.7584735304015424
  test_label_ranking_average_precision_score:
  - 0.9726359338061467
  - 0.979032258064516
  - 0.9696319553462411
  - 0.9666666666666668
  - 0.9716426858513187
  test_label_ranking_loss:
  - 0.010300574130361362
  - 0.01045400238948626
  - 0.015436944008372576
  - 0.012840136054421768
  - 0.011690647482014389
  test_matthews_corrcoef_macro:
  - 0.5184700721687261
  - 0.5024164110359799
  - 0.5001717188752396
  - 0.5082762784276368
  - 0.4952102050319158
  test_matthews_corrcoef_micro:
  - 0.8780399921342993
  - 0.8612572899413228
  - 0.8698975882113975
  - 0.8673393893444911
  - 0.8512056515789107
  test_matthews_corrcoef_samples:
  - 0.8316416441538231
  - 0.8185666183101109
  - 0.8395647999186364
  - 0.8152616726912139
  - 0.798172241138028
  test_matthews_corrcoef_weighted:
  - 0.8528809892057518
  - 0.8283257263580583
  - 0.8395355896311516
  - 0.8405508103097056
  - 0.8179371144361559
  test_ndgc:
  - 0.9800677660812037
  - 0.9865452972368515
  - 0.9788797910557626
  - 0.9753909724244437
  - 0.9791000453536929
  test_precision_macro:
  - 0.6178776178776179
  - 0.6171573359073359
  - 0.6088853276353277
  - 0.6158459595959596
  - 0.5984909188034189
  test_precision_micro:
  - 0.9794238683127572
  - 0.9747899159663865
  - 0.970954356846473
  - 0.9705882352941176
  - 0.9699570815450643
  test_precision_samples:
  - 0.8439716312056738
  - 0.8315412186379928
  - 0.8571428571428571
  - 0.825
  - 0.8129496402877698
  test_precision_weighted:
  - 0.9446661323794429
  - 0.9313588369710819
  - 0.9388348560762354
  - 0.9502665544332211
  - 0.933482825879733
  test_recall_macro:
  - 0.46228073783714024
  - 0.44381361661849467
  - 0.45131978878167905
  - 0.4531913010571547
  - 0.44370239141580603
  test_recall_micro:
  - 0.8122866894197952
  - 0.7891156462585034
  - 0.8068965517241379
  - 0.8020833333333334
  - 0.7766323024054983
  test_recall_samples:
  - 0.8297872340425532
  - 0.8172043010752689
  - 0.836996336996337
  - 0.8160714285714286
  - 0.7967625899280576
  test_recall_weighted:
  - 0.8122866894197952
  - 0.7891156462585034
  - 0.8068965517241379
  - 0.8020833333333334
  - 0.7766323024054983
  test_roc_auc_macro:
  - 0.9953720516420919
  - 0.9973520623886845
  - 0.9895013926043854
  - .nan
  - 0.9935837442001816
  test_roc_auc_micro:
  - 0.9943346100817338
  - 0.9906111567433991
  - 0.986942431635291
  - 0.9945515283469946
  - 0.9925938172774189
  test_roc_auc_samples:
  - 0.9896994258696388
  - 0.9895459976105137
  - 0.9845630559916276
  - 0.9871598639455783
  - 0.9883093525179856
  test_roc_auc_weighted:
  - 0.9939465486736063
  - 0.9962362396725564
  - 0.9868474344886781
  - .nan
  - 0.9893273800175334
start: 2023-10-21 18:45:07.155539
wrapper: null
