active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/zMzMzMzM/L80MzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAQQAAAAAAAABDAAAAAAAAAAAAAAAAAAAAAAA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 18:28:31.656099
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: embedding_weak
  params:
    memory: estimators_cache
hash: c8d0019088de8d596c07c0cb12888da1dd98c1412b63c9a56d1907eaf8376cc4
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/c8d0019_20231021T182618700873_embedding_weak_CHD_49.yml
results:
  fit_time:
  - 72.98751163482666
  - 70.7646689414978
  - 72.214923620224
  - 71.62577152252197
  - 68.61726427078247
  score_time:
  - 57.91808533668518
  - 54.92971396446228
  - 56.02707767486572
  - 58.15366506576538
  - 53.999563694000244
  test_average_precision_macro:
  - 0.5218582560004967
  - 0.5911482776813229
  - 0.5054749638719017
  - 0.515944645297538
  - 0.5077857768645948
  test_average_precision_micro:
  - 0.6849530182563918
  - 0.7645090166263199
  - 0.6558388036643612
  - 0.6663312283501546
  - 0.6906485147672767
  test_average_precision_samples:
  - 0.7846596596596596
  - 0.8241952232606438
  - 0.7766545893719807
  - 0.7868993993993995
  - 0.7858233233233234
  test_average_precision_weighted:
  - 0.6297421864480541
  - 0.7288139653223444
  - 0.616716359282412
  - 0.617118617934516
  - 0.6337104196123095
  test_coverage_error:
  - -3.810810810810811
  - -3.635514018691589
  - -3.7304347826086954
  - -3.828828828828829
  - -3.684684684684685
  test_f1_macro:
  - 0.4209628814740383
  - 0.44765297876753135
  - 0.4708478249579351
  - 0.47055802496661553
  - 0.4809066635009214
  test_f1_micro:
  - 0.6563039723661486
  - 0.6837294332723949
  - 0.6589018302828619
  - 0.668918918918919
  - 0.6689536878216124
  test_f1_samples:
  - 0.6380523380523382
  - 0.6494659546061414
  - 0.6265424430641823
  - 0.6447018447018448
  - 0.6387601887601888
  test_f1_weighted:
  - 0.5888186139975414
  - 0.620186714689603
  - 0.6193520560653069
  - 0.622024618235523
  - 0.633830698526203
  test_hamming_loss:
  - -0.2987987987987988
  - -0.26947040498442365
  - -0.2971014492753623
  - -0.29429429429429427
  - -0.2897897897897898
  test_jaccard_macro:
  - 0.32678412971914017
  - 0.3513740069654439
  - 0.35142024433754165
  - 0.35784422749642114
  - 0.3643053515974641
  test_jaccard_micro:
  - 0.4884318766066838
  - 0.5194444444444445
  - 0.4913151364764268
  - 0.5025380710659898
  - 0.5025773195876289
  test_jaccard_samples:
  - 0.5192192192192191
  - 0.5400311526479751
  - 0.5224637681159421
  - 0.52987987987988
  - 0.5261261261261262
  test_jaccard_weighted:
  - 0.47120334050844864
  - 0.503241720026765
  - 0.47919313927392987
  - 0.4896903196993572
  - 0.49779032236610116
  test_label_ranking_average_precision_score:
  - 0.7846596596596594
  - 0.8428868120456906
  - 0.7766545893719811
  - 0.7868993993993998
  - 0.7948323323323323
  test_label_ranking_loss:
  - 0.21541541541541542
  - 0.17198857736240913
  - 0.22439613526570049
  - 0.21468968968968966
  - 0.20565565565565563
  test_matthews_corrcoef_macro:
  - 0.06378710882623866
  - 0.12578072374500315
  - 0.10396801042487869
  - 0.10542734629853927
  - 0.11079696373945548
  test_matthews_corrcoef_micro:
  - 0.39210834976867576
  - 0.45165569777271447
  - 0.3982799488259717
  - 0.40510074967585497
  - 0.41182822577755407
  test_matthews_corrcoef_samples:
  - 0.41694542554028163
  - 0.4590899295250093
  - 0.4120851668628782
  - 0.4233595846300676
  - 0.42037098020204094
  test_matthews_corrcoef_weighted:
  - 0.07734359315704202
  - 0.14736635480070673
  - 0.09769464263138924
  - 0.10152969947351187
  - 0.116138870563973
  test_ndgc:
  - 0.86088952454791
  - 0.8813738111364978
  - 0.8512978079950849
  - 0.8663119957730442
  - 0.8578106503333495
  test_precision_macro:
  - 0.45682157243045635
  - 0.5285300778343937
  - 0.5091637972712141
  - 0.5271338721791818
  - 0.4962650249227698
  test_precision_micro:
  - 0.6506849315068494
  - 0.7192307692307692
  - 0.6285714285714286
  - 0.6491803278688525
  - 0.6543624161073825
  test_precision_samples:
  - 0.674924924924925
  - 0.7227414330218069
  - 0.6326086956521739
  - 0.6614114114114114
  - 0.6629129129129128
  test_precision_weighted:
  - 0.5869083356078747
  - 0.6677994310701078
  - 0.6185040991713858
  - 0.6329289450434348
  - 0.6210129010254111
  test_recall_macro:
  - 0.4611952848039855
  - 0.45282126631875835
  - 0.5045192802878062
  - 0.5024836136776436
  - 0.5012491350203969
  test_recall_micro:
  - 0.662020905923345
  - 0.6515679442508711
  - 0.6923076923076923
  - 0.6898954703832753
  - 0.6842105263157895
  test_recall_samples:
  - 0.6576576576576577
  - 0.6278816199376948
  - 0.6760869565217391
  - 0.6786786786786786
  - 0.6666666666666666
  test_recall_weighted:
  - 0.662020905923345
  - 0.6515679442508711
  - 0.6923076923076923
  - 0.6898954703832753
  - 0.6842105263157895
  test_roc_auc_macro:
  - 0.5863419338415001
  - 0.6716023193899713
  - 0.5572545884238841
  - 0.5822818245437332
  - 0.5767174633130621
  test_roc_auc_micro:
  - 0.7832458422586487
  - 0.8186681061981647
  - 0.7754967804472754
  - 0.7777573478712547
  - 0.785403140396924
  test_roc_auc_samples:
  - 0.7845845845845847
  - .nan
  - 0.7756038647342995
  - 0.7853103103103103
  - .nan
  test_roc_auc_weighted:
  - 0.576893754610284
  - 0.6724518473232256
  - 0.5687170394617203
  - 0.5519891251214196
  - 0.594857344776371
start: 2023-10-21 18:26:18.700873
wrapper: null
