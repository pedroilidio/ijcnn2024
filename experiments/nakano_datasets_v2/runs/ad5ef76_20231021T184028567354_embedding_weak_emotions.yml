active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMzA8CgmZmZmZn5P6CZmZmZmfk/oJmZmZmZ+T8wMzMzMzMDwA==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ2b/AmZmZmZn5P5CZmZmZmRXAcGZmZmZmEkAAmZmZmZnZvw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 18:42:29.601324
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: embedding_weak
  params:
    memory: estimators_cache
hash: ad5ef76a1fd38e5fe2b9b6b068e83776822b1458de495d477e321dcc53e11a38
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/ad5ef76_20231021T184028567354_embedding_weak_emotions.yml
results:
  fit_time:
  - 68.82915782928467
  - 72.4942057132721
  - 68.60067081451416
  - 69.23393964767456
  - 71.00170469284058
  score_time:
  - 32.130568504333496
  - 46.49404692649841
  - 48.79143571853638
  - 43.806758880615234
  - 32.447925329208374
  test_average_precision_macro:
  - 0.7122481282381372
  - 0.7565753854923071
  - 0.6863965710447953
  - 0.7489617712868478
  - 0.7465765962587958
  test_average_precision_micro:
  - 0.7106111305019033
  - 0.7371394076474765
  - 0.6687719374156258
  - 0.7446390265398761
  - 0.7419593241161778
  test_average_precision_samples:
  - 0.7954248366013071
  - 0.8313865147198483
  - 0.7487455197132616
  - 0.8046052631578947
  - 0.8153828197945844
  test_average_precision_weighted:
  - 0.7105404652763155
  - 0.7494788908181912
  - 0.6933313635066413
  - 0.7466147708695885
  - 0.7518362905380743
  test_coverage_error:
  - -2.73109243697479
  - -2.6324786324786325
  - -2.838709677419355
  - -2.8333333333333335
  - -2.6554621848739495
  test_f1_macro:
  - 0.6046336785816256
  - 0.6332269419988718
  - 0.5460427032630831
  - 0.6333194334845264
  - 0.5975850946439182
  test_f1_micro:
  - 0.6428571428571428
  - 0.6867167919799498
  - 0.6086956521739131
  - 0.6871794871794871
  - 0.6598984771573605
  test_f1_samples:
  - 0.5565826330532213
  - 0.6222222222222223
  - 0.5489247311827958
  - 0.6190058479532163
  - 0.5957983193277311
  test_f1_weighted:
  - 0.6153512570176043
  - 0.6445664956599828
  - 0.5637014301470135
  - 0.6520309198720011
  - 0.6159729801011313
  test_hamming_loss:
  - -0.19607843137254902
  - -0.17806267806267806
  - -0.2056451612903226
  - -0.1783625730994152
  - -0.1876750700280112
  test_jaccard_macro:
  - 0.4529342360563559
  - 0.5001496052966642
  - 0.40208527855586684
  - 0.4864327942049962
  - 0.4597868703606069
  test_jaccard_micro:
  - 0.47368421052631576
  - 0.5229007633587787
  - 0.4375
  - 0.5234375
  - 0.49242424242424243
  test_jaccard_samples:
  - 0.49159663865546227
  - 0.5470085470085471
  - 0.4905913978494623
  - 0.5460526315789473
  - 0.5238095238095238
  test_jaccard_weighted:
  - 0.4627839481892922
  - 0.5100903416576261
  - 0.4188985203691086
  - 0.5070414879364048
  - 0.4776462081311398
  test_label_ranking_average_precision_score:
  - 0.7954248366013074
  - 0.8313865147198478
  - 0.7487455197132614
  - 0.8046052631578948
  - 0.8153828197945845
  test_label_ranking_loss:
  - 0.15305788982259566
  - 0.13155270655270657
  - 0.19919354838709677
  - 0.16025828460038988
  - 0.14292717086834733
  test_matthews_corrcoef_macro:
  - 0.5154492990330146
  - 0.5534727383815309
  - 0.47318603188761327
  - 0.5645377581935572
  - 0.5229703538126323
  test_matthews_corrcoef_micro:
  - 0.5205660917047756
  - 0.569284486413695
  - 0.4807667411551976
  - 0.5744753806268873
  - 0.5433239299507641
  test_matthews_corrcoef_samples:
  - 0.4816315656585121
  - 0.5659007021106326
  - 0.4597617349752554
  - 0.5440976445195227
  - 0.5271249813008451
  test_matthews_corrcoef_weighted:
  - 0.5111272830628245
  - 0.5513463315328091
  - 0.476598180009027
  - 0.5718913901292738
  - 0.5308861716011343
  test_ndgc:
  - 0.8604660415766444
  - 0.8852180065275578
  - 0.8221820187468025
  - 0.8666930294803051
  - 0.8734478542869678
  test_precision_macro:
  - 0.8071928071928073
  - 0.814472496049865
  - 0.793019943019943
  - 0.8474044682236038
  - 0.8163927575692282
  test_precision_micro:
  - 0.7455621301775148
  - 0.7611111111111111
  - 0.7041420118343196
  - 0.788235294117647
  - 0.7647058823529411
  test_precision_samples:
  - 0.6162464985994398
  - 0.6794871794871795
  - 0.6115591397849464
  - 0.7090643274853802
  - 0.661064425770308
  test_precision_weighted:
  - 0.7912132710338987
  - 0.8022011395333299
  - 0.7793986293986295
  - 0.8335305620770112
  - 0.8062979562454353
  test_recall_macro:
  - 0.5406857368551473
  - 0.6046805638624116
  - 0.5078370350126148
  - 0.5736640187298082
  - 0.5500221611720532
  test_recall_micro:
  - 0.5650224215246636
  - 0.6255707762557078
  - 0.536036036036036
  - 0.6090909090909091
  - 0.5803571428571429
  test_recall_samples:
  - 0.5532212885154061
  - 0.6424501424501425
  - 0.538978494623656
  - 0.5979532163742689
  - 0.5910364145658263
  test_recall_weighted:
  - 0.5650224215246636
  - 0.6255707762557078
  - 0.536036036036036
  - 0.6090909090909091
  - 0.5803571428571429
  test_roc_auc_macro:
  - 0.8396570655202874
  - 0.8703669915183029
  - 0.8205369382256249
  - 0.8558844351264486
  - 0.8635856468309088
  test_roc_auc_micro:
  - 0.8582101138885591
  - 0.8829235088913467
  - 0.8342221531876703
  - 0.8753330721003135
  - 0.8730047376093293
  test_roc_auc_samples:
  - 0.8469421101774042
  - 0.8684472934472934
  - 0.8008064516129032
  - 0.8397417153996102
  - 0.8570728291316527
  test_roc_auc_weighted:
  - 0.8366070466234651
  - 0.8652398299856953
  - 0.8239888520796473
  - 0.853831902074535
  - 0.8640642070023621
start: 2023-10-21 18:40:28.567354
wrapper: null
