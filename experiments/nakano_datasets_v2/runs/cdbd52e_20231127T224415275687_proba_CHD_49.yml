active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b80MzMzMzPzP6CZmZmZmck/mJmZmZmZ6b+gmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAACEAAAAAAAADwvw==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 22:45:20.851716
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.7
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: proba
  params:
    memory: estimators_cache
hash: cdbd52e71eb0f75d06422456b720f2f493fe57c258257142897704446c29b274
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/cdbd52e_20231127T224415275687_proba_CHD_49.yml
results:
  fit_time:
  - 34.49281167984009
  - 35.60962891578674
  - 31.68426775932312
  - 32.83419489860535
  - 31.804126977920532
  score_time:
  - 30.619532346725464
  - 22.488783359527588
  - 29.16706109046936
  - 23.891727685928345
  - 29.314700603485107
  test_average_precision_macro:
  - 0.4840614764343408
  - 0.4753814216557042
  - 0.5164320284249712
  - 0.520422143875205
  - 0.455994441923069
  test_average_precision_micro:
  - 0.5894312243171933
  - 0.5403753180325568
  - 0.6075777294505897
  - 0.6256442715034521
  - 0.5402302418941667
  test_average_precision_samples:
  - 0.701413913913914
  - 0.6679804804804804
  - 0.7266715830875122
  - 0.6979938271604939
  - 0.670138888888889
  test_average_precision_weighted:
  - 0.6114310442811384
  - 0.5991643526588137
  - 0.631930614352812
  - 0.6488371927814341
  - 0.5702095939351871
  test_coverage_error:
  - -4.018018018018018
  - -4.297297297297297
  - -4.0
  - -4.305555555555555
  - -4.267857142857143
  test_f1_macro:
  - 0.09338235294117647
  - 0.07746716679465217
  - 0.1414462567902838
  - 0.09053845836938161
  - 0.08455258508552234
  test_f1_micro:
  - 0.12578616352201258
  - 0.10355987055016182
  - 0.19195046439628485
  - 0.12903225806451613
  - 0.12063492063492062
  test_f1_samples:
  - 0.09009009009009009
  - 0.07327327327327327
  - 0.143952802359882
  - 0.09819223985890652
  - 0.09553571428571428
  test_f1_weighted:
  - 0.12203491152558586
  - 0.09774838409629612
  - 0.1865887284796459
  - 0.12645054491225033
  - 0.11830430136388549
  test_hamming_loss:
  - -0.4174174174174174
  - -0.4159159159159159
  - -0.38495575221238937
  - -0.4166666666666667
  - -0.41220238095238093
  test_jaccard_macro:
  - 0.05167330275211888
  - 0.04240366939207039
  - 0.0793658196188976
  - 0.0492910909591188
  - 0.04545958679352508
  test_jaccard_micro:
  - 0.06711409395973154
  - 0.05460750853242321
  - 0.10616438356164383
  - 0.06896551724137931
  - 0.06418918918918919
  test_jaccard_samples:
  - 0.060810810810810814
  - 0.05180180180180179
  - 0.10693215339233038
  - 0.07237654320987653
  - 0.06770833333333333
  test_jaccard_weighted:
  - 0.06738169949166814
  - 0.05375875780571978
  - 0.10618968267950826
  - 0.06910959505753522
  - 0.06415817175180316
  test_label_ranking_average_precision_score:
  - 0.7104229229229228
  - 0.6859984984984988
  - 0.7266715830875123
  - 0.6979938271604936
  - 0.670138888888889
  test_label_ranking_loss:
  - 0.28806306306306306
  - 0.3321571571571571
  - 0.28232546705998035
  - 0.32633744855967073
  - 0.3332093253968254
  test_matthews_corrcoef_macro:
  - 0.028256181360049815
  - 0.0171120743425667
  - 0.13298184114160433
  - 0.0784538364361898
  - 0.029841059474744854
  test_matthews_corrcoef_micro:
  - 0.09558476493378963
  - 0.08528484838427998
  - 0.21755539774979418
  - 0.1647746314698762
  - 0.09860860738355959
  test_matthews_corrcoef_samples:
  - 0.049153704410664974
  - 0.04063986691761082
  - 0.11763843450890382
  - 0.08174229412780437
  - 0.06213529995791066
  test_matthews_corrcoef_weighted:
  - 0.039905070698201546
  - 0.016201295962829432
  - 0.1622913428978056
  - 0.10054063600237725
  - 0.027909482900136066
  test_ndgc:
  - 0.7955002372303928
  - 0.7756255860450006
  - 0.817382329392305
  - 0.8017450659941132
  - 0.7782956157156351
  test_precision_macro:
  - 0.41143578643578643
  - 0.41071428571428575
  - 0.6990740740740741
  - 0.5648148148148148
  - 0.5528083028083028
  test_precision_micro:
  - 0.6451612903225806
  - 0.64
  - 0.8857142857142857
  - 0.8695652173913043
  - 0.6551724137931034
  test_precision_samples:
  - 0.17567567567567569
  - 0.13063063063063063
  - 0.24778761061946902
  - 0.16666666666666666
  - 0.16517857142857142
  test_precision_weighted:
  - 0.5708855604325987
  - 0.5259054325955734
  - 0.8617862654320987
  - 0.7375145180023228
  - 0.6550820973897897
  test_recall_macro:
  - 0.05391496221129962
  - 0.044507893403803726
  - 0.0806070059376033
  - 0.049698290876122646
  - 0.047023353732307614
  test_recall_micro:
  - 0.06968641114982578
  - 0.056338028169014086
  - 0.1076388888888889
  - 0.06968641114982578
  - 0.06643356643356643
  test_recall_samples:
  - 0.06231231231231231
  - 0.05255255255255254
  - 0.10693215339233038
  - 0.07237654320987653
  - 0.06845238095238095
  test_recall_weighted:
  - 0.06968641114982578
  - 0.056338028169014086
  - 0.1076388888888889
  - 0.06968641114982578
  - 0.06643356643356643
  test_roc_auc_macro:
  - 0.5776435171955473
  - 0.5358123230095105
  - 0.6090021859336011
  - 0.5817664538213235
  - 0.48248372162951697
  test_roc_auc_micro:
  - 0.6890496722532246
  - 0.6314523265245927
  - 0.6731125356125356
  - 0.697163319080757
  - 0.6336008551034458
  test_roc_auc_samples:
  - .nan
  - .nan
  - 0.7176745329400197
  - 0.6736625514403292
  - 0.6667906746031748
  test_roc_auc_weighted:
  - 0.5647949249794216
  - 0.5314491278199579
  - 0.5497510650053024
  - 0.5792641676384638
  - 0.4859110061312769
start: 2023-11-27 22:44:15.275687
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop70
  params:
    drop: 0.7
    random_state: 0
