active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+gmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb/QzMzMzMz8P4CZmZmZmcm/gJmZmZmZyb8wMzMzMzPzvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZAUCYmZmZmZkBQGhmZmZmZg7AmJmZmZmZAUBoZmZmZmYGwA==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T/MzMzMzMwEwKCZmZmZmdk/aGZmZmZm9j+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZAUA0MzMzMzPzP5iZmZmZmem/mJmZmZmZ6b/MzMzMzMz8vw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMz87+QmZmZmZkJwHBmZmZmZg5AAJmZmZmZyb/AmZmZmZnpPw==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 20:37:47.507471
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_pvalue
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 0.05
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 0.05
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding_chi2
  params:
    memory: estimators_cache
hash: 7bbdffb3d33860aad994c3e27d0a232f96a7bbc0fdf7990d49945e76546c4221
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/7bbdffb_20231127T203602658467_embedding_chi2_flags.yml
results:
  fit_time:
  - 46.20306134223938
  - 51.2453408241272
  - 48.96756887435913
  - 45.73795700073242
  - 48.27660822868347
  score_time:
  - 51.06804370880127
  - 49.57306098937988
  - 55.05970239639282
  - 51.53096413612366
  - 55.85314393043518
  test_average_precision_macro:
  - 0.5648929017278281
  - 0.7329502083412588
  - 0.7303294950809621
  - 0.6181152609617763
  - 0.7013846687466554
  test_average_precision_micro:
  - 0.7180395390817635
  - 0.7387300439152896
  - 0.8180822012455986
  - 0.6930136533694886
  - 0.7724883858919096
  test_average_precision_samples:
  - 0.8078670634920634
  - 0.8078694255479971
  - 0.8805827664399093
  - 0.8036375661375662
  - 0.8267251461988303
  test_average_precision_weighted:
  - 0.6748716904956777
  - 0.7473780705139297
  - 0.7849647046589664
  - 0.6678958585525555
  - 0.7632655009775152
  test_coverage_error:
  - -4.625
  - -4.5
  - -4.8
  - -4.717948717948718
  - -5.078947368421052
  test_f1_macro:
  - 0.025974025974025976
  - 0.026785714285714284
  - 0.018433179723502304
  - 0.017619951206288963
  - 0.04993997599039616
  test_f1_micro:
  - 0.04580152671755725
  - 0.04545454545454545
  - 0.028985507246376812
  - 0.029850746268656716
  - 0.08163265306122448
  test_f1_samples:
  - 0.0375
  - 0.0373015873015873
  - 0.02857142857142857
  - 0.023076923076923078
  - 0.07067669172932331
  test_f1_weighted:
  - 0.04151753758052971
  - 0.04215116279069767
  - 0.02751423149905123
  - 0.028448173624288423
  - 0.07599561563755937
  test_hamming_loss:
  - -0.44642857142857145
  - -0.42857142857142855
  - -0.5469387755102041
  - -0.47619047619047616
  - -0.5075187969924813
  test_jaccard_macro:
  - 0.014285714285714287
  - 0.014778325123152709
  - 0.009852216748768473
  - 0.00909090909090909
  - 0.027705627705627706
  test_jaccard_micro:
  - 0.0234375
  - 0.023255813953488372
  - 0.014705882352941176
  - 0.015151515151515152
  - 0.0425531914893617
  test_jaccard_samples:
  - 0.025
  - 0.025793650793650792
  - 0.02
  - 0.014957264957264956
  - 0.04780701754385965
  test_jaccard_weighted:
  - 0.022834645669291342
  - 0.023255813953488372
  - 0.014705882352941176
  - 0.014678030303030304
  - 0.04216073781291173
  test_label_ranking_average_precision_score:
  - 0.8078670634920634
  - 0.8078694255479969
  - 0.8805827664399092
  - 0.8036375661375661
  - 0.8267251461988302
  test_label_ranking_loss:
  - 0.2208333333333333
  - 0.2130952380952381
  - 0.14571428571428574
  - 0.22350427350427352
  - 0.22543859649122808
  test_matthews_corrcoef_macro:
  - 0.0026661548140754963
  - 0.02652790545386455
  - 0.01599692888445298
  - -0.05550680834197769
  - -0.027820144933984197
  test_matthews_corrcoef_micro:
  - 0.07168131619220973
  - 0.11483155603877891
  - 0.08121862930875245
  - -0.0407129650724473
  - 0.055382291047044806
  test_matthews_corrcoef_samples:
  - 0.026516504294495535
  - 0.03501083656552877
  - 0.025819888974716113
  - -0.015685955906165
  - 0.027138154034598183
  test_matthews_corrcoef_weighted:
  - 0.00426164903352225
  - 0.0417454636211977
  - 0.0238777688495879
  - -0.08733617001373131
  - -0.042335003160410736
  test_ndgc:
  - 0.8901303817632794
  - 0.8892544158008404
  - 0.9311878951378404
  - 0.8826068430602573
  - 0.8987085487423412
  test_precision_macro:
  - 0.10714285714285714
  - 0.14285714285714285
  - 0.14285714285714285
  - 0.17142857142857143
  - 0.19999999999999998
  test_precision_micro:
  - 0.75
  - 1.0
  - 1.0
  - 0.3333333333333333
  - 0.6666666666666666
  test_precision_samples:
  - 0.075
  - 0.07142857142857142
  - 0.05714285714285714
  - 0.05128205128205128
  - 0.15789473684210525
  test_precision_weighted:
  - 0.17125984251968504
  - 0.2248062015503876
  - 0.21323529411764705
  - 0.2796875
  - 0.30434782608695654
  test_recall_macro:
  - 0.014778325123152709
  - 0.014778325123152709
  - 0.009852216748768473
  - 0.009688013136289
  - 0.028571428571428574
  test_recall_micro:
  - 0.023622047244094488
  - 0.023255813953488372
  - 0.014705882352941176
  - 0.015625
  - 0.043478260869565216
  test_recall_samples:
  - 0.025
  - 0.025793650793650792
  - 0.02
  - 0.014957264957264956
  - 0.04780701754385965
  test_recall_weighted:
  - 0.023622047244094488
  - 0.023255813953488372
  - 0.014705882352941176
  - 0.015625
  - 0.043478260869565216
  test_roc_auc_macro:
  - 0.6094369084542193
  - 0.7297928927261227
  - 0.7005672927260312
  - 0.6190344097120032
  - 0.7020316034554293
  test_roc_auc_micro:
  - 0.7787555967268797
  - 0.778999295278365
  - 0.8007285483000539
  - 0.7662176724137931
  - 0.7989696557971016
  test_roc_auc_samples:
  - 0.7791666666666666
  - .nan
  - .nan
  - 0.7764957264957265
  - 0.7745614035087719
  test_roc_auc_weighted:
  - 0.6196206048568254
  - 0.6953276994955971
  - 0.6719534799408918
  - 0.572077310680357
  - 0.6946882096752482
start: 2023-11-27 20:36:02.658467
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
