active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb/AmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            YGZmZmZm9r9AMzMzMzPjP2BmZmZmZva/QDMzMzMz4z+gmZmZmZn5Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          4MzMzMzMDEDAmZmZmZn5PwCZmZmZmdm/kJmZmZmZEcAAmZmZmZnZvw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 18:46:25.154951
estimator:
  call: nakano_datasets_v2.estimators.final_estimator
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
        params:
          estimators:
          - - rf
            - call: sklearn.ensemble._forest.RandomForestClassifier
              params:
                bootstrap: true
                ccp_alpha: 0.0
                class_weight: null
                criterion: gini
                max_depth: null
                max_features: sqrt
                max_leaf_nodes: null
                max_samples: 0.9
                min_impurity_decrease: 0.0
                min_samples_leaf: 5
                min_samples_split: 2
                min_weight_fraction_leaf: 0.0
                n_estimators: 150
                n_jobs: 14
                oob_score: true
                random_state: 0
                verbose: true
                warm_start: false
          - - xt
            - call: sklearn.ensemble._forest.ExtraTreesClassifier
              params:
                bootstrap: true
                ccp_alpha: 0.0
                class_weight: null
                criterion: gini
                max_depth: null
                max_features: sqrt
                max_leaf_nodes: null
                max_samples: 0.9
                min_impurity_decrease: 0.0
                min_samples_leaf: 5
                min_samples_split: 2
                min_weight_fraction_leaf: 0.0
                n_estimators: 150
                n_jobs: 14
                oob_score: true
                random_state: 0
                verbose: true
                warm_start: false
    verbose: false
  name: final_estimator
  params: {}
hash: 501b3edf714d7b83a7079b7dcc75d64bebb34beea0b2d23d15ca5300b58c063f
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/501b3ed_20231127T184619331109_final_estimator_emotions.yml
results:
  fit_time:
  - 1.1681032180786133
  - 1.139423131942749
  - 1.1581730842590332
  - 1.1558191776275635
  - 1.1709494590759277
  score_time:
  - 4.290854454040527
  - 4.38919734954834
  - 4.328862905502319
  - 4.4933083057403564
  - 4.527974843978882
  test_average_precision_macro:
  - 0.8182662786876741
  - 0.7361489727036612
  - 0.7445401973022969
  - 0.7740424730952739
  - 0.6689590587653385
  test_average_precision_micro:
  - 0.825576679319798
  - 0.7550678523483138
  - 0.725029008624567
  - 0.7463304070585097
  - 0.6716943578325075
  test_average_precision_samples:
  - 0.854927536231884
  - 0.7900522317188983
  - 0.8037581699346406
  - 0.816531165311653
  - 0.7849906629318394
  test_average_precision_weighted:
  - 0.8192964876174195
  - 0.7385843557199339
  - 0.7401193974931989
  - 0.7698416104833128
  - 0.6753609196616251
  test_coverage_error:
  - -2.652173913043478
  - -2.7777777777777777
  - -2.73109243697479
  - -2.5853658536585367
  - -2.9747899159663866
  test_f1_macro:
  - 0.020833333333333332
  - 0.02150537634408602
  - 0.02767821585025886
  - 0.0
  - 0.018018018018018018
  test_f1_micro:
  - 0.017699115044247787
  - 0.018018018018018018
  - 0.026785714285714288
  - 0.0
  - 0.017937219730941707
  test_f1_samples:
  - 0.010144927536231883
  - 0.011396011396011395
  - 0.01680672268907563
  - 0.0
  - 0.014005602240896357
  test_f1_weighted:
  - 0.016741071428571428
  - 0.01700879765395894
  - 0.0258140201214205
  - 0.0
  - 0.017121193591781825
  test_hamming_loss:
  - -0.3217391304347826
  - -0.31054131054131057
  - -0.30532212885154064
  - -0.3008130081300813
  - -0.3067226890756303
  test_jaccard_macro:
  - 0.011111111111111112
  - 0.011494252873563218
  - 0.014638906961613532
  - 0.0
  - 0.009523809523809523
  test_jaccard_micro:
  - 0.008928571428571428
  - 0.00909090909090909
  - 0.013574660633484163
  - 0.0
  - 0.00904977375565611
  test_jaccard_samples:
  - 0.007246376811594202
  - 0.008547008547008548
  - 0.012605042016806723
  - 0.0
  - 0.012605042016806723
  test_jaccard_weighted:
  - 0.008928571428571428
  - 0.00909090909090909
  - 0.013574660633484163
  - 0.0
  - 0.00904977375565611
  test_label_ranking_average_precision_score:
  - 0.854927536231884
  - 0.7900522317188982
  - 0.8037581699346404
  - 0.8165311653116529
  - 0.7849906629318398
  test_label_ranking_loss:
  - 0.106231884057971
  - 0.16358024691358025
  - 0.15805322128851537
  - 0.1435862691960253
  - 0.18064892623716156
  test_matthews_corrcoef_macro:
  - 0.037322726404434105
  - 0.03828751362803229
  - 0.05550928541036121
  - 0.0
  - 0.033757978902788886
  test_matthews_corrcoef_micro:
  - 0.07776599407123298
  - 0.07911852033335974
  - 0.09701818592341424
  - 0.0
  - 0.07915936902482201
  test_matthews_corrcoef_samples:
  - 0.009388427195944642
  - 0.010811205675789332
  - 0.015944257110092667
  - 0.0
  - 0.013718113714568705
  test_matthews_corrcoef_weighted:
  - 0.02999147657499169
  - 0.03028194259671645
  - 0.05486023295944036
  - 0.0
  - 0.0320777175094374
  test_ndgc:
  - 0.9070602637363824
  - 0.8536507725142829
  - 0.8679451073723393
  - 0.8748689243598834
  - 0.8598858863057224
  test_precision_macro:
  - 0.16666666666666666
  - 0.16666666666666666
  - 0.3333333333333333
  - 0.0
  - 0.16666666666666666
  test_precision_micro:
  - 1.0
  - 1.0
  - 1.0
  - 0.0
  - 1.0
  test_precision_samples:
  - 0.017391304347826087
  - 0.017094017094017096
  - 0.025210084033613446
  - 0.0
  - 0.01680672268907563
  test_precision_weighted:
  - 0.13392857142857142
  - 0.1318181818181818
  - 0.37104072398190047
  - 0.0
  - 0.1583710407239819
  test_recall_macro:
  - 0.011111111111111112
  - 0.011494252873563218
  - 0.014638906961613532
  - 0.0
  - 0.009523809523809523
  test_recall_micro:
  - 0.008928571428571428
  - 0.00909090909090909
  - 0.013574660633484163
  - 0.0
  - 0.00904977375565611
  test_recall_samples:
  - 0.007246376811594202
  - 0.008547008547008548
  - 0.012605042016806723
  - 0.0
  - 0.012605042016806723
  test_recall_weighted:
  - 0.008928571428571428
  - 0.00909090909090909
  - 0.013574660633484163
  - 0.0
  - 0.00904977375565611
  test_roc_auc_macro:
  - 0.899272751116896
  - 0.8477380318634274
  - 0.8409035443729601
  - 0.8686899498834393
  - 0.8139672178477474
  test_roc_auc_micro:
  - 0.9115860668301655
  - 0.868587325537533
  - 0.862610483419456
  - 0.8804996857322439
  - 0.8231347461749562
  test_roc_auc_samples:
  - 0.893768115942029
  - 0.8364197530864198
  - 0.8419467787114847
  - 0.8564137308039746
  - 0.8193510737628384
  test_roc_auc_weighted:
  - 0.899784526387445
  - 0.8449677434256176
  - 0.8376607192070965
  - 0.8640820069188191
  - 0.8165364701938255
start: 2023-11-27 18:46:19.331109
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
