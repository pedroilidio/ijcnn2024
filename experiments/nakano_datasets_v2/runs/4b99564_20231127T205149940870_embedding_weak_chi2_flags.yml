active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/oJmZmZmZ6b+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz878wMzMzMzPzvzQzMzMzMxNAmJmZmZmZCcCgmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz8z8wMzMzMzPzP4CZmZmZmck/MDMzMzMz8z9oZmZmZmYOwA==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz8z8AmpmZmZnJP8DMzMzMzPy/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz47+gmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+gmZmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZyb/AmZmZmZnpP8CZmZmZmek/wJmZmZmZ6T+QmZmZmZkBwA==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 20:53:48.737257
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_pvalue
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.7
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler:
            call: deep_forest.weak_labels.PositiveUnlabeledImputer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesClassifier
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  class_weight: null
                  criterion: gini
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: 0.9
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: true
                  random_state: 0
                  verbose: true
                  warm_start: false
              sampling_strategy: auto
              threshold: 0.8
              use_oob_proba: true
              verbose: true
              weight_proba: true
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 0.05
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 0.05
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding_weak_chi2
  params:
    memory: estimators_cache
hash: 4b99564707daddd7e25f9f163492ea849b4543a89ea842c1eda5f1fdfe2a9766
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/4b99564_20231127T205149940870_embedding_weak_chi2_flags.yml
results:
  fit_time:
  - 61.85126519203186
  - 61.19294333457947
  - 61.03974223136902
  - 63.03788924217224
  - 61.612043380737305
  score_time:
  - 50.714293241500854
  - 50.984546184539795
  - 54.93143582344055
  - 55.201881885528564
  - 50.36617350578308
  test_average_precision_macro:
  - 0.563301384910279
  - 0.6742849846743049
  - 0.5845707036256133
  - 0.6435255029484106
  - 0.6017416902513197
  test_average_precision_micro:
  - 0.6846671065661027
  - 0.7789927659633603
  - 0.6892091772510132
  - 0.7580345025455542
  - 0.6803652443992874
  test_average_precision_samples:
  - 0.8002045177045176
  - 0.8296230158730159
  - 0.8019966583124477
  - 0.80718671679198
  - 0.764296360820751
  test_average_precision_weighted:
  - 0.6356860492872483
  - 0.7491456398176356
  - 0.6544223878918773
  - 0.7237907317499211
  - 0.6549772637570626
  test_coverage_error:
  - -4.717948717948718
  - -4.7631578947368425
  - -4.7368421052631575
  - -5.026315789473684
  - -4.829268292682927
  test_f1_macro:
  - 0.009216589861751152
  - 0.0
  - 0.0
  - 0.008928571428571428
  - 0.0
  test_f1_micro:
  - 0.015267175572519085
  - 0.0
  - 0.0
  - 0.014705882352941178
  - 0.0
  test_f1_samples:
  - 0.007326007326007326
  - 0.0
  - 0.0
  - 0.013157894736842105
  - 0.0
  test_f1_weighted:
  - 0.01488833746898263
  - 0.0
  - 0.0
  - 0.014351851851851852
  - 0.0
  test_hamming_loss:
  - -0.4725274725274725
  - -0.48872180451127817
  - -0.4849624060150376
  - -0.5037593984962406
  - -0.46689895470383275
  test_jaccard_macro:
  - 0.0047619047619047615
  - 0.0
  - 0.0
  - 0.004608294930875576
  - 0.0
  test_jaccard_micro:
  - 0.007692307692307693
  - 0.0
  - 0.0
  - 0.007407407407407408
  - 0.0
  test_jaccard_samples:
  - 0.004273504273504273
  - 0.0
  - 0.0
  - 0.008771929824561403
  - 0.0
  test_jaccard_weighted:
  - 0.007692307692307693
  - 0.0
  - 0.0
  - 0.007407407407407408
  - 0.0
  test_label_ranking_average_precision_score:
  - 0.8002045177045177
  - 0.8296230158730159
  - 0.8019966583124478
  - 0.8071867167919798
  - 0.7642963608207509
  test_label_ranking_loss:
  - 0.22521367521367522
  - 0.20964912280701753
  - 0.2271929824561404
  - 0.2241228070175439
  - 0.24999999999999994
  test_matthews_corrcoef_macro:
  - 0.012693190237694834
  - 0.0
  - 0.0
  - 0.011160130449295199
  - 0.0
  test_matthews_corrcoef_micro:
  - 0.06359337738364604
  - 0.0
  - 0.0
  - 0.06051260184895126
  - 0.0
  test_matthews_corrcoef_samples:
  - 0.004273504273504273
  - 0.0
  - 0.0
  - 0.012405382126079783
  - 0.0
  test_matthews_corrcoef_weighted:
  - 0.020504384230122425
  - 0.0
  - 0.0
  - 0.01793887635183006
  - 0.0
  test_ndgc:
  - 0.877717573427791
  - 0.9007071694609388
  - 0.8821302365016336
  - 0.8847047089696068
  - 0.8551255481329781
  test_precision_macro:
  - 0.14285714285714285
  - 0.0
  - 0.0
  - 0.14285714285714285
  - 0.0
  test_precision_micro:
  - 1.0
  - 0.0
  - 0.0
  - 1.0
  - 0.0
  test_precision_samples:
  - 0.02564102564102564
  - 0.0
  - 0.0
  - 0.02631578947368421
  - 0.0
  test_precision_weighted:
  - 0.23076923076923078
  - 0.0
  - 0.0
  - 0.22962962962962963
  - 0.0
  test_recall_macro:
  - 0.0047619047619047615
  - 0.0
  - 0.0
  - 0.004608294930875576
  - 0.0
  test_recall_micro:
  - 0.007692307692307693
  - 0.0
  - 0.0
  - 0.007407407407407408
  - 0.0
  test_recall_samples:
  - 0.004273504273504273
  - 0.0
  - 0.0
  - 0.008771929824561403
  - 0.0
  test_recall_weighted:
  - 0.007692307692307693
  - 0.0
  - 0.0
  - 0.007407407407407408
  - 0.0
  test_roc_auc_macro:
  - 0.560444456431127
  - 0.6352531294649522
  - 0.5486816505399956
  - 0.6315122874411732
  - 0.5955842395723474
  test_roc_auc_micro:
  - 0.7372781065088757
  - 0.7802601809954751
  - 0.7306060091665253
  - 0.7743285270002827
  - 0.75017071505219
  test_roc_auc_samples:
  - 0.7747863247863248
  - 0.7903508771929825
  - .nan
  - 0.7758771929824562
  - .nan
  test_roc_auc_weighted:
  - 0.5405845112741663
  - 0.6296473134708429
  - 0.5011312427726314
  - 0.6072782029897039
  - 0.5649759344407277
start: 2023-11-27 20:51:49.940870
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop70
  params:
    drop: 0.7
    random_state: 0
