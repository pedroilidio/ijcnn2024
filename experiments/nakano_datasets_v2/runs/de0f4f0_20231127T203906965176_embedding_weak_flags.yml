active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6b+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzM/D80MzMzMzMTQJiZmZmZmQHAzMzMzMzMFMCgmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT8wMzMzMzPzP4CZmZmZmck/oJmZmZmZ6b+gmZmZmZnpvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzMDMA0MzMzMzMDQJiZmZmZmfm/NDMzMzMzA0CgmZmZmZnZPw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b80MzMzMzPzPzQzMzMzM/M/mJmZmZmZ6b+YmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZyb/gzMzMzMz8P5CZmZmZmQHAIDMzMzMz87/gzMzMzMz8Pw==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 20:40:41.696026
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler:
            call: deep_forest.weak_labels.PositiveUnlabeledImputer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesClassifier
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  class_weight: null
                  criterion: gini
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: 0.9
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: true
                  random_state: 0
                  verbose: true
                  warm_start: false
              sampling_strategy: auto
              threshold: 0.8
              use_oob_proba: true
              verbose: true
              weight_proba: true
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding_weak
  params:
    memory: estimators_cache
hash: de0f4f0cd396477d78e931480817b06b28b32ad927199880f1a6138289b943c2
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/de0f4f0_20231127T203906965176_embedding_weak_flags.yml
results:
  fit_time:
  - 55.28455996513367
  - 55.9615843296051
  - 55.638692140579224
  - 51.66141200065613
  - 56.407344579696655
  score_time:
  - 38.246437311172485
  - 37.961349964141846
  - 37.64179563522339
  - 35.06600999832153
  - 37.631412744522095
  test_average_precision_macro:
  - 0.682824872399272
  - 0.6458204973657279
  - 0.6566863761013854
  - 0.6685138085915572
  - 0.6510509880892313
  test_average_precision_micro:
  - 0.7639021563887377
  - 0.7282089233470546
  - 0.7016681152632109
  - 0.7132911278487268
  - 0.721595686938843
  test_average_precision_samples:
  - 0.8191127391127392
  - 0.8012644787644788
  - 0.792881339527681
  - 0.7928809523809524
  - 0.8147704847704847
  test_average_precision_weighted:
  - 0.7441032784003081
  - 0.7343915356160094
  - 0.7067737792122164
  - 0.7269739028906816
  - 0.690084843376896
  test_coverage_error:
  - -4.9743589743589745
  - -4.5675675675675675
  - -4.609756097560975
  - -4.875
  - -4.72972972972973
  test_f1_macro:
  - 0.026785714285714284
  - 0.027361751152073732
  - 0.07082184225041367
  - 0.1079713936856794
  - 0.04947633012149142
  test_f1_micro:
  - 0.043795620437956206
  - 0.048
  - 0.12328767123287672
  - 0.13157894736842105
  - 0.072992700729927
  test_f1_samples:
  - 0.03333333333333333
  - 0.039639639639639644
  - 0.10162601626016261
  - 0.10714285714285714
  - 0.05585585585585585
  test_f1_weighted:
  - 0.04057835820895522
  - 0.04655274986779482
  - 0.10984844119172477
  - 0.11626248852526225
  - 0.07042376485863312
  test_hamming_loss:
  - -0.47985347985347987
  - -0.4594594594594595
  - -0.445993031358885
  - -0.4714285714285714
  - -0.49034749034749037
  test_jaccard_macro:
  - 0.014778325123152709
  - 0.014460511679644048
  - 0.0410426267281106
  - 0.06346288515406162
  - 0.02656641604010025
  test_jaccard_micro:
  - 0.022388059701492536
  - 0.02459016393442623
  - 0.06569343065693431
  - 0.07042253521126761
  - 0.03787878787878788
  test_jaccard_samples:
  - 0.021367521367521364
  - 0.02702702702702703
  - 0.06707317073170732
  - 0.07166666666666667
  - 0.038288288288288286
  test_jaccard_weighted:
  - 0.022388059701492536
  - 0.02459016393442623
  - 0.0635757703418392
  - 0.0685111635895234
  - 0.03791348600508906
  test_label_ranking_average_precision_score:
  - 0.8191127391127391
  - 0.8012644787644786
  - 0.7928813395276809
  - 0.7928809523809524
  - 0.8147704847704847
  test_label_ranking_loss:
  - 0.22820512820512817
  - 0.21486486486486486
  - 0.21788617886178863
  - 0.23583333333333334
  - 0.19324324324324324
  test_matthews_corrcoef_macro:
  - 0.024216553700743226
  - 0.028410931660792223
  - 0.005931451160695723
  - 0.010903455681598935
  - 0.02013130950369785
  test_matthews_corrcoef_micro:
  - 0.10735783534184591
  - 0.1147152122346151
  - 0.11853579892454194
  - 0.08442273233289772
  - 0.10088840681563038
  test_matthews_corrcoef_samples:
  - 0.030218238512245622
  - 0.036556865014985146
  - 0.06460893750560458
  - 0.06916454047580371
  - 0.039742030696005626
  test_matthews_corrcoef_weighted:
  - 0.03668627165112594
  - 0.04847595280460799
  - 0.008916025004353737
  - -0.0525404848311324
  - 0.01990784449419028
  test_ndgc:
  - 0.9030001624808967
  - 0.8747757641750272
  - 0.8696079472835728
  - 0.872411427490335
  - 0.8844221644809225
  test_precision_macro:
  - 0.14285714285714285
  - 0.2857142857142857
  - 0.21428571428571427
  - 0.31111111111111117
  - 0.35714285714285715
  test_precision_micro:
  - 1.0
  - 1.0
  - 0.75
  - 0.6666666666666666
  - 0.8333333333333334
  test_precision_samples:
  - 0.07692307692307693
  - 0.08108108108108109
  - 0.21951219512195122
  - 0.1875
  - 0.10810810810810811
  test_precision_weighted:
  - 0.21641791044776118
  - 0.4918032786885246
  - 0.3358208955223881
  - 0.3046228710462287
  - 0.4847328244274809
  test_recall_macro:
  - 0.014778325123152709
  - 0.014460511679644048
  - 0.04338153503893215
  - 0.06635944700460829
  - 0.026730619652579723
  test_recall_micro:
  - 0.022388059701492536
  - 0.02459016393442623
  - 0.06716417910447761
  - 0.072992700729927
  - 0.03816793893129771
  test_recall_samples:
  - 0.021367521367521364
  - 0.02702702702702703
  - 0.06707317073170732
  - 0.08416666666666667
  - 0.038288288288288286
  test_recall_weighted:
  - 0.022388059701492536
  - 0.02459016393442623
  - 0.06716417910447761
  - 0.072992700729927
  - 0.03816793893129771
  test_roc_auc_macro:
  - 0.694511223323772
  - 0.6432873350875637
  - 0.621718845486673
  - 0.6292203882704237
  - 0.5836656855692208
  test_roc_auc_micro:
  - 0.7673145066036723
  - 0.794543496470025
  - 0.7639254706857866
  - 0.7782144862436834
  - 0.7618082061068702
  test_roc_auc_samples:
  - 0.7717948717948718
  - 0.7851351351351351
  - .nan
  - 0.7641666666666667
  - .nan
  test_roc_auc_weighted:
  - 0.6842324093816631
  - 0.5923442834822293
  - 0.580362098361023
  - 0.572900007713769
  - 0.512391714189301
start: 2023-11-27 20:39:06.965176
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
