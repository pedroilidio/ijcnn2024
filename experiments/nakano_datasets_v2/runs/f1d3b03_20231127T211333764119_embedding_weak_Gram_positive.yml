active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb8AmpmZmZnpPwAzMzMzM/O/AM3MzMzM/D8AMzMzMzPzvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 21:15:35.549736
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler:
            call: deep_forest.weak_labels.PositiveUnlabeledImputer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesClassifier
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  class_weight: null
                  criterion: gini
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: 0.9
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: true
                  random_state: 0
                  verbose: true
                  warm_start: false
              sampling_strategy: auto
              threshold: 0.8
              use_oob_proba: true
              verbose: true
              weight_proba: true
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding_weak
  params:
    memory: estimators_cache
hash: f1d3b03821394f4911a65c9261c10be94ae7c39e60c417265a8077572f9284d8
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/f1d3b03_20231127T211333764119_embedding_weak_Gram_positive.yml
results:
  fit_time:
  - 73.04507350921631
  - 64.75612378120422
  - 69.55478167533875
  - 68.81175017356873
  - 69.19338202476501
  score_time:
  - 47.87164378166199
  - 13.535364389419556
  - 39.00519299507141
  - 50.90008234977722
  - 47.34492802619934
  test_average_precision_macro:
  - 0.8729470911412038
  - 0.8980686801722009
  - 0.8727267433331392
  - 0.8510447628251108
  - 0.913847602849635
  test_average_precision_micro:
  - 0.9271098271408066
  - 0.9479141021060794
  - 0.9568673635846828
  - 0.9713968697650432
  - 0.9775289140816635
  test_average_precision_samples:
  - 0.9375
  - 0.9587378640776699
  - 0.9531746031746031
  - 0.97140522875817
  - 0.9746031746031746
  test_average_precision_weighted:
  - 0.9450543956675891
  - 0.973227373583179
  - 0.9670590166421531
  - 0.9712925509968682
  - 0.9814989074762329
  test_coverage_error:
  - -1.1538461538461537
  - -1.1067961165048543
  - -1.1142857142857143
  - -1.0980392156862746
  - -1.0571428571428572
  test_f1_macro:
  - 0.7058630182012409
  - 0.23750000000000002
  - 0.6184123847167325
  - 0.6858648675812855
  - 0.7276463070685704
  test_f1_micro:
  - 0.7100591715976331
  - 0.29268292682926833
  - 0.6871165644171779
  - 0.7647058823529411
  - 0.7455621301775147
  test_f1_samples:
  - 0.5769230769230769
  - 0.17475728155339806
  - 0.5333333333333333
  - 0.6372549019607843
  - 0.6
  test_f1_weighted:
  - 0.7073601255284974
  - 0.29134615384615387
  - 0.6638183072965682
  - 0.7619368677204498
  - 0.7371219561330613
  test_hamming_loss:
  - -0.11778846153846154
  - -0.2111650485436893
  - -0.12142857142857143
  - -0.09803921568627451
  - -0.10238095238095238
  test_jaccard_macro:
  - 0.5490842490842491
  - 0.14233193277310924
  - 0.4861904761904762
  - 0.5467508710801394
  - 0.5809523809523809
  test_jaccard_micro:
  - 0.5504587155963303
  - 0.17142857142857143
  - 0.5233644859813084
  - 0.6190476190476191
  - 0.5943396226415094
  test_jaccard_samples:
  - 0.5769230769230769
  - 0.17475728155339806
  - 0.5333333333333333
  - 0.6372549019607843
  - 0.6
  test_jaccard_weighted:
  - 0.5517355660212804
  - 0.17307692307692307
  - 0.5234285714285714
  - 0.6225961538461539
  - 0.5952380952380952
  test_label_ranking_average_precision_score:
  - 0.9375
  - 0.9587378640776699
  - 0.9531746031746032
  - 0.9714052287581699
  - 0.9746031746031747
  test_label_ranking_loss:
  - 0.04807692307692308
  - 0.032362459546925564
  - 0.03809523809523809
  - 0.0261437908496732
  - 0.019047619047619046
  test_matthews_corrcoef_macro:
  - 0.665841552069085
  - 0.27133996931855026
  - 0.5981771455322065
  - 0.6522445485798468
  - 0.6987198153973582
  test_matthews_corrcoef_micro:
  - 0.6724943984259726
  - 0.3517497489428545
  - 0.6614228261484095
  - 0.7357947101277823
  - 0.7190883221004729
  test_matthews_corrcoef_samples:
  - 0.564102564102564
  - 0.1715210355987055
  - 0.5269841269841269
  - 0.6339869281045752
  - 0.5968253968253969
  test_matthews_corrcoef_weighted:
  - 0.6567155682052157
  - 0.3402390306814715
  - 0.6370770856421374
  - 0.717244965089042
  - 0.7002655736265141
  test_ndgc:
  - 0.9536381517513761
  - 0.9693901440104231
  - 0.9652112841245104
  - 0.9786614295959585
  - 0.9811782763265318
  test_precision_macro:
  - 0.8727941176470588
  - 0.75
  - 0.8636363636363636
  - 0.875
  - 0.9166666666666666
  test_precision_micro:
  - 0.9375
  - 0.9473684210526315
  - 0.9655172413793104
  - 0.9848484848484849
  - 0.984375
  test_precision_samples:
  - 0.5769230769230769
  - 0.17475728155339806
  - 0.5333333333333333
  - 0.6372549019607843
  - 0.6
  test_precision_weighted:
  - 0.9512324929971988
  - 0.9615384615384616
  - 0.9705627705627705
  - 0.9855769230769231
  - 0.9904761904761905
  test_recall_macro:
  - 0.6204965156794425
  - 0.14233193277310924
  - 0.5074404761904762
  - 0.5675842044134727
  - 0.6226190476190476
  test_recall_micro:
  - 0.5714285714285714
  - 0.17307692307692307
  - 0.5333333333333333
  - 0.625
  - 0.6
  test_recall_samples:
  - 0.5769230769230769
  - 0.17475728155339806
  - 0.5333333333333333
  - 0.6372549019607843
  - 0.6
  test_recall_weighted:
  - 0.5714285714285714
  - 0.17307692307692307
  - 0.5333333333333333
  - 0.625
  - 0.6
  test_roc_auc_macro:
  - 0.9786101228695477
  - 0.991955611904806
  - 0.9869342390115807
  - 0.9846320904344859
  - 0.9948787681739363
  test_roc_auc_micro:
  - 0.9744602664216813
  - 0.9917894605394606
  - 0.9843386243386243
  - 0.9871267712550608
  - 0.9934996220710506
  test_roc_auc_samples:
  - 0.9519230769230769
  - 0.9676375404530745
  - 0.9619047619047619
  - 0.9738562091503269
  - 0.9809523809523809
  test_roc_auc_weighted:
  - 0.9783437793144533
  - 0.9945539544658069
  - 0.9885929651166174
  - 0.9887630414606191
  - 0.9962588368680806
start: 2023-11-27 21:13:33.764119
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
