active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8AmJmZmZnZvwA0MzMzM+M/ADQzMzMz4z8AmJmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwCYmZmZmdm/ADQzMzMz4z8AmJmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ+b/QzMzMzMwqQDAzMzMzMyHAoJmZmZmZFUAwMzMzMzMhwA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMzA8DQzMzMzMwEQJiZmZmZmRHAoJmZmZmZ+T/QzMzMzMwEQA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ODMzMzMzE0A4MzMzMzMXQMjMzMzMzBzA4MzMzMzM/D/IzMzMzMwUwA==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ6b8AoJmZmZnJPwCgmZmZmck/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz878AzczMzMz8PwCamZmZmek/AM3MzMzM/D+AmZmZmZkJwA==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZmDkDQzMzMzMz8P8zMzMzMzBDAgJmZmZmZyb8wMzMzMzPzvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          kJmZmZmZMMDgzMzMzMwuQMCZmZmZmR1AADIzMzMz479AZmZmZmYWwA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 21:13:49.742865
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - rf
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.RandomForestRegressor
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        - - xt
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesRegressor
                params:
                  bootstrap: false
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: proba
  params:
    memory: estimators_cache
hash: 6ca4ddb0dce9208fc14a9dc35782b824d49c2f1951a3b8a70c1883750fa84e76
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/6ca4ddb_20231021T211231672537_proba_yeast.yml
results:
  fit_time:
  - 40.41555953025818
  - 39.38312482833862
  - 40.822511434555054
  - 40.69895672798157
  - 41.04343914985657
  score_time:
  - 28.685347080230713
  - 37.06026363372803
  - 31.11178946495056
  - 34.20964431762695
  - 34.44891715049744
  test_average_precision_macro:
  - 0.4929055844185875
  - 0.5025844905127224
  - 0.5199320549191065
  - 0.4906192070910006
  - 0.49890509659387133
  test_average_precision_micro:
  - 0.6883416074026268
  - 0.7077233515088894
  - 0.6970192860213442
  - 0.6970836742465826
  - 0.6842917341254735
  test_average_precision_samples:
  - 0.7291328726696583
  - 0.7542554204928
  - 0.7331788630671309
  - 0.7342030624998697
  - 0.7284590622600043
  test_average_precision_weighted:
  - 0.6514208538226521
  - 0.6705039916176814
  - 0.6654217576486384
  - 0.6616505926707698
  - 0.6563991131126212
  test_coverage_error:
  - -7.64
  - -7.767094017094017
  - -7.987394957983193
  - -7.919421487603306
  - -7.9079754601226995
  test_f1_macro:
  - 0.48002046663472014
  - 0.44679010971862826
  - 0.45694620822591786
  - 0.4509911742897013
  - 0.46144536772190825
  test_f1_micro:
  - 0.6584323040380048
  - 0.6534751422211229
  - 0.6567164179104478
  - 0.6502534395365677
  - 0.6441323494406094
  test_f1_samples:
  - 0.6303397546897547
  - 0.6392395828293265
  - 0.6298201448411533
  - 0.6297020587309844
  - 0.6205593770010948
  test_f1_weighted:
  - 0.64187231229902
  - 0.6385321494921167
  - 0.6287254012169048
  - 0.6331912055910699
  - 0.6304030293400502
  test_hamming_loss:
  - -0.20542857142857143
  - -0.21382783882783882
  - -0.2036314525810324
  - -0.21384297520661158
  - -0.21837569383581654
  test_jaccard_macro:
  - 0.3498264380486374
  - 0.3320416747252974
  - 0.33563439829727815
  - 0.33327929894724334
  - 0.3370496368676985
  test_jaccard_micro:
  - 0.49079320113314445
  - 0.485304922850845
  - 0.4888888888888889
  - 0.48175965665236054
  - 0.4750702247191011
  test_jaccard_samples:
  - 0.5295539682539682
  - 0.5334907376574044
  - 0.5302640753271005
  - 0.5280902293298988
  - 0.5123397279838998
  test_jaccard_weighted:
  - 0.49747173427176444
  - 0.5023916976679655
  - 0.48855790755672945
  - 0.49393079793802264
  - 0.4881572348771272
  test_label_ranking_average_precision_score:
  - 0.7291328726696595
  - 0.7542554204928001
  - 0.7331788630671308
  - 0.7342030624998706
  - 0.728459062260004
  test_label_ranking_loss:
  - 0.1982520499341928
  - 0.19263863256537248
  - 0.20724835097209046
  - 0.2055508754003441
  - 0.2077123946427189
  test_matthews_corrcoef_macro:
  - 0.282951800167519
  - 0.24007177825871287
  - 0.25522053233527725
  - 0.24365969136678794
  - 0.2531767026697325
  test_matthews_corrcoef_micro:
  - 0.5121239465755275
  - 0.4988568570661516
  - 0.5135904010536592
  - 0.4964562914585696
  - 0.48682428373561554
  test_matthews_corrcoef_samples:
  - 0.5146767579363936
  - 0.5200322656968451
  - 0.521700106805831
  - 0.505276751705417
  - 0.49931925990710313
  test_matthews_corrcoef_weighted:
  - 0.2938919584801108
  - 0.2710230460526799
  - 0.26168499553512975
  - 0.2686680768268551
  - 0.27910705211151715
  test_ndgc:
  - 0.8328930317612231
  - 0.8541917827239887
  - 0.8380304830906279
  - 0.8394924973075996
  - 0.8372382021179967
  test_precision_macro:
  - 0.5220350128577174
  - 0.527523543035248
  - 0.5487651273973364
  - 0.5014688747332634
  - 0.4907989995364751
  test_precision_micro:
  - 0.6404805914972274
  - 0.653960396039604
  - 0.6893255443441317
  - 0.6396011396011396
  - 0.6334269662921348
  test_precision_samples:
  - 0.6503666666666668
  - 0.677200345950346
  - 0.6890256102440977
  - 0.6545798898071625
  - 0.6522981789852954
  test_precision_weighted:
  - 0.6361463733311777
  - 0.6583274659351313
  - 0.6647965894184323
  - 0.6349446447037118
  - 0.6305872810293959
  test_recall_macro:
  - 0.49009051070667564
  - 0.4433501163930864
  - 0.4306786830656813
  - 0.45656968715313445
  - 0.4682073992241182
  test_recall_micro:
  - 0.6774193548387096
  - 0.6529906080079091
  - 0.6270531400966184
  - 0.6612665684830633
  - 0.6552058111380146
  test_recall_samples:
  - 0.6692071428571429
  - 0.6715102798436132
  - 0.6391064759237028
  - 0.6632829922602651
  - 0.658425844775538
  test_recall_weighted:
  - 0.6774193548387096
  - 0.6529906080079091
  - 0.6270531400966184
  - 0.6612665684830633
  - 0.6552058111380146
  test_roc_auc_macro:
  - 0.7063989740191017
  - 0.70033025816729
  - 0.7018065717912082
  - 0.6993151016505017
  - 0.6838247765574534
  test_roc_auc_micro:
  - 0.8222398756733997
  - 0.8213628937346372
  - 0.8208282595025227
  - 0.8120336136403731
  - 0.8083591070991764
  test_roc_auc_samples:
  - 0.8017479500658071
  - 0.8073613674346275
  - 0.7927516490279096
  - 0.7944912902262371
  - 0.792287605357281
  test_roc_auc_weighted:
  - 0.7009864363608688
  - 0.6840908719858014
  - 0.6779070757181734
  - 0.6950635167123982
  - 0.6818198457496545
start: 2023-10-21 21:12:31.672537
wrapper: null
