active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjP5CZmZmZmdm/ODMzMzMz4z+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T/AmZmZmZnZPyAzMzMzM+O/wJmZmZmZ2T8gMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/oJmZmZmZ6T+AmZmZmZnJvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZm9j8AMzMzMzPjv2BmZmZmZhbAQDMzMzMzA0BAMzMzMzMDQA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusPseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusPseAAC.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 20:22:39.460941
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.7
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler:
            call: deep_forest.weak_labels.PositiveUnlabeledImputer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesClassifier
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  class_weight: null
                  criterion: gini
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: 0.9
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: true
                  random_state: 0
                  verbose: true
                  warm_start: false
              sampling_strategy: auto
              threshold: 0.8
              use_oob_proba: true
              verbose: true
              weight_proba: true
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: proba_weak
  params:
    memory: estimators_cache
hash: c2ad240b4c3e7b11a0a3b62f4de68619944c4ba77dd64db9b3d18e1a9ab62ebd
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/c2ad240_20231127T202128759698_proba_weak_VirusPseAAC.yml
results:
  fit_time:
  - 47.37008762359619
  - 39.65242075920105
  - 38.32168936729431
  - 42.27161908149719
  - 36.77158856391907
  score_time:
  - 22.886321306228638
  - 5.431530475616455
  - 10.86735486984253
  - 20.77745008468628
  - 6.740697622299194
  test_average_precision_macro:
  - 0.44760050489348163
  - 0.5605910180481412
  - 0.3334767456951278
  - 0.4443415778486748
  - 0.25702394023191505
  test_average_precision_micro:
  - 0.42902298402130473
  - 0.4791289790212606
  - 0.38964483598127736
  - 0.43814430800148846
  - 0.37624511899984237
  test_average_precision_samples:
  - 0.64625
  - 0.6742063492063493
  - 0.599290780141844
  - 0.6623931623931623
  - 0.6433048433048432
  test_average_precision_weighted:
  - 0.45728721139745887
  - 0.5200812834647087
  - 0.40869168468865447
  - 0.4279734003437194
  - 0.37025432697073596
  test_coverage_error:
  - -2.575
  - -2.1904761904761907
  - -2.5319148936170213
  - -2.4358974358974357
  - -2.6666666666666665
  test_f1_macro:
  - 0.16666666666666666
  - 0.0
  - 0.08333333333333333
  - 0.16666666666666666
  - 0.0
  test_f1_micro:
  - 0.07547169811320754
  - 0.0
  - 0.037037037037037035
  - 0.07843137254901959
  - 0.0
  test_f1_samples:
  - 0.05
  - 0.0
  - 0.02127659574468085
  - 0.05128205128205128
  - 0.0
  test_f1_weighted:
  - 0.0392156862745098
  - 0.0
  - 0.019230769230769232
  - 0.04081632653061224
  - 0.0
  test_hamming_loss:
  - -0.20416666666666666
  - -0.19444444444444445
  - -0.18439716312056736
  - -0.20085470085470086
  - -0.2222222222222222
  test_jaccard_macro:
  - 0.16666666666666666
  - 0.0
  - 0.05555555555555555
  - 0.16666666666666666
  - 0.0
  test_jaccard_micro:
  - 0.0392156862745098
  - 0.0
  - 0.018867924528301886
  - 0.04081632653061224
  - 0.0
  test_jaccard_samples:
  - 0.05
  - 0.0
  - 0.02127659574468085
  - 0.05128205128205128
  - 0.0
  test_jaccard_weighted:
  - 0.0392156862745098
  - 0.0
  - 0.01282051282051282
  - 0.04081632653061224
  - 0.0
  test_label_ranking_average_precision_score:
  - 0.64625
  - 0.6742063492063491
  - 0.5992907801418439
  - 0.6623931623931624
  - 0.6433048433048432
  test_label_ranking_loss:
  - 0.259375
  - 0.2044312169312169
  - 0.2819148936170214
  - 0.23269230769230767
  - 0.26239316239316235
  test_matthews_corrcoef_macro:
  - 0.16666666666666666
  - 0.0
  - 0.07962962962962963
  - 0.16666666666666666
  - -0.0043859649122807015
  test_matthews_corrcoef_micro:
  - 0.17647058823529413
  - 0.0
  - 0.06877971928553947
  - 0.18040926184463044
  - -0.03458450647862135
  test_matthews_corrcoef_samples:
  - 0.05
  - 0.0
  - 0.01702127659574468
  - 0.05128205128205128
  - -0.005128205128205128
  test_matthews_corrcoef_weighted:
  - 0.0392156862745098
  - 0.0
  - 0.018376068376068377
  - 0.04081632653061224
  - -0.0005159958720330237
  test_ndgc:
  - 0.736979077228361
  - 0.7588548306757161
  - 0.699670409394925
  - 0.7513556446275056
  - 0.7373247696349702
  test_precision_macro:
  - 0.16666666666666666
  - 0.0
  - 0.08333333333333333
  - 0.16666666666666666
  - 0.0
  test_precision_micro:
  - 1.0
  - 0.0
  - 0.5
  - 1.0
  - 0.0
  test_precision_samples:
  - 0.05
  - 0.0
  - 0.02127659574468085
  - 0.05128205128205128
  - 0.0
  test_precision_weighted:
  - 0.0392156862745098
  - 0.0
  - 0.019230769230769232
  - 0.04081632653061224
  - 0.0
  test_recall_macro:
  - 0.16666666666666666
  - 0.0
  - 0.08333333333333333
  - 0.16666666666666666
  - 0.0
  test_recall_micro:
  - 0.0392156862745098
  - 0.0
  - 0.019230769230769232
  - 0.04081632653061224
  - 0.0
  test_recall_samples:
  - 0.05
  - 0.0
  - 0.02127659574468085
  - 0.05128205128205128
  - 0.0
  test_recall_weighted:
  - 0.0392156862745098
  - 0.0
  - 0.019230769230769232
  - 0.04081632653061224
  - 0.0
  test_roc_auc_macro:
  - 0.645611401126107
  - 0.7141232847914994
  - 0.5481106320279159
  - 0.6400459656853518
  - 0.4808093264330365
  test_roc_auc_micro:
  - 0.7519452225334579
  - 0.7937066452196642
  - 0.7231605351170569
  - 0.7652509652509653
  - 0.7209900353584057
  test_roc_auc_samples:
  - 0.740625
  - 0.795568783068783
  - 0.7180851063829787
  - 0.7673076923076924
  - 0.7376068376068378
  test_roc_auc_weighted:
  - 0.5795702119231532
  - 0.6086084258264709
  - 0.5600664243757667
  - 0.5850574447735051
  - 0.4819583774498635
start: 2023-11-27 20:21:28.759698
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop70
  params:
    drop: 0.7
    random_state: 0
