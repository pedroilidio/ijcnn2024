active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gGZmZmZmBkCAmZmZmZkBwACYmZmZmcm/AJiZmZmZyb8AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 21:12:12.189121
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_pvalue
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 0.05
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 0.05
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding_chi2
  params:
    memory: estimators_cache
hash: 909e4a575bbce022cb3157daea3fae8a5a133fb1262f488a3b791ddeee69cfd6
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/909e4a5_20231127T210954086041_embedding_chi2_Gram_positive.yml
results:
  fit_time:
  - 61.283194065093994
  - 62.170088052749634
  - 61.44653534889221
  - 60.782634258270264
  - 64.80668091773987
  score_time:
  - 71.30676698684692
  - 73.64775347709656
  - 65.89897584915161
  - 65.88459420204163
  - 72.34281039237976
  test_average_precision_macro:
  - 0.8450949055906009
  - 0.8235447853101749
  - 0.8392358404120566
  - 0.8981905870976252
  - 0.9193646820473411
  test_average_precision_micro:
  - 0.9546993032385636
  - 0.9591006868437763
  - 0.9673714679462821
  - 0.9787045359024367
  - 0.9567217147049002
  test_average_precision_samples:
  - 0.9480198019801979
  - 0.9606918238993711
  - 0.9703525641025641
  - 0.9623397435897437
  - 0.9567307692307693
  test_average_precision_weighted:
  - 0.9577168855587782
  - 0.9535622712626262
  - 0.9577573959947103
  - 0.9813580970253759
  - 0.9566552071141733
  test_coverage_error:
  - -1.1584158415841583
  - -1.1132075471698113
  - -1.0961538461538463
  - -1.125
  - -1.1153846153846154
  test_f1_macro:
  - 0.1641326530612245
  - 0.32404692082111436
  - 0.25382547559966917
  - 0.2558035714285714
  - 0.3062585499316005
  test_f1_micro:
  - 0.23931623931623933
  - 0.4296296296296296
  - 0.33333333333333337
  - 0.32
  - 0.3875968992248062
  test_f1_samples:
  - 0.13861386138613863
  - 0.27358490566037735
  - 0.20192307692307693
  - 0.19230769230769232
  - 0.2403846153846154
  test_f1_weighted:
  - 0.2335704378838914
  - 0.42448680351906154
  - 0.3257434321950451
  - 0.3155952380952381
  - 0.38314216563190573
  test_hamming_loss:
  - -0.2202970297029703
  - -0.18160377358490565
  - -0.20192307692307693
  - -0.20432692307692307
  - -0.18990384615384615
  test_jaccard_macro:
  - 0.09491144018583043
  - 0.2076190476190476
  - 0.1556445993031359
  - 0.1557843137254902
  - 0.19404761904761902
  test_jaccard_micro:
  - 0.13592233009708737
  - 0.27358490566037735
  - 0.2
  - 0.19047619047619047
  - 0.2403846153846154
  test_jaccard_samples:
  - 0.13861386138613863
  - 0.27358490566037735
  - 0.20192307692307693
  - 0.19230769230769232
  - 0.2403846153846154
  test_jaccard_weighted:
  - 0.13592233009708737
  - 0.27358490566037735
  - 0.2
  - 0.19047619047619047
  - 0.2403846153846154
  test_label_ranking_average_precision_score:
  - 0.9480198019801979
  - 0.960691823899371
  - 0.970352564102564
  - 0.9623397435897434
  - 0.9567307692307693
  test_label_ranking_loss:
  - 0.04620462046204621
  - 0.03773584905660377
  - 0.02724358974358974
  - 0.038461538461538464
  - 0.038461538461538464
  test_matthews_corrcoef_macro:
  - 0.21182818520494454
  - 0.3390731283490497
  - 0.2867460612927686
  - 0.2897401407081569
  - 0.32658318869237124
  test_matthews_corrcoef_micro:
  - 0.3238891127088742
  - 0.4693113727121494
  - 0.3968228249866428
  - 0.38677015085338423
  - 0.43796787185533775
  test_matthews_corrcoef_samples:
  - 0.13861386138613863
  - 0.27358490566037735
  - 0.20192307692307693
  - 0.19230769230769232
  - 0.2403846153846154
  test_matthews_corrcoef_weighted:
  - 0.2894608085776494
  - 0.4380373614930073
  - 0.36479846076886374
  - 0.3592184232916142
  - 0.4090566396922212
  test_ndgc:
  - 0.9612408448111949
  - 0.9706138880229492
  - 0.9785577363081964
  - 0.9717462145350466
  - 0.9677589580536109
  test_precision_macro:
  - 0.75
  - 0.75
  - 0.75
  - 0.75
  - 0.75
  test_precision_micro:
  - 1.0
  - 1.0
  - 1.0
  - 1.0
  - 1.0
  test_precision_samples:
  - 0.13861386138613863
  - 0.27358490566037735
  - 0.20192307692307693
  - 0.19230769230769232
  - 0.2403846153846154
  test_precision_weighted:
  - 0.970873786407767
  - 0.9622641509433962
  - 0.9619047619047619
  - 0.9619047619047619
  - 0.9711538461538461
  test_recall_macro:
  - 0.09491144018583043
  - 0.2076190476190476
  - 0.1556445993031359
  - 0.1557843137254902
  - 0.19404761904761902
  test_recall_micro:
  - 0.13592233009708737
  - 0.27358490566037735
  - 0.2
  - 0.19047619047619047
  - 0.2403846153846154
  test_recall_samples:
  - 0.13861386138613863
  - 0.27358490566037735
  - 0.20192307692307693
  - 0.19230769230769232
  - 0.2403846153846154
  test_recall_weighted:
  - 0.13592233009708737
  - 0.27358490566037735
  - 0.2
  - 0.19047619047619047
  - 0.2403846153846154
  test_roc_auc_macro:
  - 0.9818891691931761
  - 0.9771218827580589
  - 0.9776961308604949
  - 0.9853865887923157
  - 0.9826670023110493
  test_roc_auc_micro:
  - 0.9800987001257943
  - 0.9793817491396701
  - 0.9844434236717196
  - 0.988455060480784
  - 0.9845599112426036
  test_roc_auc_samples:
  - 0.9537953795379538
  - 0.9622641509433962
  - 0.9727564102564104
  - 0.9615384615384616
  - 0.9615384615384616
  test_roc_auc_weighted:
  - 0.9835332720908311
  - 0.9859807924877612
  - 0.990196331697236
  - 0.9965202901086936
  - 0.9821160403797285
start: 2023-11-27 21:09:54.086041
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
