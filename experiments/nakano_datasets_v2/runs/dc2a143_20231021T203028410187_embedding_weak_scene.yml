active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb+AmZmZmZnpPwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjP4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6b8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AGdmZmZm9j+AzMzMzMwEwACZmZmZmfm/gMzMzMzMDMDAmZmZmZkZQA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 20:43:46.857646
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 1.0
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: embedding_weak
  params:
    memory: estimators_cache
hash: dc2a143b4ce5c4a464fd4d6e3ae32d6a022e52e3412ba4581a9283bec0180089
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/dc2a143_20231021T203028410187_embedding_weak_scene.yml
results:
  fit_time:
  - 571.86390376091
  - 599.2461202144623
  - 619.8441767692566
  - 633.4206063747406
  - 578.6798782348633
  score_time:
  - 167.94825410842896
  - 78.69121718406677
  - 127.51547741889954
  - 126.71677756309509
  - 140.06138515472412
  test_average_precision_macro:
  - 0.8120979804067919
  - 0.8424604452960099
  - 0.8189326152483777
  - 0.8386144317706233
  - 0.8017010290601118
  test_average_precision_micro:
  - 0.8199571752591358
  - 0.8383247633793208
  - 0.8341646696301585
  - 0.8377902951850135
  - 0.8047033690763181
  test_average_precision_samples:
  - 0.8490624999999999
  - 0.8772038567493113
  - 0.8732919254658384
  - 0.8571477663230241
  - 0.8485614035087718
  test_average_precision_weighted:
  - 0.800461154384771
  - 0.8308762165604816
  - 0.8071829685245577
  - 0.8290345448958906
  - 0.7888788591850635
  test_coverage_error:
  - -1.5145833333333334
  - -1.4090909090909092
  - -1.4099378881987579
  - -1.468041237113402
  - -1.5410526315789475
  test_f1_macro:
  - 0.6119425014804254
  - 0.6383932244142949
  - 0.6389194586520403
  - 0.6055358701015247
  - 0.6313736520424007
  test_f1_micro:
  - 0.6375
  - 0.6526576019777504
  - 0.6504263093788064
  - 0.6257822277847309
  - 0.638036809815951
  test_f1_samples:
  - 0.5086805555555555
  - 0.5323691460055096
  - 0.5348516218081435
  - 0.5024054982817868
  - 0.5228070175438597
  test_f1_weighted:
  - 0.5862042939768877
  - 0.6174913652137825
  - 0.6160037039980827
  - 0.581280426405803
  - 0.6099579405967743
  test_hamming_loss:
  - -0.10069444444444445
  - -0.09676308539944904
  - -0.09903381642512077
  - -0.10274914089347079
  - -0.10350877192982456
  test_jaccard_macro:
  - 0.4890754083815323
  - 0.4991892737337614
  - 0.5046807026176036
  - 0.474612898159717
  - 0.49181792468684543
  test_jaccard_micro:
  - 0.46788990825688076
  - 0.48440366972477067
  - 0.48194945848375453
  - 0.4553734061930783
  - 0.46846846846846846
  test_jaccard_samples:
  - 0.4996527777777777
  - 0.5258264462809917
  - 0.5269151138716356
  - 0.49690721649484537
  - 0.5136842105263157
  test_jaccard_weighted:
  - 0.4646139140100971
  - 0.4783101815797418
  - 0.4826093806941022
  - 0.45369549175147506
  - 0.47087192072733686
  test_label_ranking_average_precision_score:
  - 0.8490624999999995
  - 0.8772038567493109
  - 0.8732919254658382
  - 0.857147766323024
  - 0.8485614035087715
  test_label_ranking_loss:
  - 0.08249999999999999
  - 0.06864669421487603
  - 0.06635610766045548
  - 0.07747422680412372
  - 0.08763157894736842
  test_matthews_corrcoef_macro:
  - 0.6167300247383051
  - 0.6398262425254515
  - 0.6240551158364099
  - 0.600787920272825
  - 0.6135009806803825
  test_matthews_corrcoef_micro:
  - 0.6229374465920133
  - 0.6332033306171909
  - 0.6251811263154011
  - 0.6082551318341068
  - 0.6121556068616698
  test_matthews_corrcoef_samples:
  - 0.49678875395071215
  - 0.5181491726789383
  - 0.5174203347924242
  - 0.48825373349798346
  - 0.5042686654039131
  test_matthews_corrcoef_weighted:
  - 0.5955622853179628
  - 0.6224908172351394
  - 0.6037209191628905
  - 0.5806190033548101
  - 0.5939183392136002
  test_ndgc:
  - 0.8893506542993133
  - 0.9089377083285203
  - 0.906663627997967
  - 0.8950537708672638
  - 0.888668003133002
  test_precision_macro:
  - 0.9123931501110012
  - 0.9205668162935288
  - 0.8643726650954965
  - 0.8811174219494172
  - 0.8598118389210647
  test_precision_micro:
  - 0.9107142857142857
  - 0.8979591836734694
  - 0.8754098360655738
  - 0.8896797153024911
  - 0.8695652173913043
  test_precision_samples:
  - 0.5260416666666666
  - 0.5454545454545454
  - 0.5496894409937888
  - 0.51340206185567
  - 0.5410526315789473
  test_precision_weighted:
  - 0.9137522406346557
  - 0.9209562664222541
  - 0.859152202613099
  - 0.87990042636054
  - 0.8531982974238024
  test_recall_macro:
  - 0.515609704574639
  - 0.5336374770191236
  - 0.5401368542101541
  - 0.5048040701861415
  - 0.5249681766578739
  test_recall_micro:
  - 0.49038461538461536
  - 0.512621359223301
  - 0.5174418604651163
  - 0.4826254826254826
  - 0.5038759689922481
  test_recall_samples:
  - 0.5006944444444444
  - 0.5258264462809917
  - 0.5279503105590062
  - 0.49690721649484537
  - 0.5136842105263157
  test_recall_weighted:
  - 0.49038461538461536
  - 0.512621359223301
  - 0.5174418604651163
  - 0.4826254826254826
  - 0.5038759689922481
  test_roc_auc_macro:
  - 0.9352720942701058
  - 0.9460015163453633
  - 0.9415790636666688
  - 0.9456752092188524
  - 0.9287311226079953
  test_roc_auc_micro:
  - 0.9407219687092568
  - 0.9514270503562038
  - 0.9490201055721529
  - 0.9500393848219935
  - 0.9350235480892501
  test_roc_auc_samples:
  - 0.9175
  - 0.931353305785124
  - 0.9336438923395446
  - 0.9225257731958764
  - 0.9123684210526316
  test_roc_auc_weighted:
  - 0.9295529010039372
  - 0.9401646782544437
  - 0.9365538817001935
  - 0.9412215930938675
  - 0.9229351820023829
start: 2023-10-21 20:30:28.410187
wrapper: null
