active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+gmZmZmZnpv4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb9oZmZmZmYGQICZmZmZmcm/MDMzMzMz878wMzMzMzPzvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT/QzMzMzMz8vzAzMzMzM/M/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz479oZmZmZmb2Pw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ6b80MzMzMzPzP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          kJmZmZmZAcBwZmZmZmYGQHBmZmZmZgZAkJmZmZmZAcAgMzMzMzPzvw==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 17:51:45.651044
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_pvalue
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: embedding_chi2
  params:
    memory: estimators_cache
hash: eb32c3b6c8bf2cb3d8a41e5cc35000e0b001f67344dff4db9174f7dae9b10a86
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/eb32c3b_20231021T175010243313_embedding_chi2_flags.yml
results:
  fit_time:
  - 44.64907455444336
  - 46.102659463882446
  - 47.14088034629822
  - 45.48241853713989
  - 49.12329936027527
  score_time:
  - 46.5283727645874
  - 46.0137083530426
  - 47.76234173774719
  - 47.94638800621033
  - 43.189618825912476
  test_average_precision_macro:
  - 0.709945292786054
  - 0.751732717277626
  - 0.8036266106230799
  - 0.7248571148494685
  - 0.7528710275939948
  test_average_precision_micro:
  - 0.7464425555717017
  - 0.8391224221539066
  - 0.8398006705507237
  - 0.7496952281751815
  - 0.7792169873892203
  test_average_precision_samples:
  - 0.7925861401471158
  - 0.8669786155202822
  - 0.8681624779541445
  - 0.8009969028261711
  - 0.8271051587301587
  test_average_precision_weighted:
  - 0.7596156824653182
  - 0.8400184560113109
  - 0.8416884815780701
  - 0.773200737714594
  - 0.8027607073653137
  test_coverage_error:
  - -4.853658536585366
  - -4.611111111111111
  - -4.694444444444445
  - -4.560975609756097
  - -4.475
  test_f1_macro:
  - 0.5179916345814963
  - 0.5682648552584587
  - 0.5825709904705173
  - 0.5236827438129603
  - 0.5707321663843403
  test_f1_micro:
  - 0.6917293233082706
  - 0.7739463601532567
  - 0.7669172932330827
  - 0.7164179104477613
  - 0.7480916030534351
  test_f1_samples:
  - 0.6653204519058177
  - 0.7667408209074876
  - 0.7445406445406446
  - 0.6988667159398867
  - 0.7259794372294373
  test_f1_weighted:
  - 0.6441780159097646
  - 0.7322399682215985
  - 0.7256233363184748
  - 0.6613014248794592
  - 0.7028466831321128
  test_hamming_loss:
  - -0.2857142857142857
  - -0.23412698412698413
  - -0.24603174603174602
  - -0.26480836236933797
  - -0.2357142857142857
  test_jaccard_macro:
  - 0.4055575306117283
  - 0.4833333333333334
  - 0.482185803614375
  - 0.41886976618683935
  - 0.46420634920634923
  test_jaccard_micro:
  - 0.5287356321839081
  - 0.63125
  - 0.6219512195121951
  - 0.5581395348837209
  - 0.5975609756097561
  test_jaccard_samples:
  - 0.5386178861788617
  - 0.6498677248677249
  - 0.6388227513227513
  - 0.5843786295005807
  - 0.625
  test_jaccard_weighted:
  - 0.5182719105701681
  - 0.6345299145299146
  - 0.6192580567580568
  - 0.5371103496158928
  - 0.5840076335877862
  test_label_ranking_average_precision_score:
  - 0.7925861401471158
  - 0.8669786155202819
  - 0.8681624779541446
  - 0.8009969028261711
  - 0.8271051587301589
  test_label_ranking_loss:
  - 0.22682926829268293
  - 0.18055555555555558
  - 0.14953703703703702
  - 0.2105691056910569
  - 0.19083333333333333
  test_matthews_corrcoef_macro:
  - 0.1367578989583365
  - 0.17914476969698015
  - 0.17793036286720323
  - 0.173005939220609
  - 0.24629115618587646
  test_matthews_corrcoef_micro:
  - 0.4254955570745044
  - 0.5311721698587719
  - 0.5065084757029051
  - 0.4683391792516832
  - 0.526615092986321
  test_matthews_corrcoef_samples:
  - 0.3973066447614861
  - 0.5004332729931484
  - 0.46914831024451736
  - 0.4450348673700829
  - 0.5075491937769947
  test_matthews_corrcoef_weighted:
  - 0.12921527248114534
  - 0.18662259255857844
  - 0.1556477704741862
  - 0.17480488348660697
  - 0.230190921190063
  test_ndgc:
  - 0.8781898701109052
  - 0.9285306251253712
  - 0.9253487029978368
  - 0.8778854788341062
  - 0.8947191416450362
  test_precision_macro:
  - 0.5374475118377559
  - 0.5558667911609089
  - 0.6699291047117134
  - 0.5038159484366387
  - 0.6746598639455783
  test_precision_micro:
  - 0.6917293233082706
  - 0.7709923664122137
  - 0.7611940298507462
  - 0.7058823529411765
  - 0.7480916030534351
  test_precision_samples:
  - 0.6760162601626016
  - 0.776388888888889
  - 0.7541666666666668
  - 0.6914634146341463
  - 0.7266666666666666
  test_precision_weighted:
  - 0.6322917989156757
  - 0.7098625775096363
  - 0.7509715069003607
  - 0.6237568390896318
  - 0.7283260632497273
  test_recall_macro:
  - 0.536002886002886
  - 0.6007297655904467
  - 0.6106527459468636
  - 0.5646258503401361
  - 0.5839002267573695
  test_recall_micro:
  - 0.6917293233082706
  - 0.7769230769230769
  - 0.7727272727272727
  - 0.7272727272727273
  - 0.7480916030534351
  test_recall_samples:
  - 0.673170731707317
  - 0.7768518518518519
  - 0.7568783068783068
  - 0.7288037166085947
  - 0.7420833333333333
  test_recall_weighted:
  - 0.6917293233082706
  - 0.7769230769230769
  - 0.7727272727272727
  - 0.7272727272727273
  - 0.7480916030534351
  test_roc_auc_macro:
  - 0.7200498390260652
  - 0.7575508870099493
  - 0.7727853494041199
  - 0.7362849496711137
  - 0.7616151856885552
  test_roc_auc_micro:
  - 0.793379552778049
  - 0.8472887767969735
  - 0.8498737373737374
  - 0.8118279569892474
  - 0.8211486244172345
  test_roc_auc_samples:
  - 0.7731707317073171
  - 0.8194444444444443
  - .nan
  - .nan
  - 0.8091666666666667
  test_roc_auc_weighted:
  - 0.702852628465574
  - 0.7429403112070115
  - 0.7436658820805682
  - 0.6992204655248133
  - 0.737761250416097
start: 2023-10-21 17:50:10.243313
wrapper: null
