active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyb8AmpmZmZnJvwCamZmZmcm/gJmZmZmZ6T8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b8AmZmZmZnZv4AzMzMzM+M/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          wJmZmZmZHUCAzMzMzMwMwIAzMzMzMwtAQGZmZmZmEsCAzMzMzMwEwA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_v2/runs
end: 2023-11-28 05:10:45.161510
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.7
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler:
            call: deep_forest.weak_labels.PositiveUnlabeledImputer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesClassifier
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  class_weight: null
                  criterion: gini
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: 0.9
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: true
                  random_state: 0
                  verbose: true
                  warm_start: false
              sampling_strategy: auto
              threshold: 0.8
              use_oob_proba: true
              verbose: true
              weight_proba: true
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: proba_weak
  params:
    memory: estimators_cache
hash: b33f595728d2ae4d5e1e0fa74c25b93135ec938ef38eb76808af8791e5b1967a
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/b33f595_20231128T050951554813_proba_weak_scene.yml
results:
  fit_time:
  - 40.76663565635681
  - 40.26126003265381
  - 42.82944440841675
  - 42.93765830993652
  - 42.892008543014526
  score_time:
  - 9.945356607437134
  - 9.956836223602295
  - 8.906912326812744
  - 8.760799646377563
  - 8.830566883087158
  test_average_precision_macro:
  - 0.8097134393258741
  - 0.8384926985272041
  - 0.8019341749162537
  - 0.8573053482252849
  - 0.8051102109578846
  test_average_precision_micro:
  - 0.8172368826793811
  - 0.8424571864000984
  - 0.8047671625086773
  - 0.8595310930643348
  - 0.8108520834952182
  test_average_precision_samples:
  - 0.8702180028129396
  - 0.8834364261168385
  - 0.8644351464435146
  - 0.9055212620027434
  - 0.8657024793388429
  test_average_precision_weighted:
  - 0.7971310792685334
  - 0.8273065573893756
  - 0.7885474185103802
  - 0.847966594792686
  - 0.7901365802933085
  test_coverage_error:
  - -1.4936708860759493
  - -1.4061855670103092
  - -1.4728033472803348
  - -1.3271604938271604
  - -1.4359504132231404
  test_f1_macro:
  - 0.08017588328602933
  - 0.11251605485937437
  - 0.06308062389180503
  - 0.08195084110069896
  - 0.08205431634316658
  test_f1_micro:
  - 0.08163265306122448
  - 0.1161524500907441
  - 0.05992509363295881
  - 0.08178438661710037
  - 0.08178438661710037
  test_f1_samples:
  - 0.0450070323488045
  - 0.06254295532646047
  - 0.03277545327754532
  - 0.0438957475994513
  - 0.04338842975206612
  test_f1_weighted:
  - 0.07866867999963947
  - 0.11208654147858234
  - 0.0591832413153323
  - 0.08175478482598786
  - 0.08008615006097744
  test_hamming_loss:
  - -0.17405063291139242
  - -0.16735395189003435
  - -0.17503486750348676
  - -0.16941015089163236
  - -0.17011019283746556
  test_jaccard_macro:
  - 0.04333135510821464
  - 0.06193294870118021
  - 0.03295722519434771
  - 0.042741663108985306
  - 0.043690076387674685
  test_jaccard_micro:
  - 0.0425531914893617
  - 0.06165703275529865
  - 0.03088803088803089
  - 0.04263565891472868
  - 0.04263565891472868
  test_jaccard_samples:
  - 0.04430379746835443
  - 0.060824742268041236
  - 0.032426778242677826
  - 0.043209876543209874
  - 0.042355371900826444
  test_jaccard_weighted:
  - 0.0425531914893617
  - 0.06166511338925132
  - 0.03088803088803089
  - 0.04263565891472868
  - 0.04263565891472868
  test_label_ranking_average_precision_score:
  - 0.8702180028129392
  - 0.8834364261168384
  - 0.8644351464435143
  - 0.9055212620027433
  - 0.8657024793388429
  test_label_ranking_loss:
  - 0.07621308016877637
  - 0.06572164948453608
  - 0.0756276150627615
  - 0.05210905349794239
  - 0.0712293388429752
  test_matthews_corrcoef_macro:
  - 0.16977628889990282
  - 0.20327569414405874
  - 0.14909496838635772
  - 0.18807145740887354
  - 0.1791923052417328
  test_matthews_corrcoef_micro:
  - 0.18732069299846013
  - 0.22166124739240606
  - 0.15953437747733293
  - 0.1880367979574517
  - 0.18795620280698305
  test_matthews_corrcoef_samples:
  - 0.04486268156976234
  - 0.06177789208282141
  - 0.03270388186617924
  - 0.04375496103717562
  - 0.04317637726467155
  test_matthews_corrcoef_weighted:
  - 0.1670128760623017
  - 0.20291434174722361
  - 0.1410922596798748
  - 0.18755956492437978
  - 0.17629416584210744
  test_ndgc:
  - 0.9050491081969694
  - 0.9140867937103125
  - 0.9000659187029573
  - 0.930135746285935
  - 0.9012596240241989
  test_precision_macro:
  - 1.0
  - 0.9722222222222223
  - 0.8333333333333334
  - 1.0
  - 1.0
  test_precision_micro:
  - 1.0
  - 0.9696969696969697
  - 1.0
  - 1.0
  - 1.0
  test_precision_samples:
  - 0.046413502109704644
  - 0.06597938144329897
  - 0.03347280334728033
  - 0.04526748971193416
  - 0.045454545454545456
  test_precision_weighted:
  - 1.0
  - 0.9723294723294723
  - 0.7953667953667953
  - 1.0
  - 1.0
  test_recall_macro:
  - 0.04333135510821464
  - 0.06204432712049768
  - 0.03295722519434771
  - 0.042741663108985306
  - 0.043690076387674685
  test_recall_micro:
  - 0.0425531914893617
  - 0.06177606177606178
  - 0.03088803088803089
  - 0.04263565891472868
  - 0.04263565891472868
  test_recall_samples:
  - 0.04430379746835443
  - 0.060824742268041236
  - 0.032426778242677826
  - 0.043209876543209874
  - 0.042355371900826444
  test_recall_weighted:
  - 0.0425531914893617
  - 0.06177606177606178
  - 0.03088803088803089
  - 0.04263565891472868
  - 0.04263565891472868
  test_roc_auc_macro:
  - 0.9295074538709992
  - 0.9411433389554046
  - 0.9341678841038675
  - 0.9533997584488906
  - 0.935262779521456
  test_roc_auc_micro:
  - 0.9366182373433056
  - 0.9487101470797124
  - 0.9412133410005751
  - 0.9583276808785529
  - 0.9454004518717619
  test_roc_auc_samples:
  - 0.9237869198312236
  - 0.9342783505154639
  - 0.9243723849372385
  - 0.9478909465020577
  - 0.9287706611570249
  test_roc_auc_weighted:
  - 0.9241423993899416
  - 0.9356905026606004
  - 0.9284987772061798
  - 0.9496877094791241
  - 0.929096046857765
start: 2023-11-28 05:09:51.554813
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop70
  params:
    drop: 0.7
    random_state: 0
