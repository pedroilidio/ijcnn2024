active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwAzMzMzM+O/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv2hmZmZmZvY/oJmZmZmZ2T+YmZmZmZn5vw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5qZmZmZmfk/ZmZmZmZm9r+YmZmZmZnZvw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QGZmZmZmEsAAnJmZmZnZPwBnZmZmZvY/AJyZmZmZ2T+AMzMzMzMDQA==
      n_labels: 8
      n_samples: 1392
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_negative
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_negative.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 19:07:40.084787
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_pvalue
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: embedding_weak_chi2
  params:
    memory: estimators_cache
hash: 25987be9e8d9d0e14829d02a33623ebb589e1bfdb8f185127e641ae81fca4dfb
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/25987be_20231021T190419210947_embedding_weak_chi2_Gram_negative.yml
results:
  fit_time:
  - 163.5985622406006
  - 167.28698015213013
  - 168.1895067691803
  - 175.3866205215454
  - 184.18602919578552
  score_time:
  - 14.478634119033813
  - 14.313287496566772
  - 13.891047477722168
  - 13.758264303207397
  - 13.733986616134644
  test_average_precision_macro:
  - 0.9169304430551277
  - 0.8920660810952008
  - 0.8484786478926155
  - 0.9179892935010103
  - 0.9391418678596183
  test_average_precision_micro:
  - 0.9762019171797451
  - 0.9807720572438557
  - 0.9720040676275274
  - 0.9662996674142341
  - 0.9731055604617737
  test_average_precision_samples:
  - 0.9666414268887766
  - 0.9769184652278177
  - 0.971179302045728
  - 0.9636690647482014
  - 0.9792270531400966
  test_average_precision_weighted:
  - 0.9756342983590527
  - 0.9851675696424608
  - 0.9786589417816824
  - 0.9728198636454133
  - 0.9821061588934314
  test_coverage_error:
  - -1.1201413427561837
  - -1.1258992805755397
  - -1.144404332129964
  - -1.169064748201439
  - -1.144927536231884
  test_f1_macro:
  - 0.6553736199726471
  - 0.6274941134915523
  - 0.5205265373165474
  - 0.6029239738228879
  - 0.6251949143112556
  test_f1_micro:
  - 0.9140767824497259
  - 0.8996282527881041
  - 0.8901515151515151
  - 0.868421052631579
  - 0.8897196261682243
  test_f1_samples:
  - 0.878680800942285
  - 0.8585131894484413
  - 0.8399518652226233
  - 0.8177458033573141
  - 0.8478260869565217
  test_f1_weighted:
  - 0.9069048919371876
  - 0.8861773343508462
  - 0.8723322011091567
  - 0.849300074398603
  - 0.8756548529794713
  test_hamming_loss:
  - -0.02075971731448763
  - -0.024280575539568347
  - -0.026173285198555957
  - -0.03147482014388489
  - -0.026721014492753624
  test_jaccard_macro:
  - 0.5856612910864829
  - 0.5480607445680975
  - 0.45607488925802875
  - 0.5197084037828139
  - 0.5429287734919955
  test_jaccard_micro:
  - 0.8417508417508418
  - 0.8175675675675675
  - 0.8020477815699659
  - 0.7674418604651163
  - 0.8013468013468014
  test_jaccard_samples:
  - 0.8763250883392226
  - 0.8525179856115108
  - 0.8357400722021661
  - 0.8111510791366906
  - 0.8405797101449275
  test_jaccard_weighted:
  - 0.8406939032236601
  - 0.8176124057870571
  - 0.8014001770338778
  - 0.7661499803772929
  - 0.8000358037952023
  test_label_ranking_average_precision_score:
  - 0.9666414268887766
  - 0.9769184652278179
  - 0.971179302045728
  - 0.9636690647482014
  - 0.9792270531400967
  test_label_ranking_loss:
  - 0.014134275618374558
  - 0.009378211716341213
  - 0.012936221419975934
  - 0.013874614594039053
  - 0.009014837819185646
  test_matthews_corrcoef_macro:
  - 0.6490123923884119
  - 0.6247944172254691
  - 0.517764034117238
  - 0.6008426588320215
  - 0.6226851203615502
  test_matthews_corrcoef_micro:
  - 0.9041925953853236
  - 0.8897747023792949
  - 0.8805366772264561
  - 0.8564498052417747
  - 0.8802820826034069
  test_matthews_corrcoef_samples:
  - 0.8744726414840098
  - 0.8555116942186837
  - 0.8375853686769938
  - 0.8131594720680957
  - 0.8457509877533489
  test_matthews_corrcoef_weighted:
  - 0.8884014022463707
  - 0.8733132901977997
  - 0.8588504688032981
  - 0.8338612080191045
  - 0.8606887237333405
  test_ndgc:
  - 0.97506140520689
  - 0.9837547504893991
  - 0.9791462761261891
  - 0.9741154050994116
  - 0.9856707429810069
  test_precision_macro:
  - 0.7346320346320346
  - 0.7334077380952381
  - 0.6185064935064934
  - 0.7293354923301392
  - 0.7465596330275229
  test_precision_micro:
  - 0.9689922480620154
  - 0.979757085020243
  - 0.9832635983263598
  - 0.9665271966527197
  - 0.9875518672199171
  test_precision_samples:
  - 0.8833922261484098
  - 0.8705035971223022
  - 0.8483754512635379
  - 0.8309352517985612
  - 0.8623188405797102
  test_precision_weighted:
  - 0.9603139651582558
  - 0.9637416134838815
  - 0.9610389610389609
  - 0.9509670146929009
  - 0.9692005242463958
  test_recall_macro:
  - 0.5973558713497739
  - 0.5587282245056635
  - 0.4612507259001162
  - 0.5303627484191509
  - 0.5460700726859263
  test_recall_micro:
  - 0.8650519031141869
  - 0.8316151202749141
  - 0.8131487889273357
  - 0.78839590443686
  - 0.8095238095238095
  test_recall_samples:
  - 0.8763250883392226
  - 0.8525179856115108
  - 0.8357400722021661
  - 0.8111510791366906
  - 0.8405797101449275
  test_recall_weighted:
  - 0.8650519031141869
  - 0.8316151202749141
  - 0.8131487889273357
  - 0.78839590443686
  - 0.8095238095238095
  test_roc_auc_macro:
  - 0.9936246218301497
  - 0.9955728387480121
  - .nan
  - 0.9898855498351181
  - 0.9945246667850702
  test_roc_auc_micro:
  - 0.9944733038412683
  - 0.9945298069521409
  - 0.9916816752648128
  - 0.9893086218567896
  - 0.992505100263721
  test_roc_auc_samples:
  - 0.9858657243816255
  - 0.9906217882836589
  - 0.9870637785800241
  - 0.9861253854059608
  - 0.9909851621808143
  test_roc_auc_weighted:
  - 0.9925855591515071
  - 0.995310307078809
  - .nan
  - 0.9899967931545332
  - 0.9897660918496164
start: 2023-10-21 19:04:19.210947
wrapper: null
