active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6T8AmpmZmZnJvwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZv4AzMzMzM+M/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/gJmZmZmZ6b8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          IDMzMzMzI8DgzMzMzMwmQEBmZmZmZhbAQGZmZmZmFsDgzMzMzMwiQA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 20:30:24.448936
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - rf
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.RandomForestRegressor
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        - - xt
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesRegressor
                params:
                  bootstrap: false
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: proba_weak
  params:
    memory: estimators_cache
hash: 20454aea9fa5497235bfe9f1adad8b979b9a209a4b9cea9d517d794e0308d8ef
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/20454ae_20231021T202900927683_proba_weak_scene.yml
results:
  fit_time:
  - 48.20155334472656
  - 45.79557776451111
  - 45.711485147476196
  - 46.558536529541016
  - 47.45342302322388
  score_time:
  - 34.34098219871521
  - 24.56236743927002
  - 26.461455583572388
  - 29.56011939048767
  - 32.76335644721985
  test_average_precision_macro:
  - 0.8560309762245278
  - 0.8427130081306663
  - 0.8476485645376646
  - 0.8405066621850582
  - 0.8247359246243243
  test_average_precision_micro:
  - 0.8421351260711056
  - 0.8318375242265156
  - 0.8340044378185045
  - 0.8319381313660315
  - 0.8047611322089492
  test_average_precision_samples:
  - 0.8964697895451459
  - 0.8863829787234043
  - 0.8850102669404517
  - 0.879397672826831
  - 0.8691737288135594
  test_average_precision_weighted:
  - 0.8459427013040484
  - 0.8293595625349117
  - 0.8383682641817882
  - 0.8288681049483133
  - 0.8120645542062017
  test_coverage_error:
  - -1.3523421588594704
  - -1.4382978723404256
  - -1.3819301848049281
  - -1.4188911704312115
  - -1.5021186440677967
  test_f1_macro:
  - 0.8158013921354935
  - 0.7927675336888046
  - 0.7903905640771933
  - 0.7983999507909342
  - 0.7719205158969457
  test_f1_micro:
  - 0.8062317429406036
  - 0.784
  - 0.783284742468416
  - 0.7894736842105263
  - 0.76162215628091
  test_f1_samples:
  - 0.8038017651052274
  - 0.7858156028368793
  - 0.783709787816564
  - 0.7905544147843943
  - 0.7563559322033898
  test_f1_weighted:
  - 0.8060738836658979
  - 0.7822572363455523
  - 0.7824804136556681
  - 0.7888814452983606
  - 0.7608565908791007
  test_hamming_loss:
  - -0.06754921928038017
  - -0.07659574468085106
  - -0.07631759069130732
  - -0.07392197125256673
  - -0.08509887005649718
  test_jaccard_macro:
  - 0.6987768657226024
  - 0.6704904716113838
  - 0.6630211825226929
  - 0.6738927860940481
  - 0.6432375351512817
  test_jaccard_micro:
  - 0.6753670473083198
  - 0.6447368421052632
  - 0.6437699680511182
  - 0.6521739130434783
  - 0.6150159744408946
  test_jaccard_samples:
  - 0.7922606924643585
  - 0.7702127659574468
  - 0.7693360711841204
  - 0.7775496235455168
  - 0.7387005649717514
  test_jaccard_weighted:
  - 0.6853566049278634
  - 0.655913652391415
  - 0.6522947086418612
  - 0.6607112867239134
  - 0.6285832572907601
  test_label_ranking_average_precision_score:
  - 0.8964697895451457
  - 0.8863829787234041
  - 0.8850102669404514
  - 0.8793976728268305
  - 0.869173728813559
  test_label_ranking_loss:
  - 0.06053971486761711
  - 0.0670212765957447
  - 0.06196098562628336
  - 0.06991786447638605
  - 0.07860169491525425
  test_matthews_corrcoef_macro:
  - 0.774843558669513
  - 0.7471723641326729
  - 0.7453891915792722
  - 0.7534589630571009
  - 0.7202013890599718
  test_matthews_corrcoef_micro:
  - 0.7653418018796027
  - 0.7381439899745341
  - 0.7369852827025173
  - 0.7446990098178424
  - 0.7101325304018149
  test_matthews_corrcoef_samples:
  - 0.7697653865399073
  - 0.7485413809518381
  - 0.7450042760806219
  - 0.7528846094272988
  - 0.7146321945658176
  test_matthews_corrcoef_weighted:
  - 0.7621426003756558
  - 0.7334650092217202
  - 0.7346150625085487
  - 0.740928488769909
  - 0.7054779143704737
  test_ndgc:
  - 0.9226686578236577
  - 0.9160779962887515
  - 0.9154393329170778
  - 0.9107255912632704
  - 0.903330632797773
  test_precision_macro:
  - 0.8210809880384504
  - 0.82099731474915
  - 0.8008981245050438
  - 0.8071629812150553
  - 0.7908792231986554
  test_precision_micro:
  - 0.8101761252446184
  - 0.8115942028985508
  - 0.787109375
  - 0.797244094488189
  - 0.7793522267206477
  test_precision_samples:
  - 0.8054989816700611
  - 0.8021276595744681
  - 0.7895277207392197
  - 0.797741273100616
  - 0.7711864406779662
  test_precision_weighted:
  - 0.8113637700015468
  - 0.8104171016789614
  - 0.7905478429906942
  - 0.7972154001027393
  - 0.7792842072014015
  test_recall_macro:
  - 0.8120654770610892
  - 0.7686643599082944
  - 0.7851758712164472
  - 0.791002413306609
  - 0.7552403811710202
  test_recall_micro:
  - 0.8023255813953488
  - 0.758220502901354
  - 0.7794970986460348
  - 0.7818532818532818
  - 0.7446808510638298
  test_recall_samples:
  - 0.8136456211812627
  - 0.7851063829787234
  - 0.7915811088295688
  - 0.795687885010267
  - 0.7591807909604521
  test_recall_weighted:
  - 0.8023255813953488
  - 0.758220502901354
  - 0.7794970986460348
  - 0.7818532818532818
  - 0.7446808510638298
  test_roc_auc_macro:
  - 0.9466261565117552
  - 0.942531184154828
  - 0.9470563992758562
  - 0.942257479872063
  - 0.9334241794128134
  test_roc_auc_micro:
  - 0.9492614923278143
  - 0.9454886444474493
  - 0.9483772122069993
  - 0.9456102763091117
  - 0.935999766053532
  test_roc_auc_samples:
  - 0.939460285132383
  - 0.9329787234042555
  - 0.9380390143737167
  - 0.930082135523614
  - 0.9213983050847457
  test_roc_auc_weighted:
  - 0.9417666484633831
  - 0.9377456303340547
  - 0.9424817230839801
  - 0.9369023830520778
  - 0.9277549981502955
start: 2023-10-21 20:29:00.927683
wrapper: null
