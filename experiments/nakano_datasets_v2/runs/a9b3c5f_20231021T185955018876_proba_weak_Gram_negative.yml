active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwAzMzMzM+O/AJqZmZmZ2T8AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+gmZmZmZnpP4CZmZmZmcm/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjvzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/MDMzMzMz479oZmZmZmb2Pw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADIzMzMz478AMjMzMzPjv4AzMzMzMwtAAJmZmZmZ+b8AMjMzMzPjvw==
      n_labels: 8
      n_samples: 1392
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_negative
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_negative.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 19:00:55.600636
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - rf
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.RandomForestRegressor
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        - - xt
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesRegressor
                params:
                  bootstrap: false
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: proba_weak
  params:
    memory: estimators_cache
hash: a9b3c5f0274ae55bc62ab07f4c1a76c2d0d75841ed9159d460fa5393605294ac
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/a9b3c5f_20231021T185955018876_proba_weak_Gram_negative.yml
results:
  fit_time:
  - 48.51517629623413
  - 49.0449800491333
  - 48.97349739074707
  - 48.494596004486084
  - 49.28651762008667
  score_time:
  - 10.769804954528809
  - 10.277555465698242
  - 10.39865779876709
  - 10.71451473236084
  - 10.292259454727173
  test_average_precision_macro:
  - 0.9833584485174127
  - 0.9691014373819322
  - 0.9829663502047659
  - 0.9706948650794498
  - 0.9909046942593539
  test_average_precision_micro:
  - 0.9571218747405188
  - 0.9609230751807402
  - 0.9636800157983323
  - 0.9613398897332828
  - 0.9807590497113119
  test_average_precision_samples:
  - 0.9593787335722819
  - 0.9658900836320192
  - 0.9691515151515151
  - 0.9626785714285715
  - 0.9795101553166068
  test_average_precision_weighted:
  - 0.9711700048051939
  - 0.9710814864010249
  - 0.9810135619429595
  - 0.973637487331888
  - 0.9893243225740918
  test_coverage_error:
  - -1.1397849462365592
  - -1.157706093189964
  - -1.1818181818181819
  - -1.1857142857142857
  - -1.1003584229390682
  test_f1_macro:
  - 0.5188233435136681
  - 0.40261575194230187
  - 0.4385368689352949
  - 0.39617088406900053
  - 0.5193409344659299
  test_f1_micro:
  - 0.8768656716417911
  - 0.8249027237354086
  - 0.827037773359841
  - 0.8221343873517787
  - 0.8956356736242883
  test_f1_samples:
  - 0.8291517323775388
  - 0.7526881720430108
  - 0.7454545454545455
  - 0.7357142857142858
  - 0.8410991636798089
  test_f1_weighted:
  - 0.8538575768582322
  - 0.7682773847485033
  - 0.7883605482137552
  - 0.7645507504361183
  - 0.8731440016732793
  test_hamming_loss:
  - -0.02956989247311828
  - -0.04032258064516129
  - -0.03954545454545454
  - -0.04017857142857143
  - -0.0246415770609319
  test_jaccard_macro:
  - 0.45365163572060124
  - 0.3469396901886932
  - 0.3645764652014652
  - 0.33267126148705095
  - 0.4614818998215082
  test_jaccard_micro:
  - 0.7807308970099668
  - 0.7019867549668874
  - 0.7050847457627119
  - 0.697986577181208
  - 0.8109965635738832
  test_jaccard_samples:
  - 0.8225806451612904
  - 0.7491039426523297
  - 0.74
  - 0.7321428571428571
  - 0.8387096774193549
  test_jaccard_weighted:
  - 0.7771974755327906
  - 0.6980834209699669
  - 0.7042093287827077
  - 0.6960165825522711
  - 0.8102383582774002
  test_label_ranking_average_precision_score:
  - 0.9593787335722819
  - 0.9658900836320192
  - 0.9691515151515151
  - 0.9626785714285713
  - 0.979510155316607
  test_label_ranking_loss:
  - 0.01391022358764294
  - 0.013952892985151047
  - 0.01316017316017316
  - 0.01721938775510204
  - 0.008149854924048473
  test_matthews_corrcoef_macro:
  - 0.5142396933568418
  - 0.41568411667749344
  - 0.44902768797939274
  - 0.4138574795254596
  - 0.5199927070593685
  test_matthews_corrcoef_micro:
  - 0.8639526631938427
  - 0.8122250668178252
  - 0.8196465327851686
  - 0.8123774019563009
  - 0.887157345223021
  test_matthews_corrcoef_samples:
  - 0.8230457412414307
  - 0.7473095003429263
  - 0.7440224318205728
  - 0.7323956398825179
  - 0.8399028688068731
  test_matthews_corrcoef_weighted:
  - 0.8354644920206243
  - 0.7601515070106996
  - 0.7817856169405905
  - 0.7679420763247168
  - 0.8637424200891726
  test_ndgc:
  - 0.9701521796713145
  - 0.9755135360839324
  - 0.9788133529270598
  - 0.9736044798862244
  - 0.9853263138470726
  test_precision_macro:
  - 0.6101449275362318
  - 0.5955152877548651
  - 0.6215277777777778
  - 0.5934027777777777
  - 0.6221760178748759
  test_precision_micro:
  - 0.9552845528455285
  - 0.954954954954955
  - 0.9904761904761905
  - 0.9719626168224299
  - 0.9915966386554622
  test_precision_samples:
  - 0.8422939068100358
  - 0.7598566308243727
  - 0.7563636363636363
  - 0.7428571428571429
  - 0.8458781362007168
  test_precision_weighted:
  - 0.9266966516741628
  - 0.9188094757058792
  - 0.9512703830109974
  - 0.9262557077625572
  - 0.9649615322500283
  test_recall_macro:
  - 0.46607899644485007
  - 0.35812383049425733
  - 0.3671171156079693
  - 0.33927531189726307
  - 0.4639151041285188
  test_recall_micro:
  - 0.8103448275862069
  - 0.726027397260274
  - 0.7098976109215017
  - 0.7123287671232876
  - 0.8166089965397924
  test_recall_samples:
  - 0.8225806451612904
  - 0.7491039426523297
  - 0.74
  - 0.7321428571428571
  - 0.8387096774193549
  test_recall_weighted:
  - 0.8103448275862069
  - 0.726027397260274
  - 0.7098976109215017
  - 0.7123287671232876
  - 0.8166089965397924
  test_roc_auc_macro:
  - 0.9933688155518876
  - 0.9908962357274842
  - 0.9946296096686706
  - 0.9900128959644005
  - 0.9948300604803133
  test_roc_auc_micro:
  - 0.99226712596328
  - 0.9894735913006637
  - 0.9904071760050541
  - 0.9887010913898344
  - 0.9945487928452239
  test_roc_auc_samples:
  - 0.9860897764123572
  - 0.9860471070148491
  - 0.986839826839827
  - 0.982780612244898
  - 0.9918501450759516
  test_roc_auc_weighted:
  - 0.9864142427512732
  - 0.9881569861050904
  - 0.9903806558708165
  - 0.9891812586897935
  - 0.9924046906371099
start: 2023-10-21 18:59:55.018876
wrapper: null
