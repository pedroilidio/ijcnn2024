active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            NDMzMzMz4z+YmZmZmZnZv5iZmZmZmdm/NDMzMzMz4z+YmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            kJmZmZmZ2b84MzMzMzPjPzgzMzMzM+M/kJmZmZmZ2b+QmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ2T8gMzMzMzPjvyAzMzMzM+O/wJmZmZmZ2T/AmZmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv4CZmZmZmcm/gJmZmZmZyb+gmZmZmZnpPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJqZmZmZ2T/AzMzMzMwEwEAzMzMzMwtAQDMzMzMzA0DAzMzMzMwMwA==
      n_labels: 6
      n_samples: 207
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: VirusGO
  params:
    path: nakano_datasets_v2/datasets/MLC/VirusGO.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 17:39:41.768122
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_pvalue
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: embedding_weak_chi2
  params:
    memory: estimators_cache
hash: df290fd459d675a2051660eae332c76526c693d0ef40905f9a0d7f0122a52348
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/df290fd_20231021T173757209907_embedding_weak_chi2_VirusGO.yml
results:
  fit_time:
  - 61.653210401535034
  - 60.991493463516235
  - 60.92306613922119
  - 58.45279550552368
  - 57.60694360733032
  score_time:
  - 42.41544818878174
  - 33.96342158317566
  - 38.21149826049805
  - 34.538466691970825
  - 38.851261615753174
  test_average_precision_macro:
  - 0.9279190123629563
  - 0.969981667982437
  - 0.9485759856954964
  - 0.9771694964703981
  - 0.9372195941524342
  test_average_precision_micro:
  - 0.9248277891182288
  - 0.9481599516189434
  - 0.897756166174208
  - 0.9588361814542847
  - 0.9147724494967663
  test_average_precision_samples:
  - 0.9552845528455284
  - 0.9318181818181818
  - 0.9276315789473685
  - 0.9786324786324786
  - 0.9248148148148149
  test_average_precision_weighted:
  - 0.9345602273973018
  - 0.9802357068793056
  - 0.9389918814280219
  - 0.9750924394662784
  - 0.9577567211444119
  test_coverage_error:
  - -1.3414634146341464
  - -1.3409090909090908
  - -1.5263157894736843
  - -1.358974358974359
  - -1.4222222222222223
  test_f1_macro:
  - 0.6189118071471013
  - 0.6875661375661375
  - 0.5274774774774775
  - 0.7267708769724899
  - 0.5178613053613054
  test_f1_micro:
  - 0.8387096774193548
  - 0.8541666666666666
  - 0.735632183908046
  - 0.8275862068965518
  - 0.8089887640449438
  test_f1_samples:
  - 0.791869918699187
  - 0.8106060606060606
  - 0.6666666666666666
  - 0.7435897435897436
  - 0.7629629629629628
  test_f1_weighted:
  - 0.8138181818181818
  - 0.8152816682228446
  - 0.669952305246423
  - 0.794300900712191
  - 0.7496398601398602
  test_hamming_loss:
  - -0.06097560975609756
  - -0.05303030303030303
  - -0.10087719298245613
  - -0.0641025641025641
  - -0.06296296296296296
  test_jaccard_macro:
  - 0.5209551656920078
  - 0.5950292397660818
  - 0.46031746031746024
  - 0.654333955804544
  - 0.4530423280423281
  test_jaccard_micro:
  - 0.7222222222222222
  - 0.7454545454545455
  - 0.5818181818181818
  - 0.7058823529411765
  - 0.6792452830188679
  test_jaccard_samples:
  - 0.7723577235772358
  - 0.7954545454545454
  - 0.6578947368421053
  - 0.7307692307692307
  - 0.7555555555555555
  test_jaccard_weighted:
  - 0.7177485380116958
  - 0.739250085999312
  - 0.5695611577964519
  - 0.7055555555555556
  - 0.6711111111111111
  test_label_ranking_average_precision_score:
  - 0.9552845528455286
  - 0.9318181818181818
  - 0.9276315789473685
  - 0.9786324786324786
  - 0.9248148148148149
  test_label_ranking_loss:
  - 0.0225609756097561
  - 0.03465909090909091
  - 0.03618421052631579
  - 0.011538461538461539
  - 0.05827160493827162
  test_matthews_corrcoef_macro:
  - 0.6074040207614851
  - 0.6769213353877653
  - 0.4953508765953433
  - 0.7032612657052394
  - 0.5107164205747481
  test_matthews_corrcoef_micro:
  - 0.8048428307460732
  - 0.8243182411132651
  - 0.691224394496026
  - 0.8027897355245861
  - 0.7805242178642506
  test_matthews_corrcoef_samples:
  - 0.7765104612029573
  - 0.8029505029121523
  - 0.6460179815276451
  - 0.7358299127205391
  - 0.7525535792014967
  test_matthews_corrcoef_weighted:
  - 0.7694563072176603
  - 0.7858634169380306
  - 0.5936473060123068
  - 0.7480744509780568
  - 0.716446508669302
  test_ndgc:
  - 0.9678434218607586
  - 0.9502843193150582
  - 0.9475246435126272
  - 0.9864197777402008
  - 0.9443476818188957
  test_precision_macro:
  - 0.7788865546218487
  - 0.7504299965600274
  - 0.6275303643724697
  - 0.8214285714285715
  - 0.6359477124183006
  test_precision_micro:
  - 0.9069767441860465
  - 0.9111111111111111
  - 0.8888888888888888
  - 0.972972972972973
  - 0.9230769230769231
  test_precision_samples:
  - 0.8048780487804879
  - 0.8068181818181818
  - 0.6710526315789473
  - 0.7692307692307693
  - 0.7666666666666667
  test_precision_weighted:
  - 0.8975
  - 0.8526477670531577
  - 0.7617686750813686
  - 0.8957142857142857
  - 0.8196862745098039
  test_recall_macro:
  - 0.5619747899159663
  - 0.6759259259259259
  - 0.48801742919389984
  - 0.6614145658263305
  - 0.4780287114845938
  test_recall_micro:
  - 0.78
  - 0.803921568627451
  - 0.6274509803921569
  - 0.72
  - 0.72
  test_recall_samples:
  - 0.7967479674796747
  - 0.8295454545454546
  - 0.6710526315789473
  - 0.7307692307692307
  - 0.7666666666666667
  test_recall_weighted:
  - 0.78
  - 0.803921568627451
  - 0.6274509803921569
  - 0.72
  - 0.72
  test_roc_auc_macro:
  - 0.9737000656118302
  - 0.9905611069214011
  - 0.9761583800186742
  - 0.9918258212375859
  - 0.9679457674575297
  test_roc_auc_micro:
  - 0.9758163265306121
  - 0.982417380097579
  - 0.9709759610058712
  - 0.9868478260869564
  - 0.9626363636363637
  test_roc_auc_samples:
  - 0.977439024390244
  - 0.965340909090909
  - 0.9638157894736842
  - 0.9884615384615384
  - 0.9417283950617285
  test_roc_auc_weighted:
  - 0.9663606253312135
  - 0.9920856376738729
  - 0.9610802164002856
  - 0.9870389610389609
  - 0.9777159678000722
start: 2023-10-21 17:37:57.209907
wrapper: null
