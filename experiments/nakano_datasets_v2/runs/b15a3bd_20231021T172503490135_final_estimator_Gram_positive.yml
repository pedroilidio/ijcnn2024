active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJv8CZmZmZmek/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADMzMzMz878AMzMzMzPzvwAzMzMzM/O/AM3MzMzM/D8AzczMzMz8Pw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 17:25:08.555860
estimator:
  call: nakano_datasets_v2.estimators.final_estimator
  final_params:
    estimators:
    - - rf
      - call: sklearn.ensemble._forest.RandomForestClassifier
        params:
          bootstrap: true
          ccp_alpha: 0.0
          class_weight: null
          criterion: gini
          max_depth: null
          max_features: sqrt
          max_leaf_nodes: null
          max_samples: 0.9
          min_impurity_decrease: 0.0
          min_samples_leaf: 5
          min_samples_split: 2
          min_weight_fraction_leaf: 0.0
          n_estimators: 150
          n_jobs: 14
          oob_score: true
          random_state: 0
          verbose: true
          warm_start: false
    - - xt
      - call: sklearn.ensemble._forest.ExtraTreesClassifier
        params:
          bootstrap: true
          ccp_alpha: 0.0
          class_weight: null
          criterion: gini
          max_depth: null
          max_features: sqrt
          max_leaf_nodes: null
          max_samples: 0.9
          min_impurity_decrease: 0.0
          min_samples_leaf: 5
          min_samples_split: 2
          min_weight_fraction_leaf: 0.0
          n_estimators: 150
          n_jobs: 14
          oob_score: true
          random_state: 0
          verbose: true
          warm_start: false
  name: final_estimator
  params: {}
hash: b15a3bd3e148ad7320c8eb54b980baa76e845a7c0061d6b03553ec7286685d8b
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/b15a3bd_20231021T172503490135_final_estimator_Gram_positive.yml
results:
  fit_time:
  - 1.2631914615631104
  - 1.2789764404296875
  - 1.2591049671173096
  - 1.3030822277069092
  - 1.3030190467834473
  score_time:
  - 3.494377851486206
  - 3.573502540588379
  - 3.538574695587158
  - 3.504659652709961
  - 3.4965591430664062
  test_average_precision_macro:
  - 0.9793578975920577
  - 0.8457429929788743
  - 0.9118009448407715
  - 0.9185354444509811
  - 0.9293518947135072
  test_average_precision_micro:
  - 0.9407526086431807
  - 0.951611306827635
  - 0.9525011241115288
  - 0.9641543628679448
  - 0.9557624001902164
  test_average_precision_samples:
  - 0.9317460317460319
  - 0.95
  - 0.9444444444444443
  - 0.9607843137254902
  - 0.9305555555555555
  test_average_precision_weighted:
  - 0.9778604867693891
  - 0.9552710812217244
  - 0.9689997760101328
  - 0.9754186380982939
  - 0.9706591573578931
  test_coverage_error:
  - -1.2095238095238094
  - -1.1428571428571428
  - -1.180952380952381
  - -1.1568627450980393
  - -1.2058823529411764
  test_f1_macro:
  - 0.4357901184156799
  - 0.48437875781625783
  - 0.4835667145793728
  - 0.5608831692501048
  - 0.45598845598845605
  test_f1_micro:
  - 0.7294117647058823
  - 0.760233918128655
  - 0.7790697674418604
  - 0.8
  - 0.7664670658682634
  test_f1_samples:
  - 0.5873015873015873
  - 0.6190476190476191
  - 0.638095238095238
  - 0.6830065359477123
  - 0.6274509803921569
  test_f1_weighted:
  - 0.6374299868255815
  - 0.6906034551867886
  - 0.6911089178720281
  - 0.7627070510135028
  - 0.6742599363958589
  test_hamming_loss:
  - -0.10952380952380952
  - -0.09761904761904762
  - -0.09047619047619047
  - -0.0857843137254902
  - -0.09558823529411764
  test_jaccard_macro:
  - 0.38915701415701415
  - 0.4248172757475083
  - 0.4434733893557423
  - 0.4823693379790941
  - 0.41951219512195126
  test_jaccard_micro:
  - 0.5740740740740741
  - 0.6132075471698113
  - 0.638095238095238
  - 0.6666666666666666
  - 0.6213592233009708
  test_jaccard_samples:
  - 0.5857142857142857
  - 0.6190476190476191
  - 0.638095238095238
  - 0.6813725490196079
  - 0.6274509803921569
  test_jaccard_weighted:
  - 0.5721570627231004
  - 0.6115171650055371
  - 0.638095238095238
  - 0.6703846153846154
  - 0.6213592233009708
  test_label_ranking_average_precision_score:
  - 0.9317460317460319
  - 0.95
  - 0.9444444444444445
  - 0.9607843137254902
  - 0.9305555555555556
  test_label_ranking_loss:
  - 0.06587301587301586
  - 0.047619047619047616
  - 0.060317460317460304
  - 0.04411764705882353
  - 0.065359477124183
  test_matthews_corrcoef_macro:
  - 0.41075627942911075
  - 0.48691149200473827
  - 0.49287197947449574
  - 0.5427378141708813
  - 0.43798050436503433
  test_matthews_corrcoef_micro:
  - 0.6992513839898095
  - 0.7327697013772608
  - 0.754589357962423
  - 0.769921313155252
  - 0.7422360996583468
  test_matthews_corrcoef_samples:
  - 0.5801017485954568
  - 0.6158730158730158
  - 0.638095238095238
  - 0.6788629111358461
  - 0.6274509803921569
  test_matthews_corrcoef_weighted:
  - 0.6021684255910862
  - 0.6804609882015296
  - 0.6921836535470591
  - 0.7360469410394596
  - 0.6477899804225529
  test_ndgc:
  - 0.949427286190604
  - 0.9626438875776089
  - 0.9582428142191234
  - 0.9711964142183589
  - 0.9481229210707881
  test_precision_macro:
  - 0.4814814814814815
  - 0.7428571428571429
  - 0.75
  - 0.71875
  - 0.5
  test_precision_micro:
  - 0.96875
  - 0.9848484848484849
  - 1.0
  - 0.9859154929577465
  - 1.0
  test_precision_samples:
  - 0.5904761904761905
  - 0.6190476190476191
  - 0.638095238095238
  - 0.6862745098039216
  - 0.6274509803921569
  test_precision_weighted:
  - 0.7019566736547869
  - 0.96
  - 0.9619047619047619
  - 0.9326923076923077
  - 0.7378640776699029
  test_recall_macro:
  - 0.39880952380952384
  - 0.42952380952380953
  - 0.4434733893557423
  - 0.48528600464576077
  - 0.41951219512195126
  test_recall_micro:
  - 0.5849056603773585
  - 0.6190476190476191
  - 0.638095238095238
  - 0.6730769230769231
  - 0.6213592233009708
  test_recall_samples:
  - 0.5857142857142857
  - 0.6190476190476191
  - 0.638095238095238
  - 0.6813725490196079
  - 0.6274509803921569
  test_recall_weighted:
  - 0.5849056603773585
  - 0.6190476190476191
  - 0.638095238095238
  - 0.6730769230769231
  - 0.6213592233009708
  test_roc_auc_macro:
  - 0.9916360071806499
  - 0.9832571473033658
  - 0.9881980649183393
  - 0.993318964428451
  - 0.9886776894149318
  test_roc_auc_micro:
  - 0.9607318831871169
  - 0.9710355253212397
  - 0.9646863189720332
  - 0.9706794028340081
  - 0.9706827948432277
  test_roc_auc_samples:
  - 0.934126984126984
  - 0.9523809523809523
  - 0.9396825396825396
  - 0.9558823529411765
  - 0.9346405228758169
  test_roc_auc_weighted:
  - 0.9907859763402215
  - 0.9838766617758216
  - 0.9908426798414248
  - 0.9955378906028514
  - 0.9881274670364398
start: 2023-10-21 17:25:03.490135
wrapper: null
