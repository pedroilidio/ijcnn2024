active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ6T8AmpmZmZnJvwCamZmZmcm/AJqZmZmZyb8AmpmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AMzMzMzPjvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b8AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT+AmZmZmZnpvwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          gMzMzMzMDMAAZ2ZmZmb2P4AzMzMzMwNAgDMzMzMzA0CAzMzMzMwEwA==
      n_labels: 6
      n_samples: 2407
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: scene
  params:
    path: nakano_datasets_v2/datasets/MLC/scene.csv
directory: nakano_datasets_v2/runs
end: 2023-11-28 05:53:57.310744
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.9
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.ExtraTreesRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.8
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              - - rf
                - call: deep_forest.estimator_adapters.TreeEmbedderWithOutput
                  params:
                    estimator:
                      call: deep_forest.tree_embedder.ForestEmbedder
                      params:
                        estimator:
                          call: sklearn.ensemble._forest.RandomForestRegressor
                          params:
                            bootstrap: true
                            ccp_alpha: 0.0
                            criterion: squared_error
                            max_depth: null
                            max_features: sqrt
                            max_leaf_nodes: null
                            max_samples: 0.5
                            min_impurity_decrease: 0.0
                            min_samples_leaf: 5
                            min_samples_split: 2
                            min_weight_fraction_leaf: 0.0
                            n_estimators: 150
                            n_jobs: 14
                            oob_score: false
                            random_state: 0
                            verbose: true
                            warm_start: false
                        max_node_size: 0.95
                        max_pvalue: 1.0
                        method: path
                        node_weights: log_node_size
                    method: predict
                    post_transformer:
                      call: sklearn.pipeline.Pipeline
                      params:
                        memory: null
                        steps:
                        - - densifier
                          - call: nakano_datasets_v2.estimators.Densifier
                            params: {}
                        - - pca
                          - call: sklearn.decomposition._pca.PCA
                            params:
                              copy: true
                              iterated_power: auto
                              n_components: 0.8
                              n_oversamples: 10
                              power_iteration_normalizer: auto
                              random_state: 0
                              svd_solver: auto
                              tol: 0.0
                              whiten: false
                        verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding_proba
  params:
    memory: estimators_cache
hash: ac08ce6b764b076c76ab8bc06e882eff45c4250c6789439107183464b5e6dac8
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/ac08ce6_20231128T054730721360_embedding_proba_scene.yml
results:
  fit_time:
  - 246.92963790893555
  - 252.77953171730042
  - 260.05717873573303
  - 268.03382444381714
  - 269.8504521846771
  score_time:
  - 92.08095908164978
  - 91.2549204826355
  - 110.29272365570068
  - 67.38676500320435
  - 112.9958565235138
  test_average_precision_macro:
  - 0.21843120325581702
  - 0.20570450512462132
  - 0.22299490351486215
  - 0.19506122765473885
  - 0.20712106852682047
  test_average_precision_micro:
  - 0.19093378238725306
  - 0.1936192018336978
  - 0.2028697691781485
  - 0.18971866116260114
  - 0.1954703847469807
  test_average_precision_samples:
  - 0.25460481099656357
  - 0.23209490740740737
  - 0.28754349338900487
  - 0.23639526791927626
  - 0.2568009641873278
  test_average_precision_weighted:
  - 0.21522972629994314
  - 0.20649935064731434
  - 0.22093620040688158
  - 0.19716533248022042
  - 0.20745066733672865
  test_coverage_error:
  - -5.416494845360825
  - -5.602083333333334
  - -5.258872651356993
  - -5.592901878914405
  - -5.4152892561983474
  test_f1_macro:
  - 0.007575757575757575
  - 0.0037878787878787876
  - 0.0
  - 0.0
  - 0.007662835249042145
  test_f1_micro:
  - 0.007722007722007722
  - 0.003861003861003861
  - 0.0
  - 0.0
  - 0.007692307692307693
  test_f1_samples:
  - 0.004123711340206186
  - 0.0020833333333333333
  - 0.0
  - 0.0
  - 0.0034435261707988977
  test_f1_weighted:
  - 0.007590467784642541
  - 0.003824512045014946
  - 0.0
  - 0.0
  - 0.007633249012559357
  test_hamming_loss:
  - -0.1766323024054983
  - -0.17916666666666667
  - -0.1802366040361865
  - -0.1802366040361865
  - -0.17768595041322313
  test_jaccard_macro:
  - 0.003875968992248062
  - 0.0019157088122605363
  - 0.0
  - 0.0
  - 0.003875968992248062
  test_jaccard_micro:
  - 0.003875968992248062
  - 0.0019342359767891683
  - 0.0
  - 0.0
  - 0.003861003861003861
  test_jaccard_samples:
  - 0.004123711340206186
  - 0.0020833333333333333
  - 0.0
  - 0.0
  - 0.0030991735537190084
  test_jaccard_weighted:
  - 0.003883495145631068
  - 0.0019342359767891683
  - 0.0
  - 0.0
  - 0.003861003861003861
  test_label_ranking_average_precision_score:
  - 0.2546048109965648
  - 0.23209490740740862
  - 0.28754349338900514
  - 0.23639526791927748
  - 0.2568009641873292
  test_label_ranking_loss:
  - 0.8832989690721649
  - 0.918142361111111
  - 0.8457724425887265
  - 0.9152400835073068
  - 0.8811466942148761
  test_matthews_corrcoef_macro:
  - 0.019094373485146556
  - 0.0161851840289917
  - -0.0033878045837565647
  - 0.0
  - 0.03262852866156947
  test_matthews_corrcoef_micro:
  - 0.041218919432804056
  - 0.03984425921524371
  - -0.008737710818485525
  - 0.0
  - 0.05634256748869542
  test_matthews_corrcoef_samples:
  - 0.003711340206185567
  - 0.0020833333333333333
  - -0.0004175365344467641
  - 0.0
  - 0.0033728420083340414
  test_matthews_corrcoef_weighted:
  - 0.018197908901860002
  - 0.01634171385519085
  - -0.0031060336029025367
  - 0.0
  - 0.032502549786428275
  test_ndgc:
  - 0.5886504611796306
  - 0.5743611052173091
  - 0.602683968119361
  - 0.5793087446820103
  - 0.5870368430598527
  test_precision_macro:
  - 0.16666666666666666
  - 0.16666666666666666
  - 0.0
  - 0.0
  - 0.3333333333333333
  test_precision_micro:
  - 0.6666666666666666
  - 1.0
  - 0.0
  - 0.0
  - 1.0
  test_precision_samples:
  - 0.004123711340206186
  - 0.0020833333333333333
  - 0.0
  - 0.0
  - 0.004132231404958678
  test_precision_weighted:
  - 0.1669902912621359
  - 0.16827852998065765
  - 0.0
  - 0.0
  - 0.33204633204633205
  test_recall_macro:
  - 0.003875968992248062
  - 0.0019157088122605363
  - 0.0
  - 0.0
  - 0.003875968992248062
  test_recall_micro:
  - 0.003883495145631068
  - 0.0019342359767891683
  - 0.0
  - 0.0
  - 0.003861003861003861
  test_recall_samples:
  - 0.004123711340206186
  - 0.0020833333333333333
  - 0.0
  - 0.0
  - 0.0030991735537190084
  test_recall_weighted:
  - 0.003883495145631068
  - 0.0019342359767891683
  - 0.0
  - 0.0
  - 0.003861003861003861
  test_roc_auc_macro:
  - 0.5150206447644404
  - 0.501759254308441
  - 0.5167356482406366
  - 0.5101662307195451
  - 0.5099678769460664
  test_roc_auc_micro:
  - 0.5094351095526685
  - 0.5009253718881762
  - 0.5128712448782137
  - 0.5096856952756783
  - 0.5072296730930428
  test_roc_auc_samples:
  - 0.5416494845360825
  - 0.5203472222222223
  - 0.553053235908142
  - 0.524321503131524
  - 0.5390237603305785
  test_roc_auc_weighted:
  - 0.5090037149954303
  - 0.5003065228411154
  - 0.5112071925259059
  - 0.5093387313376267
  - 0.5062788299015546
start: 2023-11-28 05:47:30.721360
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop90
  params:
    drop: 0.9
    random_state: 0
