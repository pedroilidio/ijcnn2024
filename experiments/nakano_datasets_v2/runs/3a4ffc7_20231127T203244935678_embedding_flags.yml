active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+gmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMzH0AwMzMzMzPzv5iZmZmZmQnAMDMzMzMz87+YmZmZmZkBwA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT8wMzMzMzPzP9DMzMzMzPy/MDMzMzMz8z+gmZmZmZnpvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJP4CZmZmZmem/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T+amZmZmZkRQDAzMzMzM+O/zMzMzMzMDMAwMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mpmZmZmZAUCgmZmZmZnJP8zMzMzMzPy/zczMzMzMEEAzMzMzMzMTwA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZyb8AmZmZmZnJv5CZmZmZmQnAwJmZmZmZ6T9wZmZmZmYGQA==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 20:34:07.349742
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding
  params:
    memory: estimators_cache
hash: 3a4ffc7b974c9e8625b17763cfbd5d58fa60ba157e511b86d16af65bd901aebf
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/3a4ffc7_20231127T203244935678_embedding_flags.yml
results:
  fit_time:
  - 41.359562158584595
  - 40.39415669441223
  - 41.60449814796448
  - 42.969541788101196
  - 41.819427490234375
  score_time:
  - 39.974475383758545
  - 39.65995955467224
  - 40.29333567619324
  - 33.0351824760437
  - 36.181870460510254
  test_average_precision_macro:
  - 0.5989440451819954
  - 0.6207074913051561
  - 0.7354235643115404
  - 0.7152193538296255
  - 0.7098915883846962
  test_average_precision_micro:
  - 0.711890289167443
  - 0.7108901458457946
  - 0.7759816992982551
  - 0.7598592643800928
  - 0.7806697148637807
  test_average_precision_samples:
  - 0.7687647537647536
  - 0.8032936507936509
  - 0.8170039682539683
  - 0.8241614452798662
  - 0.8217945326278658
  test_average_precision_weighted:
  - 0.6835903739261209
  - 0.6881802576841507
  - 0.781946145350899
  - 0.7631684819013135
  - 0.7594567245927698
  test_coverage_error:
  - -4.512820512820513
  - -4.538461538461538
  - -4.761904761904762
  - -4.7368421052631575
  - -5.416666666666667
  test_f1_macro:
  - 0.08800443254224767
  - 0.018740399385560675
  - 0.018145161290322582
  - 0.03463203463203463
  - 0.07936507936507937
  test_f1_micro:
  - 0.13740458015267176
  - 0.03125
  - 0.028169014084507043
  - 0.059259259259259255
  - 0.13071895424836602
  test_f1_samples:
  - 0.08803418803418801
  - 0.020512820512820513
  - 0.0163265306122449
  - 0.05175438596491228
  - 0.125
  test_f1_weighted:
  - 0.12946024563671624
  - 0.030704898446833932
  - 0.027664170506912444
  - 0.05366643534582465
  - 0.11820330969267137
  test_hamming_loss:
  - -0.4139194139194139
  - -0.4542124542124542
  - -0.46938775510204084
  - -0.4774436090225564
  - -0.5277777777777778
  test_jaccard_macro:
  - 0.04953917050691244
  - 0.009688013136289
  - 0.009370199692780337
  - 0.019704433497536946
  - 0.04608294930875576
  test_jaccard_micro:
  - 0.07377049180327869
  - 0.015873015873015872
  - 0.014285714285714285
  - 0.030534351145038167
  - 0.06993006993006994
  test_jaccard_samples:
  - 0.059829059829059825
  - 0.017094017094017092
  - 0.00992063492063492
  - 0.03508771929824561
  - 0.08657407407407407
  test_jaccard_weighted:
  - 0.07338709677419356
  - 0.015873015873015872
  - 0.014285714285714285
  - 0.030534351145038167
  - 0.06863417982155114
  test_label_ranking_average_precision_score:
  - 0.7687647537647537
  - 0.8032936507936507
  - 0.8170039682539683
  - 0.8241614452798661
  - 0.8217945326278658
  test_label_ranking_loss:
  - 0.21923076923076926
  - 0.22350427350427352
  - 0.20634920634920634
  - 0.19473684210526318
  - 0.2310185185185185
  test_matthews_corrcoef_macro:
  - 0.04675264093560753
  - 0.026301718598608196
  - 0.027400439528191805
  - 0.027296989512792084
  - 0.006855689995686817
  test_matthews_corrcoef_micro:
  - 0.15630653581149756
  - 0.09279054963120441
  - 0.08680003787638843
  - 0.12543264675690827
  - 0.12332838579096718
  test_matthews_corrcoef_samples:
  - 0.06075156199574421
  - 0.018725557521544138
  - 0.012386191839522392
  - 0.04800022437751269
  - 0.09967781678292485
  test_matthews_corrcoef_weighted:
  - 0.04636818236415071
  - 0.04308016831096292
  - 0.04176516012823331
  - 0.042299915046540404
  - 0.012158054711246202
  test_ndgc:
  - 0.8541642231820246
  - 0.8812534089425897
  - 0.8918500950465202
  - 0.8979686558404663
  - 0.8964316364006463
  test_precision_macro:
  - 0.37142857142857144
  - 0.2857142857142857
  - 0.2857142857142857
  - 0.14285714285714285
  - 0.2448979591836735
  test_precision_micro:
  - 0.8181818181818182
  - 1.0
  - 1.0
  - 1.0
  - 0.8333333333333334
  test_precision_samples:
  - 0.1794871794871795
  - 0.02564102564102564
  - 0.047619047619047616
  - 0.10526315789473684
  - 0.2361111111111111
  test_precision_weighted:
  - 0.495
  - 0.46825396825396826
  - 0.4357142857142857
  - 0.22137404580152673
  - 0.3667679837892604
  test_recall_macro:
  - 0.050492610837438424
  - 0.009688013136289
  - 0.009370199692780337
  - 0.019704433497536946
  - 0.04767201652629906
  test_recall_micro:
  - 0.075
  - 0.015873015873015872
  - 0.014285714285714285
  - 0.030534351145038167
  - 0.07092198581560284
  test_recall_samples:
  - 0.059829059829059825
  - 0.017094017094017092
  - 0.00992063492063492
  - 0.03508771929824561
  - 0.08888888888888888
  test_recall_weighted:
  - 0.075
  - 0.015873015873015872
  - 0.014285714285714285
  - 0.030534351145038167
  - 0.07092198581560284
  test_roc_auc_macro:
  - 0.6171553678942842
  - 0.6292894169161917
  - 0.7421442316745027
  - 0.6818476696714422
  - 0.596807683428864
  test_roc_auc_micro:
  - 0.7785947712418301
  - 0.7860922146636432
  - 0.7979128014842302
  - 0.7938931297709924
  - 0.7595680787170149
  test_roc_auc_samples:
  - 0.7807692307692308
  - 0.7764957264957265
  - 0.7936507936507935
  - .nan
  - .nan
  test_roc_auc_weighted:
  - 0.5569722678343367
  - 0.5816986053680732
  - 0.7247382739945801
  - 0.6183370329082049
  - 0.5612320345486802
start: 2023-11-27 20:32:44.935678
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
