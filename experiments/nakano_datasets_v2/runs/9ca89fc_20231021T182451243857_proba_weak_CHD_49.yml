active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/gDMzMzMz4z8AmZmZmZnZvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+gmZmZmZnJP6CZmZmZmck/oJmZmZmZyT+YmZmZmZnpvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AAAAAAAAEEAAAAAAAADwvwAAAAAAAAAAAAAAAAAA8D8AAAAAAAAQwA==
      n_labels: 6
      n_samples: 555
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: CHD_49
  params:
    path: nakano_datasets_v2/datasets/MLC/CHD_49.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 18:26:15.174768
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - rf
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.RandomForestRegressor
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        - - xt
          - call: deep_forest.estimator_adapters.EstimatorAsTransformer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesRegressor
                params:
                  bootstrap: false
                  ccp_alpha: 0.0
                  criterion: squared_error
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: null
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: false
                  random_state: 0
                  verbose: true
                  warm_start: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: proba_weak
  params:
    memory: estimators_cache
hash: 9ca89fc61f1908487cec55ecd56a5313477a5d8035f76a5c7532811ee99e312b
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/9ca89fc_20231021T182451243857_proba_weak_CHD_49.yml
results:
  fit_time:
  - 43.610379695892334
  - 50.643948793411255
  - 46.546010971069336
  - 45.30463719367981
  - 45.66609859466553
  score_time:
  - 12.0025634765625
  - 32.797693967819214
  - 23.220532417297363
  - 15.255132675170898
  - 20.404126405715942
  test_average_precision_macro:
  - 0.5394246552184746
  - 0.51943133083092
  - 0.4952473500934213
  - 0.537359415540226
  - 0.49258283911384276
  test_average_precision_micro:
  - 0.6787936742904477
  - 0.6447037297591285
  - 0.629133021530239
  - 0.6640010160059449
  - 0.6233541602793373
  test_average_precision_samples:
  - 0.7913032191069573
  - 0.758345734126984
  - 0.7535785785785786
  - 0.7833585858585858
  - 0.7391425120772946
  test_average_precision_weighted:
  - 0.6653197378765716
  - 0.6416243784343784
  - 0.6233624167040266
  - 0.666799874022014
  - 0.6191089139517526
  test_coverage_error:
  - -3.7570093457943927
  - -3.955357142857143
  - -3.936936936936937
  - -3.6272727272727274
  - -4.026086956521739
  test_f1_macro:
  - 0.5107406630542299
  - 0.5241953114029138
  - 0.4871759648335225
  - 0.5052385964621416
  - 0.4941075694315466
  test_f1_micro:
  - 0.6643109540636041
  - 0.662295081967213
  - 0.6266666666666666
  - 0.6440071556350625
  - 0.6472491909385112
  test_f1_samples:
  - 0.6405503634475598
  - 0.6378826530612246
  - 0.5967824967824967
  - 0.5915584415584415
  - 0.6140165631469982
  test_f1_weighted:
  - 0.6514120491475714
  - 0.6543271924007417
  - 0.6255941778550758
  - 0.634721826426246
  - 0.6335895277373267
  test_hamming_loss:
  - -0.29595015576323985
  - -0.30654761904761907
  - -0.33633633633633636
  - -0.3015151515151515
  - -0.3159420289855073
  test_jaccard_macro:
  - 0.3828068521820138
  - 0.391895522011598
  - 0.3595359573844276
  - 0.37221949527474535
  - 0.36736057326156274
  test_jaccard_micro:
  - 0.4973544973544973
  - 0.4950980392156863
  - 0.4563106796116505
  - 0.47493403693931396
  - 0.4784688995215311
  test_jaccard_samples:
  - 0.5345794392523365
  - 0.5293154761904761
  - 0.4821321321321322
  - 0.4962121212121212
  - 0.513913043478261
  test_jaccard_weighted:
  - 0.5039868250333941
  - 0.5117011205360128
  - 0.4773776195147793
  - 0.4785872460149825
  - 0.487293299376202
  test_label_ranking_average_precision_score:
  - 0.8099948078920041
  - 0.7583457341269841
  - 0.7535785785785789
  - 0.7924494949494948
  - 0.7391425120772948
  test_label_ranking_loss:
  - 0.21492731048805816
  - 0.2721726190476191
  - 0.27214714714714716
  - 0.2290151515151515
  - 0.2907004830917875
  test_matthews_corrcoef_macro:
  - 0.14317380259568896
  - 0.1567128178566534
  - 0.08221930872636317
  - 0.1442607090622658
  - 0.10689286980132028
  test_matthews_corrcoef_micro:
  - 0.39981200825713875
  - 0.38613298170633836
  - 0.3227014573862983
  - 0.3829077043892383
  - 0.3663083191510904
  test_matthews_corrcoef_samples:
  - 0.42083609441957553
  - 0.4034138759628391
  - 0.35115666639807575
  - 0.3914654875850692
  - 0.37217468960813777
  test_matthews_corrcoef_weighted:
  - 0.15694265705730848
  - 0.15152241201499278
  - 0.09417041071843263
  - 0.13863392530827545
  - 0.1183108666049993
  test_ndgc:
  - 0.8585425301219917
  - 0.8401443437419905
  - 0.8330102635908765
  - 0.8474467566651217
  - 0.823155919168128
  test_precision_macro:
  - 0.5206149385029623
  - 0.5136962390988314
  - 0.48175112130386966
  - 0.5176530842533992
  - 0.4703020031511358
  test_precision_micro:
  - 0.6714285714285714
  - 0.6234567901234568
  - 0.6006389776357828
  - 0.656934306569343
  - 0.6060606060606061
  test_precision_samples:
  - 0.674454828660436
  - 0.6376488095238094
  - 0.6043543543543545
  - 0.6333333333333334
  - 0.613768115942029
  test_precision_weighted:
  - 0.6507976520467673
  - 0.6263805789721253
  - 0.604434273328058
  - 0.6425278344302578
  - 0.5899088498309508
  test_recall_macro:
  - 0.5059939168437375
  - 0.5838776610541833
  - 0.49959159374344053
  - 0.4979487483218827
  - 0.5310372810818053
  test_recall_micro:
  - 0.6573426573426573
  - 0.7062937062937062
  - 0.6550522648083623
  - 0.631578947368421
  - 0.6944444444444444
  test_recall_samples:
  - 0.6624610591900312
  - 0.7001488095238094
  - 0.6621621621621622
  - 0.6212121212121212
  - 0.658695652173913
  test_recall_weighted:
  - 0.6573426573426573
  - 0.7062937062937062
  - 0.6550522648083623
  - 0.631578947368421
  - 0.6944444444444444
  test_roc_auc_macro:
  - 0.535333181464714
  - 0.5930338883341454
  - 0.5618000399912145
  - 0.5863581055404818
  - 0.5329598851036124
  test_roc_auc_micro:
  - 0.7604207590162647
  - 0.7312583789267728
  - 0.7103417208314564
  - 0.7561263157894738
  - 0.714785447761194
  test_roc_auc_samples:
  - .nan
  - 0.7278273809523811
  - 0.727852852852853
  - .nan
  - 0.7092995169082127
  test_roc_auc_weighted:
  - 0.591558474413865
  - 0.5805569542822374
  - 0.5599031212396062
  - 0.6081064673023132
  - 0.5838271792260975
start: 2023-10-21 18:24:51.243857
wrapper: null
