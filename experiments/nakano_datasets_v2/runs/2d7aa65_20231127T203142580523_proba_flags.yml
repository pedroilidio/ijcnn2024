active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ6b+AmZmZmZnJP4CZmZmZmck/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMzE0AwMzMzMzPzv8zMzMzMzBTAMDMzMzMz879oZmZmZmYGQA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP6CZmZmZmem/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wMzMzMzM/L9AMzMzMzPzPwCamZmZmck/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            aGZmZmZm9j8wMzMzMzPjv8zMzMzMzAzAoJmZmZmZ2T80MzMzMzMDQA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZyT+YmZmZmZnpv8zMzMzMzPy/oJmZmZmZyT+amZmZmZkBQA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          kJmZmZmZCcDgzMzMzMz8PyAzMzMzM/O/wJmZmZmZ6T/gzMzMzMz8Pw==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 20:32:40.181458
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: proba
  params:
    memory: estimators_cache
hash: 2d7aa658c5ef5027c4933b72338f70558f75a0378b7eb519df2f127020533ce1
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/2d7aa65_20231127T203142580523_proba_flags.yml
results:
  fit_time:
  - 32.760862588882446
  - 33.27815628051758
  - 32.5192129611969
  - 34.858349323272705
  - 34.53693699836731
  score_time:
  - 21.196895360946655
  - 20.663448572158813
  - 20.659750938415527
  - 22.31095814704895
  - 22.391833782196045
  test_average_precision_macro:
  - 0.5561882636285321
  - 0.6353944970110861
  - 0.6859651556563618
  - 0.6803786660858379
  - 0.6664360961020142
  test_average_precision_micro:
  - 0.544277172488306
  - 0.6454523585319574
  - 0.741276125122448
  - 0.6789597171468278
  - 0.705912130320398
  test_average_precision_samples:
  - 0.6450160619803478
  - 0.737936507936508
  - 0.7686686507936507
  - 0.7301764828738513
  - 0.7691505791505792
  test_average_precision_weighted:
  - 0.6152103622682544
  - 0.6763181217772269
  - 0.7541979059264667
  - 0.7183078477592614
  - 0.7494230505835197
  test_coverage_error:
  - -5.190476190476191
  - -5.513513513513513
  - -5.4
  - -5.184210526315789
  - -4.945945945945946
  test_f1_macro:
  - 0.30869701726844584
  - 0.2997113339110603
  - 0.3728225197046536
  - 0.33613632744067523
  - 0.34130258974979466
  test_f1_micro:
  - 0.3715846994535519
  - 0.43478260869565216
  - 0.45685279187817257
  - 0.44565217391304346
  - 0.48863636363636365
  test_f1_samples:
  - 0.31281179138321996
  - 0.38468468468468464
  - 0.42148809523809516
  - 0.3462481962481962
  - 0.4386100386100386
  test_f1_weighted:
  - 0.3588289835164835
  - 0.3958772737531599
  - 0.4409913586015029
  - 0.42557120817990385
  - 0.46118615683833075
  test_hamming_loss:
  - -0.391156462585034
  - -0.4015444015444015
  - -0.3821428571428571
  - -0.38345864661654133
  - -0.3474903474903475
  test_jaccard_macro:
  - 0.1908290122575837
  - 0.20862560127025637
  - 0.25333985011404364
  - 0.22375350819444925
  - 0.2309998589135711
  test_jaccard_micro:
  - 0.22818791946308725
  - 0.2777777777777778
  - 0.29605263157894735
  - 0.2867132867132867
  - 0.3233082706766917
  test_jaccard_samples:
  - 0.2277777777777778
  - 0.27432432432432435
  - 0.305
  - 0.25889724310776946
  - 0.3396396396396396
  test_jaccard_weighted:
  - 0.2227076309107559
  - 0.2840475695166771
  - 0.29838538782820306
  - 0.2850376491081075
  - 0.3183058771564446
  test_label_ranking_average_precision_score:
  - 0.6450160619803478
  - 0.737936507936508
  - 0.768668650793651
  - 0.7301764828738514
  - 0.7691505791505793
  test_label_ranking_loss:
  - 0.39126984126984127
  - 0.30945945945945946
  - 0.2929166666666667
  - 0.3166666666666667
  - 0.27387387387387385
  test_matthews_corrcoef_macro:
  - 0.0905814848705414
  - 0.07907929207747484
  - 0.19852527124469804
  - 0.11736685199719601
  - 0.13597482103573036
  test_matthews_corrcoef_micro:
  - 0.1768744513226896
  - 0.2602530053366241
  - 0.3154731441470263
  - 0.2881034015548219
  - 0.34171211281345537
  test_matthews_corrcoef_samples:
  - 0.12677985879268663
  - 0.20783048359163545
  - 0.2662219008637786
  - 0.18240916060411227
  - 0.3061933172002057
  test_matthews_corrcoef_weighted:
  - 0.035082069681348346
  - 0.09521834884249347
  - 0.2362457105552251
  - 0.11393584209032157
  - 0.14999986518007744
  test_ndgc:
  - 0.7611289583405653
  - 0.8347562462470542
  - 0.8656908812283934
  - 0.8342491517183883
  - 0.8543254785087671
  test_precision_macro:
  - 0.6069741661846926
  - 0.5166666666666666
  - 0.6234765234765235
  - 0.5615646258503401
  - 0.583000333000333
  test_precision_micro:
  - 0.6181818181818182
  - 0.7692307692307693
  - 0.8333333333333334
  - 0.7884615384615384
  - 0.8113207547169812
  test_precision_samples:
  - 0.4722222222222222
  - 0.6396396396396395
  - 0.7083333333333333
  - 0.5385964912280702
  - 0.6531531531531531
  test_precision_weighted:
  - 0.6578420209176788
  - 0.6396464646464647
  - 0.7503007482028461
  - 0.6944534632034632
  - 0.7472947107093448
  test_recall_macro:
  - 0.2286334114857035
  - 0.22358276643990932
  - 0.26782235529498566
  - 0.24316638038233465
  - 0.25288000257574295
  test_recall_micro:
  - 0.265625
  - 0.30303030303030304
  - 0.3146853146853147
  - 0.3106060606060606
  - 0.34959349593495936
  test_recall_samples:
  - 0.24365079365079362
  - 0.28513513513513516
  - 0.3160119047619047
  - 0.2741228070175438
  - 0.3554054054054054
  test_recall_weighted:
  - 0.265625
  - 0.30303030303030304
  - 0.3146853146853147
  - 0.3106060606060606
  - 0.34959349593495936
  test_roc_auc_macro:
  - 0.5775740899756671
  - 0.5689761467411237
  - 0.6896521314116136
  - 0.6366371758532516
  - 0.6924625022422762
  test_roc_auc_micro:
  - 0.6369540662650602
  - 0.6615068002863279
  - 0.7156347302332704
  - 0.7128561736770692
  - 0.7577714012434241
  test_roc_auc_samples:
  - 0.6087301587301587
  - 0.6905405405405407
  - .nan
  - 0.6833333333333335
  - 0.7261261261261261
  test_roc_auc_weighted:
  - 0.530931743100561
  - 0.5364666322327611
  - 0.6934940739136543
  - 0.5943368945374292
  - 0.6498366209393767
start: 2023-11-27 20:31:42.580523
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
