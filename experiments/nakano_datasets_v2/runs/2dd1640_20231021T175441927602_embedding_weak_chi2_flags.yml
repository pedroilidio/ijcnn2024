active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyT+AmZmZmZnJP6CZmZmZmem/gJmZmZmZyT+AmZmZmZnJPw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzM/D+YmZmZmZkJwNDMzMzMzPw/MDMzMzMz87+gmZmZmZnpPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz8z+AmZmZmZnJP4CZmZmZmck/aGZmZmZmBsAwMzMzMzPzPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz8z9gZmZmZmYGwEAzMzMzM/M/AJqZmZmZyT8AmpmZmZnJPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMzA0AwMzMzMzPjvzAzMzMzM+O/oJmZmZmZ2T+YmZmZmZn5vw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz8z9mZmZmZmYGwJiZmZmZmem/mpmZmZmZCUCYmZmZmZnpvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          4MzMzMzM/D/AmZmZmZnpP5CZmZmZmQHAkJmZmZmZAcDgzMzMzMz8Pw==
      n_labels: 7
      n_samples: 194
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: flags
  params:
    path: nakano_datasets_v2/datasets/MLC/flags.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 17:56:30.120239
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_pvalue
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler:
      call: deep_forest.weak_labels.PositiveUnlabeledImputer
      params:
        estimator:
          call: sklearn.ensemble._forest.ExtraTreesClassifier
          params:
            bootstrap: true
            ccp_alpha: 0.0
            class_weight: null
            criterion: gini
            max_depth: null
            max_features: sqrt
            max_leaf_nodes: null
            max_samples: 0.9
            min_impurity_decrease: 0.0
            min_samples_leaf: 5
            min_samples_split: 2
            min_weight_fraction_leaf: 0.0
            n_estimators: 150
            n_jobs: 14
            oob_score: true
            random_state: 0
            verbose: true
            warm_start: false
        sampling_strategy: auto
        threshold: 0.8
        use_oob_proba: true
        verbose: true
        weight_proba: true
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: embedding_weak_chi2
  params:
    memory: estimators_cache
hash: 2dd1640f19e91e3a791f80a8eacc8344f7f3439788ff568e8cd3a6099140f4df
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/2dd1640_20231021T175441927602_embedding_weak_chi2_flags.yml
results:
  fit_time:
  - 58.64225935935974
  - 60.62257218360901
  - 58.54115009307861
  - 60.00492739677429
  - 61.631731033325195
  score_time:
  - 46.47317314147949
  - 42.004541873931885
  - 38.57974600791931
  - 38.827982664108276
  - 46.04231643676758
  test_average_precision_macro:
  - 0.7905241440595132
  - 0.7823234839001517
  - 0.7284939659514477
  - 0.6524653147853113
  - 0.738743931660835
  test_average_precision_micro:
  - 0.8222720760935012
  - 0.8368975651092277
  - 0.7125379381326233
  - 0.7452661867818806
  - 0.8007758447938677
  test_average_precision_samples:
  - 0.8447232947232945
  - 0.8669841269841269
  - 0.7936885404568331
  - 0.8018534649632211
  - 0.8416119691119691
  test_average_precision_weighted:
  - 0.8519755396822816
  - 0.8196228316659898
  - 0.7449325707875459
  - 0.7342119841110132
  - 0.7943124645602058
  test_coverage_error:
  - -4.513513513513513
  - -4.894736842105263
  - -4.585365853658536
  - -4.560975609756097
  - -4.756756756756757
  test_f1_macro:
  - 0.6173952474215862
  - 0.6355277459771431
  - 0.5711653586274416
  - 0.5101757369614511
  - 0.623905443745269
  test_f1_micro:
  - 0.7874015748031497
  - 0.7681159420289855
  - 0.7286245353159851
  - 0.6943396226415094
  - 0.7622641509433962
  test_f1_samples:
  - 0.7692387192387193
  - 0.7518680150259097
  - 0.7093971069580826
  - 0.6588639003273149
  - 0.7376990876990878
  test_f1_weighted:
  - 0.7515379571783348
  - 0.7270368855883357
  - 0.6798091560172929
  - 0.6554277898027898
  - 0.7184738112723396
  test_hamming_loss:
  - -0.2084942084942085
  - -0.24060150375939848
  - -0.25435540069686413
  - -0.28222996515679444
  - -0.24324324324324326
  test_jaccard_macro:
  - 0.5107862965005823
  - 0.5196081897533803
  - 0.4546472691071994
  - 0.3941143022703245
  - 0.5111900720596373
  test_jaccard_micro:
  - 0.6493506493506493
  - 0.6235294117647059
  - 0.5730994152046783
  - 0.5317919075144508
  - 0.6158536585365854
  test_jaccard_samples:
  - 0.6711068211068212
  - 0.6441729323308271
  - 0.5933797909407664
  - 0.5345528455284553
  - 0.6324967824967825
  test_jaccard_weighted:
  - 0.640386030629933
  - 0.6149047918268291
  - 0.5562303085110757
  - 0.5210554138549974
  - 0.6078612133540775
  test_label_ranking_average_precision_score:
  - 0.8447232947232944
  - 0.8669841269841271
  - 0.7936885404568331
  - 0.8018534649632211
  - 0.8416119691119692
  test_label_ranking_loss:
  - 0.1761261261261261
  - 0.18991228070175442
  - 0.21788617886178863
  - 0.19593495934959348
  - 0.18468468468468469
  test_matthews_corrcoef_macro:
  - 0.2805711349884469
  - 0.24406044341252603
  - 0.23470541573010323
  - 0.12604920989124485
  - 0.2420263834892647
  test_matthews_corrcoef_micro:
  - 0.5843686994490349
  - 0.5188905820315943
  - 0.4901725671263202
  - 0.4322212533528857
  - 0.5134555308086921
  test_matthews_corrcoef_samples:
  - 0.5558978384807424
  - 0.47576041059952934
  - 0.46817233617501436
  - 0.4123247443004083
  - 0.4360323337404516
  test_matthews_corrcoef_weighted:
  - 0.2581200497202515
  - 0.1866783412858781
  - 0.20963048221190694
  - 0.12110055508245161
  - 0.201110220647248
  test_ndgc:
  - 0.9077945752309791
  - 0.926761450082019
  - 0.8730855716758382
  - 0.8833227293832148
  - 0.9049472201760532
  test_precision_macro:
  - 0.6127369252369252
  - 0.6866272824919442
  - 0.5875076860012298
  - 0.5646378285238708
  - 0.6093829218829219
  test_precision_micro:
  - 0.7633587786259542
  - 0.7851851851851852
  - 0.7101449275362319
  - 0.6917293233082706
  - 0.753731343283582
  test_precision_samples:
  - 0.7486486486486487
  - 0.7728070175438596
  - 0.697560975609756
  - 0.6581300813008131
  - 0.7378378378378379
  test_precision_weighted:
  - 0.7229787991983113
  - 0.7268170426065164
  - 0.6527330872769885
  - 0.672576488769263
  - 0.679064604160024
  test_recall_macro:
  - 0.6514939309056957
  - 0.6308661145617668
  - 0.605263157894737
  - 0.5233560090702948
  - 0.6510147918816649
  test_recall_micro:
  - 0.8130081300813008
  - 0.75177304964539
  - 0.7480916030534351
  - 0.696969696969697
  - 0.7709923664122137
  test_recall_samples:
  - 0.8076576576576577
  - 0.7414160401002505
  - 0.7386178861788617
  - 0.6813008130081301
  - 0.7501930501930502
  test_recall_weighted:
  - 0.8130081300813008
  - 0.75177304964539
  - 0.7480916030534351
  - 0.696969696969697
  - 0.7709923664122137
  test_roc_auc_macro:
  - 0.7882866587761431
  - 0.7393380059817147
  - 0.705936541439394
  - 0.6918058319467063
  - 0.7224004782132589
  test_roc_auc_micro:
  - 0.8478598756575801
  - 0.8350070921985816
  - 0.7879722059111371
  - 0.7936461388074292
  - 0.8190004770992367
  test_roc_auc_samples:
  - 0.8238738738738738
  - .nan
  - 0.7821138211382113
  - 0.8040650406504065
  - .nan
  test_roc_auc_weighted:
  - 0.7585633287881971
  - 0.7141862734061316
  - 0.6608984222990198
  - 0.651509089710352
  - 0.6896273670715407
start: 2023-10-21 17:54:41.927602
wrapper: null
