active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            ADMzMzMz478AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZyb+AmZmZmZnJv6CZmZmZmek/gJmZmZmZyb+AmZmZmZnJvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            MDMzMzMz47+gmZmZmZnZPzAzMzMzM+O/oJmZmZmZ2T+gmZmZmZnZPw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ2T8wMzMzMzPjv6CZmZmZmdk/oJmZmZmZ2T8wMzMzMzPjvw==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z9mZmZmZmb2vzQzMzMzM+M/mJmZmZmZ2b80MzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJmZmZmZ+b+AMzMzMzMLQIDMzMzMzATAADIzMzMz478AZ2ZmZmb2Pw==
      n_labels: 8
      n_samples: 1392
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_negative
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_negative.csv
directory: nakano_datasets_v2/runs
end: 2023-10-21 18:59:49.884928
estimator:
  call: nakano_datasets_v2.estimators.cascade_tree_embedder_pvalue
  final_params:
    final_estimator:
      call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
      params:
        estimators:
        - - rf
          - call: sklearn.ensemble._forest.RandomForestClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
        - - xt
          - call: sklearn.ensemble._forest.ExtraTreesClassifier
            params:
              bootstrap: true
              ccp_alpha: 0.0
              class_weight: null
              criterion: gini
              max_depth: null
              max_features: sqrt
              max_leaf_nodes: null
              max_samples: 0.9
              min_impurity_decrease: 0.0
              min_samples_leaf: 5
              min_samples_split: 2
              min_weight_fraction_leaf: 0.0
              n_estimators: 150
              n_jobs: 14
              oob_score: true
              random_state: 0
              verbose: true
              warm_start: false
    inter_level_sampler: null
    keep_original_features: true
    level:
      call: deep_forest.cascade.AlternatingLevel
      params:
        last_output_indices: null
        n_jobs: null
        sparse_threshold: 0.3
        transformer_weights: null
        transformers:
        - - xt_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - xt
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.8
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        - - rf_embedder
          - call: sklearn.pipeline.Pipeline
            params:
              memory: null
              steps:
              - - rf
                - call: deep_forest.tree_embedder.ForestEmbedder
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: 0.5
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
                    max_node_size: 0.95
                    max_pvalue: 0.05
                    method: path
                    node_weights: log_node_size
              - - densifier
                - call: nakano_datasets_v2.estimators.Densifier
                  params: {}
              - - pca
                - call: sklearn.decomposition._pca.PCA
                  params:
                    copy: true
                    iterated_power: auto
                    n_components: 0.8
                    n_oversamples: 10
                    power_iteration_normalizer: auto
                    random_state: 0
                    svd_solver: auto
                    tol: 0.0
                    whiten: false
              verbose: false
        verbose: false
        verbose_feature_names_out: true
    max_levels: 10
    max_unimproving_levels: null
    memory: estimators_cache
    min_improvement: null
    min_levels: 1
    min_relative_improvement: null
    min_score: 0.0
    random_state: 0
    refit: true
    scoring:
      load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
    trim_to_best_score: true
    validation_size: train
    verbose: 10
  name: embedding_chi2
  params:
    memory: estimators_cache
hash: 6ccb269ba420e035f34c5a890c95ea937731c0e7540cc1ffffd07c11108b14ef
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/6ccb269_20231021T185535386036_embedding_chi2_Gram_negative.yml
results:
  fit_time:
  - 155.09232473373413
  - 161.06459164619446
  - 151.0443606376648
  - 4.585626125335693
  - 149.62383460998535
  score_time:
  - 71.58677530288696
  - 90.72909998893738
  - 88.75567197799683
  - 0.0
  - 99.19213938713074
  test_average_precision_macro:
  - 0.8674167354436364
  - 0.9042171055050681
  - 0.9012932972776777
  - .nan
  - 0.9200909302056095
  test_average_precision_micro:
  - 0.985178043254993
  - 0.976943712284107
  - 0.96812687837563
  - .nan
  - 0.9744702828491303
  test_average_precision_samples:
  - 0.9783928571428571
  - 0.9729090909090907
  - 0.9665226232841891
  - .nan
  - 0.9696750902527077
  test_average_precision_weighted:
  - 0.9835107648257225
  - 0.9819870661342097
  - 0.9667541746965008
  - .nan
  - 0.9766298308371609
  test_coverage_error:
  - -1.1142857142857143
  - -1.1890909090909092
  - -1.1494661921708185
  - .nan
  - -1.1552346570397112
  test_f1_macro:
  - 0.6807599776327664
  - 0.6583481497001761
  - 0.6715870172693401
  - .nan
  - 0.696839156232607
  test_f1_micro:
  - 0.9330922242314647
  - 0.9166666666666666
  - 0.9214285714285715
  - .nan
  - 0.9338103756708408
  test_f1_samples:
  - 0.9095238095238096
  - 0.9042424242424243
  - 0.9074733096085409
  - .nan
  - 0.9265944645006016
  test_f1_weighted:
  - 0.9273389599309887
  - 0.904591592813291
  - 0.913695898448938
  - .nan
  - 0.9272720335981556
  test_hamming_loss:
  - -0.016517857142857143
  - -0.02090909090909091
  - -0.019572953736654804
  - .nan
  - -0.016696750902527077
  test_jaccard_macro:
  - 0.6253138900594652
  - 0.592448584751492
  - 0.6135076074470622
  - .nan
  - 0.6510897429937678
  test_jaccard_micro:
  - 0.8745762711864407
  - 0.8461538461538461
  - 0.8543046357615894
  - .nan
  - 0.8758389261744967
  test_jaccard_samples:
  - 0.9035714285714286
  - 0.8963636363636364
  - 0.902135231316726
  - .nan
  - 0.9187725631768953
  test_jaccard_weighted:
  - 0.8742849061069452
  - 0.8455582784068116
  - 0.8538202174901566
  - .nan
  - 0.8754528746746105
  test_label_ranking_average_precision_score:
  - 0.9783928571428571
  - 0.9729090909090907
  - 0.9665226232841889
  - .nan
  - 0.9696750902527077
  test_label_ranking_loss:
  - 0.008503401360544217
  - 0.01354978354978355
  - 0.01592950347398746
  - .nan
  - 0.01332301873818119
  test_matthews_corrcoef_macro:
  - 0.6748711390898449
  - 0.6528387356454369
  - 0.6632079424109854
  - .nan
  - 0.6880939344781299
  test_matthews_corrcoef_micro:
  - 0.9255970746774823
  - 0.907014146167267
  - 0.9110241340682519
  - .nan
  - 0.925127382136284
  test_matthews_corrcoef_samples:
  - 0.9075641617089584
  - 0.9005576540438577
  - 0.9014962792346733
  - .nan
  - 0.9229362991410138
  test_matthews_corrcoef_weighted:
  - 0.912736352773464
  - 0.8889311281802598
  - 0.8944619908161567
  - .nan
  - 0.9075978221868952
  test_ndgc:
  - 0.9846809452302966
  - 0.981435346812161
  - 0.9751952147928704
  - .nan
  - 0.9783585937725761
  test_precision_macro:
  - 0.745553118908382
  - 0.7364935839200545
  - 0.7211017094789025
  - .nan
  - 0.7327728439860793
  test_precision_micro:
  - 0.9885057471264368
  - 0.9768339768339769
  - 0.9555555555555556
  - .nan
  - 0.9702602230483272
  test_precision_samples:
  - 0.9214285714285714
  - 0.92
  - 0.9163701067615658
  - .nan
  - 0.9386281588447654
  test_precision_weighted:
  - 0.9787844802264413
  - 0.9571911875164234
  - 0.9454057237602307
  - .nan
  - 0.9571713952038496
  test_recall_macro:
  - 0.629056531487934
  - 0.6010965538709441
  - 0.6338208308482698
  - .nan
  - 0.6653750443689468
  test_recall_micro:
  - 0.8835616438356164
  - 0.863481228668942
  - 0.8896551724137931
  - .nan
  - 0.9
  test_recall_samples:
  - 0.9035714285714286
  - 0.8963636363636364
  - 0.9039145907473309
  - .nan
  - 0.9223826714801444
  test_recall_weighted:
  - 0.8835616438356164
  - 0.863481228668942
  - 0.8896551724137931
  - .nan
  - 0.9
  test_roc_auc_macro:
  - 0.9908372503842181
  - 0.9833439939451838
  - 0.9893422966074098
  - .nan
  - 0.9926848539687622
  test_roc_auc_micro:
  - 0.9951363885685354
  - 0.9913986731119945
  - 0.9915677503434186
  - .nan
  - 0.9931365703441114
  test_roc_auc_samples:
  - 0.9914965986394559
  - 0.9864502164502165
  - 0.9840704965260125
  - .nan
  - 0.9866769812618189
  test_roc_auc_weighted:
  - 0.9934891759030179
  - 0.994808697451445
  - 0.988220990429649
  - .nan
  - 0.9888699790054511
start: 2023-10-21 18:55:35.386036
wrapper: null
