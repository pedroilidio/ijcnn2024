active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            YGZmZmZmFsCAZmZmZmb2P4BmZmZmZvY/gGZmZmZm9j+AZmZmZmb2Pw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADQzMzMz4z8AmJmZmZnZvwA0MzMzM+M/AJiZmZmZ2b8AmJmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwA0MzMzM+M/AJiZmZmZ2b8AmJmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/ADMzMzMz478AmpmZmZnZPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gGZmZmZm9j9gZmZmZmYawEAzMzMzMwNAgGZmZmZm9j+AZmZmZmb2Pw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            YGZmZmZmEsBgZmZmZmYewNDMzMzMzCRAYGZmZmZmFsCgmZmZmZkdQA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gDMzMzMz4z8AmZmZmZnZvwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZGcCAmZmZmZnZvzAzMzMzMwPANDMzMzMzJ0AwMzMzMzMDwA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b9AMzMzMzPjP0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz8784MzMzMzMXQHBmZmZmZgZAZGZmZmZmJMBwZmZmZmYGQA==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AoJmZmZnJPwCYmZmZmem/AKCZmZmZyT8AoJmZmZnJPw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            ADMzMzMz878AmpmZmZnpP4BmZmZmZgZAADMzMzMz878AMzMzMzPzvw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzM/D/QzMzMzMz8P8zMzMzMzBDAMDMzMzMz87/QzMzMzMz8Pw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          ADIzMzMz478AZ2ZmZmb2P0BmZmZmZhbAwJmZmZmZHUCAzMzMzMwEwA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_v2/runs
end: 2023-11-28 07:57:00.904040
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler:
            call: deep_forest.weak_labels.PositiveUnlabeledImputer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesClassifier
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  class_weight: null
                  criterion: gini
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: 0.9
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: true
                  random_state: 0
                  verbose: true
                  warm_start: false
              sampling_strategy: auto
              threshold: 0.8
              use_oob_proba: true
              verbose: true
              weight_proba: true
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: proba_weak
  params:
    memory: estimators_cache
hash: 8b6b3274982dc43091f0d13519153097cb1d640242d06eaa7f58cd2eb3b378f9
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/8b6b327_20231128T075554755236_proba_weak_yeast.yml
results:
  fit_time:
  - 50.148271322250366
  - 49.88014221191406
  - 49.895355463027954
  - 49.908894300460815
  - 50.160351276397705
  score_time:
  - 12.231040954589844
  - 10.785212516784668
  - 10.806101083755493
  - 10.757370948791504
  - 12.226228952407837
  test_average_precision_macro:
  - 0.49886181164796684
  - 0.5531587174964294
  - 0.4948784715941333
  - 0.5253116773970704
  - 0.5028572023387768
  test_average_precision_micro:
  - 0.7080017985330007
  - 0.7280038952514168
  - 0.7015253476207887
  - 0.7301178750500392
  - 0.7065447443176951
  test_average_precision_samples:
  - 0.7577087770088802
  - 0.7761517810084052
  - 0.7489708262887248
  - 0.7805128733491954
  - 0.7643145435030445
  test_average_precision_weighted:
  - 0.6604344251806834
  - 0.6911189498918846
  - 0.6576222919369784
  - 0.6884409367474614
  - 0.663376159173833
  test_coverage_error:
  - -7.264462809917355
  - -7.008298755186722
  - -7.331288343558282
  - -7.218487394957983
  - -7.1646090534979425
  test_f1_macro:
  - 0.11576853039688949
  - 0.12919681590551463
  - 0.13153688186373197
  - 0.13463969963270433
  - 0.11884829281341051
  test_f1_micro:
  - 0.19430051813471502
  - 0.20526088831392839
  - 0.20017482517482518
  - 0.21514629948364888
  - 0.20026121027427077
  test_f1_samples:
  - 0.15548668503213958
  - 0.16544221108536458
  - 0.15484851435771682
  - 0.17518840869681201
  - 0.16121200473052325
  test_f1_weighted:
  - 0.18644539663005522
  - 0.19937528392237527
  - 0.19483328215614765
  - 0.20887628268195726
  - 0.19182572145697227
  test_hamming_loss:
  - -0.27538370720188904
  - -0.27311796087729695
  - -0.26730937773882557
  - -0.2737094837935174
  - -0.2699882422104644
  test_jaccard_macro:
  - 0.06580868100858399
  - 0.0734371329776385
  - 0.07430080453107858
  - 0.07696192692684896
  - 0.06789316273020689
  test_jaccard_micro:
  - 0.10760401721664276
  - 0.11436809226333494
  - 0.11121903836813987
  - 0.12054001928640308
  - 0.11127237542331882
  test_jaccard_samples:
  - 0.1130780204643841
  - 0.12033524336428901
  - 0.1162674067582043
  - 0.12870648259303719
  - 0.11711263131016217
  test_jaccard_weighted:
  - 0.10700692924314369
  - 0.11396328014674915
  - 0.11093983556823071
  - 0.12019972063881997
  - 0.11067367917614976
  test_label_ranking_average_precision_score:
  - 0.7577087770088798
  - 0.7761517810084048
  - 0.7489708262887241
  - 0.780512873349195
  - 0.7643145435030444
  test_label_ranking_loss:
  - 0.1638344302784976
  - 0.15377483076430912
  - 0.17629472282189199
  - 0.15866554580540174
  - 0.16266283238285
  test_matthews_corrcoef_macro:
  - 0.11571906995786356
  - 0.13648252160564686
  - 0.1459626923646817
  - 0.13710202675217714
  - 0.12008748598324369
  test_matthews_corrcoef_micro:
  - 0.2503063336856387
  - 0.2599967629486346
  - 0.2596447038632506
  - 0.27489024431560205
  - 0.25470636869675156
  test_matthews_corrcoef_samples:
  - 0.1509567506390952
  - 0.16032727201719088
  - 0.150755893406643
  - 0.17374000738755538
  - 0.15826233971593334
  test_matthews_corrcoef_weighted:
  - 0.15630285361820656
  - 0.17627844415251867
  - 0.17896729061881575
  - 0.18475173664049666
  - 0.15539357167398074
  test_ndgc:
  - 0.8532448165379434
  - 0.8654838604610061
  - 0.8492236882402022
  - 0.8681728585491518
  - 0.8591262944113544
  test_precision_macro:
  - 0.5219087708764614
  - 0.6499489158315954
  - 0.6341411503558486
  - 0.5350685802776395
  - 0.5869987219202649
  test_precision_micro:
  - 0.8893280632411067
  - 0.8947368421052632
  - 0.9015748031496063
  - 0.9259259259259259
  - 0.8846153846153846
  test_precision_samples:
  - 0.3019972451790634
  - 0.31673582295988933
  - 0.2839127471029312
  - 0.34243697478991597
  - 0.31618655692729764
  test_precision_weighted:
  - 0.7570580511718882
  - 0.8401549915561104
  - 0.8217504153663656
  - 0.7796085539447688
  - 0.7913743233575198
  test_recall_macro:
  - 0.06696703081657088
  - 0.07466759141137291
  - 0.07526194643674132
  - 0.07786338111370238
  - 0.06904704995534867
  test_recall_micro:
  - 0.10906446921958313
  - 0.11592791037506088
  - 0.11258603736479843
  - 0.12171372930866602
  - 0.11291114383897889
  test_recall_samples:
  - 0.11407664305391578
  - 0.12137258776262927
  - 0.11795208881098453
  - 0.12940676270508203
  - 0.12045380316985255
  test_recall_weighted:
  - 0.10906446921958313
  - 0.11592791037506088
  - 0.11258603736479843
  - 0.12171372930866602
  - 0.11291114383897889
  test_roc_auc_macro:
  - 0.701761975588021
  - 0.7338674494262217
  - 0.6970268285359064
  - 0.705587254282065
  - 0.7020390108518056
  test_roc_auc_micro:
  - 0.8403209982516566
  - 0.8567214813823456
  - 0.8366145231807404
  - 0.8492767933897564
  - 0.841153059010364
  test_roc_auc_samples:
  - 0.8361655697215025
  - 0.8462251692356909
  - 0.823705277178108
  - 0.8413344541945983
  - 0.83733716761715
  test_roc_auc_weighted:
  - 0.6934442115339434
  - 0.7180579949819567
  - 0.689479762909883
  - 0.7029952738281102
  - 0.6957914923358717
start: 2023-11-28 07:55:54.755236
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
