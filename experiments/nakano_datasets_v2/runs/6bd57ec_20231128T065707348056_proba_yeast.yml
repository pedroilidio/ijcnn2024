active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8ANDMzMzPjPwCYmZmZmdm/ADQzMzMz4z8AmJmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZ2b8AmJmZmZnZvwA0MzMzM+M/AJiZmZmZ2b8ANDMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AMzMzMzPjvwCamZmZmdk/AJqZmZmZ2T8AMzMzMzPjvw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZ2T8AmpmZmZnZPwCamZmZmdk/ADMzMzMz478AMzMzMzPjvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMzA0CgmZmZmZkRQMDMzMzMzATAMDMzMzMzJcCgmZmZmZkZQA==
        ? !!python/tuple
        - 6
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZ2b+AMzMzMzPjPwCZmZmZmdm/AJmZmZmZ2b+AMzMzMzPjPw==
        ? !!python/tuple
        - 7
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
        ? !!python/tuple
        - 8
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            0MzMzMzMDEAwMzMzMzMLwNDMzMzMzARAgJmZmZmZ2b8wMzMzMzMDwA==
        ? !!python/tuple
        - 9
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            oJmZmZmZ+T8wMzMzMzMDwKCZmZmZmfk/MDMzMzMzA8CgmZmZmZn5Pw==
        ? !!python/tuple
        - 10
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            IDMzMzMz87+QmZmZmZkBwHBmZmZmZg5AAJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 11
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AKCZmZmZyT8AoJmZmZnJPwCgmZmZmck/AKCZmZmZyT8AmJmZmZnpvw==
        ? !!python/tuple
        - 12
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJiZmZmZyb8AmJmZmZnJvwCamZmZmek/ADMzMzMz878AmpmZmZnpPw==
        ? !!python/tuple
        - 13
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            zMzMzMzMEMBoZmZmZmYGQGhmZmZmZg5AzMzMzMzMEMDQzMzMzMz8Pw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          QGZmZmZmGsAAMjMzMzPjv+DMzMzMzChAAGdmZmZm9j9AZmZmZmYawA==
      n_labels: 14
      n_samples: 2417
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: yeast
  params:
    path: nakano_datasets_v2/datasets/MLC/yeast.csv
directory: nakano_datasets_v2/runs
end: 2023-11-28 06:58:25.024728
estimator:
  call: nakano_datasets_v2.estimators.cascade_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler: null
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: proba
  params:
    memory: estimators_cache
hash: 6bd57ec190f954aa043d3e421d36a2ad7ced0fca0975d42a980a7a3b28f759df
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/6bd57ec_20231128T065707348056_proba_yeast.yml
results:
  fit_time:
  - 40.710692167282104
  - 41.147759675979614
  - 39.87005424499512
  - 40.368213415145874
  - 40.88787484169006
  score_time:
  - 33.13280725479126
  - 32.932079553604126
  - 35.934951305389404
  - 21.994361639022827
  - 24.379693508148193
  test_average_precision_macro:
  - 0.4407174782371092
  - 0.4649126296491632
  - 0.44830668273185387
  - 0.4716257584300704
  - 0.4443255343557608
  test_average_precision_micro:
  - 0.45392279055020246
  - 0.5150020392000578
  - 0.488976173920199
  - 0.5475637150860017
  - 0.46234591815005943
  test_average_precision_samples:
  - 0.5101007661533657
  - 0.5617308907964038
  - 0.5505365703464352
  - 0.6024633488122669
  - 0.5295548405338858
  test_average_precision_weighted:
  - 0.6036631053010744
  - 0.6346329944128393
  - 0.6172321448423548
  - 0.6289116684014128
  - 0.6092961452253924
  test_coverage_error:
  - -10.255102040816327
  - -9.512396694214877
  - -10.07643312101911
  - -9.32780082987552
  - -9.883673469387755
  test_f1_macro:
  - 0.19192123006758482
  - 0.21926785654625627
  - 0.2219014328155339
  - 0.17082898227743618
  - 0.1600992405121008
  test_f1_micro:
  - 0.2597835137385512
  - 0.297221103503826
  - 0.30738993710691825
  - 0.24647302904564314
  - 0.2305084745762712
  test_f1_samples:
  - 0.21220381659157167
  - 0.24940580539754093
  - 0.26137068875922376
  - 0.20135588247621442
  - 0.18820213799805635
  test_f1_weighted:
  - 0.2528944283845422
  - 0.2912043885588517
  - 0.29572840491367025
  - 0.23952832026412293
  - 0.22508495208628038
  test_hamming_loss:
  - -0.25918367346938775
  - -0.2575265643447462
  - -0.2672126175310889
  - -0.2691167753408417
  - -0.26472303206997083
  test_jaccard_macro:
  - 0.11340282006687451
  - 0.13071655455108544
  - 0.13478813348953608
  - 0.09902150177935652
  - 0.09246169424932933
  test_jaccard_micro:
  - 0.1492822966507177
  - 0.17455061494796595
  - 0.18160705991639572
  - 0.14055844770468529
  - 0.13026819923371646
  test_jaccard_samples:
  - 0.15576044703595723
  - 0.18745572609208971
  - 0.19379838726972484
  - 0.14680234472765594
  - 0.14511418853255587
  test_jaccard_weighted:
  - 0.14890965486469382
  - 0.1744349468642262
  - 0.17967497870727767
  - 0.13986872092555597
  - 0.13000558290889033
  test_label_ranking_average_precision_score:
  - 0.5101007661533657
  - 0.5617308907964041
  - 0.5505365703464355
  - 0.6024633488122669
  - 0.5295548405338851
  test_label_ranking_loss:
  - 0.41489545278175016
  - 0.33982399684141124
  - 0.37815193055183954
  - 0.30684393407422456
  - 0.3879188632067641
  test_matthews_corrcoef_macro:
  - 0.18708970378530052
  - 0.20301940734705318
  - 0.1765104705440165
  - 0.17228613271053028
  - 0.15473539519442311
  test_matthews_corrcoef_micro:
  - 0.29566257113979694
  - 0.3120288879123416
  - 0.28875329255080684
  - 0.28091974592847957
  - 0.26890870687739443
  test_matthews_corrcoef_samples:
  - 0.20312625899246364
  - 0.23274751699768645
  - 0.22917662358017013
  - 0.18996636249473461
  - 0.17727652551627351
  test_matthews_corrcoef_weighted:
  - 0.22067013016948522
  - 0.24146512648408938
  - 0.21358531229868852
  - 0.2043944652522893
  - 0.19292728704225695
  test_ndgc:
  - 0.6915914773367319
  - 0.7240792299801257
  - 0.7235223792814168
  - 0.7607431840761079
  - 0.7021141716478393
  test_precision_macro:
  - 0.61866579135411
  - 0.6357670653039638
  - 0.5457843146713358
  - 0.6771353354629512
  - 0.5776150923707314
  test_precision_micro:
  - 0.8764044943820225
  - 0.8502304147465438
  - 0.7712031558185405
  - 0.8658892128279884
  - 0.8553459119496856
  test_precision_samples:
  - 0.39455782312925164
  - 0.44283746556473824
  - 0.4764685067232838
  - 0.3879668049792531
  - 0.3221088435374149
  test_precision_weighted:
  - 0.813413483815453
  - 0.8191088368390038
  - 0.7637844830021554
  - 0.8295976015086691
  - 0.7837217948602556
  test_recall_macro:
  - 0.11614554445242907
  - 0.13629393542969181
  - 0.14773207514653813
  - 0.10179223295126894
  - 0.09485054926119663
  test_recall_micro:
  - 0.15249266862170088
  - 0.1800878477306003
  - 0.19194894452626413
  - 0.14368650217706821
  - 0.13320274240940255
  test_recall_samples:
  - 0.1586321671525753
  - 0.19157565918929556
  - 0.1974886107051712
  - 0.1486646249094382
  - 0.14750485908649175
  test_recall_weighted:
  - 0.15249266862170088
  - 0.1800878477306003
  - 0.19194894452626413
  - 0.14368650217706821
  - 0.13320274240940255
  test_roc_auc_macro:
  - 0.6406455111897024
  - 0.6580576582090706
  - 0.6591826411215643
  - 0.6496329096228581
  - 0.6424419635212076
  test_roc_auc_micro:
  - 0.6112485638783265
  - 0.6874104019947918
  - 0.6400677869767002
  - 0.7108933612260994
  - 0.6291579609438813
  test_roc_auc_samples:
  - 0.5851045472182498
  - 0.6601760031585888
  - 0.6218480694481604
  - 0.6931560659257755
  - 0.6120811367932358
  test_roc_auc_weighted:
  - 0.6255522330250786
  - 0.6616642870757223
  - 0.6461479294976693
  - 0.6537508616100597
  - 0.6396546685823185
start: 2023-11-28 06:57:07.348056
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
