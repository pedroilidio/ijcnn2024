active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb8AmZmZmZnJvwCZmZmZmcm/wJmZmZmZ6T8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            NDMzMzMz4z80MzMzMzPjP5iZmZmZmdm/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv4CZmZmZmdm/gJmZmZmZ2b9AMzMzMzPjPw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AM3MzMzM/D8AmJmZmZnJvwCYmZmZmcm/AJiZmZmZyb8AMzMzMzPzvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: Gram_positive
  params:
    path: nakano_datasets_v2/datasets/MLC/Gram_positive.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 21:31:47.695343
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder_pvalue
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.7
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler:
            call: deep_forest.weak_labels.PositiveUnlabeledImputer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesClassifier
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  class_weight: null
                  criterion: gini
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: 0.9
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: true
                  random_state: 0
                  verbose: true
                  warm_start: false
              sampling_strategy: auto
              threshold: 0.8
              use_oob_proba: true
              verbose: true
              weight_proba: true
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 0.05
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 0.05
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding_weak_chi2
  params:
    memory: estimators_cache
hash: 6b66d370a071cac5a1201d568caed8b34be5bc7cdb50e4cc937550727ccd425c
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/6b66d37_20231127T212916578891_embedding_weak_chi2_Gram_positive.yml
results:
  fit_time:
  - 72.93494033813477
  - 75.49773120880127
  - 76.81675958633423
  - 76.84700989723206
  - 78.25431180000305
  score_time:
  - 66.79406785964966
  - 65.60684561729431
  - 67.04111862182617
  - 65.77363634109497
  - 72.01019501686096
  test_average_precision_macro:
  - 0.7794244711530122
  - 0.8152176006692367
  - 0.6971005344200245
  - 0.8819311384312523
  - 0.9154253318271476
  test_average_precision_micro:
  - 0.8246036518138282
  - 0.9156856621777733
  - 0.8186581166733958
  - 0.9043117563552744
  - 0.9195899347730276
  test_average_precision_samples:
  - 0.9223856209150327
  - 0.9735576923076923
  - 0.9230769230769231
  - 0.9407051282051282
  - 0.9595238095238096
  test_average_precision_weighted:
  - 0.9462314952098827
  - 0.9466955912577704
  - 0.8729618752722352
  - 0.9342522718333396
  - 0.9197674690457269
  test_coverage_error:
  - -1.2058823529411764
  - -1.0769230769230769
  - -1.1826923076923077
  - -1.1442307692307692
  - -1.0952380952380953
  test_f1_macro:
  - 0.31012544802867387
  - 0.36718354659148417
  - 0.2418914205998605
  - 0.44418022528160206
  - 0.21256911762074332
  test_f1_micro:
  - 0.33082706766917286
  - 0.3909774436090226
  - 0.31007751937984496
  - 0.4525547445255474
  - 0.26446280991735543
  test_f1_samples:
  - 0.21568627450980393
  - 0.25
  - 0.18910256410256407
  - 0.2980769230769231
  - 0.1523809523809524
  test_f1_weighted:
  - 0.33187528273654177
  - 0.3893911385128042
  - 0.29670065654720384
  - 0.4475880564991954
  - 0.2614850925786273
  test_hamming_loss:
  - -0.2181372549019608
  - -0.19471153846153846
  - -0.21394230769230768
  - -0.18028846153846154
  - -0.2119047619047619
  test_jaccard_macro:
  - 0.19146275472494984
  - 0.22690476190476191
  - 0.1504355400696864
  - 0.2885827407886231
  - 0.12470238095238095
  test_jaccard_micro:
  - 0.1981981981981982
  - 0.24299065420560748
  - 0.1834862385321101
  - 0.29245283018867924
  - 0.1523809523809524
  test_jaccard_samples:
  - 0.21568627450980393
  - 0.25
  - 0.1875
  - 0.2980769230769231
  - 0.1523809523809524
  test_jaccard_weighted:
  - 0.206531332744925
  - 0.2438095238095238
  - 0.18435374149659864
  - 0.2923076923076923
  - 0.1523809523809524
  test_label_ranking_average_precision_score:
  - 0.9223856209150325
  - 0.9735576923076923
  - 0.9230769230769229
  - 0.9407051282051282
  - 0.9595238095238096
  test_label_ranking_loss:
  - 0.065359477124183
  - 0.022435897435897433
  - 0.05769230769230768
  - 0.04647435897435897
  - 0.031746031746031744
  test_matthews_corrcoef_macro:
  - 0.33559135040973576
  - 0.38621839368977073
  - 0.2459665457015026
  - 0.46901716486026623
  - 0.25820212719821334
  test_matthews_corrcoef_micro:
  - 0.3118496051183252
  - 0.418153739467776
  - 0.330905888203299
  - 0.4760480570979875
  - 0.3446909937728556
  test_matthews_corrcoef_samples:
  - 0.1895424836601307
  - 0.2435897435897436
  - 0.17862836797297718
  - 0.2948717948717949
  - 0.1523809523809524
  test_matthews_corrcoef_weighted:
  - 0.3715027976199368
  - 0.4134026874137367
  - 0.3167387409677036
  - 0.45518185604553363
  - 0.3194915777104793
  test_ndgc:
  - 0.9422455327472206
  - 0.9803307266573003
  - 0.9429918946428605
  - 0.9560903893981274
  - 0.9699731888864153
  test_precision_macro:
  - 0.7777777777777778
  - 0.8333333333333333
  - 0.6666666666666666
  - 0.9722222222222222
  - 0.75
  test_precision_micro:
  - 0.7333333333333333
  - 0.9285714285714286
  - 0.8333333333333334
  - 0.96875
  - 1.0
  test_precision_samples:
  - 0.21568627450980393
  - 0.25
  - 0.1875
  - 0.2980769230769231
  - 0.1523809523809524
  test_precision_weighted:
  - 0.9741100323624596
  - 0.9809523809523809
  - 0.8825396825396824
  - 0.9735449735449736
  - 0.9619047619047619
  test_recall_macro:
  - 0.25206881533101044
  - 0.2602380952380952
  - 0.15686411149825785
  - 0.2916596638655462
  - 0.12470238095238095
  test_recall_micro:
  - 0.21359223300970873
  - 0.24761904761904763
  - 0.19047619047619047
  - 0.29523809523809524
  - 0.1523809523809524
  test_recall_samples:
  - 0.21568627450980393
  - 0.25
  - 0.19230769230769232
  - 0.2980769230769231
  - 0.1523809523809524
  test_recall_weighted:
  - 0.21359223300970873
  - 0.24761904761904763
  - 0.19047619047619047
  - 0.29523809523809524
  - 0.1523809523809524
  test_roc_auc_macro:
  - 0.9720337534938653
  - 0.9761938187362812
  - 0.9268927011229385
  - 0.9733693874650717
  - 0.9773424131906765
  test_roc_auc_micro:
  - 0.9609422250517269
  - 0.9737559332414637
  - 0.946746286939213
  - 0.9692543255244219
  - 0.9793197278911564
  test_roc_auc_samples:
  - 0.9346405228758171
  - 0.9775641025641026
  - 0.9423076923076923
  - 0.9535256410256411
  - 0.9682539682539683
  test_roc_auc_weighted:
  - 0.9835837274038198
  - 0.9797592745941734
  - 0.9569196406991831
  - 0.9732726282836531
  - 0.9717959566175817
start: 2023-11-27 21:29:16.578891
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop70
  params:
    drop: 0.7
    random_state: 0
