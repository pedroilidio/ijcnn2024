active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJqZmZmZyT8AmpmZmZnJPwCamZmZmck/AJqZmZmZyT+AmZmZmZnpvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 4
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv0AzMzMzM+M/QDMzMzMz4z+AmZmZmZnZvw==
        ? !!python/tuple
        - 5
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            wJmZmZmZ6T8AmZmZmZnJvwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          4MzMzMzMBEBwZmZmZmYWQCAzMzMzMwPAkJmZmZmZFcAAmZmZmZnZvw==
      n_labels: 6
      n_samples: 593
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: emotions
  params:
    path: nakano_datasets_v2/datasets/MLC/emotions.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 23:23:23.125816
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_tree_embedder
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler:
            call: deep_forest.weak_labels.PositiveUnlabeledImputer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesClassifier
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  class_weight: null
                  criterion: gini
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: 0.9
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: true
                  random_state: 0
                  verbose: true
                  warm_start: false
              sampling_strategy: auto
              threshold: 0.8
              use_oob_proba: true
              verbose: true
              weight_proba: true
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - xt_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - xt
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.ExtraTreesRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.8
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              - - rf_embedder
                - call: sklearn.pipeline.Pipeline
                  params:
                    memory: null
                    steps:
                    - - rf
                      - call: deep_forest.tree_embedder.ForestEmbedder
                        params:
                          estimator:
                            call: sklearn.ensemble._forest.RandomForestRegressor
                            params:
                              bootstrap: true
                              ccp_alpha: 0.0
                              criterion: squared_error
                              max_depth: null
                              max_features: sqrt
                              max_leaf_nodes: null
                              max_samples: 0.5
                              min_impurity_decrease: 0.0
                              min_samples_leaf: 5
                              min_samples_split: 2
                              min_weight_fraction_leaf: 0.0
                              n_estimators: 150
                              n_jobs: 14
                              oob_score: false
                              random_state: 0
                              verbose: true
                              warm_start: false
                          max_node_size: 0.95
                          max_pvalue: 1.0
                          method: path
                          node_weights: log_node_size
                    - - densifier
                      - call: nakano_datasets_v2.estimators.Densifier
                        params: {}
                    - - pca
                      - call: sklearn.decomposition._pca.PCA
                        params:
                          copy: true
                          iterated_power: auto
                          n_components: 0.8
                          n_oversamples: 10
                          power_iteration_normalizer: auto
                          random_state: 0
                          svd_solver: auto
                          tol: 0.0
                          whiten: false
                    verbose: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: embedding_weak
  params:
    memory: estimators_cache
hash: b91ac63b6cddfa7f526046a168b05338088e5996f77dec80d838ceed3905b996
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/b91ac63_20231127T232102360266_embedding_weak_emotions.yml
results:
  fit_time:
  - 79.84208941459656
  - 80.18701958656311
  - 72.09794402122498
  - 71.7495391368866
  - 74.35194635391235
  score_time:
  - 58.659194469451904
  - 53.66542625427246
  - 27.660983324050903
  - 47.73875045776367
  - 54.169665575027466
  test_average_precision_macro:
  - 0.731290937839772
  - 0.7208991200311837
  - 0.7097012839034061
  - 0.7053857394801892
  - 0.7133743920281628
  test_average_precision_micro:
  - 0.702656779868027
  - 0.7410949997481407
  - 0.7266823519945919
  - 0.6999224937867379
  - 0.726474980654698
  test_average_precision_samples:
  - 0.8240900383141763
  - 0.7715339233038349
  - 0.7784664830119375
  - 0.7727150537634409
  - 0.8135387488328664
  test_average_precision_weighted:
  - 0.7203187329206364
  - 0.7268574237055964
  - 0.7149851985600993
  - 0.7063665411886585
  - 0.718431570931236
  test_coverage_error:
  - -2.7327586206896552
  - -3.0442477876106193
  - -2.8512396694214877
  - -2.75
  - -2.7899159663865545
  test_f1_macro:
  - 0.06306306306306306
  - 0.07969924812030076
  - 0.07539682539682539
  - 0.11481481481481481
  - 0.06481481481481481
  test_f1_micro:
  - 0.061135371179039305
  - 0.07792207792207792
  - 0.06956521739130435
  - 0.1111111111111111
  - 0.061135371179039305
  test_f1_samples:
  - 0.03879310344827586
  - 0.04100294985250737
  - 0.03112947658402204
  - 0.047580645161290326
  - 0.030812324929971987
  test_f1_weighted:
  - 0.05113221329437546
  - 0.06565061301903408
  - 0.06338481338481339
  - 0.09626262626262627
  - 0.05080080080080081
  test_hamming_loss:
  - -0.3089080459770115
  - -0.3141592920353982
  - -0.29476584022038566
  - -0.27956989247311825
  - -0.3011204481792717
  test_jaccard_macro:
  - 0.03888888888888889
  - 0.04934640522875817
  - 0.04292929292929293
  - 0.06964164976335362
  - 0.040229885057471264
  test_jaccard_micro:
  - 0.03153153153153153
  - 0.04054054054054054
  - 0.036036036036036036
  - 0.058823529411764705
  - 0.03153153153153153
  test_jaccard_samples:
  - 0.028735632183908042
  - 0.02949852507374631
  - 0.026170798898071623
  - 0.04301075268817204
  - 0.02100840336134454
  test_jaccard_weighted:
  - 0.03153153153153153
  - 0.04054054054054054
  - 0.036036036036036036
  - 0.058288770053475936
  - 0.03153153153153153
  test_label_ranking_average_precision_score:
  - 0.824090038314176
  - 0.771533923303835
  - 0.7784664830119373
  - 0.7727150537634405
  - 0.8135387488328663
  test_label_ranking_loss:
  - 0.14382183908045973
  - 0.18731563421828906
  - 0.17865013774104685
  - 0.17486559139784946
  - 0.15982726423902896
  test_matthews_corrcoef_macro:
  - 0.07151104408240751
  - 0.10052611913459453
  - 0.1036612571842253
  - 0.12830375170255828
  - 0.07340252743933794
  test_matthews_corrcoef_micro:
  - 0.14728282058474795
  - 0.166231808568936
  - 0.15904556100862724
  - 0.1920502013768182
  - 0.1481308030560219
  test_matthews_corrcoef_samples:
  - 0.0365685067905346
  - 0.03723969754649282
  - 0.028875063552948176
  - 0.04331709954483583
  - 0.02786333701708759
  test_matthews_corrcoef_weighted:
  - 0.05798192763438447
  - 0.08410287169334671
  - 0.08756828720290763
  - 0.1074241119446556
  - 0.057531710695697305
  test_ndgc:
  - 0.8872885537219717
  - 0.8461960408871517
  - 0.8467447335053256
  - 0.8406578269187066
  - 0.877476172708012
  test_precision_macro:
  - 0.16666666666666666
  - 0.3333333333333333
  - 0.3333333333333333
  - 0.30952380952380953
  - 0.16666666666666666
  test_precision_micro:
  - 1.0
  - 1.0
  - 1.0
  - 0.9285714285714286
  - 1.0
  test_precision_samples:
  - 0.0603448275862069
  - 0.07079646017699115
  - 0.04132231404958678
  - 0.05241935483870968
  - 0.058823529411764705
  test_precision_weighted:
  - 0.13513513513513514
  - 0.2882882882882883
  - 0.28378378378378377
  - 0.2603896103896104
  - 0.13063063063063063
  test_recall_macro:
  - 0.03888888888888889
  - 0.04934640522875817
  - 0.04292929292929293
  - 0.07053291536050156
  - 0.040229885057471264
  test_recall_micro:
  - 0.03153153153153153
  - 0.04054054054054054
  - 0.036036036036036036
  - 0.05909090909090909
  - 0.03153153153153153
  test_recall_samples:
  - 0.028735632183908042
  - 0.02949852507374631
  - 0.026170798898071623
  - 0.04435483870967742
  - 0.02100840336134454
  test_recall_weighted:
  - 0.03153153153153153
  - 0.04054054054054054
  - 0.036036036036036036
  - 0.05909090909090909
  - 0.03153153153153153
  test_roc_auc_macro:
  - 0.8339302517610255
  - 0.8246085084575102
  - 0.835160668777152
  - 0.8361141566557242
  - 0.8499627503707324
  test_roc_auc_micro:
  - 0.8517789941840574
  - 0.8484273747431642
  - 0.8491527241527241
  - 0.8477879944482998
  - 0.8613125320442393
  test_roc_auc_samples:
  - 0.8561781609195402
  - 0.812684365781711
  - 0.8213498622589532
  - 0.8251344086021505
  - 0.8401727357609711
  test_roc_auc_weighted:
  - 0.8247182267820345
  - 0.8267909537284245
  - 0.8362907660062077
  - 0.8346486086706233
  - 0.8520792628635765
start: 2023-11-27 23:21:02.360266
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
