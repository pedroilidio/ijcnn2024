active: true
cv:
  call: sklearn.model_selection.cross_validate
  params:
    cv: !!python/object:skmultilearn.model_selection.iterative_stratification.IterativeStratification
      desired_samples_per_combination_per_fold:
        ? !!python/tuple
        - 0
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - &id001 !!python/name:numpy.ndarray ''
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - &id002 !!python/object/apply:numpy.dtype
            args:
            - f8
            - false
            - true
            state: !!python/tuple
            - 3
            - <
            - null
            - null
            - null
            - -1
            - -1
            - 0
          - false
          - !!binary |
            AJmZmZmZyb/AmZmZmZnpPwCZmZmZmcm/AJmZmZmZyb8AmZmZmZnJvw==
        ? !!python/tuple
        - 1
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            mJmZmZmZ2b80MzMzMzPjPzQzMzMzM+M/mJmZmZmZ2b+YmZmZmZnZvw==
        ? !!python/tuple
        - 2
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            gJmZmZmZ2b+AmZmZmZnZv4CZmZmZmdm/QDMzMzMz4z9AMzMzMzPjPw==
        ? !!python/tuple
        - 3
        : !!python/object/apply:numpy.core.multiarray._reconstruct
          args:
          - *id001
          - !!python/tuple
            - 0
          - !!binary |
            Yg==
          state: !!python/tuple
          - 1
          - !!python/tuple
            - 5
          - *id002
          - false
          - !!binary |
            QDMzMzMz4z+AmZmZmZnZv0AzMzMzM+M/gJmZmZmZ2b+AmZmZmZnZvw==
      desired_samples_per_fold: !!python/object/apply:numpy.core.multiarray._reconstruct
        args:
        - *id001
        - !!python/tuple
          - 0
        - !!binary |
          Yg==
        state: !!python/tuple
        - 1
        - !!python/tuple
          - 5
        - *id002
        - false
        - !!binary |
          AJiZmZmZyb8AmJmZmZnJvwCYmZmZmcm/AJqZmZmZ6T8AmJmZmZnJvw==
      n_labels: 4
      n_samples: 519
      n_splits: 5
      order: 1
      percentage_per_fold:
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      - 0.2
      random_state: null
      shuffle: false
    n_jobs: 5
    return_estimator: true
    return_train_score: false
    scoring:
      average_precision_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id003 !!python/name:sklearn.metrics._ranking.average_precision_score ''
      average_precision_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      average_precision_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id003
      coverage_error: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.coverage_error ''
      f1_macro: f1_macro
      f1_micro: f1_micro
      f1_samples: f1_samples
      f1_weighted: f1_weighted
      hamming_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: false
        kwargs: {}
        method: predict
        score_func: !!python/name:sklearn.metrics._classification.hamming_loss ''
      jaccard_macro: jaccard_macro
      jaccard_micro: jaccard_micro
      jaccard_samples: jaccard_samples
      jaccard_weighted: jaccard_weighted
      label_ranking_average_precision_score: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_average_precision_score ''
      label_ranking_loss: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.label_ranking_loss ''
      matthews_corrcoef_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: &id004 !!python/name:sklearn.metrics._classification.matthews_corrcoef ''
      matthews_corrcoef_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      matthews_corrcoef_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict
        score_func: *id004
      ndgc: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: null
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: !!python/name:sklearn.metrics._ranking.ndcg_score ''
      precision_macro: precision_macro
      precision_micro: precision_micro
      precision_samples: precision_samples
      precision_weighted: precision_weighted
      recall_macro: recall_macro
      recall_micro: recall_micro
      recall_samples: recall_samples
      recall_weighted: recall_weighted
      roc_auc_macro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: macro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: &id005 !!python/name:sklearn.metrics._ranking.roc_auc_score ''
      roc_auc_micro: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: micro
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_samples: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: samples
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
      roc_auc_weighted: !!python/object:nakano_datasets_v2.estimators.MultiLabelScorer
        average: weighted
        greater_is_better: true
        kwargs: {}
        method: predict_proba
        score_func: *id005
    verbose: 10
dataset:
  call: data_loaders.load_nakano
  name: GrampositivePseAAC
  params:
    path: nakano_datasets_v2/datasets/MLC/GrampositivePseAAC.csv
directory: nakano_datasets_v2/runs
end: 2023-11-27 22:00:25.417147
estimator:
  call: nakano_datasets_v2.estimators.cascade_weak_label_proba
  final_params:
    memory: null
    steps:
    - - dropper
      - call: positive_dropper.PositiveDropper
        params:
          drop: 0.5
          random_state: 0
    - - estimator
      - call: deep_forest.cascade.Cascade
        params:
          final_estimator:
            call: deep_forest.estimator_adapters.MultiOutputVotingClassifier
            params:
              estimators:
              - - rf
                - call: sklearn.ensemble._forest.RandomForestClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
              - - xt
                - call: sklearn.ensemble._forest.ExtraTreesClassifier
                  params:
                    bootstrap: true
                    ccp_alpha: 0.0
                    class_weight: null
                    criterion: gini
                    max_depth: null
                    max_features: sqrt
                    max_leaf_nodes: null
                    max_samples: 0.9
                    min_impurity_decrease: 0.0
                    min_samples_leaf: 5
                    min_samples_split: 2
                    min_weight_fraction_leaf: 0.0
                    n_estimators: 150
                    n_jobs: 14
                    oob_score: true
                    random_state: 0
                    verbose: true
                    warm_start: false
          inter_level_sampler:
            call: deep_forest.weak_labels.PositiveUnlabeledImputer
            params:
              estimator:
                call: sklearn.ensemble._forest.ExtraTreesClassifier
                params:
                  bootstrap: true
                  ccp_alpha: 0.0
                  class_weight: null
                  criterion: gini
                  max_depth: null
                  max_features: sqrt
                  max_leaf_nodes: null
                  max_samples: 0.9
                  min_impurity_decrease: 0.0
                  min_samples_leaf: 5
                  min_samples_split: 2
                  min_weight_fraction_leaf: 0.0
                  n_estimators: 150
                  n_jobs: 14
                  oob_score: true
                  random_state: 0
                  verbose: true
                  warm_start: false
              sampling_strategy: auto
              threshold: 0.8
              use_oob_proba: true
              verbose: true
              weight_proba: true
          keep_original_features: true
          level:
            call: deep_forest.cascade.AlternatingLevel
            params:
              last_output_indices: null
              n_jobs: null
              sparse_threshold: 0.3
              transformer_weights: null
              transformers:
              - - rf
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.RandomForestRegressor
                      params:
                        bootstrap: true
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              - - xt
                - call: deep_forest.estimator_adapters.EstimatorAsTransformer
                  params:
                    estimator:
                      call: sklearn.ensemble._forest.ExtraTreesRegressor
                      params:
                        bootstrap: false
                        ccp_alpha: 0.0
                        criterion: squared_error
                        max_depth: null
                        max_features: sqrt
                        max_leaf_nodes: null
                        max_samples: null
                        min_impurity_decrease: 0.0
                        min_samples_leaf: 5
                        min_samples_split: 2
                        min_weight_fraction_leaf: 0.0
                        n_estimators: 150
                        n_jobs: 14
                        oob_score: false
                        random_state: 0
                        verbose: true
                        warm_start: false
              verbose: false
              verbose_feature_names_out: true
          max_levels: 10
          max_unimproving_levels: null
          memory: estimators_cache
          min_improvement: null
          min_levels: 1
          min_relative_improvement: null
          min_score: 0.0
          random_state: 0
          refit: true
          scoring:
            load: nakano_datasets_v2.estimators.average_precision_micro_oob_scorer
          trim_to_best_score: true
          validation_size: train
          verbose: 10
    verbose: false
  name: proba_weak
  params:
    memory: estimators_cache
hash: 0dfbfdbf0c09ba59a3c9529a513981abeb3f0bc3f69ca7f8e2eb3d5327dfa7d7
metaestimator: null
path: /home/pedro/mestrado/biomal_repo/scripts/cascade_forests/experiments/nakano_datasets_v2/runs/0dfbfdb_20231127T215923072582_proba_weak_GrampositivePseAAC.yml
results:
  fit_time:
  - 31.84816288948059
  - 34.33823108673096
  - 37.17723274230957
  - 36.27589559555054
  - 32.40008878707886
  score_time:
  - 6.728198766708374
  - 15.410325050354004
  - 24.696817636489868
  - 22.240880966186523
  - 8.559857845306396
  test_average_precision_macro:
  - 0.3961371939908105
  - 0.41986820783056383
  - 0.4079060396132883
  - 0.3180159247504649
  - 0.3346086689453774
  test_average_precision_micro:
  - 0.49490548022685354
  - 0.533282805192943
  - 0.47689362023275683
  - 0.3980457235833084
  - 0.40682596728700643
  test_average_precision_samples:
  - 0.6634615384615384
  - 0.7035256410256411
  - 0.7491987179487178
  - 0.6796116504854367
  - 0.6842948717948717
  test_average_precision_weighted:
  - 0.49485285734637596
  - 0.5345656214959894
  - 0.49437517411988957
  - 0.3920939144900716
  - 0.399554630786281
  test_coverage_error:
  - -1.9038461538461537
  - -1.7692307692307692
  - -1.6442307692307692
  - -1.8932038834951457
  - -1.7788461538461537
  test_f1_macro:
  - 0.0
  - 0.011627906976744186
  - 0.01388888888888889
  - 0.0
  - 0.0
  test_f1_micro:
  - 0.0
  - 0.01904761904761905
  - 0.01904761904761905
  - 0.0
  - 0.0
  test_f1_samples:
  - 0.0
  - 0.009615384615384616
  - 0.009615384615384616
  - 0.0
  - 0.0
  test_f1_weighted:
  - 0.0
  - 0.01878354203935599
  - 0.0186965811965812
  - 0.0
  - 0.0
  test_hamming_loss:
  - -0.25240384615384615
  - -0.24759615384615385
  - -0.24759615384615385
  - -0.25485436893203883
  - -0.25240384615384615
  test_jaccard_macro:
  - 0.0
  - 0.005952380952380952
  - 0.007142857142857143
  - 0.0
  - 0.0
  test_jaccard_micro:
  - 0.0
  - 0.009615384615384616
  - 0.009615384615384616
  - 0.0
  - 0.0
  test_jaccard_samples:
  - 0.0
  - 0.009615384615384616
  - 0.009615384615384616
  - 0.0
  - 0.0
  test_jaccard_weighted:
  - 0.0
  - 0.009615384615384616
  - 0.009615384615384616
  - 0.0
  - 0.0
  test_label_ranking_average_precision_score:
  - 0.6634615384615388
  - 0.703525641025641
  - 0.749198717948718
  - 0.6796116504854371
  - 0.684294871794872
  test_label_ranking_loss:
  - 0.298076923076923
  - 0.2564102564102564
  - 0.21474358974358976
  - 0.28883495145631066
  - 0.25560897435897434
  test_matthews_corrcoef_macro:
  - 0.0
  - 0.02992902684976297
  - 0.03458692240008599
  - 0.0
  - 0.0
  test_matthews_corrcoef_micro:
  - 0.0
  - 0.08502303018977037
  - 0.08502303018977037
  - 0.0
  - 0.0
  test_matthews_corrcoef_samples:
  - 0.0
  - 0.009615384615384616
  - 0.009615384615384616
  - 0.0
  - 0.0
  test_matthews_corrcoef_weighted:
  - 0.0
  - 0.04834688952654018
  - 0.046559318615500375
  - 0.0
  - 0.0
  test_ndgc:
  - 0.7490043890632321
  - 0.7791094828475731
  - 0.8132018331133499
  - 0.7620693142870322
  - 0.7658576327088918
  test_precision_macro:
  - 0.0
  - 0.25
  - 0.25
  - 0.0
  - 0.0
  test_precision_micro:
  - 0.0
  - 1.0
  - 1.0
  - 0.0
  - 0.0
  test_precision_samples:
  - 0.0
  - 0.009615384615384616
  - 0.009615384615384616
  - 0.0
  - 0.0
  test_precision_weighted:
  - 0.0
  - 0.40384615384615385
  - 0.33653846153846156
  - 0.0
  - 0.0
  test_recall_macro:
  - 0.0
  - 0.005952380952380952
  - 0.007142857142857143
  - 0.0
  - 0.0
  test_recall_micro:
  - 0.0
  - 0.009615384615384616
  - 0.009615384615384616
  - 0.0
  - 0.0
  test_recall_samples:
  - 0.0
  - 0.009615384615384616
  - 0.009615384615384616
  - 0.0
  - 0.0
  test_recall_weighted:
  - 0.0
  - 0.009615384615384616
  - 0.009615384615384616
  - 0.0
  - 0.0
  test_roc_auc_macro:
  - 0.6652044356925799
  - 0.6814132540733648
  - 0.7000199423008444
  - 0.5897357166830023
  - 0.6491013814660908
  test_roc_auc_micro:
  - 0.7479099678456591
  - 0.7604166666666667
  - 0.7610638560157791
  - 0.7073987901349466
  - 0.7272699433471138
  test_roc_auc_samples:
  - 0.7019230769230769
  - 0.7435897435897435
  - 0.7852564102564104
  - 0.7111650485436893
  - 0.7443910256410257
  test_roc_auc_weighted:
  - 0.6543314966940493
  - 0.6704208465024659
  - 0.663484073232682
  - 0.5659485675614708
  - 0.6141819192301149
start: 2023-11-27 21:59:23.072582
wrapper:
  call: positive_dropper.wrap_estimator
  name: drop50
  params:
    drop: 0.5
    random_state: 0
